{"notes":[{"fileName":"Clone0.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":37},"text":"noncore1","codeSnippet":"BufferedImage scaledImage = null;","status":"noncore","id":1,"createdAt":"2023-05-07T02:04:10.395Z"},{"fileName":"Clone0.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":29},"text":"noncore1","codeSnippet":"BufferedImage dbi = null;","status":"noncore","id":2,"createdAt":"2023-05-07T02:04:20.097Z"},{"fileName":"Clone0.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":23,"character":45},"text":"core1","codeSnippet":"if (sbi != null) {\n        dbi = new BufferedImage (dWidth, dHeight, imageType);\n        Graphics2D g = dbi.createGraphics ();","status":"core","id":3,"createdAt":"2023-05-07T02:10:22.161Z"},{"fileName":"Clone0.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":12,"character":62},"text":"core1","codeSnippet":"if (imageToScale != null) {\n        scaledImage = new BufferedImage (dWidth, dHeight, imageToScale.getType ());\n        Graphics2D graphics2D = scaledImage.createGraphics ();","status":"core","id":4,"createdAt":"2023-05-07T02:10:27.966Z"},{"fileName":"Clone0.java","fileLine":13,"positionStart":{"line":13,"character":8},"positionEnd":{"line":13,"character":73},"text":"core2","codeSnippet":"graphics2D.drawImage (imageToScale, 0, 0, dWidth, dHeight, null);","status":"core","id":5,"createdAt":"2023-05-07T02:10:51.490Z"},{"fileName":"Clone0.java","fileLine":24,"positionStart":{"line":24,"character":8},"positionEnd":{"line":25,"character":38},"text":"core2","codeSnippet":"AffineTransform at = AffineTransform.getScaleInstance (fWidth, fHeight);\n        g.drawRenderedImage (sbi, at);","status":"core","id":7,"createdAt":"2023-05-07T02:11:17.690Z"},{"fileName":"Clone0.java","fileLine":14,"positionStart":{"line":14,"character":8},"positionEnd":{"line":14,"character":30},"text":"noncorediff","codeSnippet":"graphics2D.dispose ();","status":"noncorediff","id":8,"createdAt":"2023-05-07T02:11:29.376Z"},{"fileName":"Clone0.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":15},"text":"noncore2","codeSnippet":"return dbi;","status":"noncore","id":9,"createdAt":"2023-05-07T02:11:33.276Z"},{"fileName":"Clone0.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":16,"character":23},"text":"noncore2","codeSnippet":"return scaledImage;","status":"noncore","id":10,"createdAt":"2023-05-07T02:11:36.646Z"},{"fileName":"Clone12.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":79},"text":"noncore1","codeSnippet":"LineNumberReader reader = new LineNumberReader (new FileReader (filename));","status":"noncore","id":12,"createdAt":"2023-05-07T02:12:43.748Z"},{"fileName":"Clone12.java","fileLine":20,"positionStart":{"line":20,"character":9},"positionEnd":{"line":20,"character":81},"text":"noncore1","codeSnippet":"LineNumberReader lnr = new LineNumberReader (new InputStreamReader (is))","status":"noncore","id":13,"createdAt":"2023-05-07T02:12:50.771Z"},{"fileName":"Clone12.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":14,"character":34},"text":"core1","codeSnippet":"while ((lineRead = reader.readLine ()) != null) {\n    }\n    cnt = reader.getLineNumber ();","status":"core","id":14,"createdAt":"2023-05-07T02:13:05.387Z"},{"fileName":"Clone12.java","fileLine":23,"positionStart":{"line":23,"character":8},"positionEnd":{"line":34,"character":9},"text":"core1","codeSnippet":"while ((n = lnr.read (buf)) != - 1) {\n            previousN = n;\n        }\n        int ln = lnr.getLineNumber ();\n        if (previousN == - 1) {\n            return 0;\n        } else {\n            char lastChar = buf [previousN - 1];\n            if (lastChar == '\\n' || lastChar == '\\r') {\n                return ln;\n            }\n        }","status":"core","id":15,"createdAt":"2023-05-07T02:13:14.143Z"},{"fileName":"Clone12.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":11,"character":25},"text":"noncorediff","codeSnippet":"int cnt = 0;\n    String lineRead = \"\";","status":"noncorediff","id":16,"createdAt":"2023-05-07T02:13:18.497Z"},{"fileName":"Clone12.java","fileLine":21,"positionStart":{"line":21,"character":8},"positionEnd":{"line":22,"character":31},"text":"noncorediff","codeSnippet":"char [] buf = new char [8192];\n        int n, previousN = - 1;","status":"noncorediff","id":17,"createdAt":"2023-05-07T02:13:25.420Z"},{"fileName":"Clone12.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":15,"character":20},"text":"noncorediff","codeSnippet":"reader.close ();","status":"noncorediff","id":18,"createdAt":"2023-05-07T02:13:32.247Z"},{"fileName":"Clone13.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":79},"text":"noncore1","codeSnippet":"LineNumberReader reader = new LineNumberReader (new FileReader (filename));","status":"noncore","id":21,"createdAt":"2023-05-07T02:20:38.216Z"},{"fileName":"Clone13.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":14,"character":34},"text":"core1","codeSnippet":"while ((lineRead = reader.readLine ()) != null) {\n    }\n    cnt = reader.getLineNumber ();","status":"core","id":23,"createdAt":"2023-05-07T02:20:55.625Z"},{"fileName":"Clone13.java","fileLine":22,"positionStart":{"line":22,"character":8},"positionEnd":{"line":23,"character":73},"text":"core1","codeSnippet":"for (int aChar = 0;\n        aChar != - 1; aChar = is.read ()) count += aChar == '\\n' ? 1 : 0;","status":"core","id":24,"createdAt":"2023-05-07T02:21:01.361Z"},{"fileName":"Clone13.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":11,"character":25},"text":"noncorediff","codeSnippet":"int cnt = 0;\n    String lineRead = \"\";","status":"noncorediff","id":25,"createdAt":"2023-05-07T02:21:05.573Z"},{"fileName":"Clone13.java","fileLine":21,"positionStart":{"line":21,"character":8},"positionEnd":{"line":21,"character":22},"text":"noncorediff","codeSnippet":"int count = 1;","status":"noncorediff","id":26,"createdAt":"2023-05-07T02:21:15.186Z"},{"fileName":"Clone13.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":15,"character":20},"text":"noncorediff","codeSnippet":"reader.close ();","status":"noncorediff","id":29,"createdAt":"2023-05-07T02:21:29.845Z"},{"fileName":"Clone16.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":43},"text":"noncore1","codeSnippet":"ObjectMapper mapper = new ObjectMapper ();\n    try {\n        File json = new File (\"test.json\");","status":"noncore","id":30,"createdAt":"2023-05-07T02:26:57.591Z"},{"fileName":"Clone16.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":25,"character":43},"text":"noncore1","codeSnippet":"Tweet [] tweets;\n    ObjectMapper mapper = new ObjectMapper ();\n    try {\n        File json = new File (\"test.json\");","status":"noncore","id":32,"createdAt":"2023-05-07T02:27:08.281Z"},{"fileName":"Clone16.java","fileLine":27,"positionStart":{"line":27,"character":8},"positionEnd":{"line":31,"character":5},"text":"noncore2","codeSnippet":"System.out.println (\"Java object created from JSON String :\");\n        Arrays.asList (tweets).forEach (System.out :: println);\n    } catch (IOException ex) {\n        ex.printStackTrace ();\n    }","status":"noncore","id":38,"createdAt":"2023-05-07T02:28:05.161Z"},{"fileName":"Clone16.java","fileLine":14,"positionStart":{"line":14,"character":8},"positionEnd":{"line":18,"character":5},"text":"noncore2","codeSnippet":"System.out.println (\"Java objects created from JSON String:\");\n        tweets.forEach (System.out :: println);\n    } catch (IOException ex) {\n        ex.printStackTrace ();\n    }","status":"noncore","id":39,"createdAt":"2023-05-07T02:28:14.582Z"},{"fileName":"Clone16.java","fileLine":12,"positionStart":{"line":12,"character":8},"positionEnd":{"line":12,"character":119},"text":"noncorediff","codeSnippet":"CollectionType tweetListType = mapper.getTypeFactory ().constructCollectionType (ArrayList.class, Tweet.class);","status":"noncorediff","id":41,"createdAt":"2023-05-07T02:29:15.910Z"},{"fileName":"Clone16.java","fileLine":13,"positionStart":{"line":13,"character":8},"positionEnd":{"line":13,"character":71},"text":"core1","codeSnippet":"List < Tweet > tweets = mapper.readValue (json, tweetListType);","status":"core","id":42,"createdAt":"2023-05-07T02:29:20.284Z"},{"fileName":"Clone16.java","fileLine":26,"positionStart":{"line":26,"character":8},"positionEnd":{"line":26,"character":57},"text":"core1","codeSnippet":"tweets = mapper.readValue (json, Tweet [].class);","status":"core","id":43,"createdAt":"2023-05-07T02:29:25.099Z"},{"fileName":"Clone13.java","fileLine":24,"positionStart":{"line":24,"character":8},"positionEnd":{"line":24,"character":21},"text":"core2","codeSnippet":"return count;","status":"core","id":44,"createdAt":"2023-05-07T02:34:25.740Z"},{"fileName":"Clone13.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":16,"character":15},"text":"core2","codeSnippet":"return cnt;","status":"core","id":45,"createdAt":"2023-05-07T02:34:30.198Z"},{"fileName":"Clone12.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":16,"character":15},"text":"core2","codeSnippet":"return cnt;","status":"core","id":46,"createdAt":"2023-05-07T02:35:08.476Z"},{"fileName":"Clone12.java","fileLine":35,"positionStart":{"line":35,"character":8},"positionEnd":{"line":35,"character":22},"text":"core2","codeSnippet":"return ln + 1;","status":"core","id":47,"createdAt":"2023-05-07T02:35:12.922Z"},{"fileName":"Clone12.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":7},"text":"noncorediff","codeSnippet":"try","status":"noncorediff","id":48,"createdAt":"2023-05-07T02:39:12.220Z"},{"fileName":"Clone13.java","fileLine":20,"positionStart":{"line":20,"character":8},"positionEnd":{"line":20,"character":54},"text":"noncore1","codeSnippet":"(InputStream is = new FileInputStream (input))","status":"noncore","id":49,"createdAt":"2023-05-07T02:56:16.903Z"},{"fileName":"Clone13.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":7},"text":"noncorediff","codeSnippet":"try","status":"noncorediff","id":50,"createdAt":"2023-05-07T02:56:28.577Z"},{"fileName":"Clone13.java","fileLine":20,"positionStart":{"line":20,"character":55},"positionEnd":{"line":20,"character":56},"text":"noncorediff","codeSnippet":"{","status":"noncorediff","id":51,"createdAt":"2023-05-07T03:56:50.919Z"},{"fileName":"Clone13.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":5},"text":"noncorediff","codeSnippet":"}","status":"noncorediff","id":52,"createdAt":"2023-05-07T03:56:55.990Z"},{"fileName":"Clone18.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":13,"character":77},"text":"core-diff1","codeSnippet":"JavaType javaType = provider.constructType (CustomClass.class);\n    BeanDescription beanDesc = provider.getConfig ().introspect (javaType);\n    JsonSerializer < Object > serializer = BeanSerializerFactory.instance.findBeanSerializer (provider, javaType, beanDesc);\n    serializer.unwrappingSerializer (null).serialize (value, jgen, provider);","status":"core-diff","id":56,"createdAt":"2023-05-16T12:30:27.812Z"},{"fileName":"Clone18.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":28,"character":5},"text":"core-diff2","codeSnippet":"Field [] fields = value.getClass ().getDeclaredFields ();\n    for (Field field : fields) {\n        try {\n            jgen.writeObjectField (field.getName (), field.get (value));\n        } catch (IllegalArgumentException | IllegalAccessException e) {\n            e.printStackTrace ();\n        }\n    }","status":"core-diff","id":57,"createdAt":"2023-05-16T12:30:36.744Z"},{"fileName":"Clone18.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":30,"character":27},"text":"noncore-sim2","codeSnippet":"jgen.writeObjectField (\"extra_field\", \"whatever_value\");\n    jgen.writeEndObject ();","status":"noncore-sim","id":58,"createdAt":"2023-05-16T12:31:00.290Z"},{"fileName":"Clone18.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":15,"character":27},"text":"noncore-sim2","codeSnippet":"jgen.writeObjectField (\"my_extra_field\", \"some data\");\n    jgen.writeEndObject ();","status":"noncore-sim","id":59,"createdAt":"2023-05-16T12:31:15.129Z"},{"fileName":"Clone18.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":29},"text":"noncore-sim1","codeSnippet":"jgen.writeStartObject ();","status":"noncore-sim","id":60,"createdAt":"2023-05-16T12:31:54.427Z"},{"fileName":"Clone18.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":29},"text":"noncore-sim1","codeSnippet":"jgen.writeStartObject ();","status":"noncore-sim","id":61,"createdAt":"2023-05-16T12:32:03.889Z"},{"fileName":"Clone19.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":29},"text":"noncore-sim1","codeSnippet":"jgen.writeStartObject ();","status":"noncore-sim","id":62,"createdAt":"2023-05-16T12:37:18.672Z"},{"fileName":"Clone19.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":29},"text":"noncore-sim1","codeSnippet":"jgen.writeStartObject ();","status":"noncore-sim","id":63,"createdAt":"2023-05-16T12:37:27.878Z"},{"fileName":"Clone19.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":13,"character":77},"text":"core-sim1","codeSnippet":"JavaType javaType = provider.constructType (CustomClass.class);\n    BeanDescription beanDesc = provider.getConfig ().introspect (javaType);\n    JsonSerializer < Object > serializer = BeanSerializerFactory.instance.findBeanSerializer (provider, javaType, beanDesc);\n    serializer.unwrappingSerializer (null).serialize (value, jgen, provider);","status":"core-sim","id":64,"createdAt":"2023-05-16T12:38:57.311Z"},{"fileName":"Clone19.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":24,"character":5},"text":"core-sim1","codeSnippet":"if (_propertyFilterId != null) {\n        serializeFieldsFiltered (bean, jgen, provider);\n    } else {\n        serializeFields (bean, jgen, provider);\n    }","status":"core-sim","id":65,"createdAt":"2023-05-16T12:39:06.880Z"},{"fileName":"Clone19.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":14,"character":58},"text":"noncore-diff1","codeSnippet":"jgen.writeObjectField (\"my_extra_field\", \"some data\");","status":"noncore-diff","id":66,"createdAt":"2023-05-16T12:39:18.166Z"},{"fileName":"Clone19.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":54},"text":"noncore-diff2","codeSnippet":"serializerListener.postSerialization (bean, jgen);","status":"noncore-diff","id":67,"createdAt":"2023-05-16T12:39:31.447Z"},{"fileName":"Clone19.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":15,"character":27},"text":"noncore-sim2","codeSnippet":"jgen.writeEndObject ();","status":"noncore-sim","id":68,"createdAt":"2023-05-16T12:39:41.900Z"},{"fileName":"Clone19.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":26,"character":27},"text":"noncore-sim2","codeSnippet":"jgen.writeEndObject ();","status":"noncore-sim","id":69,"createdAt":"2023-05-16T12:39:49.473Z"},{"fileName":"Clone20.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":29},"text":"noncore-sim1","codeSnippet":"jgen.writeStartObject ();","status":"noncore-sim","id":70,"createdAt":"2023-05-16T12:58:03.499Z"},{"fileName":"Clone20.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":24,"character":29},"text":"noncore-sim1","codeSnippet":"jgen.writeStartObject ();","status":"noncore-sim","id":71,"createdAt":"2023-05-16T12:58:13.661Z"},{"fileName":"Clone20.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":27},"text":"noncore-sim2","codeSnippet":"jgen.writeEndObject ();","status":"noncore-sim","id":72,"createdAt":"2023-05-16T12:58:19.975Z"},{"fileName":"Clone20.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":31,"character":27},"text":"noncore-sim2","codeSnippet":"jgen.writeEndObject ();","status":"noncore-sim","id":73,"createdAt":"2023-05-16T12:58:27.713Z"},{"fileName":"Clone20.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":18,"character":5},"text":"core-diff1","codeSnippet":"Field [] fields = value.getClass ().getDeclaredFields ();\n    for (Field field : fields) {\n        try {\n            jgen.writeObjectField (field.getName (), field.get (value));\n        } catch (IllegalArgumentException | IllegalAccessException e) {\n            e.printStackTrace ();\n        }\n    }","status":"core-diff","id":74,"createdAt":"2023-05-16T12:58:35.121Z"},{"fileName":"Clone20.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":30,"character":54},"text":"core-diff2","codeSnippet":"if (_propertyFilterId != null) {\n        serializeFieldsFiltered (bean, jgen, provider);\n    } else {\n        serializeFields (bean, jgen, provider);\n    }\n    serializerListener.postSerialization (bean, jgen);","status":"core-diff","id":75,"createdAt":"2023-05-16T12:58:48.414Z"},{"fileName":"Clone21.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":79},"text":"noncore-sim1","codeSnippet":"double numIterations = 10;\n    long exceptionPlusCatchTime = 0, excepTime = 0, strTime = 0, throwTime = 0;","status":"noncore-sim","id":76,"createdAt":"2023-05-16T13:05:37.111Z"},{"fileName":"Clone21.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":95},"text":"noncore-sim1","codeSnippet":"long throwCatchTime = 0, newExceptionTime = 0, newObjectTime = 0, noStackExceptionTime = 0;","status":"noncore-sim","id":77,"createdAt":"2023-05-16T13:05:54.084Z"},{"fileName":"Clone21.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":12,"character":30},"text":"noncore-sim2","codeSnippet":"for (int i = 0;\n    i < numIterations; i ++) {","status":"noncore-sim","id":78,"createdAt":"2023-05-16T13:06:01.910Z"},{"fileName":"Clone21.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":27,"character":19},"text":"noncore-sim2","codeSnippet":"for (int i = 0;\n    i < 30; i ++) {","status":"noncore-sim","id":79,"createdAt":"2023-05-16T13:06:10.495Z"},{"fileName":"Clone21.java","fileLine":28,"positionStart":{"line":28,"character":8},"positionEnd":{"line":31,"character":59},"text":"core-diff2","codeSnippet":"throwCatchTime += throwCatchLoop ();\n        newExceptionTime += newExceptionLoop ();\n        newObjectTime += newObjectLoop ();\n        noStackExceptionTime += newNoStackExceptionLoop ();","status":"core-diff","id":81,"createdAt":"2023-05-16T13:06:34.262Z"},{"fileName":"Clone21.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":17,"character":5},"text":"noncore-sim2","codeSnippet":"}","status":"noncore-sim","id":82,"createdAt":"2023-05-16T13:07:03.351Z"},{"fileName":"Clone21.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":32,"character":5},"text":"noncore-sim2","codeSnippet":"}","status":"noncore-sim","id":83,"createdAt":"2023-05-16T13:11:39.232Z"},{"fileName":"Clone21.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":22,"character":0},"text":"noncore-sim3","codeSnippet":"System.out.println (\"new Exception + throw/catch = \" + exceptionPlusCatchTime / numIterations);\n    System.out.println (\"new Exception only          = \" + excepTime / numIterations);\n    System.out.println (\"throw/catch only            = \" + throwTime / numIterations);\n    System.out.println (\"new String (benchmark)      = \" + strTime / numIterations);\n","status":"noncore-sim","id":84,"createdAt":"2023-05-16T13:12:00.647Z"},{"fileName":"Clone21.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":37,"character":0},"text":"noncore-sim3","codeSnippet":"System.out.println (\"throwCatchTime = \" + throwCatchTime / 30);\n    System.out.println (\"newExceptionTime = \" + newExceptionTime / 30);\n    System.out.println (\"newStringTime = \" + newObjectTime / 30);\n    System.out.println (\"noStackExceptionTime = \" + noStackExceptionTime / 30);\n","status":"noncore-sim","id":85,"createdAt":"2023-05-16T13:12:11.238Z"},{"fileName":"Clone21.java","fileLine":13,"positionStart":{"line":13,"character":8},"positionEnd":{"line":16,"character":35},"text":"core-diff1","codeSnippet":"exceptionPlusCatchTime += exceptionPlusCatchBlock ();\n        excepTime += createException ();\n        throwTime += catchBlock ();\n        strTime += createString ();","status":"core-diff","id":86,"createdAt":"2023-05-16T13:12:29.601Z"},{"fileName":"Clone23.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":28,"character":18},"text":"core-sim1","codeSnippet":"if (this.subAccounts != null) {\n        for (Balance subAccount : this.subAccounts) {\n            result = result + subAccount.getSum ();\n        }\n    }\n    return result;","status":"core-sim","id":87,"createdAt":"2023-05-16T13:14:31.384Z"},{"fileName":"Clone23.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":18,"character":5},"text":"core-sim1","codeSnippet":"if (subAccounts != null) {\n        Double sum = 0.0;\n        for (int i = 0;\n        i < subAccounts.size (); i ++) {\n            sum += subAccounts.get (i).getSum ();\n        }\n        return amount + sum;\n    } else {\n        return amount;\n    }","status":"core-sim","id":89,"createdAt":"2023-05-16T13:15:15.298Z"},{"fileName":"Clone23.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":32},"text":"noncore-diff2","codeSnippet":"double result = this.amount;","status":"noncore-diff","id":90,"createdAt":"2023-05-16T13:15:22.497Z"},{"fileName":"Clone29.java","fileLine":20,"positionStart":{"line":20,"character":0},"positionEnd":{"line":21,"character":54},"text":"noncore-sim1","codeSnippet":"    Scanner input = new Scanner (System.in);\n    System.out.println (\"What is your choice? (x/o)\");","status":"noncore-sim","id":91,"createdAt":"2023-05-16T13:15:54.252Z"},{"fileName":"Clone29.java","fileLine":9,"positionStart":{"line":9,"character":0},"positionEnd":{"line":10,"character":54},"text":"noncore-sim1","codeSnippet":"    Scanner input = new Scanner (System.in);\n    System.out.println (\"What is your choice? (x/o)\");","status":"noncore-sim","id":92,"createdAt":"2023-05-16T13:16:06.881Z"},{"fileName":"Clone29.java","fileLine":11,"positionStart":{"line":11,"character":0},"positionEnd":{"line":16,"character":18},"text":"core-sim1","codeSnippet":"    char choice = input.findInLine (\".\").charAt (0);\n    while (choice != 'x' && choice != 'o') {\n        System.out.println (\"You must enter x or o!\");\n        choice = input.next ().charAt (0);\n    }\n    return choice;","status":"core-sim","id":93,"createdAt":"2023-05-16T13:17:08.138Z"},{"fileName":"Clone29.java","fileLine":22,"positionStart":{"line":22,"character":0},"positionEnd":{"line":29,"character":18},"text":"core-sim1","codeSnippet":"    if (input.findInLine (\".\") != null) {\n        choice = input.findInLine (\".\").charAt (0);\n        while (choice != 'x' && choice != 'o') {\n            System.out.println (\"You must enter x or o!\");\n            choice = input.findInLine (\".\").charAt (0);\n        }\n    }\n    return choice;","status":"core-sim","id":94,"createdAt":"2023-05-16T13:17:16.124Z"},{"fileName":"Clone30.java","fileLine":20,"positionStart":{"line":20,"character":3},"positionEnd":{"line":21,"character":0},"text":"noncore-sim1","codeSnippet":" byte [] dataToCompress = \"This is the test data.\".getBytes (StandardCharsets.ISO_8859_1);\n","status":"noncore-sim","id":95,"createdAt":"2023-05-16T13:26:47.475Z"},{"fileName":"Clone30.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":0},"text":"noncore-sim1","codeSnippet":"String sr = new String (\"fsdfesfsfdddddddsfdsfssdfdsfdsfdsfdsfdsdfggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggghghghghggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggfsdfesfsfdddddddsfdsfssdfdsfdsfdsfdsfdsdfggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggghghghghggggggggggggggggggggggggggggggggggggggggg\");\n","status":"noncore-sim","id":96,"createdAt":"2023-05-16T13:26:53.654Z"},{"fileName":"Clone30.java","fileLine":10,"positionStart":{"line":10,"character":3},"positionEnd":{"line":11,"character":51},"text":"noncore-diff1","codeSnippet":" byte [] data = sr.getBytes ();\n    System.out.println (\"src size \" + data.length);","status":"noncore-diff","id":97,"createdAt":"2023-05-16T13:27:04.187Z"},{"fileName":"Clone30.java","fileLine":10,"positionStart":{"line":10,"character":3},"positionEnd":{"line":11,"character":51},"text":"noncore-diff1","codeSnippet":" byte [] data = sr.getBytes ();\n    System.out.println (\"src size \" + data.length);","status":"noncore-diff","id":98,"createdAt":"2023-05-16T13:30:35.734Z"},{"fileName":"Clone30.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":16,"character":5},"text":"core-sim1","codeSnippet":"try {\n        compress (data);\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }","status":"core-sim","id":100,"createdAt":"2023-05-16T13:31:31.480Z"},{"fileName":"Clone30.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":45,"character":5},"text":"core-sim1","codeSnippet":"try {\n        ByteArrayOutputStream byteStream = new ByteArrayOutputStream (dataToCompress.length);\n        try {\n            GZIPOutputStream zipStream = new GZIPOutputStream (byteStream);\n            try {\n                zipStream.write (dataToCompress);\n            } finally {\n                zipStream.close ();\n            }\n        } finally {\n            byteStream.close ();\n        }\n        byte [] compressedData = byteStream.toByteArray ();\n        FileOutputStream fileStream = new FileOutputStream (\"C:/Users/UserName/Desktop/zip_file.gz\");\n        try {\n            fileStream.write (compressedData);\n        } finally {\n            try {\n                fileStream.close ();\n            } catch (Exception e) {\n            }\n        }\n    } catch (Exception e) {\n        e.printStackTrace ();\n    }","status":"core-sim","id":102,"createdAt":"2023-05-16T13:33:36.043Z"},{"fileName":"Clone39.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":15,"character":5},"text":"core-sim1","codeSnippet":"for (int i = ar.length - 1;\n    i > 0; i --) {\n        int index = rnd.nextInt (i + 1);\n        T a = ar [index];\n        ar [index] = ar [i];\n        ar [i] = a;\n    }","status":"core-sim","id":103,"createdAt":"2023-05-16T14:30:46.524Z"},{"fileName":"Clone39.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":24,"character":5},"text":"core-sim1","codeSnippet":"int count = array.length;\n    for (int i = count;\n    i > 1; i --) {\n        swap (array, i - 1, random.nextInt (i));\n    }","status":"core-sim","id":104,"createdAt":"2023-05-16T14:31:03.008Z"},{"fileName":"Clone39.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":47},"text":"noncore-diff1","codeSnippet":"if (random == null) random = new Random ();","status":"noncore-diff","id":105,"createdAt":"2023-05-16T14:31:09.161Z"},{"fileName":"Clone46.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":17,"character":17},"text":"core-sim1","codeSnippet":"if (first == null) return false;\n    Node turtle = first;\n    Node hare = first;\n    while (hare.next != null && hare.next.next != null) {\n        turtle = turtle.next;\n        hare = hare.next.next;\n        if (turtle == hare) return true;\n    }\n    return false;","status":"core-sim","id":106,"createdAt":"2023-05-16T14:44:08.183Z"},{"fileName":"Clone46.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":34,"character":17},"text":"core-sim1","codeSnippet":"if (root == null) return false;\n    Node slow = root, fast = root;\n    int taken = 0, limit = 2;\n    while (fast.next != null) {\n        fast = fast.next;\n        taken ++;\n        if (slow == fast) return true;\n        if (taken == limit) {\n            taken = 0;\n            limit <<= 1;\n            slow = fast;\n        }\n    }\n    return false;","status":"core-sim","id":107,"createdAt":"2023-05-16T14:44:17.359Z"},{"fileName":"Clone51.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":43},"text":"noncore-diff1","codeSnippet":"Scanner scan = new Scanner (System.in);","status":"noncore-diff","id":108,"createdAt":"2023-05-16T14:45:19.548Z"},{"fileName":"Clone51.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":24,"character":15},"text":"noncore-diff2","codeSnippet":"FileReader file = new FileReader (\"D:\\\\Test.txt\");\n    BufferedReader br = new BufferedReader (file);\n    String str;","status":"noncore-diff","id":110,"createdAt":"2023-05-16T14:49:10.926Z"},{"fileName":"Clone51.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":11,"character":17},"text":"noncore-sim1","codeSnippet":"int exes = 0;\n    int whys = 0;","status":"noncore-sim","id":111,"createdAt":"2023-05-16T14:49:19.044Z"},{"fileName":"Clone51.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":26,"character":17},"text":"noncore-sim1","codeSnippet":"int xSum = 0;\n    int ySum = 0;","status":"noncore-sim","id":112,"createdAt":"2023-05-16T14:49:27.354Z"},{"fileName":"Clone51.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":16,"character":5},"text":"core-diff1","codeSnippet":"while (scan.hasNext ()) {\n        String line = scan.next ();\n        if (line.equals (\"x=\")) exes += scan.nextInt ();\n        else whys += scan.nextInt ();\n    }","status":"core-diff","id":113,"createdAt":"2023-05-16T14:50:09.056Z"},{"fileName":"Clone51.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":34,"character":5},"text":"core-diff2","codeSnippet":"while ((str = br.readLine ()) != null) {\n        if (str.contains (\"x=\")) {\n            xSum += Integer.parseInt (str.split (\"=\") [1].trim ());\n        }\n        if (str.contains (\"y=\")) {\n            ySum += Integer.parseInt (str.split (\"=\") [1].trim ());\n        }\n    }","status":"core-diff","id":114,"createdAt":"2023-05-16T14:50:43.074Z"},{"fileName":"Clone51.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":18,"character":38},"text":"noncore-sim2","codeSnippet":"System.out.println (\"X: \" + exes);\n    System.out.println (\"Y: \" + whys);","status":"noncore-sim","id":115,"createdAt":"2023-05-16T14:50:54.675Z"},{"fileName":"Clone51.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":35,"character":68},"text":"noncore-sim2","codeSnippet":"System.out.println (\"Sum x is: \" + xSum + \" Sum y is: \" + ySum);","status":"noncore-sim","id":116,"createdAt":"2023-05-16T14:53:12.173Z"},{"fileName":"Clone52.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":22,"character":10},"text":"core-sim1","codeSnippet":"Throwable firstException = exceptionThrownBy (new Statement () {\n        public void evaluate () throws Throwable {\n            foo ();\n        }}\n    );\n    assertEquals (Exception.class, firstException.getClass ());\n    Throwable secondException = exceptionThrownBy (new Statement () {\n        public void evaluate () throws Throwable {\n            foo ();\n        }}\n    );\n    assertEquals (Exception.class, secondException.getClass ());\n    foo ()","status":"core-sim","id":117,"createdAt":"2023-05-16T14:55:14.892Z"},{"fileName":"Clone52.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":37,"character":11},"text":"core-sim1","codeSnippet":"try {\n        foo ();\n        fail (\"foo did not throw an exception\");\n    } catch (Exception ex) {\n    }\n    try {\n        foo ();\n        fail (\"foo did not throw an exception\");\n    } catch (Exception ex) {\n    }\n    foo ();","status":"core-sim","id":118,"createdAt":"2023-05-16T14:55:40.915Z"},{"fileName":"Clone54.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":48,"character":33},"text":"core-sim1","codeSnippet":"if (brackets.length () % 2 != 0) {\n        return false;\n    }\n    Stack < Character > halfBraces = new Stack ();\n    for (char ch : brackets.toCharArray ()) {\n        if (braces.containsKey (ch)) {\n            halfBraces.push (braces.get (ch));\n        } else if (halfBraces.isEmpty () || ch != halfBraces.pop ()) {\n            return false;\n        }\n    }\n    return halfBraces.isEmpty ();","status":"core-sim","id":119,"createdAt":"2023-05-16T15:00:45.516Z"},{"fileName":"Clone54.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":29,"character":5},"text":"core-sim1","codeSnippet":"if ((expression.length () % 2) == 1) return false;\n    else {\n        Stack < Character > s = new Stack < > ();\n        for (char bracket : expression.toCharArray ()) switch (bracket) {\n            case '{' :\n                s.push ('}');\n                break;\n            case '(' :\n                s.push (')');\n                break;\n            case '[' :\n                s.push (']');\n                break;\n            default :\n                if (s.isEmpty () || bracket != s.peek ()) {\n                    return false;\n                }\n                s.pop ();\n        }\n        return s.isEmpty ();\n    }","status":"core-sim","id":120,"createdAt":"2023-05-16T15:00:53.441Z"},{"fileName":"Clone54.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":36,"character":26},"text":"noncore-diff1","codeSnippet":"Map < Character, Character > braces = new HashMap < > ();\n    braces.put ('(', ')');\n    braces.put ('[', ']');\n    braces.put ('{', '}');","status":"noncore-diff","id":121,"createdAt":"2023-05-16T15:01:01.722Z"},{"fileName":"Clone58.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":20,"character":17},"text":"core-sim1","codeSnippet":"PrintWriter out = new PrintWriter (\"e:\\\\2.txt\");\n    for (int i = 0;\n    i < ls.size (); i ++) {\n        String [] temp = ls.get (i).split (\":\");\n        if (temp.length > 1) {\n            out.println (ls.get (i));\n        }\n    }\n    out.close ();","status":"core-sim","id":122,"createdAt":"2023-05-16T15:26:55.242Z"},{"fileName":"Clone58.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":35,"character":17},"text":"core-sim1","codeSnippet":"PrintWriter out = new PrintWriter (\"newline.srt\");\n    int i = 0;\n    String line = reader.readLine ();\n    while (line != null) {\n        if (! line.trim ().equals (\"\")) {\n            out.println (line);\n        }\n        line = reader.readLine ();\n    }\n    out.close ();","status":"core-sim","id":123,"createdAt":"2023-05-16T15:27:05.447Z"},{"fileName":"Clone58.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":64},"text":"noncore-diff1","codeSnippet":"Path myPath = Paths.get (\"e:\\\\\", \"1.txt\");\n    List < String > ls;\n    ls = Files.readAllLines (myPath, StandardCharsets.US_ASCII);","status":"noncore-diff","id":124,"createdAt":"2023-05-16T15:27:14.744Z"},{"fileName":"Clone58.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":25,"character":77},"text":"noncore-diff2","codeSnippet":"FileInputStream fin = new FileInputStream (\"line.srt\");\n    BufferedReader reader = new BufferedReader (new InputStreamReader (fin));","status":"noncore-diff","id":125,"createdAt":"2023-05-16T15:27:24.263Z"},{"fileName":"Clone64.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":36},"text":"noncore-diff1","codeSnippet":"Container parent = getParent ();","status":"noncore-diff","id":126,"createdAt":"2023-05-16T15:30:25.772Z"},{"fileName":"Clone64.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":47,"character":5},"text":"core-sim1","codeSnippet":"switch (direction) {\n        case UP :\n            draw.incrementY (false);\n            break;\n        case DOWN :\n            draw.incrementY (true);\n            break;\n        case LEFT :\n            draw.incrementX (false);\n            break;\n        case RIGHT :\n            draw.incrementX (true);\n            break;\n        default :\n            break;\n    }","status":"core-sim","id":127,"createdAt":"2023-05-16T15:30:44.168Z"},{"fileName":"Clone64.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":27,"character":5},"text":"core-sim1","codeSnippet":"int nextX = getLocation ().x + (deltaX * directionX);\n    if (nextX < 0) {\n        nextX = 0;\n        directionX *= - 1;\n    }\n    if (nextX + getSize ().width > parent.getSize ().width) {\n        nextX = parent.getSize ().width - getSize ().width;\n        directionX *= - 1;\n    }\n    int nextY = getLocation ().y + (deltaY * directionY);\n    if (nextY < 0) {\n        nextY = 0;\n        directionY *= - 1;\n    }\n    if (nextY + getSize ().height > parent.getSize ().height) {\n        nextY = parent.getSize ().height - getSize ().height;\n        directionY *= - 1;\n    }","status":"core-sim","id":128,"createdAt":"2023-05-16T15:31:32.716Z"},{"fileName":"Clone64.java","fileLine":28,"positionStart":{"line":28,"character":3},"positionEnd":{"line":28,"character":31},"text":"noncore-diff2","codeSnippet":" setLocation (nextX, nextY);","status":"noncore-diff","id":129,"createdAt":"2023-05-16T15:31:41.899Z"},{"fileName":"Clone68.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":53},"text":"noncore-sim1","codeSnippet":"Object array = createArray (String.class, node6);","status":"noncore-sim","id":130,"createdAt":"2023-05-16T15:33:22.279Z"},{"fileName":"Clone68.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":35,"character":67},"text":"noncore-sim1","codeSnippet":"Object multiDimArray = Array.newInstance (String.class, sizes);","status":"noncore-sim","id":131,"createdAt":"2023-05-16T15:33:43.070Z"},{"fileName":"Clone68.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":22,"character":31},"text":"core-diff1","codeSnippet":"Node node1 = new Node ();\n    node1.length = 1;\n    Node node2 = new Node ();\n    node2.length = 2;\n    Node node3 = new Node ();\n    node3.length = 3;\n    Node node4 = new Node ();\n    node4.children.add (node1);\n    node4.children.add (node2);\n    Node node5 = new Node ();\n    node5.children.add (node3);\n    Node node6 = new Node ();\n    node6.children.add (node4);\n    node6.children.add (node5);","status":"core-diff","id":132,"createdAt":"2023-05-16T15:33:53.448Z"},{"fileName":"Clone68.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":25,"character":26},"text":"noncore-diff1","codeSnippet":"outputArray (array);\n    System.out.println ();","status":"noncore-diff","id":133,"createdAt":"2023-05-16T15:34:06.028Z"},{"fileName":"Clone68.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":29,"character":29},"text":"noncore-diff2","codeSnippet":"Random r = new Random ();","status":"noncore-diff","id":134,"createdAt":"2023-05-16T15:34:30.311Z"},{"fileName":"Clone68.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":34,"character":118},"text":"core-diff2","codeSnippet":"int dims = 1 + r.nextInt (3);\n    int [] sizes = new int [dims];\n    for (int i = 0;\n    i < sizes.length; i ++) sizes [i] = 1 + r.nextInt (3);\n    System.out.println (\"Creating array with dimensions / sizes: \" + Arrays.toString (sizes).replaceAll (\", \", \"][\"));","status":"core-diff","id":135,"createdAt":"2023-05-16T15:34:39.108Z"},{"fileName":"Clone68.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":38,"character":0},"text":"noncore-diff3","codeSnippet":"System.out.println (Arrays.deepToString ((Object []) multiDimArray));\n","status":"noncore-diff","id":137,"createdAt":"2023-05-16T15:35:00.666Z"},{"fileName":"Clone68.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":36,"character":54},"text":"core-diff3","codeSnippet":"fillWithSomeValues (multiDimArray, \"pos \", sizes);","status":"core-diff","id":138,"createdAt":"2023-05-16T15:35:15.304Z"},{"fileName":"Clone75.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":18,"character":14},"text":"core-sim1","codeSnippet":"String formatedSource = source.subSequence (start, end).toString ();\n    String destPrefix = dest.subSequence (0, dstart).toString ();\n    String destSuffix = dest.subSequence (dend, dest.length ()).toString ();\n    String result = destPrefix + formatedSource + destSuffix;\n    result = result.replace (\",\", \".\");\n    Matcher matcher = mPattern.matcher (result);\n    if (matcher.matches ()) {\n        return null;\n    }\n    return \"\";","status":"core-sim","id":139,"createdAt":"2023-05-16T15:40:31.116Z"},{"fileName":"Clone75.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":43,"character":16},"text":"core-sim1","codeSnippet":"int dotPos = - 1;\n    int len = dest.length ();\n    for (int i = 0;\n    i < len; i ++) {\n        char c = dest.charAt (i);\n        if (c == '.' || c == ',') {\n            dotPos = i;\n            break;\n        }\n    }\n    if (dotPos >= 0) {\n        if (source.equals (\".\") || source.equals (\",\")) {\n            return \"\";\n        }\n        if (dend <= dotPos) {\n            return null;\n        }\n        if (len - dotPos > decimalDigits) {\n            return \"\";\n        }\n    }\n    return null;","status":"core-sim","id":140,"createdAt":"2023-05-16T15:40:41.600Z"},{"fileName":"Clone77.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":33,"character":59},"text":"core-sim1","codeSnippet":"CharSequence out = super.filter (source, start, end, dest, dstart, dend);\n    if (out != null) {\n        source = out;\n        start = 0;\n        end = out.length ();\n    }\n    int len = end - start;\n    if (len == 0) {\n        return source;\n    }\n    int dlen = dest.length ();\n    for (int i = 0;\n    i < dstart; i ++) {\n        if (dest.charAt (i) == '.') {\n            return (dlen - (i + 1) + len > digits) ? \"\" : new SpannableStringBuilder (source, start, end);\n        }\n    }\n    for (int i = start;\n    i < end; ++ i) {\n        if (source.charAt (i) == '.') {\n            if ((dlen - dend) + (end - (i + 1)) > digits) return \"\";\n            else break;\n        }\n    }\n    return new SpannableStringBuilder (source, start, end);","status":"core-sim","id":141,"createdAt":"2023-05-16T16:07:32.828Z"},{"fileName":"Clone77.java","fileLine":41,"positionStart":{"line":41,"character":4},"positionEnd":{"line":43,"character":0},"text":"noncore-diff1","codeSnippet":"Log.d (\"debug\", moPattern.toString ());\n    Log.d (\"debug\", \"source: \" + source + \", start: \" + start + \", end:\" + end + \", dest: \" + dest + \", dstart: \" + dstart + \", dend: \" + dend);\n","status":"noncore-diff","id":142,"createdAt":"2023-05-16T16:07:49.265Z"},{"fileName":"Clone77.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":40,"character":23},"text":"noncore-sim1","codeSnippet":"String lsStart = \"\";\n    String lsInsert = \"\";\n    String lsEnd = \"\";\n    String lsText = \"\";","status":"noncore-sim","id":143,"createdAt":"2023-05-16T16:08:00.675Z"},{"fileName":"Clone80.java","fileLine":9,"positionStart":{"line":9,"character":3},"positionEnd":{"line":14,"character":19},"text":"core-sim1","codeSnippet":" String replacement = source.subSequence (start, end).toString ();\n    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();\n    Matcher matcher = mPattern.matcher (newVal);\n    if (matcher.matches ()) return null;\n    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);\n    else return \"\";","status":"core-sim","id":145,"createdAt":"2023-05-16T16:12:02.899Z"},{"fileName":"Clone77.java","fileLine":43,"positionStart":{"line":43,"character":4},"positionEnd":{"line":56,"character":51},"text":"core-sim1","codeSnippet":"lsText = dest.toString ();\n    if (lsText.length () > 0) {\n        lsStart = lsText.substring (0, dstart);\n        Log.d (\"debug\", \"lsStart : \" + lsStart);\n        if (source != \"\") {\n            lsInsert = source.toString ();\n            Log.d (\"debug\", \"lsInsert: \" + lsInsert);\n        }\n        lsEnd = lsText.substring (dend);\n        Log.d (\"debug\", \"lsEnd   : \" + lsEnd);\n        lsText = lsStart + lsInsert + lsEnd;\n        Log.d (\"debug\", \"lsText  : \" + lsText);\n    }\n    Matcher loMatcher = moPattern.matcher (lsText);","status":"core-sim","id":146,"createdAt":"2023-05-16T16:12:37.222Z"},{"fileName":"Clone77.java","fileLine":57,"positionStart":{"line":57,"character":3},"positionEnd":{"line":57,"character":92},"text":"noncore-diff2","codeSnippet":" Log.d (\"debug\", \"loMatcher.matches(): \" + loMatcher.matches () + \", lsText: \" + lsText);","status":"noncore-diff","id":147,"createdAt":"2023-05-16T16:12:47.021Z"},{"fileName":"Clone77.java","fileLine":58,"positionStart":{"line":58,"character":3},"positionEnd":{"line":61,"character":16},"text":"core-sim1","codeSnippet":" if (! loMatcher.matches ()) {\n        return \"\";\n    }\n    return null;","status":"core-sim","id":148,"createdAt":"2023-05-16T16:12:55.366Z"},{"fileName":"Clone80.java","fileLine":24,"positionStart":{"line":24,"character":0},"positionEnd":{"line":37,"character":51},"text":"core-sim1","codeSnippet":"    lsText = dest.toString ();\n    if (lsText.length () > 0) {\n        lsStart = lsText.substring (0, dstart);\n        Log.d (\"debug\", \"lsStart : \" + lsStart);\n        if (source != \"\") {\n            lsInsert = source.toString ();\n            Log.d (\"debug\", \"lsInsert: \" + lsInsert);\n        }\n        lsEnd = lsText.substring (dend);\n        Log.d (\"debug\", \"lsEnd   : \" + lsEnd);\n        lsText = lsStart + lsInsert + lsEnd;\n        Log.d (\"debug\", \"lsText  : \" + lsText);\n    }\n    Matcher loMatcher = moPattern.matcher (lsText);","status":"core-sim","id":149,"createdAt":"2023-05-16T16:13:07.694Z"},{"fileName":"Clone80.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":42,"character":16},"text":"core-sim1","codeSnippet":"if (! loMatcher.matches ()) {\n        return \"\";\n    }\n    return null;","status":"core-sim","id":150,"createdAt":"2023-05-16T16:13:19.549Z"},{"fileName":"Clone80.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":24,"character":0},"text":"noncore-diff1","codeSnippet":"Log.d (\"debug\", moPattern.toString ());\n    Log.d (\"debug\", \"source: \" + source + \", start: \" + start + \", end:\" + end + \", dest: \" + dest + \", dstart: \" + dstart + \", dend: \" + dend);\n","status":"noncore-diff","id":151,"createdAt":"2023-05-16T16:33:54.715Z"},{"fileName":"Clone80.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":39,"character":0},"text":"noncore-diff2","codeSnippet":"Log.d (\"debug\", \"loMatcher.matches(): \" + loMatcher.matches () + \", lsText: \" + lsText);\n","status":"noncore-diff","id":152,"createdAt":"2023-05-16T16:34:01.426Z"},{"fileName":"Clone80.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":21,"character":23},"text":"noncore-sim1","codeSnippet":"String lsStart = \"\";\n    String lsInsert = \"\";\n    String lsEnd = \"\";\n    String lsText = \"\";","status":"noncore-sim","id":153,"createdAt":"2023-05-16T16:34:07.635Z"},{"fileName":"Clone82.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":28,"character":51},"text":"core-diff1","codeSnippet":"lsText = dest.toString ();\n    if (lsText.length () > 0) {\n        lsStart = lsText.substring (0, dstart);\n        Log.d (\"debug\", \"lsStart : \" + lsStart);\n        if (source != \"\") {\n            lsInsert = source.toString ();\n            Log.d (\"debug\", \"lsInsert: \" + lsInsert);\n        }\n        lsEnd = lsText.substring (dend);\n        Log.d (\"debug\", \"lsEnd   : \" + lsEnd);\n        lsText = lsStart + lsInsert + lsEnd;\n        Log.d (\"debug\", \"lsText  : \" + lsText);\n    }\n    Matcher loMatcher = moPattern.matcher (lsText);","status":"core-diff","id":154,"createdAt":"2023-05-16T16:52:58.622Z"},{"fileName":"Clone82.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":58,"character":16},"text":"core-diff1","codeSnippet":"int dotPos = - 1;\n    int len = dest.length ();\n    for (int i = 0;\n    i < len; i ++) {\n        char c = dest.charAt (i);\n        if (c == '.' || c == ',') {\n            dotPos = i;\n            break;\n        }\n    }\n    if (dotPos >= 0) {\n        if (source.equals (\".\") || source.equals (\",\")) {\n            return \"\";\n        }\n        if (dend <= dotPos) {\n            return null;\n        }\n        if (len - dotPos > decimalDigits) {\n            return \"\";\n        }\n    }\n    return null;","status":"core-diff","id":155,"createdAt":"2023-05-16T16:53:18.318Z"},{"fileName":"Clone82.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":33,"character":16},"text":"core-diff1","codeSnippet":"if (! loMatcher.matches ()) {\n        return \"\";\n    }\n    return null;","status":"core-diff","id":156,"createdAt":"2023-05-16T16:53:27.459Z"},{"fileName":"Clone82.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":15,"character":0},"text":"noncore-diff1","codeSnippet":"String lsStart = \"\";\n    String lsInsert = \"\";\n    String lsEnd = \"\";\n    String lsText = \"\";\n    Log.d (\"debug\", moPattern.toString ());\n    Log.d (\"debug\", \"source: \" + source + \", start: \" + start + \", end:\" + end + \", dest: \" + dest + \", dstart: \" + dstart + \", dend: \" + dend);\n","status":"noncore-diff","id":157,"createdAt":"2023-05-16T16:53:40.062Z"},{"fileName":"Clone82.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":29,"character":92},"text":"noncore-diff2","codeSnippet":"Log.d (\"debug\", \"loMatcher.matches(): \" + loMatcher.matches () + \", lsText: \" + lsText);","status":"noncore-diff","id":158,"createdAt":"2023-05-16T16:53:57.058Z"},{"fileName":"Clone83.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":35},"text":"noncore-sim1","codeSnippet":"int width = this.getWidth ();\n    int height = this.getHeight ();","status":"noncore-sim","id":159,"createdAt":"2023-05-16T17:10:50.772Z"},{"fileName":"Clone83.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":35,"character":30},"text":"noncore-sim1","codeSnippet":"int w = this.getWidth ();\n    int h = this.getHeight ();","status":"noncore-sim","id":160,"createdAt":"2023-05-16T17:11:01.118Z"},{"fileName":"Clone83.java","fileLine":42,"positionStart":{"line":42,"character":0},"positionEnd":{"line":50,"character":65},"text":"core-sim2","codeSnippet":"    if (frameCount == FRAMES) {\n        averageTime = totalTime / FRAMES;\n        totalTime = 0;\n        frameCount = 0;\n    } else {\n        totalTime += System.nanoTime () - start;\n        frameCount ++;\n    }\n    String s = String.format (\"%1$5.3f\", averageTime / 1000000d);","status":"core-sim","id":163,"createdAt":"2023-05-16T17:13:16.742Z"},{"fileName":"Clone83.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":32,"character":36},"text":"core-sim2","codeSnippet":"long start = System.nanoTime ();","status":"core-sim","id":164,"createdAt":"2023-05-16T17:13:34.101Z"},{"fileName":"Clone83.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":33,"character":29},"text":"noncore-diff1","codeSnippet":"super.paintComponent (g);","status":"noncore-diff","id":165,"createdAt":"2023-05-16T17:18:00.812Z"},{"fileName":"Clone83.java","fileLine":20,"positionStart":{"line":20,"character":8},"positionEnd":{"line":20,"character":81},"text":"core-sim2","codeSnippet":"double time = 2 * Math.PI * (System.currentTimeMillis () % 5000) / 5000.;","status":"core-sim","id":166,"createdAt":"2023-05-16T17:18:26.060Z"},{"fileName":"Clone83.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":19,"character":9},"text":"core-sim1","codeSnippet":"if (activeRedraw) {\n        if (repaintBuffer1) {\n            Graphics g1 = buffer1.getGraphics ();\n            g1.clearRect (0, 0, width, height);\n            g1.setColor (Color.green);\n            g1.drawRect (0, 0, width - 1, height - 1);\n            g.drawImage (buffer1, 0, 0, null);\n            repaintBuffer1 = false;\n        }","status":"core-sim","id":167,"createdAt":"2023-05-16T17:18:36.795Z"},{"fileName":"Clone83.java","fileLine":21,"positionStart":{"line":21,"character":8},"positionEnd":{"line":28,"character":5},"text":"core-sim1","codeSnippet":"g.setColor (Color.RED);\n        if (rect != null) {\n            g.drawImage (buffer1, rect.x, rect.y, rect.x + rect.width, rect.y + rect.height, rect.x, rect.y, rect.x + rect.width, rect.y + rect.height, this);\n        }\n        rect = new Rectangle ((int) (Math.sin (time) * width / 3 + width / 2 - 20), (int) (Math.cos (time) * height / 3 + height / 2) - 20, 40, 40);\n        g.fillRect (rect.x, rect.y, rect.width, rect.height);\n        activeRedraw = false;\n    }","status":"core-sim","id":168,"createdAt":"2023-05-16T17:18:46.685Z"},{"fileName":"Clone83.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":42,"character":0},"text":"core-sim1","codeSnippet":"g.drawImage (background, 0, 0, this);\n    double theta = 2 * Math.PI * index ++ / 64;\n    g.setColor (Color.blue);\n    rect.setRect ((int) (Math.sin (theta) * w / 3 + w / 2 - RADIUS), (int) (Math.cos (theta) * h / 3 + h / 2 - RADIUS), 2 * RADIUS, 2 * RADIUS);\n    g.fillOval (rect.x, rect.y, rect.width, rect.height);\n    g.setColor (Color.white);\n","status":"core-sim","id":169,"createdAt":"2023-05-16T17:18:56.464Z"},{"fileName":"Clone83.java","fileLine":51,"positionStart":{"line":51,"character":3},"positionEnd":{"line":51,"character":28},"text":"core-sim1","codeSnippet":" g.drawString (s, 5, 16);","status":"core-sim","id":170,"createdAt":"2023-05-16T17:19:04.478Z"},{"fileName":"Clone84.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":12,"character":26},"text":"core-sim1","codeSnippet":"if (a == 0 || b == 0) return 0;\n    if (a == b) return a;\n    if (a > b) return gcd (a - b, b);\n    return gcd (a, b - a);","status":"core-sim","id":171,"createdAt":"2023-05-16T17:23:27.420Z"},{"fileName":"Clone84.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":37,"character":35},"text":"core-sim1","codeSnippet":"if (a == Integer.MIN_VALUE) {\n        if (b == Integer.MIN_VALUE) throw new IllegalArgumentException (\"gcd() is greater than Integer.MAX_VALUE\");\n        return 1 << Integer.numberOfTrailingZeros (Math.abs (b));\n    }\n    if (b == Integer.MIN_VALUE) return 1 << Integer.numberOfTrailingZeros (Math.abs (a));\n    a = Math.abs (a);\n    b = Math.abs (b);\n    if (a == 0) return b;\n    if (b == 0) return a;\n    int factorsOfTwoInA = Integer.numberOfTrailingZeros (a), factorsOfTwoInB = Integer.numberOfTrailingZeros (b), commonFactorsOfTwo = Math.min (factorsOfTwoInA, factorsOfTwoInB);\n    a>>= factorsOfTwoInA;\n    b>>= factorsOfTwoInB;\n    while (a != b) {\n        if (a > b) {\n            a = (a - b);\n            a>>= Integer.numberOfTrailingZeros (a);\n        } else {\n            b = (b - a);\n            b>>= Integer.numberOfTrailingZeros (b);\n        }\n    }\n    return a << commonFactorsOfTwo;","status":"core-sim","id":172,"createdAt":"2023-05-16T17:23:35.098Z"},{"fileName":"Clone85.java","fileLine":32,"positionStart":{"line":32,"character":0},"positionEnd":{"line":35,"character":5},"text":"core-diff1","codeSnippet":"    for (Node toolBar = htmlEditor.lookup (\".tool-bar\");\n    toolBar != null; toolBar = htmlEditor.lookup (\".tool-bar\")) {\n        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);\n    }","status":"core-diff","id":173,"createdAt":"2023-05-16T17:28:46.766Z"},{"fileName":"Clone85.java","fileLine":14,"positionStart":{"line":14,"character":0},"positionEnd":{"line":25,"character":42},"text":"core-diff1","codeSnippet":"    addCustomToolBarTo (htmlEditor);\n    printChildren (htmlEditor, 20);\n    moveFromTo (htmlEditor, \"PopupButton\", 0, \"ToolBar\", 2);\n    moveFromTo (htmlEditor, \"PopupButton\", 1, \"ToolBar\", 2);\n    moveFromTo (htmlEditor, \"Separator\", 4, \"ToolBar\", 2);\n    moveFromTo (htmlEditor, \"ComboBox\", 2, \"ToolBar\", 2);\n    moveFromTo (htmlEditor, \"Separator\", 5, \"ToolBar\", 2);\n    moveFromTo (htmlEditor, \"ToggleButton\", 6, \"ToolBar\", 2);\n    moveFromTo (htmlEditor, \"ToggleButton\", 7, \"ToolBar\", 2);\n    moveFromTo (htmlEditor, \"ToggleButton\", 8, \"ToolBar\", 2);\n    removeFrom (htmlEditor, \"ToolBar\", 1);\n    removeFrom (htmlEditor, \"ToolBar\", 0);","status":"core-diff","id":174,"createdAt":"2023-05-16T17:30:27.543Z"},{"fileName":"Clone85.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":44},"text":"noncore-sim1","codeSnippet":"final HTMLEditor htmlEditor = new HTMLEditor ();\n    stage.setScene (new Scene (htmlEditor));","status":"noncore-sim","id":175,"createdAt":"2023-05-16T17:30:38.383Z"},{"fileName":"Clone85.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":31,"character":25},"text":"noncore-sim1","codeSnippet":"final HTMLEditor htmlEditor = new HTMLEditor ();\n    primaryStage.setScene (new Scene (htmlEditor));\n    primaryStage.show ();","status":"noncore-sim","id":176,"createdAt":"2023-05-16T17:30:45.547Z"},{"fileName":"Clone85.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":13,"character":18},"text":"noncore-sim1","codeSnippet":"stage.show ();","status":"noncore-sim","id":177,"createdAt":"2023-05-16T17:30:54.563Z"},{"fileName":"Clone85.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":12,"character":26},"text":"noncore-diff1","codeSnippet":"stage.setWidth (300);\n    stage.setHeight (200);","status":"noncore-diff","id":178,"createdAt":"2023-05-16T17:31:04.304Z"},{"fileName":"Clone86.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":15,"character":33},"text":"core-diff1","codeSnippet":"hideImageNodesMatching (htmlEditor, Pattern.compile (\".*(Cut|Copy|Paste).*\"), 0);\n    Node seperator = htmlEditor.lookup (\".separator\");\n    seperator.setVisible (false);\n    seperator.setManaged (false);","status":"core-diff","id":179,"createdAt":"2023-05-16T17:32:09.357Z"},{"fileName":"Clone86.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":25,"character":5},"text":"core-diff1","codeSnippet":"for (Node toolBar = htmlEditor.lookup (\".tool-bar\");\n    toolBar != null; toolBar = htmlEditor.lookup (\".tool-bar\")) {\n        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);\n    }","status":"core-diff","id":180,"createdAt":"2023-05-16T17:32:16.353Z"},{"fileName":"Clone86.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":18},"text":"noncore-sim1","codeSnippet":"final HTMLEditor htmlEditor = new HTMLEditor ();\n    stage.setScene (new Scene (htmlEditor));\n    stage.show ();","status":"noncore-sim","id":181,"createdAt":"2023-05-16T17:32:39.745Z"},{"fileName":"Clone86.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":21,"character":25},"text":"noncore-sim1","codeSnippet":"final HTMLEditor htmlEditor = new HTMLEditor ();\n    primaryStage.setScene (new Scene (htmlEditor));\n    primaryStage.show ();","status":"noncore-sim","id":183,"createdAt":"2023-05-16T17:33:01.550Z"},{"fileName":"Clone87.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":19,"character":24},"text":"core-diff2","codeSnippet":"keyPress (VK_ALT);\n    keyPress (VK_NUMPAD0);\n    keyRelease (VK_NUMPAD0);\n    String altCode = Integer.toString (c);\n    for (int i = 0;\n    i < altCode.length (); i ++) {\n        c = (char) (altCode.charAt (i) + '0');\n        keyPress (c);\n        keyRelease (c);\n    }\n    keyRelease (VK_ALT);","status":"core-diff","id":184,"createdAt":"2023-05-16T17:34:11.134Z"},{"fileName":"Clone87.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":29,"character":43},"text":"core-diff1","codeSnippet":"Clipboard clipboard = Toolkit.getDefaultToolkit ().getSystemClipboard ();\n    StringSelection stringSelection = new StringSelection (characters);\n    clipboard.setContents (stringSelection, clipboardOwner);\n    robot.keyPress (KeyEvent.VK_CONTROL);\n    robot.keyPress (KeyEvent.VK_V);\n    robot.keyRelease (KeyEvent.VK_V);\n    robot.keyRelease (KeyEvent.VK_CONTROL);","status":"core-diff","id":185,"createdAt":"2023-05-16T17:34:17.668Z"},{"fileName":"Clone89.java","fileLine":9,"positionStart":{"line":9,"character":3},"positionEnd":{"line":19,"character":24},"text":"core-sim1","codeSnippet":" keyPress (VK_ALT);\n    keyPress (VK_NUMPAD0);\n    keyRelease (VK_NUMPAD0);\n    String altCode = Integer.toString (c);\n    for (int i = 0;\n    i < altCode.length (); i ++) {\n        c = (char) (altCode.charAt (i) + '0');\n        keyPress (c);\n        keyRelease (c);\n    }\n    keyRelease (VK_ALT);","status":"core-sim","id":186,"createdAt":"2023-05-16T17:35:49.009Z"},{"fileName":"Clone89.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":317,"character":5},"text":"core-sim1","codeSnippet":"switch (character) {\n        case 'a' :\n            doType (VK_A);\n            break;\n        case 'b' :\n            doType (VK_B);\n            break;\n        case 'c' :\n            doType (VK_C);\n            break;\n        case 'd' :\n            doType (VK_D);\n            break;\n        case 'e' :\n            doType (VK_E);\n            break;\n        case 'f' :\n            doType (VK_F);\n            break;\n        case 'g' :\n            doType (VK_G);\n            break;\n        case 'h' :\n            doType (VK_H);\n            break;\n        case 'i' :\n            doType (VK_I);\n            break;\n        case 'j' :\n            doType (VK_J);\n            break;\n        case 'k' :\n            doType (VK_K);\n            break;\n        case 'l' :\n            doType (VK_L);\n            break;\n        case 'm' :\n            doType (VK_M);\n            break;\n        case 'n' :\n            doType (VK_N);\n            break;\n        case 'o' :\n            doType (VK_O);\n            break;\n        case 'p' :\n            doType (VK_P);\n            break;\n        case 'q' :\n            doType (VK_Q);\n            break;\n        case 'r' :\n            doType (VK_R);\n            break;\n        case 's' :\n            doType (VK_S);\n            break;\n        case 't' :\n            doType (VK_T);\n            break;\n        case 'u' :\n            doType (VK_U);\n            break;\n        case 'v' :\n            doType (VK_V);\n            break;\n        case 'w' :\n            doType (VK_W);\n            break;\n        case 'x' :\n            doType (VK_X);\n            break;\n        case 'y' :\n            doType (VK_Y);\n            break;\n        case 'z' :\n            doType (VK_Z);\n            break;\n        case 'A' :\n            doType (VK_SHIFT, VK_A);\n            break;\n        case 'B' :\n            doType (VK_SHIFT, VK_B);\n            break;\n        case 'C' :\n            doType (VK_SHIFT, VK_C);\n            break;\n        case 'D' :\n            doType (VK_SHIFT, VK_D);\n            break;\n        case 'E' :\n            doType (VK_SHIFT, VK_E);\n            break;\n        case 'F' :\n            doType (VK_SHIFT, VK_F);\n            break;\n        case 'G' :\n            doType (VK_SHIFT, VK_G);\n            break;\n        case 'H' :\n            doType (VK_SHIFT, VK_H);\n            break;\n        case 'I' :\n            doType (VK_SHIFT, VK_I);\n            break;\n        case 'J' :\n            doType (VK_SHIFT, VK_J);\n            break;\n        case 'K' :\n            doType (VK_SHIFT, VK_K);\n            break;\n        case 'L' :\n            doType (VK_SHIFT, VK_L);\n            break;\n        case 'M' :\n            doType (VK_SHIFT, VK_M);\n            break;\n        case 'N' :\n            doType (VK_SHIFT, VK_N);\n            break;\n        case 'O' :\n            doType (VK_SHIFT, VK_O);\n            break;\n        case 'P' :\n            doType (VK_SHIFT, VK_P);\n            break;\n        case 'Q' :\n            doType (VK_SHIFT, VK_Q);\n            break;\n        case 'R' :\n            doType (VK_SHIFT, VK_R);\n            break;\n        case 'S' :\n            doType (VK_SHIFT, VK_S);\n            break;\n        case 'T' :\n            doType (VK_SHIFT, VK_T);\n            break;\n        case 'U' :\n            doType (VK_SHIFT, VK_U);\n            break;\n        case 'V' :\n            doType (VK_SHIFT, VK_V);\n            break;\n        case 'W' :\n            doType (VK_SHIFT, VK_W);\n            break;\n        case 'X' :\n            doType (VK_SHIFT, VK_X);\n            break;\n        case 'Y' :\n            doType (VK_SHIFT, VK_Y);\n            break;\n        case 'Z' :\n            doType (VK_SHIFT, VK_Z);\n            break;\n        case '`' :\n            doType (VK_BACK_QUOTE);\n            break;\n        case '0' :\n            doType (VK_0);\n            break;\n        case '1' :\n            doType (VK_1);\n            break;\n        case '2' :\n            doType (VK_2);\n            break;\n        case '3' :\n            doType (VK_3);\n            break;\n        case '4' :\n            doType (VK_4);\n            break;\n        case '5' :\n            doType (VK_5);\n            break;\n        case '6' :\n            doType (VK_6);\n            break;\n        case '7' :\n            doType (VK_7);\n            break;\n        case '8' :\n            doType (VK_8);\n            break;\n        case '9' :\n            doType (VK_9);\n            break;\n        case '-' :\n            doType (VK_MINUS);\n            break;\n        case '=' :\n            doType (VK_EQUALS);\n            break;\n        case '~' :\n            doType (VK_SHIFT, VK_BACK_QUOTE);\n            break;\n        case '!' :\n            doType (VK_EXCLAMATION_MARK);\n            break;\n        case '@' :\n            doType (VK_AT);\n            break;\n        case '#' :\n            doType (VK_NUMBER_SIGN);\n            break;\n        case '$' :\n            doType (VK_DOLLAR);\n            break;\n        case '%' :\n            doType (VK_SHIFT, VK_5);\n            break;\n        case '^' :\n            doType (VK_CIRCUMFLEX);\n            break;\n        case '&' :\n            doType (VK_AMPERSAND);\n            break;\n        case '*' :\n            doType (VK_ASTERISK);\n            break;\n        case '(' :\n            doType (VK_LEFT_PARENTHESIS);\n            break;\n        case ')' :\n            doType (VK_RIGHT_PARENTHESIS);\n            break;\n        case '_' :\n            doType (VK_UNDERSCORE);\n            break;\n        case '+' :\n            doType (VK_PLUS);\n            break;\n        case '\\t' :\n            doType (VK_TAB);\n            break;\n        case '\\n' :\n            doType (VK_ENTER);\n            break;\n        case '[' :\n            doType (VK_OPEN_BRACKET);\n            break;\n        case ']' :\n            doType (VK_CLOSE_BRACKET);\n            break;\n        case '\\\\' :\n            doType (VK_BACK_SLASH);\n            break;\n        case '{' :\n            doType (VK_SHIFT, VK_OPEN_BRACKET);\n            break;\n        case '}' :\n            doType (VK_SHIFT, VK_CLOSE_BRACKET);\n            break;\n        case '|' :\n            doType (VK_SHIFT, VK_BACK_SLASH);\n            break;\n        case ';' :\n            doType (VK_SEMICOLON);\n            break;\n        case ':' :\n            doType (VK_COLON);\n            break;\n        case '\\'' :\n            doType (VK_QUOTE);\n            break;\n        case '\"' :\n            doType (VK_QUOTEDBL);\n            break;\n        case ',' :\n            doType (VK_COMMA);\n            break;\n        case '<' :\n            doType (VK_SHIFT, VK_COMMA);\n            break;\n        case '.' :\n            doType (VK_PERIOD);\n            break;\n        case '>' :\n            doType (VK_SHIFT, VK_PERIOD);\n            break;\n        case '/' :\n            doType (VK_SLASH);\n            break;\n        case '?' :\n            doType (VK_SHIFT, VK_SLASH);\n            break;\n        case ' ' :\n            doType (VK_SPACE);\n            break;\n        default :\n            throw new IllegalArgumentException (\"Cannot type character \" + character);\n    }","status":"core-sim","id":187,"createdAt":"2023-05-16T17:36:09.729Z"},{"fileName":"Clone91.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":19,"character":24},"text":"core-sim1","codeSnippet":"keyPress (VK_ALT);\n    keyPress (VK_NUMPAD0);\n    keyRelease (VK_NUMPAD0);\n    String altCode = Integer.toString (c);\n    for (int i = 0;\n    i < altCode.length (); i ++) {\n        c = (char) (altCode.charAt (i) + '0');\n        keyPress (c);\n        keyRelease (c);\n    }\n    keyRelease (VK_ALT);","status":"core-sim","id":188,"createdAt":"2023-05-16T17:36:57.171Z"},{"fileName":"Clone91.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":320,"character":5},"text":"core-sim1","codeSnippet":"switch (character) {\n        case 'a' :\n            doType (VK_A);\n            break;\n        case 'b' :\n            doType (VK_B);\n            break;\n        case 'c' :\n            doType (VK_C);\n            break;\n        case 'd' :\n            doType (VK_D);\n            break;\n        case 'e' :\n            doType (VK_E);\n            break;\n        case 'f' :\n            doType (VK_F);\n            break;\n        case 'g' :\n            doType (VK_G);\n            break;\n        case 'h' :\n            doType (VK_H);\n            break;\n        case 'i' :\n            doType (VK_I);\n            break;\n        case 'j' :\n            doType (VK_J);\n            break;\n        case 'k' :\n            doType (VK_K);\n            break;\n        case 'l' :\n            doType (VK_L);\n            break;\n        case 'm' :\n            doType (VK_M);\n            break;\n        case 'n' :\n            doType (VK_N);\n            break;\n        case 'o' :\n            doType (VK_O);\n            break;\n        case 'p' :\n            doType (VK_P);\n            break;\n        case 'q' :\n            doType (VK_Q);\n            break;\n        case 'r' :\n            doType (VK_R);\n            break;\n        case 's' :\n            doType (VK_S);\n            break;\n        case 't' :\n            doType (VK_T);\n            break;\n        case 'u' :\n            doType (VK_U);\n            break;\n        case 'v' :\n            doType (VK_V);\n            break;\n        case 'w' :\n            doType (VK_W);\n            break;\n        case 'x' :\n            doType (VK_X);\n            break;\n        case 'y' :\n            doType (VK_Y);\n            break;\n        case 'z' :\n            doType (VK_Z);\n            break;\n        case 'A' :\n            doType (VK_SHIFT, VK_A);\n            break;\n        case 'B' :\n            doType (VK_SHIFT, VK_B);\n            break;\n        case 'C' :\n            doType (VK_SHIFT, VK_C);\n            break;\n        case 'D' :\n            doType (VK_SHIFT, VK_D);\n            break;\n        case 'E' :\n            doType (VK_SHIFT, VK_E);\n            break;\n        case 'F' :\n            doType (VK_SHIFT, VK_F);\n            break;\n        case 'G' :\n            doType (VK_SHIFT, VK_G);\n            break;\n        case 'H' :\n            doType (VK_SHIFT, VK_H);\n            break;\n        case 'I' :\n            doType (VK_SHIFT, VK_I);\n            break;\n        case 'J' :\n            doType (VK_SHIFT, VK_J);\n            break;\n        case 'K' :\n            doType (VK_SHIFT, VK_K);\n            break;\n        case 'L' :\n            doType (VK_SHIFT, VK_L);\n            break;\n        case 'M' :\n            doType (VK_SHIFT, VK_M);\n            break;\n        case 'N' :\n            doType (VK_SHIFT, VK_N);\n            break;\n        case 'O' :\n            doType (VK_SHIFT, VK_O);\n            break;\n        case 'P' :\n            doType (VK_SHIFT, VK_P);\n            break;\n        case 'Q' :\n            doType (VK_SHIFT, VK_Q);\n            break;\n        case 'R' :\n            doType (VK_SHIFT, VK_R);\n            break;\n        case 'S' :\n            doType (VK_SHIFT, VK_S);\n            break;\n        case 'T' :\n            doType (VK_SHIFT, VK_T);\n            break;\n        case 'U' :\n            doType (VK_SHIFT, VK_U);\n            break;\n        case 'V' :\n            doType (VK_SHIFT, VK_V);\n            break;\n        case 'W' :\n            doType (VK_SHIFT, VK_W);\n            break;\n        case 'X' :\n            doType (VK_SHIFT, VK_X);\n            break;\n        case 'Y' :\n            doType (VK_SHIFT, VK_Y);\n            break;\n        case 'Z' :\n            doType (VK_SHIFT, VK_Z);\n            break;\n        case '`' :\n            doType (VK_BACK_QUOTE);\n            break;\n        case '0' :\n            doType (VK_0);\n            break;\n        case '1' :\n            doType (VK_1);\n            break;\n        case '2' :\n            doType (VK_2);\n            break;\n        case '3' :\n            doType (VK_3);\n            break;\n        case '4' :\n            doType (VK_4);\n            break;\n        case '5' :\n            doType (VK_5);\n            break;\n        case '6' :\n            doType (VK_6);\n            break;\n        case '7' :\n            doType (VK_7);\n            break;\n        case '8' :\n            doType (VK_8);\n            break;\n        case '9' :\n            doType (VK_9);\n            break;\n        case '-' :\n            doType (VK_MINUS);\n            break;\n        case '=' :\n            doType (VK_EQUALS);\n            break;\n        case '~' :\n            doType (VK_BACK_QUOTE);\n            break;\n        case '!' :\n            doType (VK_SHIFT, VK_EXCLAMATION_MARK);\n            break;\n        case '@' :\n            doType (VK_SHIFT, VK_AT);\n            break;\n        case '#' :\n            doType (VK_SHIFT, VK_NUMBER_SIGN);\n            break;\n        case '$' :\n            doType (VK_SHIFT, VK_DOLLAR);\n            break;\n        case '%' :\n            doType (VK_SHIFT, VK_5);\n            break;\n        case '^' :\n            doType (VK_SHIFT, VK_CIRCUMFLEX);\n            break;\n        case '&' :\n            doType (VK_SHIFT, VK_AMPERSAND);\n            break;\n        case '*' :\n            doType (VK_SHIFT, VK_ASTERISK);\n            break;\n        case '(' :\n            doType (VK_LEFT_PARENTHESIS);\n            break;\n        case ')' :\n            doType (VK_RIGHT_PARENTHESIS);\n            break;\n        case '_' :\n            doType (VK_SHIFT, VK_UNDERSCORE);\n            break;\n        case '+' :\n            doType (VK_SHIFT, VK_PLUS);\n            break;\n        case '\\t' :\n            doType (VK_TAB);\n            break;\n        case '\\n' :\n            doType (VK_ENTER);\n            break;\n        case '[' :\n            doType (VK_OPEN_BRACKET);\n            break;\n        case ']' :\n            doType (VK_CLOSE_BRACKET);\n            break;\n        case '\\\\' :\n            doType (VK_BACK_SLASH);\n            break;\n        case '{' :\n            doType (VK_SHIFT, VK_OPEN_BRACKET);\n            break;\n        case '}' :\n            doType (VK_SHIFT, VK_CLOSE_BRACKET);\n            break;\n        case '|' :\n            doType (VK_SHIFT, VK_BACK_SLASH);\n            break;\n        case ';' :\n            doType (VK_SEMICOLON);\n            break;\n        case ':' :\n            doType (VK_SHIFT, VK_COLON);\n            break;\n        case '\\'' :\n            doType (VK_QUOTE);\n            break;\n        case '\"' :\n            doType (VK_SHIFT, VK_QUOTEDBL);\n            break;\n        case ',' :\n            doType (VK_COMMA);\n            break;\n        case '<' :\n            doType (VK_SHIFT, VK_COMMA);\n            break;\n        case '.' :\n            doType (VK_PERIOD);\n            break;\n        case '>' :\n            doType (VK_SHIFT, VK_PERIOD);\n            break;\n        case '/' :\n            doType (VK_SLASH);\n            break;\n        case '?' :\n            doType (VK_SHIFT, VK_SLASH);\n            break;\n        case ' ' :\n            doType (VK_SPACE);\n            break;\n        case '\\b' :\n            doType (VK_BACK_SPACE);\n            break;\n        default :\n            throw new IllegalArgumentException (\"Cannot type character \" + character);\n    }","status":"core-sim","id":189,"createdAt":"2023-05-16T17:37:08.553Z"},{"fileName":"Clone98.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":23,"character":9},"text":"core-sim1","codeSnippet":"for (int i = 0, len = chars.length ();\n    i < len; i ++) {\n        char c = chars.charAt (i);\n        AWTKeyStroke keyStroke = getKeyStroke (c);\n        int keyCode = keyStroke.getKeyCode ();\n        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);\n        if (shift) {\n            robot.keyPress (KeyEvent.VK_SHIFT);\n        }\n        robot.keyPress (keyCode);\n        robot.keyRelease (keyCode);\n        if (shift) {\n            robot.keyRelease (KeyEvent.VK_SHIFT);\n        }","status":"core-sim","id":190,"createdAt":"2023-05-16T17:38:22.795Z"},{"fileName":"Clone98.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":5},"text":"core-sim1","codeSnippet":"}","status":"core-sim","id":191,"createdAt":"2023-05-16T17:38:34.132Z"},{"fileName":"Clone98.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":25},"text":"noncore-diff1","codeSnippet":"ms = ms > 0 ? ms : 0;","status":"noncore-diff","id":192,"createdAt":"2023-05-16T17:38:42.060Z"},{"fileName":"Clone98.java","fileLine":24,"positionStart":{"line":24,"character":8},"positionEnd":{"line":26,"character":9},"text":"noncore-diff1","codeSnippet":"if (ms > 0) {\n            robot.delay (ms);\n        }","status":"noncore-diff","id":193,"createdAt":"2023-05-16T17:38:54.730Z"},{"fileName":"Clone98.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":325,"character":5},"text":"core-sim1","codeSnippet":"switch (character) {\n        case 'a' :\n            doType (VK_A);\n            break;\n        case 'b' :\n            doType (VK_B);\n            break;\n        case 'c' :\n            doType (VK_C);\n            break;\n        case 'd' :\n            doType (VK_D);\n            break;\n        case 'e' :\n            doType (VK_E);\n            break;\n        case 'f' :\n            doType (VK_F);\n            break;\n        case 'g' :\n            doType (VK_G);\n            break;\n        case 'h' :\n            doType (VK_H);\n            break;\n        case 'i' :\n            doType (VK_I);\n            break;\n        case 'j' :\n            doType (VK_J);\n            break;\n        case 'k' :\n            doType (VK_K);\n            break;\n        case 'l' :\n            doType (VK_L);\n            break;\n        case 'm' :\n            doType (VK_M);\n            break;\n        case 'n' :\n            doType (VK_N);\n            break;\n        case 'o' :\n            doType (VK_O);\n            break;\n        case 'p' :\n            doType (VK_P);\n            break;\n        case 'q' :\n            doType (VK_Q);\n            break;\n        case 'r' :\n            doType (VK_R);\n            break;\n        case 's' :\n            doType (VK_S);\n            break;\n        case 't' :\n            doType (VK_T);\n            break;\n        case 'u' :\n            doType (VK_U);\n            break;\n        case 'v' :\n            doType (VK_V);\n            break;\n        case 'w' :\n            doType (VK_W);\n            break;\n        case 'x' :\n            doType (VK_X);\n            break;\n        case 'y' :\n            doType (VK_Y);\n            break;\n        case 'z' :\n            doType (VK_Z);\n            break;\n        case 'A' :\n            doType (VK_SHIFT, VK_A);\n            break;\n        case 'B' :\n            doType (VK_SHIFT, VK_B);\n            break;\n        case 'C' :\n            doType (VK_SHIFT, VK_C);\n            break;\n        case 'D' :\n            doType (VK_SHIFT, VK_D);\n            break;\n        case 'E' :\n            doType (VK_SHIFT, VK_E);\n            break;\n        case 'F' :\n            doType (VK_SHIFT, VK_F);\n            break;\n        case 'G' :\n            doType (VK_SHIFT, VK_G);\n            break;\n        case 'H' :\n            doType (VK_SHIFT, VK_H);\n            break;\n        case 'I' :\n            doType (VK_SHIFT, VK_I);\n            break;\n        case 'J' :\n            doType (VK_SHIFT, VK_J);\n            break;\n        case 'K' :\n            doType (VK_SHIFT, VK_K);\n            break;\n        case 'L' :\n            doType (VK_SHIFT, VK_L);\n            break;\n        case 'M' :\n            doType (VK_SHIFT, VK_M);\n            break;\n        case 'N' :\n            doType (VK_SHIFT, VK_N);\n            break;\n        case 'O' :\n            doType (VK_SHIFT, VK_O);\n            break;\n        case 'P' :\n            doType (VK_SHIFT, VK_P);\n            break;\n        case 'Q' :\n            doType (VK_SHIFT, VK_Q);\n            break;\n        case 'R' :\n            doType (VK_SHIFT, VK_R);\n            break;\n        case 'S' :\n            doType (VK_SHIFT, VK_S);\n            break;\n        case 'T' :\n            doType (VK_SHIFT, VK_T);\n            break;\n        case 'U' :\n            doType (VK_SHIFT, VK_U);\n            break;\n        case 'V' :\n            doType (VK_SHIFT, VK_V);\n            break;\n        case 'W' :\n            doType (VK_SHIFT, VK_W);\n            break;\n        case 'X' :\n            doType (VK_SHIFT, VK_X);\n            break;\n        case 'Y' :\n            doType (VK_SHIFT, VK_Y);\n            break;\n        case 'Z' :\n            doType (VK_SHIFT, VK_Z);\n            break;\n        case '`' :\n            doType (VK_BACK_QUOTE);\n            break;\n        case '0' :\n            doType (VK_0);\n            break;\n        case '1' :\n            doType (VK_1);\n            break;\n        case '2' :\n            doType (VK_2);\n            break;\n        case '3' :\n            doType (VK_3);\n            break;\n        case '4' :\n            doType (VK_4);\n            break;\n        case '5' :\n            doType (VK_5);\n            break;\n        case '6' :\n            doType (VK_6);\n            break;\n        case '7' :\n            doType (VK_7);\n            break;\n        case '8' :\n            doType (VK_8);\n            break;\n        case '9' :\n            doType (VK_9);\n            break;\n        case '-' :\n            doType (VK_MINUS);\n            break;\n        case '=' :\n            doType (VK_EQUALS);\n            break;\n        case '~' :\n            doType (VK_SHIFT, VK_BACK_QUOTE);\n            break;\n        case '!' :\n            doType (VK_EXCLAMATION_MARK);\n            break;\n        case '@' :\n            doType (VK_AT);\n            break;\n        case '#' :\n            doType (VK_NUMBER_SIGN);\n            break;\n        case '$' :\n            doType (VK_DOLLAR);\n            break;\n        case '%' :\n            doType (VK_SHIFT, VK_5);\n            break;\n        case '^' :\n            doType (VK_CIRCUMFLEX);\n            break;\n        case '&' :\n            doType (VK_AMPERSAND);\n            break;\n        case '*' :\n            doType (VK_ASTERISK);\n            break;\n        case '(' :\n            doType (VK_LEFT_PARENTHESIS);\n            break;\n        case ')' :\n            doType (VK_RIGHT_PARENTHESIS);\n            break;\n        case '_' :\n            doType (VK_UNDERSCORE);\n            break;\n        case '+' :\n            doType (VK_PLUS);\n            break;\n        case '\\t' :\n            doType (VK_TAB);\n            break;\n        case '\\n' :\n            doType (VK_ENTER);\n            break;\n        case '[' :\n            doType (VK_OPEN_BRACKET);\n            break;\n        case ']' :\n            doType (VK_CLOSE_BRACKET);\n            break;\n        case '\\\\' :\n            doType (VK_BACK_SLASH);\n            break;\n        case '{' :\n            doType (VK_SHIFT, VK_OPEN_BRACKET);\n            break;\n        case '}' :\n            doType (VK_SHIFT, VK_CLOSE_BRACKET);\n            break;\n        case '|' :\n            doType (VK_SHIFT, VK_BACK_SLASH);\n            break;\n        case ';' :\n            doType (VK_SEMICOLON);\n            break;\n        case ':' :\n            doType (VK_COLON);\n            break;\n        case '\\'' :\n            doType (VK_QUOTE);\n            break;\n        case '\"' :\n            doType (VK_QUOTEDBL);\n            break;\n        case ',' :\n            doType (VK_COMMA);\n            break;\n        case '<' :\n            doType (VK_SHIFT, VK_COMMA);\n            break;\n        case '.' :\n            doType (VK_PERIOD);\n            break;\n        case '>' :\n            doType (VK_SHIFT, VK_PERIOD);\n            break;\n        case '/' :\n            doType (VK_SLASH);\n            break;\n        case '?' :\n            doType (VK_SHIFT, VK_SLASH);\n            break;\n        case ' ' :\n            doType (VK_SPACE);\n            break;\n        default :\n            throw new IllegalArgumentException (\"Cannot type character \" + character);\n    }","status":"core-sim","id":194,"createdAt":"2023-05-16T17:39:08.010Z"},{"fileName":"Clone107.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":19,"character":28},"text":"core-diff1","codeSnippet":"try {\n        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());\n    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {\n    }\n    JFrame frame = new JFrame ();\n    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    frame.setLayout (new BorderLayout ());\n    frame.add (new BlinkPane ());\n    frame.pack ();\n    frame.setLocationRelativeTo (null);\n    frame.setVisible (true);","status":"core-diff","id":199,"createdAt":"2023-05-17T15:05:02.472Z"},{"fileName":"Clone107.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":42,"character":6},"text":"core-diff2","codeSnippet":"for (int index = 0;\n    index < 10; index ++) {\n        if (index % 2 == 0) {\n            SwingUtilities.invokeLater (blinkOn);\n        } else {\n            SwingUtilities.invokeLater (blinkOff);\n        }\n        try {\n            Thread.sleep (125);\n        } catch (InterruptedException ex) {\n        }\n    }\n    SwingUtilities.invokeLater (new Runnable () {\n        @Override\n        public void run () {\n            blinkPane.reset ();\n        }}\n    );","status":"core-diff","id":200,"createdAt":"2023-05-17T15:06:07.312Z"},{"fileName":"Clone107.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":24,"character":50},"text":"noncore-diff1","codeSnippet":"Blink blinkOn = new Blink (blinkPane, true);\n    Blink blinkOff = new Blink (blinkPane, false);","status":"noncore-diff","id":201,"createdAt":"2023-05-17T15:06:16.045Z"},{"fileName":"Clone109.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":27},"text":"noncore-sim1","codeSnippet":"final File sysTempDir =","status":"noncore-sim","id":202,"createdAt":"2023-05-17T15:08:34.249Z"},{"fileName":"Clone109.java","fileLine":9,"positionStart":{"line":9,"character":38},"positionEnd":{"line":9,"character":75},"text":"noncore-sim1","codeSnippet":"System.getProperty (\"java.io.tmpdir\")","status":"noncore-sim","id":203,"createdAt":"2023-05-17T15:08:51.697Z"},{"fileName":"Clone109.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":29,"character":70},"text":"noncore-sim1","codeSnippet":"final String baseTempPath = System.getProperty (\"java.io.tmpdir\");","status":"noncore-sim","id":204,"createdAt":"2023-05-17T15:09:00.990Z"},{"fileName":"Clone109.java","fileLine":9,"positionStart":{"line":9,"character":28},"positionEnd":{"line":9,"character":38},"text":"noncore-diff1","codeSnippet":"new File (","status":"noncore-diff","id":205,"createdAt":"2023-05-17T15:09:13.858Z"},{"fileName":"Clone109.java","fileLine":9,"positionStart":{"line":9,"character":75},"positionEnd":{"line":9,"character":76},"text":"noncore-diff1","codeSnippet":")","status":"noncore-diff","id":206,"createdAt":"2023-05-17T15:09:26.833Z"},{"fileName":"Clone109.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":32,"character":84},"text":"noncore-sim2","codeSnippet":"File tempDir = new File (baseTempPath + File.separator + \"tempDir\" + randomInt);","status":"noncore-sim","id":208,"createdAt":"2023-05-17T15:10:17.905Z"},{"fileName":"Clone109.java","fileLine":19,"positionStart":{"line":19,"character":8},"positionEnd":{"line":19,"character":52},"text":"noncore-sim2","codeSnippet":"newTempDir = new File (sysTempDir, dirName);","status":"noncore-sim","id":209,"createdAt":"2023-05-17T15:10:31.082Z"},{"fileName":"Clone109.java","fileLine":20,"positionStart":{"line":20,"character":6},"positionEnd":{"line":23,"character":5},"text":"noncore-sim3","codeSnippet":"while (newTempDir.exists ());\n    if (newTempDir.mkdirs ()) {\n        return newTempDir;\n    }","status":"noncore-sim","id":210,"createdAt":"2023-05-17T15:10:44.634Z"},{"fileName":"Clone109.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":35,"character":5},"text":"noncore-sim3","codeSnippet":"if (tempDir.exists () == false) {\n        tempDir.mkdir ();\n    }","status":"noncore-sim","id":211,"createdAt":"2023-05-17T15:10:55.510Z"},{"fileName":"Clone109.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":12,"character":25},"text":"noncore-diff1","codeSnippet":"File newTempDir;\n    final int maxAttempts = 9;\n    int attemptCount = 0;","status":"noncore-diff","id":212,"createdAt":"2023-05-17T15:11:03.351Z"},{"fileName":"Clone109.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":18,"character":56},"text":"core-diff1","codeSnippet":"do {\n        attemptCount ++;\n        if (attemptCount > maxAttempts) {\n            throw new IOException (\"The highly improbable has occurred! Failed to \" + \"create a unique temporary directory after \" + maxAttempts + \" attempts.\");\n        }\n        String dirName = UUID.randomUUID ().toString ();","status":"core-diff","id":213,"createdAt":"2023-05-17T15:11:14.975Z"},{"fileName":"Clone109.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":5},"text":"core-diff1","codeSnippet":"}","status":"core-diff","id":214,"createdAt":"2023-05-17T15:11:40.675Z"},{"fileName":"Clone109.java","fileLine":23,"positionStart":{"line":23,"character":6},"positionEnd":{"line":25,"character":5},"text":"noncore-diff2","codeSnippet":"else {\n        throw new IOException (\"Failed to create temp dir named \" + newTempDir.getAbsolutePath ());\n    }","status":"noncore-diff","id":215,"createdAt":"2023-05-17T15:11:53.500Z"},{"fileName":"Clone109.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":31,"character":40},"text":"core-diff2","codeSnippet":"Random rand = new Random ();\n    int randomInt = 1 + rand.nextInt ();","status":"core-diff","id":216,"createdAt":"2023-05-17T15:12:14.232Z"},{"fileName":"Clone109.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":37,"character":19},"text":"core-diff3","codeSnippet":"tempDir.deleteOnExit ();\n    return tempDir;","status":"core-diff","id":217,"createdAt":"2023-05-17T15:12:22.992Z"},{"fileName":"Clone125.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":30},"text":"core-sim1","codeSnippet":"if (len <= text.length ())","status":"core-sim","id":218,"createdAt":"2023-05-17T15:13:05.637Z"},{"fileName":"Clone125.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":17,"character":8},"text":"core-sim1","codeSnippet":"if (","status":"core-sim","id":219,"createdAt":"2023-05-17T15:13:15.341Z"},{"fileName":"Clone125.java","fileLine":17,"positionStart":{"line":17,"character":21},"positionEnd":{"line":17,"character":41},"text":"core-sim1","codeSnippet":"size <= s.length ())","status":"core-sim","id":220,"createdAt":"2023-05-17T15:13:23.395Z"},{"fileName":"Clone125.java","fileLine":17,"positionStart":{"line":17,"character":8},"positionEnd":{"line":17,"character":20},"text":"noncore-diff1","codeSnippet":"s == null ||","status":"noncore-diff","id":221,"createdAt":"2023-05-17T15:13:32.217Z"},{"fileName":"Clone125.java","fileLine":9,"positionStart":{"line":9,"character":31},"positionEnd":{"line":9,"character":62},"text":"core-diff1","codeSnippet":"return text.substring (0, len);","status":"core-diff","id":222,"createdAt":"2023-05-17T15:13:58.364Z"},{"fileName":"Clone125.java","fileLine":17,"positionStart":{"line":17,"character":42},"positionEnd":{"line":17,"character":51},"text":"core-diff1","codeSnippet":"return s;","status":"core-diff","id":223,"createdAt":"2023-05-17T15:14:05.909Z"},{"fileName":"Clone125.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":18,"character":48},"text":"noncore-diff2","codeSnippet":"StringBuilder sb = new StringBuilder (size);","status":"noncore-diff","id":224,"createdAt":"2023-05-17T15:15:06.733Z"},{"fileName":"Clone125.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":27,"character":26},"text":"core-sim2","codeSnippet":"for (int i = 0;\n    i < (size - s.length ()) / 2; i ++) {\n        sb.append (pad);\n    }\n    sb.append (s);\n    while (sb.length () < size) {\n        sb.append (pad);\n    }\n    return sb.toString ();","status":"core-sim","id":225,"createdAt":"2023-05-17T15:15:46.239Z"},{"fileName":"Clone125.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":13,"character":71},"text":"core-sim2","codeSnippet":"int before = (len - text.length ()) / 2;\n    if (before == 0) return String.format (\"%-\" + len + \"s\", text);\n    int rest = len - before;\n    return String.format (\"%\" + before + \"s%-\" + rest + \"s\", \"\", text);","status":"core-sim","id":226,"createdAt":"2023-05-17T15:16:01.828Z"},{"fileName":"Clone127.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":23,"character":39},"text":"core-sim1","codeSnippet":"if (b == 0) return 1;\n    if (b == 1) return a;\n    if (isEven (b)) return pow (a * a, b / 2);\n    else return a * pow (a * a, b / 2);","status":"core-sim","id":227,"createdAt":"2023-05-17T15:18:12.474Z"},{"fileName":"Clone127.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":16,"character":15},"text":"core-sim1","codeSnippet":"int i1 = 31 - Integer.numberOfLeadingZeros (p);\n    for (int i = i1;\n    i >= 0; -- i) {\n        res *= res;\n        if ((p & (1 << i)) > 0) res *= a;\n    }\n    return res;","status":"core-sim","id":228,"createdAt":"2023-05-17T15:18:26.482Z"},{"fileName":"Clone127.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":16},"text":"noncore-sim1","codeSnippet":"int res = 1;","status":"noncore-sim","id":229,"createdAt":"2023-05-17T15:18:36.287Z"},{"fileName":"Clone131.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":32,"character":57},"text":"core-diff1","codeSnippet":"double mon = getExpensesForDay (myScanner, \"Monday\");\n    double tues = getExpensesForDay (myScanner, \"Tuesday\");\n    double wed = getExpensesForDay (myScanner, \"Wednesday\");\n    double thurs = getExpensesForDay (myScanner, \"Thursday\");\n    double fri = getExpensesForDay (myScanner, \"Friday\");\n    double sat = getExpensesForDay (myScanner, \"Saturday\");\n    double sun = getExpensesForDay (myScanner, \"Sunday\");","status":"core-diff","id":231,"createdAt":"2023-05-17T15:21:48.009Z"},{"fileName":"Clone131.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":20,"character":22},"text":"core-diff1","codeSnippet":"do {\n        try {\n            System.out.print (\"Expenses for Monday: \");\n            mon = myScanner.nextDouble ();\n        } catch (Exception e) {\n            mon = - 1;\n            myScanner.nextLine ();\n        }\n    } while (mon < 0);","status":"core-diff","id":232,"createdAt":"2023-05-17T15:22:05.137Z"},{"fileName":"Clone131.java","fileLine":21,"positionStart":{"line":21,"character":3},"positionEnd":{"line":21,"character":29},"text":"noncore-diff1","codeSnippet":" System.out.println (mon);","status":"noncore-diff","id":233,"createdAt":"2023-05-17T15:22:22.774Z"},{"fileName":"Clone131.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":40},"text":"noncore-sim1","codeSnippet":"Scanner myScanner;\n    myScanner = new Scanner (System.in);","status":"noncore-sim","id":234,"createdAt":"2023-05-17T15:22:42.627Z"},{"fileName":"Clone131.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":48},"text":"noncore-sim1","codeSnippet":"Scanner myScanner = new Scanner (System.in);","status":"noncore-sim","id":235,"createdAt":"2023-05-17T15:22:48.997Z"},{"fileName":"Clone131.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":48},"text":"noncore-diff2","codeSnippet":"double mon, tues, wed, thurs, fri, sat, sun;","status":"noncore-diff","id":236,"createdAt":"2023-05-17T15:22:58.201Z"},{"fileName":"Clone132.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":27,"character":51},"text":"core-diff1","codeSnippet":"String str1 = \"\";\n    String str2 = null;\n    String str3 = \"Starts with upper case\";\n    String str4 = \"starts with lower case\";\n    System.out.println (startWithUpperCase (str1));\n    System.out.println (startWithUpperCase (str2));\n    System.out.println (startWithUpperCase (str3));\n    System.out.println (startWithUpperCase (str4));","status":"core-diff","id":237,"createdAt":"2023-05-17T15:24:19.924Z"},{"fileName":"Clone132.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":16,"character":5},"text":"core-diff2","codeSnippet":"Scanner kb = new Scanner (System.in);\n    String text = kb.next ();\n    if (null == text || text.isEmpty ()) {\n        System.out.println (\"Text empty\");\n    } else if (text.charAt (0) == (text.toUpperCase ().charAt (0))) {\n        System.out.println (\"First letter in word \" + text + \" is upper case\");\n    }","status":"core-diff","id":238,"createdAt":"2023-05-17T15:24:43.080Z"},{"fileName":"Clone132.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":38},"text":"noncore-diff1","codeSnippet":"System.out.println (\"Enter name\");","status":"noncore-diff","id":239,"createdAt":"2023-05-17T15:25:44.046Z"},{"fileName":"Clone134.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":14,"character":6},"text":"core-diff1","codeSnippet":"SwingUtilities.invokeLater (new Runnable () {\n        public void run () {\n            JFrame frame = new FrameDemo ();\n            frame.setVisible (true);\n        }}\n    );","status":"core-diff","id":240,"createdAt":"2023-05-17T15:27:12.960Z"},{"fileName":"Clone134.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":45,"character":39},"text":"core-diff2","codeSnippet":"JFrame frame = new JFrame ();\n    frame.setDefaultCloseOperation (WindowConstants.EXIT_ON_CLOSE);\n    frame.getContentPane ().setLayout (new BorderLayout (0, 0));\n    JPanel centerPanel = new JPanel ();\n    centerPanel.setPreferredSize (new Dimension (300, 200));\n    centerPanel.setBackground (Color.green);\n    centerPanel.setCursor (new Cursor (java.awt.Cursor.HAND_CURSOR));\n    frame.getContentPane ().add (centerPanel);\n    JPanel northPanel = new JPanel ();\n    northPanel.setBackground (Color.RED);\n    northPanel.setForeground (Color.BLACK);\n    northPanel.setPreferredSize (new Dimension (0, 150));\n    frame.getContentPane ().add (northPanel, BorderLayout.NORTH);\n    JPanel westPanel = new JPanel ();\n    westPanel.setBackground (Color.MAGENTA);\n    westPanel.setPreferredSize (new Dimension (200, 0));\n    frame.getContentPane ().add (westPanel, BorderLayout.WEST);\n    JPanel southPanel = new JPanel ();\n    southPanel.setBackground (Color.YELLOW);\n    southPanel.setPreferredSize (new Dimension (0, 150));\n    frame.getContentPane ().add (southPanel, BorderLayout.SOUTH);\n    JPanel eastPanel = new JPanel ();\n    eastPanel.setBackground (Color.BLUE);\n    eastPanel.setPreferredSize (new Dimension (200, 0));\n    frame.getContentPane ().add (eastPanel, BorderLayout.EAST);\n    frame.pack ();\n    frame.setVisible (true);\n    frame.setLocationRelativeTo (null);","status":"core-diff","id":241,"createdAt":"2023-05-17T15:27:24.867Z"},{"fileName":"Clone136.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":34},"text":"noncore-sim1","codeSnippet":"super.onActivityResult (requestCode, resultCode, data);\n    if (resultCode == RESULT_OK) {","status":"noncore-sim","id":242,"createdAt":"2023-05-17T15:29:02.543Z"},{"fileName":"Clone136.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":18,"character":5},"text":"noncore-sim1","codeSnippet":"}","status":"noncore-sim","id":243,"createdAt":"2023-05-17T15:29:13.502Z"},{"fileName":"Clone136.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":24,"character":8},"text":"noncore-sim1","codeSnippet":"super.onActivityResult (requestCode, resultCode, data);\n    if (","status":"noncore-sim","id":244,"createdAt":"2023-05-17T15:29:27.723Z"},{"fileName":"Clone136.java","fileLine":24,"positionStart":{"line":24,"character":40},"positionEnd":{"line":24,"character":75},"text":"noncore-sim1","codeSnippet":"resultCode == Activity.RESULT_OK) {","status":"noncore-sim","id":245,"createdAt":"2023-05-17T15:29:38.197Z"},{"fileName":"Clone136.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":30,"character":5},"text":"noncore-sim1","codeSnippet":"}","status":"noncore-sim","id":246,"createdAt":"2023-05-17T15:29:49.538Z"},{"fileName":"Clone136.java","fileLine":24,"positionStart":{"line":24,"character":8},"positionEnd":{"line":24,"character":40},"text":"noncore-diff1","codeSnippet":"requestCode == IMAGE_CAPTURE && ","status":"noncore-diff","id":247,"createdAt":"2023-05-17T15:30:01.856Z"},{"fileName":"Clone136.java","fileLine":11,"positionStart":{"line":11,"character":8},"positionEnd":{"line":17,"character":9},"text":"core-diff1","codeSnippet":"switch (requestCode) {\n            case SELECT_IMAGE :\n                String imagePath = getPath (data.getData ());\n                Savingimagepath (imagePath);\n                img.setImageDrawable (Drawable.createFromPath (imagePath));\n                break;\n        }","status":"core-diff","id":248,"createdAt":"2023-05-17T15:31:07.371Z"},{"fileName":"Clone136.java","fileLine":25,"positionStart":{"line":25,"character":8},"positionEnd":{"line":29,"character":26},"text":"core-diff1","codeSnippet":"DBHelper dbHelper = new DBHelper (this);\n        SQLiteDatabase sql = dbHelper.getWritableDatabase ();\n        sql.execSQL (\"insert statement for inserting path to database\");\n        sql.close ();\n        dbHelper.close ();","status":"core-diff","id":249,"createdAt":"2023-05-17T15:31:15.660Z"},{"fileName":"Clone138.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":29,"character":5},"text":"core-diff1","codeSnippet":"lock.lock ();\n    try {\n        if (! queues.containsKey (producer)) {\n            queues.put (producer, new PriorityBlockingQueue < > ());\n        }\n        added.signalAll ();\n        return queues.get (producer).add (item);\n    } finally {\n        lock.unlock ();\n    }","status":"core-diff","id":250,"createdAt":"2023-05-17T15:34:36.409Z"},{"fileName":"Clone138.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":16,"character":14},"text":"core-diff2","codeSnippet":"Queue < M > queue = threadQueue.get ();\n    if (queue == null) {\n        queue = new LinkedList < > ();\n        queues.add (queue);\n        threadQueue.set (queue);\n    }\n    queue.add (msg);\n    notify ();","status":"core-diff","id":251,"createdAt":"2023-05-17T15:34:49.498Z"},{"fileName":"Clone142.java","fileLine":21,"positionStart":{"line":21,"character":12},"positionEnd":{"line":29,"character":13},"text":"core-sim1","codeSnippet":"int maxX = scrn.width - dialog.getWidth ();\n            int maxY = scrn.height - dialog.getHeight ();\n            if (x < maxX && y < maxY) {\n                x ++;\n                y ++;\n                dialog.setLocation (x, y);\n            } else {\n                ((Timer) e.getSource ()).stop ();\n            }","status":"core-sim","id":252,"createdAt":"2023-05-17T15:35:48.558Z"},{"fileName":"Clone142.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":44,"character":5},"text":"core-sim2","codeSnippet":"int maxX = scrn.width - dialog.getWidth ();\n    int maxY = scrn.height - dialog.getHeight ();\n    if (x < maxX && y < maxY) {\n        x ++;\n        y ++;\n        dialog.setLocation (x, y);\n    } else {\n        ((Timer) e.getSource ()).stop ();\n    }","status":"core-sim","id":253,"createdAt":"2023-05-17T15:36:02.767Z"},{"fileName":"Clone142.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":20,"character":53},"text":"noncore-diff1","codeSnippet":"JFrame owner = (JFrame) SwingUtilities.getWindowAncestor ((Component) e.getSource ());\n    final JDialog dialog = new JDialog (owner, \"Dialog\", ModalityType.APPLICATION_MODAL);\n    dialog.getContentPane ().add (panel);\n    dialog.pack ();\n    dialog.setLocation (0, 0);\n    int delay = 20;\n    new Timer (delay, new ActionListener () {\n        int x = 0;\n        int y = 0;\n        Dimension scrn = Toolkit.getDefaultToolkit ().getScreenSize ();\n        @Override\n        public void actionPerformed (ActionEvent e) {","status":"noncore-diff","id":254,"createdAt":"2023-05-17T15:36:26.329Z"},{"fileName":"Clone142.java","fileLine":30,"positionStart":{"line":30,"character":8},"positionEnd":{"line":32,"character":29},"text":"noncore-diff1","codeSnippet":"}}\n    ).start ();\n    dialog.setVisible (true);","status":"noncore-diff","id":255,"createdAt":"2023-05-17T15:36:37.179Z"},{"fileName":"Clone154.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":32,"character":5},"text":"core-sim1","codeSnippet":"try {\n        clazz = Class.forName (exClassName);\n    } catch (ClassNotFoundException cnfe) {\n        throw new InternalError (exClassName, cnfe);\n    }","status":"core-sim","id":256,"createdAt":"2023-05-17T15:41:26.987Z"},{"fileName":"Clone154.java","fileLine":12,"positionStart":{"line":12,"character":71},"positionEnd":{"line":12,"character":119},"text":"core-sim1","codeSnippet":"Class.forName (exceptionMapping.getClassName ())","status":"core-sim","id":257,"createdAt":"2023-05-17T15:41:51.882Z"},{"fileName":"Clone154.java","fileLine":11,"positionStart":{"line":11,"character":7},"positionEnd":{"line":11,"character":13},"text":"core-sim1","codeSnippet":" try {","status":"core-sim","id":258,"createdAt":"2023-05-17T15:42:02.548Z"},{"fileName":"Clone154.java","fileLine":20,"positionStart":{"line":20,"character":8},"positionEnd":{"line":22,"character":9},"text":"core-sim1","codeSnippet":"} catch (ClassNotFoundException e) {\n            e.printStackTrace ();\n        }","status":"core-sim","id":259,"createdAt":"2023-05-17T15:42:16.905Z"},{"fileName":"Clone154.java","fileLine":12,"positionStart":{"line":12,"character":12},"positionEnd":{"line":12,"character":70},"text":"noncore-diff1","codeSnippet":"Class < Throwable > exceptionClass = (Class < Throwable >)","status":"noncore-diff","id":260,"createdAt":"2023-05-17T15:42:38.092Z"},{"fileName":"Clone154.java","fileLine":13,"positionStart":{"line":13,"character":12},"positionEnd":{"line":19,"character":13},"text":"noncore-diff2","codeSnippet":"try {\n                throw exceptionClass.cast (exceptionClass.newInstance ());\n            } catch (InstantiationException e) {\n                e.printStackTrace ();\n            } catch (IllegalAccessException e) {\n                e.printStackTrace ();\n            }","status":"noncore-diff","id":261,"createdAt":"2023-05-17T15:42:50.154Z"},{"fileName":"Clone154.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":39,"character":5},"text":"noncore-diff3","codeSnippet":"if (CheckedException.class.isAssignableFrom (clazz)) {\n        throw newException (clazz.asSubclass (CheckedException.class));\n    } else if (UncheckedException.class.isAssignableFrom (clazz)) {\n        throw newException (clazz.asSubclass (UncheckedException.class));\n    } else {\n        throw new InternalError (exClassName + \" is not a valid exception\");\n    }","status":"noncore-diff","id":262,"createdAt":"2023-05-17T15:42:58.946Z"},{"fileName":"Clone154.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":35},"text":"noncore-diff4","codeSnippet":"ExceptionMapping exceptionMapping = exceptionMappings.getExceptionMappings ().get (key);\n    if (exceptionMapping != null) {","status":"noncore-diff","id":263,"createdAt":"2023-05-17T15:43:19.854Z"},{"fileName":"Clone154.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":5},"text":"noncore-diff4","codeSnippet":"}","status":"noncore-diff","id":264,"createdAt":"2023-05-17T15:43:34.440Z"},{"fileName":"Clone154.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":22},"text":"noncore-diff5","codeSnippet":"Class < ? > clazz;","status":"noncore-diff","id":265,"createdAt":"2023-05-17T15:43:43.007Z"},{"fileName":"Clone159.java","fileLine":9,"positionStart":{"line":9,"character":3},"positionEnd":{"line":11,"character":52},"text":"noncore-sim1","codeSnippet":" String firstName = firstNameTextField.getText ();\n    String lastName = lastNameTextField.getText ();\n    String emailAddress = emailTextField.getText ();","status":"noncore-sim","id":266,"createdAt":"2023-05-17T16:05:12.048Z"},{"fileName":"Clone159.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":21,"character":52},"text":"core-sim1","codeSnippet":"String firstName = firstNameTextField.getText ();\n    String lastName = lastNameTextField.getText ();\n    String emailAddress = emailTextField.getText ();","status":"core-sim","id":267,"createdAt":"2023-05-17T16:05:18.896Z"},{"fileName":"Clone159.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":15,"character":5},"text":"core-sim1","codeSnippet":"if (isNameValid (firstName, \"First name\") && isNameValid (lastName, \"Last name\") && isEmailValid (emailAddress, \"Email address\")) {\n        personArrayList.add (new Person (firstName, lastName, emailAddress));\n        System.out.println (\"Person added!\");\n    }","status":"core-sim","id":268,"createdAt":"2023-05-17T16:05:26.903Z"},{"fileName":"Clone159.java","fileLine":22,"positionStart":{"line":22,"character":3},"positionEnd":{"line":42,"character":5},"text":"core-sim1","codeSnippet":" boolean valid = true;\n    if (firstName.equals (\"\")) {\n        System.out.println (\"First Name is missing\");\n        valid = false;\n    }\n    if (lastName.equals (\"\")) {\n        System.out.println (\"Last Name is missing\");\n        valid = false;\n    }\n    if (emailAddress.equals (\"\")) {\n        System.out.println (\"E-Mail address is missing\");\n        valid = false;\n    }\n    if (! Email.isValid (emailAddress)) {\n        System.out.println (\"E-Mail address is invalid\");\n        valid = false;\n    }\n    if (valid) {\n        personArrayList.add (new Person (firstName, lastName, emailAddress));\n        System.out.println (\"Person added!\");\n    }","status":"core-sim","id":269,"createdAt":"2023-05-17T16:05:34.209Z"},{"fileName":"Clone162.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":31,"character":6},"text":"core-diff1","codeSnippet":"final Dimension screenSize = Toolkit.getDefaultToolkit ().getScreenSize ();\n    final BufferedImage screen = robot.createScreenCapture (new Rectangle (screenSize));\n    SwingUtilities.invokeLater (new Runnable () {\n        public void run () {\n            JLabel screenLabel = new JLabel (new ImageIcon (screen));\n            JScrollPane screenScroll = new JScrollPane (screenLabel);\n            screenScroll.setPreferredSize (new Dimension ((int) (screenSize.getWidth () / 2), (int) (screenSize.getHeight () / 2)));\n            final Point pointOfInterest = new Point ();\n            JPanel panel = new JPanel (new BorderLayout ());\n            panel.add (screenScroll, BorderLayout.CENTER);\n            final JLabel pointLabel = new JLabel (\"Click on any point in the screen shot!\");\n            panel.add (pointLabel, BorderLayout.SOUTH);\n            screenLabel.addMouseListener (new MouseAdapter () {\n                public void mouseClicked (MouseEvent me) {\n                    pointOfInterest.setLocation (me.getPoint ());\n                    pointLabel.setText (\"Point: \" + pointOfInterest.getX () + \"x\" + pointOfInterest.getY ());\n                }}\n            );\n            JOptionPane.showMessageDialog (null, panel);\n            System.out.println (\"Point of interest: \" + pointOfInterest);\n        }}\n    );","status":"core-diff","id":270,"createdAt":"2023-05-17T16:09:53.353Z"},{"fileName":"Clone162.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":44,"character":5},"text":"core-diff2","codeSnippet":"try {\n        rect = GetWindowRect.getRect (windowName);\n        System.out.printf (\"The corner locations for the window \\\"%s\\\" are %s\", windowName, Arrays.toString (rect));\n    } catch (GetWindowRect.WindowNotFoundException e) {\n        e.printStackTrace ();\n    } catch (GetWindowRect.GetWindowRectException e) {\n        e.printStackTrace ();\n    }","status":"core-diff","id":271,"createdAt":"2023-05-17T16:09:59.818Z"},{"fileName":"Clone162.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":31},"text":"noncore-diff1","codeSnippet":"Robot robot = new Robot ();","status":"noncore-diff","id":272,"createdAt":"2023-05-17T16:10:11.082Z"},{"fileName":"Clone162.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":36,"character":16},"text":"noncore-diff2","codeSnippet":"String windowName = \"Document - WordPad\";\n    int [] rect;","status":"noncore-diff","id":273,"createdAt":"2023-05-17T16:10:16.929Z"},{"fileName":"Clone165.java","fileLine":23,"positionStart":{"line":23,"character":8},"positionEnd":{"line":30,"character":22},"text":"core-sim1","codeSnippet":"File in = new File (\"C:\\\\Users\\\\Public\\\\Music\\\\Sample Music\\\\Kalimba.wav\");\n        AudioInputStream audioInputStream = AudioSystem.getAudioInputStream (in);\n        play = AudioSystem.getClip ();\n        play.open (audioInputStream);\n        FloatControl volume = (FloatControl) play.getControl (FloatControl.Type.MASTER_GAIN);\n        volume.setValue (1.0f);\n        play.start ();\n        play.drain ();","status":"core-sim","id":274,"createdAt":"2023-05-17T16:29:19.150Z"},{"fileName":"Clone165.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":16,"character":18},"text":"core-sim1","codeSnippet":"File in = new File (\"C:\\\\Users\\\\Sandra\\\\Desktop\\\\music\\\\rags.wav\");\n    AudioInputStream audioInputStream = AudioSystem.getAudioInputStream (in);\n    Clip play = AudioSystem.getClip ();\n    play.open (audioInputStream);\n    FloatControl volume = (FloatControl) play.getControl (FloatControl.Type.MASTER_GAIN);\n    volume.setValue (1.0f);\n    play.start ();\n    play.drain ();","status":"core-sim","id":275,"createdAt":"2023-05-17T16:29:28.556Z"},{"fileName":"Clone165.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":17,"character":18},"text":"core-sim2","codeSnippet":"play.close ();","status":"core-sim","id":276,"createdAt":"2023-05-17T16:29:35.502Z"},{"fileName":"Clone165.java","fileLine":35,"positionStart":{"line":35,"character":12},"positionEnd":{"line":35,"character":26},"text":"core-sim2","codeSnippet":"play.close ();","status":"core-sim","id":277,"createdAt":"2023-05-17T16:29:42.478Z"},{"fileName":"Clone165.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":22,"character":9},"text":"noncore-diff1","codeSnippet":"Clip play = null;\n    try {","status":"noncore-diff","id":279,"createdAt":"2023-05-17T16:30:04.164Z"},{"fileName":"Clone165.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":34,"character":13},"text":"noncore-diff1","codeSnippet":"} catch (UnsupportedAudioFileException | IOException | LineUnavailableException ex) {\n        ex.printStackTrace ();\n    } finally {\n        try {","status":"noncore-diff","id":280,"createdAt":"2023-05-17T16:30:12.724Z"},{"fileName":"Clone165.java","fileLine":36,"positionStart":{"line":36,"character":8},"positionEnd":{"line":40,"character":0},"text":"noncore-diff1","codeSnippet":"} catch (Exception exp) {\n        }\n    }\n    System.out.println (\"...\");\n","status":"noncore-diff","id":281,"createdAt":"2023-05-17T16:30:29.219Z"},{"fileName":"Clone168.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":26,"character":5},"text":"core-diff1","codeSnippet":"timer.stop ();\n    if (SwingUtilities.isEventDispatchThread ()) {\n        Runnable doRun = new Runnable () {\n            @Override\n            public void run () {\n                remWins ();\n            }}\n        ;\n        SwingUtilities.invokeLater (doRun);\n    } else {\n        Runnable doRun = new Runnable () {\n            @Override\n            public void run () {\n                remWins ();\n            }}\n        ;\n        SwingUtilities.invokeLater (doRun);\n    }","status":"core-diff","id":282,"createdAt":"2023-05-17T16:31:27.480Z"},{"fileName":"Clone168.java","fileLine":32,"positionStart":{"line":32,"character":3},"positionEnd":{"line":40,"character":29},"text":"core-diff2","codeSnippet":" JDialog dialog = new JDialog ();\n    dialog.getContentPane ().setLayout (null);\n    for (int i = 0;\n    i < 200; i ++) {\n        dialog.add (new JTextField (\"some text\"));\n    }\n    dialog.setTitle (\"Dialog \" + count ++);\n    dialog.setLocation (count * 25, count * 25);\n    dialog.setVisible (true);","status":"core-diff","id":283,"createdAt":"2023-05-17T16:31:42.324Z"},{"fileName":"Clone168.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":31,"character":41},"text":"noncore-diff1","codeSnippet":"System.out.println ();\n    System.out.println (\"Create Dialog\");","status":"noncore-diff","id":284,"createdAt":"2023-05-17T16:31:50.015Z"},{"fileName":"Clone172.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":27,"character":5},"text":"core-diff1","codeSnippet":"timer.stop ();\n    timer.stop ();\n    if (SwingUtilities.isEventDispatchThread ()) {\n        Runnable doRun = new Runnable () {\n            @Override\n            public void run () {\n                pastRemWins ();\n            }}\n        ;\n        SwingUtilities.invokeLater (doRun);\n    } else {\n        Runnable doRun = new Runnable () {\n            @Override\n            public void run () {\n                pastRemWins ();\n            }}\n        ;\n        SwingUtilities.invokeLater (doRun);\n    }","status":"core-diff","id":286,"createdAt":"2023-05-17T16:32:33.455Z"},{"fileName":"Clone172.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":38,"character":5},"text":"core-diff2","codeSnippet":"for (Window window : Window.getWindows ()) {\n        if (window instanceof JDialog) {\n            JDialog dialog = (JDialog) window;\n            System.out.println (\"\\t\" + dialog.getTitle () + \" \" + dialog.isDisplayable ());\n        }\n    }","status":"core-diff","id":287,"createdAt":"2023-05-17T16:32:41.771Z"},{"fileName":"Clone172.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":32,"character":43},"text":"noncore-diff1","codeSnippet":"System.out.println ();\n    System.out.println (\"Display Dialogs\");","status":"noncore-diff","id":288,"createdAt":"2023-05-17T16:32:55.303Z"},{"fileName":"Clone168.java","fileLine":41,"positionStart":{"line":41,"character":4},"positionEnd":{"line":42,"character":1},"text":"noncore-diff2","codeSnippet":"System.out.println (\"\\tCreated \" + dialog.getTitle ());\n}","status":"noncore-diff","id":289,"createdAt":"2023-05-17T16:33:21.971Z"},{"fileName":"Clone174.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":27,"character":5},"text":"core-diff1","codeSnippet":"timer.stop ();\n    timer.stop ();\n    if (SwingUtilities.isEventDispatchThread ()) {\n        Runnable doRun = new Runnable () {\n            @Override\n            public void run () {\n                pastRemWins ();\n            }}\n        ;\n        SwingUtilities.invokeLater (doRun);\n    } else {\n        Runnable doRun = new Runnable () {\n            @Override\n            public void run () {\n                pastRemWins ();\n            }}\n        ;\n        SwingUtilities.invokeLater (doRun);\n    }","status":"core-diff","id":290,"createdAt":"2023-05-17T16:33:49.309Z"},{"fileName":"Clone174.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":40,"character":32},"text":"core-diff2","codeSnippet":"for (Window window : Window.getWindows ()) {\n        if (window instanceof JDialog) {\n            JDialog dialog = (JDialog) window;\n            System.out.println (\"\\tClosing \" + dialog.getTitle ());\n            dialog.dispose ();\n        }\n    }\n    Runtime.getRuntime ().gc ();","status":"core-diff","id":291,"createdAt":"2023-05-17T16:34:06.336Z"},{"fileName":"Clone174.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":32,"character":41},"text":"noncore-diff1","codeSnippet":"System.out.println ();\n    System.out.println (\"Close Dialogs\");","status":"noncore-diff","id":292,"createdAt":"2023-05-17T16:34:13.318Z"},{"fileName":"Clone178.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":19,"character":29},"text":"core-diff1","codeSnippet":"JDialog dialog = new JDialog ();\n    dialog.getContentPane ().setLayout (null);\n    for (int i = 0;\n    i < 200; i ++) {\n        dialog.add (new JTextField (\"some text\"));\n    }\n    dialog.setTitle (\"Dialog \" + count ++);\n    dialog.setLocation (count * 25, count * 25);\n    dialog.setVisible (true);","status":"core-diff","id":293,"createdAt":"2023-05-17T16:34:52.763Z"},{"fileName":"Clone178.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":41},"text":"noncore-diff1","codeSnippet":"System.out.println ();\n    System.out.println (\"Create Dialog\");","status":"noncore-diff","id":294,"createdAt":"2023-05-17T16:35:02.423Z"},{"fileName":"Clone178.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":59},"text":"noncore-diff2","codeSnippet":"System.out.println (\"\\tCreated \" + dialog.getTitle ());","status":"noncore-diff","id":295,"createdAt":"2023-05-17T16:35:08.134Z"},{"fileName":"Clone178.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":47,"character":5},"text":"core-diff2","codeSnippet":"if (runProcess) {\n        for (Window win : Window.getWindows ()) {\n            if (win instanceof JDialog) {\n                System.out.println (\"    Trying to Remove JDialog\");\n                win.dispose ();\n            }\n        }\n        System.out.println (\"    Remove Cycle Done :-)\");\n        runProcess = false;\n        new Thread () {\n            @Override\n            public void run () {\n                try {\n                    Thread.sleep (100);\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n                Runtime.getRuntime ().gc ();\n            }}\n        .start ();\n    } else {\n        pastRemWins ();\n        runProcess = true;\n    }","status":"core-diff","id":296,"createdAt":"2023-05-17T16:35:30.814Z"},{"fileName":"Clone179.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":17,"character":5},"text":"core-sim1","codeSnippet":"for (Window window : Window.getWindows ()) {\n        if (window instanceof JDialog) {\n            JDialog dialog = (JDialog) window;\n            System.out.println (\"\\tClosing \" + dialog.getTitle ());\n            dialog.dispose ();\n        }\n    }","status":"core-sim","id":297,"createdAt":"2023-05-17T16:36:22.290Z"},{"fileName":"Clone179.java","fileLine":23,"positionStart":{"line":23,"character":8},"positionEnd":{"line":28,"character":9},"text":"core-sim1","codeSnippet":"for (Window win : Window.getWindows ()) {\n            if (win instanceof JDialog) {\n                System.out.println (\"    Trying to Remove JDialog\");\n                win.dispose ();\n            }\n        }","status":"core-sim","id":298,"createdAt":"2023-05-17T16:36:30.593Z"},{"fileName":"Clone179.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":41},"text":"noncore-diff1","codeSnippet":"System.out.println ();\n    System.out.println (\"Close Dialogs\");","status":"noncore-diff","id":299,"createdAt":"2023-05-17T16:36:39.428Z"},{"fileName":"Clone179.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":18,"character":32},"text":"noncore-diff2","codeSnippet":"Runtime.getRuntime ().gc ();","status":"noncore-diff","id":300,"createdAt":"2023-05-17T16:36:48.204Z"},{"fileName":"Clone179.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":21},"text":"noncore-diff3","codeSnippet":"if (runProcess) {","status":"noncore-diff","id":301,"createdAt":"2023-05-17T16:36:54.560Z"},{"fileName":"Clone179.java","fileLine":29,"positionStart":{"line":29,"character":8},"positionEnd":{"line":45,"character":5},"text":"noncore-diff3","codeSnippet":"System.out.println (\"    Remove Cycle Done :-)\");\n        runProcess = false;\n        new Thread () {\n            @Override\n            public void run () {\n                try {\n                    Thread.sleep (100);\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n                Runtime.getRuntime ().gc ();\n            }}\n        .start ();\n    } else {\n        pastRemWins ();\n        runProcess = true;\n    }","status":"noncore-diff","id":302,"createdAt":"2023-05-17T16:37:02.246Z"},{"fileName":"Clone182.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":20,"character":5},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < num; i ++) {\n        System.out.println (\"number\" + i + \":\");\n        numbers [i] = input.nextInt ();\n    }\n    for (int temp : numbers) {\n        System.out.print (temp + \"\\t\");\n    }","status":"core-sim","id":303,"createdAt":"2023-05-17T16:38:00.711Z"},{"fileName":"Clone182.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":34,"character":0},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < 5; i ++) {\n        System.out.print (\"Enter number \" + (i + 1) + \": \");\n        arr [i] = scan.nextInt ();\n    }\n    for (int i = 0;\n    i < 5; i ++) System.out.println (\"Number \" + (i + 1) + \": \" + arr [i]);\n","status":"core-sim","id":304,"createdAt":"2023-05-17T16:38:11.478Z"},{"fileName":"Clone182.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":44},"text":"noncore-sim1","codeSnippet":"Scanner input = new Scanner (System.in);","status":"noncore-sim","id":307,"createdAt":"2023-05-17T16:38:46.626Z"},{"fileName":"Clone182.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":26,"character":43},"text":"noncore-sim1","codeSnippet":"Scanner scan = new Scanner (System.in);","status":"noncore-sim","id":308,"createdAt":"2023-05-17T16:38:53.731Z"},{"fileName":"Clone182.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":35},"text":"noncore-sim2","codeSnippet":"int numbers [] = new int [num];","status":"noncore-sim","id":309,"createdAt":"2023-05-17T16:39:09.166Z"},{"fileName":"Clone182.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":15},"text":"noncore-sim2","codeSnippet":"int arr [];","status":"noncore-sim","id":310,"createdAt":"2023-05-17T16:39:16.450Z"},{"fileName":"Clone182.java","fileLine":10,"positionStart":{"line":10,"character":0},"positionEnd":{"line":11,"character":31},"text":"noncore-diff1","codeSnippet":"    System.out.println (\"how many number you want to put in the pot?\");\n    int num = input.nextInt ();","status":"noncore-diff","id":311,"createdAt":"2023-05-17T16:39:28.173Z"},{"fileName":"Clone192.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":18,"character":36},"text":"core-diff1","codeSnippet":"float newAlpha = softButton1.getAlpha () + incrementer;\n    if (newAlpha < 0) {\n        newAlpha = 0;\n        incrementer = - incrementer;\n    } else if (newAlpha > 1f) {\n        newAlpha = 1f;\n        incrementer = - incrementer;\n    }\n    softButton1.setAlpha (newAlpha);\n    softButton2.setAlpha (newAlpha);","status":"core-diff","id":312,"createdAt":"2023-05-17T16:39:51.630Z"},{"fileName":"Clone192.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":28,"character":37},"text":"core-diff2","codeSnippet":"try {\n        UIManager.setLookAndFeel (laf [index].getClassName ());\n        SwingUtilities.updateComponentTreeUI (frame);\n    } catch (Exception exc) {\n        exc.printStackTrace ();\n    }\n    index = (index + 1) % laf.length;","status":"core-diff","id":313,"createdAt":"2023-05-17T16:40:02.834Z"},{"fileName":"Clone194.java","fileLine":12,"positionStart":{"line":12,"character":8},"positionEnd":{"line":23,"character":73},"text":"core-sim1","codeSnippet":"char prevChar = str.charAt (0);\n        for (int i = 1;\n        i < str.length (); i ++) {\n            if (str.charAt (i) != prevChar) {\n                compressedString += String.valueOf (prevChar) + countConsecutive;\n                prevChar = str.charAt (i);\n                countConsecutive = 1;\n                continue;\n            }\n            countConsecutive ++;\n        }\n        compressedString += String.valueOf (prevChar) + countConsecutive;","status":"core-sim","id":314,"createdAt":"2023-05-17T16:41:50.721Z"},{"fileName":"Clone194.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":42,"character":5},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < str.length (); i ++) {\n        countConsecutive ++;\n        if (str.length () == (i + 1)) {\n            compressedString += \"\" + str.charAt (i) + countConsecutive;\n            countConsecutive = 0;\n            break;\n        } else if (str.charAt (i) != str.charAt (i + 1)) {\n            compressedString += \"\" + str.charAt (i) + countConsecutive;\n            countConsecutive = 0;\n        }\n    }","status":"core-sim","id":315,"createdAt":"2023-05-17T16:42:09.361Z"},{"fileName":"Clone194.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":43},"text":"noncore-diff1","codeSnippet":"if (str != null && str.length () > 0) {","status":"noncore-diff","id":316,"createdAt":"2023-05-17T16:42:27.384Z"},{"fileName":"Clone194.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":24,"character":5},"text":"noncore-diff1","codeSnippet":"}","status":"noncore-diff","id":317,"createdAt":"2023-05-17T16:42:34.131Z"},{"fileName":"Clone194.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":30,"character":33},"text":"noncore-sim1","codeSnippet":"int countConsecutive = 0;\n    String compressedString = \"\";","status":"noncore-sim","id":318,"createdAt":"2023-05-17T16:42:43.224Z"},{"fileName":"Clone194.java","fileLine":43,"positionStart":{"line":43,"character":4},"positionEnd":{"line":43,"character":28},"text":"noncore-sim2","codeSnippet":"return compressedString;","status":"noncore-sim","id":319,"createdAt":"2023-05-17T16:42:51.135Z"},{"fileName":"Clone194.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":28},"text":"noncore-sim2","codeSnippet":"return compressedString;","status":"noncore-sim","id":320,"createdAt":"2023-05-17T16:43:00.120Z"},{"fileName":"Clone194.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":33},"text":"noncore-sim1","codeSnippet":"String compressedString = \"\";","status":"noncore-sim","id":321,"createdAt":"2023-05-17T16:43:05.983Z"},{"fileName":"Clone194.java","fileLine":11,"positionStart":{"line":11,"character":8},"positionEnd":{"line":11,"character":33},"text":"noncore-sim1","codeSnippet":"int countConsecutive = 1;","status":"noncore-sim","id":322,"createdAt":"2023-05-17T16:43:14.613Z"},{"fileName":"Clone196.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":32},"text":"noncore-sim1","codeSnippet":"byte [] b = new byte [1024];","status":"noncore-sim","id":323,"createdAt":"2023-05-17T16:43:51.057Z"},{"fileName":"Clone196.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":42},"text":"noncore-sim1","codeSnippet":"byte [] buffer = new byte [32 * 1024];","status":"noncore-sim","id":324,"createdAt":"2023-05-17T16:44:00.291Z"},{"fileName":"Clone196.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":30,"character":5},"text":"core-sim1","codeSnippet":"for (;;) {\n        int read = inputStream.read (buffer, bufferSize, buffer.length - bufferSize);\n        if (read == - 1) {\n            return Arrays.copyOf (buffer, bufferSize);\n        }\n        bufferSize += read;\n        if (bufferSize == buffer.length) {\n            buffer = Arrays.copyOf (buffer, bufferSize * 2);\n        }\n    }","status":"core-sim","id":325,"createdAt":"2023-05-17T16:44:36.634Z"},{"fileName":"Clone196.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":14,"character":5},"text":"core-sim1","codeSnippet":"while ((c = inputStream.read (b)) != - 1) {\n        os.write (b, 0, c);\n    }","status":"core-sim","id":326,"createdAt":"2023-05-17T16:44:48.734Z"},{"fileName":"Clone196.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":11,"character":10},"text":"noncore-diff1","codeSnippet":"ByteArrayOutputStream os = new ByteArrayOutputStream ();\n    int c;","status":"noncore-diff","id":327,"createdAt":"2023-05-17T16:44:56.119Z"},{"fileName":"Clone196.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":23},"text":"noncore-diff2","codeSnippet":"int bufferSize = 0;","status":"noncore-diff","id":328,"createdAt":"2023-05-17T16:45:17.576Z"},{"fileName":"Clone196.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":15,"character":29},"text":"noncore-diff3","codeSnippet":"return os.toByteArray ();","status":"noncore-diff","id":329,"createdAt":"2023-05-17T16:45:26.658Z"},{"fileName":"Clone198.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":11,"character":80},"text":"noncore-sim1","codeSnippet":"JsonObject commandObject = json.getAsJsonObject ();\n        JsonElement commandTypeElement = commandObject.get (commandElementName);","status":"noncore-sim","id":330,"createdAt":"2023-05-17T16:47:59.496Z"},{"fileName":"Clone198.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":22,"character":68},"text":"noncore-sim1","codeSnippet":"JsonObject jsonObject = json.getAsJsonObject ();\n    JsonPrimitive prim = (JsonPrimitive) jsonObject.get (CLASSNAME);","status":"noncore-sim","id":331,"createdAt":"2023-05-17T16:48:10.432Z"},{"fileName":"Clone198.java","fileLine":12,"positionStart":{"line":12,"character":80},"positionEnd":{"line":12,"character":113},"text":"noncore-sim2","codeSnippet":"commandTypeElement.getAsString ()","status":"noncore-sim","id":332,"createdAt":"2023-05-17T16:48:26.149Z"},{"fileName":"Clone198.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":43},"text":"noncore-sim2","codeSnippet":"String className = prim.getAsString ();","status":"noncore-sim","id":333,"createdAt":"2023-05-17T16:48:36.786Z"},{"fileName":"Clone198.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":9},"text":"core-diff1","codeSnippet":"try {","status":"core-diff","id":334,"createdAt":"2023-05-17T16:48:58.299Z"},{"fileName":"Clone198.java","fileLine":12,"positionStart":{"line":12,"character":8},"positionEnd":{"line":12,"character":80},"text":"core-diff1","codeSnippet":"Class < ? extends Command > commandInstanceClass = commandRegistry.get (","status":"core-diff","id":335,"createdAt":"2023-05-17T16:49:08.877Z"},{"fileName":"Clone198.java","fileLine":12,"positionStart":{"line":12,"character":113},"positionEnd":{"line":17,"character":5},"text":"core-diff1","codeSnippet":");\n        Command command = gson.fromJson (json, commandInstanceClass);\n        return command;\n    } catch (Exception e) {\n        throw new RuntimeException (e);\n    }","status":"core-diff","id":336,"createdAt":"2023-05-17T16:49:23.723Z"},{"fileName":"Clone198.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":31,"character":66},"text":"core-diff2","codeSnippet":"Class < ? > klass = null;\n    try {\n        klass = Class.forName (className);\n    } catch (ClassNotFoundException e) {\n        e.printStackTrace ();\n        throw new JsonParseException (e.getMessage ());\n    }\n    return context.deserialize (jsonObject.get (INSTANCE), klass);","status":"core-diff","id":337,"createdAt":"2023-05-17T16:49:43.051Z"},{"fileName":"Clone204.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":25},"text":"noncore-sim1","codeSnippet":"a = a.toLowerCase ();\n    b = b.toLowerCase ();","status":"noncore-sim","id":338,"createdAt":"2023-05-18T15:34:27.670Z"},{"fileName":"Clone204.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":31,"character":27},"text":"noncore-sim1","codeSnippet":"s1 = s1.toLowerCase ();\n    s2 = s2.toLowerCase ();","status":"noncore-sim","id":339,"createdAt":"2023-05-18T15:34:33.558Z"},{"fileName":"Clone204.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":13,"character":5},"text":"core-sim1","codeSnippet":"if (a.length () != b.length ()) {\n        return false;\n    }","status":"core-sim","id":340,"createdAt":"2023-05-18T15:59:14.451Z"},{"fileName":"Clone204.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":29,"character":5},"text":"core-sim1","codeSnippet":"if (s1.length () != s2.length ()) {\n        return false;\n    }","status":"core-sim","id":341,"createdAt":"2023-05-18T15:59:21.249Z"},{"fileName":"Clone204.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":33,"character":35},"text":"noncore-sim2","codeSnippet":"char [] c1 = s1.toCharArray ();\n    char [] c2 = s2.toCharArray ();","status":"noncore-sim","id":342,"createdAt":"2023-05-18T15:59:42.302Z"},{"fileName":"Clone204.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":14,"character":37},"text":"noncore-sim2","codeSnippet":"char [] chars = a.toCharArray ();","status":"noncore-sim","id":343,"createdAt":"2023-05-18T15:59:48.316Z"},{"fileName":"Clone204.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":23,"character":24},"text":"core-sim2","codeSnippet":"for (char c : chars) {\n        int index = b.indexOf (c);\n        if (index != - 1) {\n            b = b.substring (0, index) + b.substring (index + 1, b.length ());\n        } else {\n            return false;\n        }\n    }\n    return b.isEmpty ();","status":"core-sim","id":344,"createdAt":"2023-05-18T15:59:55.725Z"},{"fileName":"Clone204.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":38,"character":28},"text":"core-sim2","codeSnippet":"Arrays.sort (c1);\n    Arrays.sort (c2);\n    String sc1 = new String (c1);\n    String sc2 = new String (c2);\n    return sc1.equals (sc2);","status":"core-sim","id":345,"createdAt":"2023-05-18T16:00:01.941Z"},{"fileName":"Clone205.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":13,"character":5},"text":"core-sim1","codeSnippet":"if (a.length () != b.length ()) {\n        return false;\n    }","status":"core-sim","id":346,"createdAt":"2023-05-18T16:02:07.953Z"},{"fileName":"Clone205.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":51},"text":"core-sim1","codeSnippet":"if (s1.length () != s2.length ()) return false;","status":"core-sim","id":347,"createdAt":"2023-05-18T16:03:38.755Z"},{"fileName":"Clone205.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":23,"character":24},"text":"core-sim2","codeSnippet":"for (char c : chars) {\n        int index = b.indexOf (c);\n        if (index != - 1) {\n            b = b.substring (0, index) + b.substring (index + 1, b.length ());\n        } else {\n            return false;\n        }\n    }\n    return b.isEmpty ();","status":"core-sim","id":348,"createdAt":"2023-05-18T16:04:15.332Z"},{"fileName":"Clone205.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":41,"character":16},"text":"core-sim2","codeSnippet":"for (int i = 0;\n    i < n; i ++) {\n        char c1 = s1.charAt (i);\n        charMap [c1] ++;\n        char c2 = s2.charAt (i);\n        charMap [c2] --;\n    }\n    for (int i = 0;\n    i < charMap.length; i ++) {\n        if (charMap [i] != 0) return false;\n    }\n    return true;","status":"core-sim","id":349,"createdAt":"2023-05-18T16:04:23.088Z"},{"fileName":"Clone205.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":25},"text":"noncore-diff1","codeSnippet":"a = a.toLowerCase ();\n    b = b.toLowerCase ();","status":"noncore-diff","id":350,"createdAt":"2023-05-18T16:04:31.470Z"},{"fileName":"Clone205.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":14,"character":37},"text":"noncore-diff2","codeSnippet":"char [] chars = a.toCharArray ();","status":"noncore-diff","id":351,"createdAt":"2023-05-18T16:04:36.943Z"},{"fileName":"Clone205.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":29,"character":35},"text":"noncore-diff3","codeSnippet":"int n = s1.length ();\n    int [] charMap = new int [256];","status":"noncore-diff","id":352,"createdAt":"2023-05-18T16:04:44.002Z"},{"fileName":"Clone207.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":20,"character":16},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < s2.length (); i ++) {\n        if (! s1.contains (\"\" + s2.charAt (i))) {\n            return false;\n        }\n        s1 = s1.replaceFirst (\"\" + s2.charAt (i), \"\");\n        s2 = s2.replaceFirst (\"\" + s2.charAt (i), \"\");\n    }\n    return true;","status":"core-sim","id":353,"createdAt":"2023-05-18T16:08:24.733Z"},{"fileName":"Clone207.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":38,"character":16},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < n; i ++) {\n        char c1 = s1.charAt (i);\n        charMap [c1] ++;\n        char c2 = s2.charAt (i);\n        charMap [c2] --;\n    }\n    for (int i = 0;\n    i < charMap.length; i ++) {\n        if (charMap [i] != 0) return false;\n    }\n    return true;","status":"core-sim","id":354,"createdAt":"2023-05-18T16:08:38.063Z"},{"fileName":"Clone207.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":24,"character":51},"text":"core-sim2","codeSnippet":"if (s1.length () != s2.length ()) return false;","status":"core-sim","id":355,"createdAt":"2023-05-18T16:08:45.287Z"},{"fileName":"Clone207.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":5},"text":"core-sim2","codeSnippet":"if (s1.length () != s2.length ()) {\n        return false;\n    }","status":"core-sim","id":356,"createdAt":"2023-05-18T16:08:53.193Z"},{"fileName":"Clone207.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":26,"character":35},"text":"noncore-diff1","codeSnippet":"int n = s1.length ();\n    int [] charMap = new int [256];","status":"noncore-diff","id":357,"createdAt":"2023-05-18T16:09:10.307Z"},{"fileName":"Clone208.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":5},"text":"core-sim1","codeSnippet":"if (s1.length () != s2.length ()) {\n        return false;\n    }","status":"core-sim","id":358,"createdAt":"2023-05-18T16:09:45.128Z"},{"fileName":"Clone208.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":24,"character":51},"text":"core-sim1","codeSnippet":"if (s1.length () != s2.length ()) return false;","status":"core-sim","id":359,"createdAt":"2023-05-18T16:09:50.908Z"},{"fileName":"Clone208.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":38,"character":16},"text":"core-sim2","codeSnippet":"for (int i = 0;\n    i < n; i ++) {\n        char c1 = s1.charAt (i);\n        charMap [c1] ++;\n        char c2 = s2.charAt (i);\n        charMap [c2] --;\n    }\n    for (int i = 0;\n    i < charMap.length; i ++) {\n        if (charMap [i] != 0) return false;\n    }\n    return true;","status":"core-sim","id":360,"createdAt":"2023-05-18T16:10:19.650Z"},{"fileName":"Clone208.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":20,"character":28},"text":"core-sim2","codeSnippet":"Arrays.sort (c1);\n    Arrays.sort (c2);\n    String sc1 = new String (c1);\n    String sc2 = new String (c2);\n    return sc1.equals (sc2);","status":"core-sim","id":361,"createdAt":"2023-05-18T16:10:32.701Z"},{"fileName":"Clone208.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":26,"character":35},"text":"noncore-diff1","codeSnippet":"int n = s1.length ();\n    int [] charMap = new int [256];","status":"noncore-diff","id":362,"createdAt":"2023-05-18T16:10:41.153Z"},{"fileName":"Clone208.java","fileLine":12,"positionStart":{"line":12,"character":3},"positionEnd":{"line":15,"character":35},"text":"noncore-diff2","codeSnippet":" s1 = s1.toLowerCase ();\n    s2 = s2.toLowerCase ();\n    char [] c1 = s1.toCharArray ();\n    char [] c2 = s2.toCharArray ();","status":"noncore-diff","id":363,"createdAt":"2023-05-18T16:10:50.483Z"},{"fileName":"Clone212.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":15,"character":21},"text":"core-sim1","codeSnippet":"boolean isNumber = true;\n    for (int i = 0;\n    i < s.length () && isNumber; i ++) {\n        char c = s.charAt (i);\n        isNumber = isNumber & ((c >= '0' && c <= '9') || (c == '.') || (c == 'e') || (c == 'E') || (c == ''));\n    }\n    return isInteger;","status":"core-sim","id":364,"createdAt":"2023-05-18T16:13:01.572Z"},{"fileName":"Clone212.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":40,"character":53},"text":"core-sim1","codeSnippet":"boolean a = false, b = false, c = false, d = false;\n    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-')) i ++;\n    while (i < len && isDigit (str.charAt (i))) {\n        i ++;\n        a = true;\n    }\n    if (i < len && (str.charAt (i) == '.')) i ++;\n    while (i < len && isDigit (str.charAt (i))) {\n        i ++;\n        b = true;\n    }\n    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) {\n        i ++;\n        c = true;\n    }\n    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-') && c) i ++;\n    while (i < len && isDigit (str.charAt (i))) {\n        i ++;\n        d = true;\n    }\n    return i == len && (a || b) && (! c || (c && d));","status":"core-sim","id":365,"createdAt":"2023-05-18T16:13:18.551Z"},{"fileName":"Clone212.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":35},"text":"noncore-diff1","codeSnippet":"int i = 0, len = str.length ();","status":"noncore-diff","id":366,"createdAt":"2023-05-18T16:13:26.545Z"},{"fileName":"Clone219.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":38,"character":15},"text":"core-diff1","codeSnippet":"for (int i = 0;\n    i < A.length; i ++) {\n        if (A [i] <= X) hset.add (A [i]);\n        if (hset.size () == X) return i;\n    }\n    return - 1;","status":"core-diff","id":369,"createdAt":"2023-05-18T16:18:05.958Z"},{"fileName":"Clone219.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":28,"character":15},"text":"core-diff1","codeSnippet":"final int NUMBER_REAL_UPPER = min (NUMBER_UPPER, X);\n    for (int i = 0;\n    i < A.length; i ++) {\n        if ((ai = A [i]) < NUMBER_LOWER || ai > NUMBER_REAL_UPPER) {\n            throw new RuntimeException (\"Number out of bounds\");\n        } else if (ai <= X && ! set.contains (ai)) {\n            counter --;\n            if (counter == 0) {\n                return i;\n            }\n            set.put (ai);\n        }\n    }\n    return - 1;","status":"core-diff","id":370,"createdAt":"2023-05-18T16:18:22.568Z"},{"fileName":"Clone219.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":5},"text":"core-diff1","codeSnippet":"if (A.length < ARRAY_SIZE_LOWER || A.length > ARRAY_SIZE_UPPER) {\n        throw new RuntimeException (\"Array size out of bounds\");\n    }","status":"core-diff","id":371,"createdAt":"2023-05-18T16:18:30.537Z"},{"fileName":"Clone219.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":14,"character":20},"text":"noncore-diff1","codeSnippet":"Set set = new Set (X);\n    int ai;\n    int counter = X;","status":"noncore-diff","id":372,"createdAt":"2023-05-18T16:18:39.667Z"},{"fileName":"Clone219.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":32,"character":58},"text":"noncore-diff1","codeSnippet":"HashSet < Integer > hset = new HashSet < Integer > ();","status":"noncore-diff","id":373,"createdAt":"2023-05-18T16:18:46.652Z"},{"fileName":"Clone223.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":45,"character":15},"text":"core-diff1","codeSnippet":"for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;","status":"core-diff","id":374,"createdAt":"2023-05-18T16:20:09.977Z"},{"fileName":"Clone223.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":5},"text":"core-diff1","codeSnippet":"if (A.length < ARRAY_SIZE_LOWER || A.length > ARRAY_SIZE_UPPER) {\n        throw new RuntimeException (\"Array size out of bounds\");\n    }","status":"core-diff","id":376,"createdAt":"2023-05-18T16:20:38.008Z"},{"fileName":"Clone223.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":28,"character":15},"text":"core-diff1","codeSnippet":"final int NUMBER_REAL_UPPER = min (NUMBER_UPPER, X);\n    for (int i = 0;\n    i < A.length; i ++) {\n        if ((ai = A [i]) < NUMBER_LOWER || ai > NUMBER_REAL_UPPER) {\n            throw new RuntimeException (\"Number out of bounds\");\n        } else if (ai <= X && ! set.contains (ai)) {\n            counter --;\n            if (counter == 0) {\n                return i;\n            }\n            set.put (ai);\n        }\n    }\n    return - 1;","status":"core-diff","id":377,"createdAt":"2023-05-18T16:20:55.343Z"},{"fileName":"Clone223.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":14,"character":20},"text":"noncore-diff1","codeSnippet":"Set set = new Set (X);\n    int ai;\n    int counter = X;","status":"noncore-diff","id":378,"createdAt":"2023-05-18T16:21:03.737Z"},{"fileName":"Clone223.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":33,"character":27},"text":"noncore-diff1","codeSnippet":"Set < Integer > set = new HashSet < Integer > ();\n    int sum1 = 0, sum2 = 0;","status":"noncore-diff","id":379,"createdAt":"2023-05-18T16:21:16.135Z"},{"fileName":"Clone231.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":56},"text":"noncore-sim1","codeSnippet":"Set < Integer > values = new HashSet < Integer > ();","status":"noncore-sim","id":380,"createdAt":"2023-05-18T16:27:16.416Z"},{"fileName":"Clone231.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":34},"text":"noncore-sim1","codeSnippet":"int [] isFilled = new int [X];","status":"noncore-sim","id":381,"createdAt":"2023-05-18T16:27:24.886Z"},{"fileName":"Clone231.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":15,"character":15},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < A.length; i ++) {\n        if (values.add (A [i])) X --;\n        if (X == 0) return i;\n    }\n    return - 1;","status":"core-sim","id":382,"createdAt":"2023-05-18T16:27:53.850Z"},{"fileName":"Clone231.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":39,"character":15},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < len; i ++) {\n        int x = A [i];\n        if (x <= X) {\n            if (isFilled [x - 1] == 0) {\n                isFilled [x - 1] = 1;\n                jumped += 1;\n                if (jumped == X) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;","status":"core-sim","id":383,"createdAt":"2023-05-18T16:28:00.313Z"},{"fileName":"Clone231.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":22,"character":5},"text":"noncore-diff1","codeSnippet":"int len = A.length;\n    if (X > len) {\n        return - 1;\n    }","status":"noncore-diff","id":384,"createdAt":"2023-05-18T16:28:09.569Z"},{"fileName":"Clone231.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":25,"character":30},"text":"noncore-diff1","codeSnippet":"int jumped = 0;\n    Arrays.fill (isFilled, 0);","status":"noncore-diff","id":385,"createdAt":"2023-05-18T16:28:20.260Z"},{"fileName":"Clone240.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":28,"character":15},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < A.length; i ++) {\n        try {\n            count [A [i] - 1] ++;\n        } catch (ArrayIndexOutOfBoundsException e) {\n        }\n        if (i >= X - 1) {\n            for (int j = 0;\n            j < count.length; j ++) {\n                if (count [j] == 0) {\n                    break;\n                }\n                if (j == count.length - 1) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;","status":"core-sim","id":386,"createdAt":"2023-05-18T16:32:57.830Z"},{"fileName":"Clone240.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":38,"character":15},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < A.length; i ++) {\n        leaves.add (A [i]);\n        if (leaves.contains (X) && leaves.size () == X) return i;\n    }\n    return - 1;","status":"core-sim","id":387,"createdAt":"2023-05-18T16:33:09.635Z"},{"fileName":"Clone240.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":31},"text":"noncore-sim1","codeSnippet":"int [] count = new int [X];","status":"noncore-sim","id":388,"createdAt":"2023-05-18T16:33:20.210Z"},{"fileName":"Clone240.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":32,"character":48},"text":"noncore-sim1","codeSnippet":"Set < Integer > leaves = new HashSet < > ();","status":"noncore-sim","id":389,"createdAt":"2023-05-18T16:33:25.620Z"},{"fileName":"Clone241.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":41,"character":15},"text":"core-sim1","codeSnippet":"for (int iii = 0;\n    iii < list.length; iii ++) {\n        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {\n            sum += list [iii];\n            if (sum == sumV) {\n                return iii;\n            }\n            arrayList.add (list [iii]);\n        }\n    }\n    return - 1;","status":"core-sim","id":390,"createdAt":"2023-05-18T16:40:52.269Z"},{"fileName":"Clone241.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":22,"character":15},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < A.length; i ++) {\n        if (counter [A [i]] == 0) {\n            counter [A [i]] = A [i];\n            x += 1;\n            if (x == X) {\n                return i;\n            }\n        }\n    }\n    return ans;","status":"core-sim","id":391,"createdAt":"2023-05-18T16:40:59.635Z"},{"fileName":"Clone241.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":14},"text":"noncore-diff1","codeSnippet":"int [] counter = new int [X + 1];\n    int ans = - 1;\n    int x = 0;","status":"noncore-diff","id":392,"createdAt":"2023-05-18T16:41:18.734Z"},{"fileName":"Clone241.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":30,"character":62},"text":"noncore-diff2","codeSnippet":"int list [] = A;\n    int sum = 0;\n    int searchedValue = X;\n    int sumV = searchedValue * (searchedValue + 1) / 2;\n    List < Integer > arrayList = new ArrayList < Integer > ();","status":"noncore-diff","id":393,"createdAt":"2023-05-18T16:41:27.760Z"},{"fileName":"Clone248.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":24,"character":15},"text":"core-sim1","codeSnippet":"for (int iii = 0;\n    iii < list.length; iii ++) {\n        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {\n            sum += list [iii];\n            if (sum == sumV) {\n                return iii;\n            }\n            arrayList.add (list [iii]);\n        }\n    }\n    return - 1;","status":"core-sim","id":394,"createdAt":"2023-05-18T16:43:09.930Z"},{"fileName":"Clone248.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":34,"character":15},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < A.length; i ++) {\n        if (A [i] <= X) hset.add (A [i]);\n        if (hset.size () == X) return i;\n    }\n    return - 1;","status":"core-sim","id":395,"createdAt":"2023-05-18T16:43:18.808Z"},{"fileName":"Clone248.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":28,"character":58},"text":"noncore-sim1","codeSnippet":"HashSet < Integer > hset = new HashSet < Integer > ();","status":"noncore-sim","id":396,"createdAt":"2023-05-18T16:43:28.566Z"},{"fileName":"Clone248.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":13,"character":62},"text":"noncore-sim1","codeSnippet":"List < Integer > arrayList = new ArrayList < Integer > ();","status":"noncore-sim","id":397,"createdAt":"2023-05-18T16:43:34.500Z"},{"fileName":"Clone248.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":12,"character":55},"text":"noncore-diff1","codeSnippet":"int list [] = A;\n    int sum = 0;\n    int searchedValue = X;\n    int sumV = searchedValue * (searchedValue + 1) / 2;","status":"noncore-diff","id":398,"createdAt":"2023-05-18T16:43:42.020Z"},{"fileName":"Clone263.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":28,"character":16},"text":"core-diff1","codeSnippet":"for (int x = 0;\n    x < size; x ++) {\n        int temp = A [x];\n        if (temp <= X) {\n            if (check [temp - 1] > 0) {\n                continue;\n            }\n            check [temp - 1] ++;\n            cmp ++;\n        }\n        if (cmp == X) {\n            time = x;\n            break;\n        }\n    }\n    return time;","status":"core-diff","id":399,"createdAt":"2023-05-18T16:45:04.088Z"},{"fileName":"Clone263.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":45,"character":15},"text":"core-diff1","codeSnippet":"for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;","status":"core-diff","id":400,"createdAt":"2023-05-18T16:45:13.419Z"},{"fileName":"Clone263.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":12,"character":19},"text":"noncore-diff1","codeSnippet":"int size = A.length;\n    int [] check = new int [X];\n    int cmp = 0;\n    int time = - 1;","status":"noncore-diff","id":401,"createdAt":"2023-05-18T16:45:21.260Z"},{"fileName":"Clone263.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":33,"character":27},"text":"noncore-diff2","codeSnippet":"Set < Integer > set = new HashSet < Integer > ();\n    int sum1 = 0, sum2 = 0;","status":"noncore-diff","id":402,"createdAt":"2023-05-18T16:45:27.499Z"},{"fileName":"Clone264.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":28,"character":16},"text":"core-sim1","codeSnippet":"int time = - 1;\n    for (int x = 0;\n    x < size; x ++) {\n        int temp = A [x];\n        if (temp <= X) {\n            if (check [temp - 1] > 0) {\n                continue;\n            }\n            check [temp - 1] ++;\n            cmp ++;\n        }\n        if (cmp == X) {\n            time = x;\n            break;\n        }\n    }\n    return time;","status":"core-sim","id":403,"createdAt":"2023-05-18T16:50:29.602Z"},{"fileName":"Clone264.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":38,"character":15},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < A.length; i ++) {\n        leaves.add (A [i]);\n        if (leaves.contains (X) && leaves.size () == X) return i;\n    }\n    return - 1;","status":"core-sim","id":404,"createdAt":"2023-05-18T16:50:37.661Z"},{"fileName":"Clone264.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":31},"text":"noncore-sim1","codeSnippet":"int [] check = new int [X];","status":"noncore-sim","id":405,"createdAt":"2023-05-18T16:50:47.723Z"},{"fileName":"Clone264.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":32,"character":48},"text":"noncore-sim1","codeSnippet":"Set < Integer > leaves = new HashSet < > ();","status":"noncore-sim","id":406,"createdAt":"2023-05-18T16:50:55.948Z"},{"fileName":"Clone264.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":24},"text":"noncore-diff1","codeSnippet":"int size = A.length;","status":"noncore-diff","id":407,"createdAt":"2023-05-18T16:51:01.899Z"},{"fileName":"Clone264.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":16},"text":"noncore-diff1","codeSnippet":"int cmp = 0;","status":"noncore-diff","id":408,"createdAt":"2023-05-18T16:51:07.622Z"},{"fileName":"Clone265.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":29,"character":15},"text":"core-sim1","codeSnippet":"Arrays.fill (isFilled, 0);\n    for (int i = 0;\n    i < len; i ++) {\n        int x = A [i];\n        if (x <= X) {\n            if (isFilled [x - 1] == 0) {\n                isFilled [x - 1] = 1;\n                jumped += 1;\n                if (jumped == X) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;","status":"core-sim","id":409,"createdAt":"2023-05-18T16:52:06.622Z"},{"fileName":"Clone265.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":46,"character":15},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;","status":"core-sim","id":410,"createdAt":"2023-05-18T16:52:14.631Z"},{"fileName":"Clone265.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":12,"character":5},"text":"core-sim1","codeSnippet":"if (X > len) {\n        return - 1;\n    }","status":"core-sim","id":411,"createdAt":"2023-05-18T16:52:21.910Z"},{"fileName":"Clone265.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":13,"character":34},"text":"noncore-sim1","codeSnippet":"int [] isFilled = new int [X];","status":"noncore-sim","id":412,"createdAt":"2023-05-18T16:52:40.122Z"},{"fileName":"Clone265.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":33,"character":53},"text":"noncore-sim1","codeSnippet":"Set < Integer > set = new HashSet < Integer > ();","status":"noncore-sim","id":413,"createdAt":"2023-05-18T16:52:44.962Z"},{"fileName":"Clone265.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":34,"character":27},"text":"noncore-diff1","codeSnippet":"int sum1 = 0, sum2 = 0;","status":"noncore-diff","id":414,"createdAt":"2023-05-18T16:52:52.412Z"},{"fileName":"Clone265.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":14,"character":19},"text":"noncore-diff1","codeSnippet":"int jumped = 0;","status":"noncore-diff","id":415,"createdAt":"2023-05-18T16:52:59.041Z"},{"fileName":"Clone265.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":23},"text":"noncore-diff2","codeSnippet":"int len = A.length;","status":"noncore-diff","id":416,"createdAt":"2023-05-18T16:53:05.239Z"},{"fileName":"Clone271.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":15,"character":22},"text":"core-sim1","codeSnippet":"if (savedDate != null && currentDate != null) {\n        if (savedDate.plus (days, ChronoUnit.DAYS).isBefore (currentDate)) {\n            hasExpired = true;\n        }\n    }\n    return hasExpired;","status":"core-sim","id":417,"createdAt":"2023-05-18T16:54:44.819Z"},{"fileName":"Clone271.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":61},"text":"core-sim1","codeSnippet":"dateFormatUtc.setTimeZone (TimeZone.getTimeZone (\"UTC\"));","status":"core-sim","id":418,"createdAt":"2023-05-18T16:55:08.452Z"},{"fileName":"Clone271.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":24,"character":63},"text":"core-sim1","codeSnippet":"savedDate = dateFormatLocal.parse (dateFormatUtc.format (savedDate));\n    Date dateTimeNow = dateFormatLocal.parse (dateFormatUtc.format (new Date ()));\n    long expires = dateTimeNow.getTime () + (DAY_IN_MS * days);","status":"core-sim","id":419,"createdAt":"2023-05-18T16:55:23.966Z"},{"fileName":"Clone271.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":42},"text":"core-sim1","codeSnippet":"return savedDate.before (expiresDate);","status":"core-sim","id":420,"createdAt":"2023-05-18T16:55:34.615Z"},{"fileName":"Clone271.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":83},"text":"noncore-diff1","codeSnippet":"SimpleDateFormat dateFormatUtc = new SimpleDateFormat (\"yyyy-MMM-dd HH:mm:ss\");","status":"noncore-diff","id":421,"createdAt":"2023-05-18T16:55:49.821Z"},{"fileName":"Clone271.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":85},"text":"noncore-diff1","codeSnippet":"SimpleDateFormat dateFormatLocal = new SimpleDateFormat (\"yyyy-MMM-dd HH:mm:ss\");","status":"noncore-diff","id":422,"createdAt":"2023-05-18T16:55:55.980Z"},{"fileName":"Clone271.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":26,"character":89},"text":"noncore-diff1","codeSnippet":"Date expiresDate = new Date (expires);\n    System.out.println (\"savedDate \\t\\t\" + savedDate + \"\\nexpiresDate \\t\" + expiresDate);","status":"noncore-diff","id":423,"createdAt":"2023-05-18T16:56:04.668Z"},{"fileName":"Clone271.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":31},"text":"noncore-diff2","codeSnippet":"boolean hasExpired = false;","status":"noncore-diff","id":424,"createdAt":"2023-05-18T16:56:11.619Z"},{"fileName":"Clone279.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":29},"text":"noncore-sim1","codeSnippet":"super.paintComponent (g);","status":"noncore-sim","id":425,"createdAt":"2023-05-18T16:57:06.480Z"},{"fileName":"Clone279.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":32,"character":29},"text":"noncore-sim1","codeSnippet":"super.paintComponent (g);","status":"noncore-sim","id":426,"createdAt":"2023-05-18T16:57:12.231Z"},{"fileName":"Clone279.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":27,"character":19},"text":"core-diff1","codeSnippet":"Graphics2D g2d = (Graphics2D) g.create ();\n    g2d.setColor (Color.RED);\n    g2d.drawLine (getWidth () / 2, 0, getWidth () / 2, getHeight ());\n    g2d.drawLine (0, getHeight () / 2, getWidth (), getHeight () / 2);\n    FontRenderContext context = g2d.getFontRenderContext ();\n    Font font = new Font (\"Arial\", Font.BOLD, 48);\n    TextLayout txt = new TextLayout (text, font, context);\n    Rectangle2D bounds = txt.getBounds ();\n    int x = (int) ((getWidth () - (int) bounds.getWidth ()) / 2);\n    int y = (int) ((getHeight () - (bounds.getHeight () - txt.getDescent ())) / 2);\n    y += txt.getAscent () - txt.getDescent ();\n    g2d.setFont (font);\n    g2d.setColor (Color.BLACK);\n    g2d.drawString (text, x, y);\n    g2d.setColor (Color.BLUE);\n    g2d.translate (x, y);\n    g2d.draw (bounds);\n    g2d.dispose ();","status":"core-diff","id":427,"createdAt":"2023-05-18T16:57:20.275Z"},{"fileName":"Clone279.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":38,"character":23},"text":"core-diff1","codeSnippet":"Font font = new Font (\"Arial\", Font.BOLD, 48);\n    String text = \"Along time ago, in a galaxy, far, far away\";\n    Shape outline = font.createGlyphVector (g.getFontMetrics ().getFontRenderContext (), text).getOutline ();\n    AffineTransform transform = AffineTransform.getTranslateInstance (- outline.getBounds ().getX () + getWidth () / 2 - outline.getBounds ().width / 2, - outline.getBounds ().getY () + getHeight () / 2 - outline.getBounds ().height / 2);\n    outline = transform.createTransformedShape (outline);\n    g2d.fill (outline);","status":"core-diff","id":428,"createdAt":"2023-05-18T16:57:30.150Z"},{"fileName":"Clone283.java","fileLine":14,"positionStart":{"line":14,"character":3},"positionEnd":{"line":32,"character":5},"text":"core-sim1","codeSnippet":" while (m.find ()) {\n        String action = m.group (1);\n        String name = m.group (2);\n        double scoreVal = Double.valueOf (m.group (3));\n        Score score = new Score (name, scoreVal);\n        scores.add (score);\n        if (\"A\".equalsIgnoreCase (action)) {\n            topScores.add (score);\n        } else {\n            for (Score topScore : topScores) {\n                if (topScore.equals (score)) {\n                    topScores.remove (score);\n                }\n            }\n        }\n    }\n    for (Score finalScore : topScores) {\n        System.out.println (finalScore);\n    }","status":"core-sim","id":430,"createdAt":"2023-05-18T16:59:05.577Z"},{"fileName":"Clone283.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":37,"character":47},"text":"core-sim1","codeSnippet":"String [] scoreSets = input.split (\"\\\\),\");","status":"core-sim","id":431,"createdAt":"2023-05-18T16:59:31.367Z"},{"fileName":"Clone283.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":47,"character":5},"text":"core-sim1","codeSnippet":"for (String score : scoreSets) {\n        score = score.trim ().substring (1);\n        int closeBrace = score.indexOf (')');\n        if (closeBrace == score.length () - 1) {\n            score = score.substring (0, score.length () - 1);\n        }\n        String [] tokens = score.split (\",\");\n        scoreList.add (new Score (tokens [0], tokens [1], Double.valueOf (tokens [2])));\n    }","status":"core-sim","id":432,"createdAt":"2023-05-18T16:59:53.066Z"},{"fileName":"Clone283.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":95},"text":"noncore-sim1","codeSnippet":"String input = \"(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)\";","status":"noncore-sim","id":433,"createdAt":"2023-05-18T17:00:08.581Z"},{"fileName":"Clone283.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":36,"character":95},"text":"noncore-sim1","codeSnippet":"String input = \"(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)\";","status":"noncore-sim","id":434,"createdAt":"2023-05-18T17:00:15.059Z"},{"fileName":"Clone283.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":38,"character":58},"text":"noncore-sim2","codeSnippet":"List < Score > scoreList = new ArrayList < Score > ();","status":"noncore-sim","id":435,"createdAt":"2023-05-18T17:00:26.908Z"},{"fileName":"Clone283.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":13,"character":63},"text":"noncore-sim2","codeSnippet":"ArrayList < Score > scores = new ArrayList < Score > ();\n    ArrayList < Score > topScores = new ArrayList < Score > ();","status":"noncore-sim","id":436,"createdAt":"2023-05-18T17:00:33.216Z"},{"fileName":"Clone283.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":11,"character":34},"text":"core-sim1","codeSnippet":"Pattern p = Pattern.compile (\"\\\\(([A,R]?),(\\\\w+?),(\\\\d+?)\\\\)\");\n    Matcher m = p.matcher (input);","status":"core-sim","id":437,"createdAt":"2023-05-18T17:00:48.332Z"},{"fileName":"Clone284.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":18,"character":5},"text":"core-diff1","codeSnippet":"try {\n        int i = Integer.parseInt (cin.readLine ());\n    } catch (ArithmeticException e) {\n    } catch (Exception e) {\n        System.exit (0);\n    } finally {\n        System.out.println (\"Won't be executed\");\n        System.out.println (\"No error\");\n    }","status":"core-diff","id":438,"createdAt":"2023-05-18T17:02:25.920Z"},{"fileName":"Clone284.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":38,"character":42},"text":"core-diff1","codeSnippet":"Runnable runnable = new Runnable () {\n        @Override\n        public void run () {\n            try {\n                printThreads (\"Daemon Thread printing\");\n                Thread.sleep (10000);\n            } catch (Exception e) {\n            } finally {\n                System.out.println (\"finally\");\n            }\n        }}\n    ;\n    Thread daemonThread = new Thread (runnable);\n    daemonThread.setDaemon (Boolean.TRUE);\n    daemonThread.setName (\"My Daemon Thread\");\n    daemonThread.start ();\n    printThreads (\"main Thread Printing\");","status":"core-diff","id":439,"createdAt":"2023-05-18T17:02:39.956Z"},{"fileName":"Clone284.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":58},"text":"noncore-diff1","codeSnippet":"DataInputStream cin = new DataInputStream (System.in);","status":"noncore-diff","id":440,"createdAt":"2023-05-18T17:02:46.258Z"},{"fileName":"Clone286.java","fileLine":12,"positionStart":{"line":12,"character":12},"positionEnd":{"line":29,"character":41},"text":"core-diff1","codeSnippet":"JFrame main_frame = new JFrame ();\n            main_frame.setPreferredSize (new Dimension (1200, 300));\n            main_frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n            ArrayList < String > nonsense = new ArrayList < String > (Arrays.asList (\"Lorem ipsum dolor sit amet, sed dolore vivendum ut\", \"pri an soleat causae doctus.\", \"Alienum abhorreant mea ea\", \"cum malorum diceret ei. Pri oratio invidunt consequat ne.\", \"Ius tritani detraxit scribentur et\", \"has detraxit legendos intellegat at\", \"quo oporteat constituam ex\"));\n            JTable example_table = new JTable (10, 4);\n            example_table.setRowHeight (example_table.getRowHeight () * 2);\n            DefaultCellEditor cell_editor = new SelectableNonEditableCellEditor (new JTextField ());\n            cell_editor.setClickCountToStart (1);\n            example_table.setDefaultEditor (Object.class, cell_editor);\n            TableCellRenderer renderer = new SelectableNonEditableTableRenderer ();\n            example_table.setDefaultRenderer (Object.class, renderer);\n            for (int i = 0;\n            i < 10; i ++) {\n                example_table.setValueAt (nonsense.get (i % nonsense.size ()), i, i % 4);\n            }\n            main_frame.getContentPane ().add (new JScrollPane (example_table));\n            main_frame.pack ();\n            main_frame.setVisible (true);","status":"core-diff","id":442,"createdAt":"2023-05-18T17:04:31.700Z"},{"fileName":"Clone286.java","fileLine":38,"positionStart":{"line":38,"character":12},"positionEnd":{"line":38,"character":63},"text":"core-diff1","codeSnippet":"createAndShowGUI (new JTableTest ().panel, \"Test\");","status":"core-diff","id":443,"createdAt":"2023-05-18T17:04:38.169Z"},{"fileName":"Clone286.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":37,"character":28},"text":"noncore-sim1","codeSnippet":"SwingUtilities.invokeLater (new Runnable () {\n        @Override\n        public void run () {","status":"noncore-sim","id":444,"createdAt":"2023-05-18T17:04:43.774Z"},{"fileName":"Clone286.java","fileLine":39,"positionStart":{"line":39,"character":8},"positionEnd":{"line":40,"character":6},"text":"noncore-sim1","codeSnippet":"}}\n    );","status":"noncore-sim","id":445,"createdAt":"2023-05-18T17:05:01.549Z"},{"fileName":"Clone286.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":28},"text":"noncore-sim1","codeSnippet":"EventQueue.invokeLater (new Runnable () {\n        @Override\n        public void run () {","status":"noncore-sim","id":446,"createdAt":"2023-05-18T17:05:08.243Z"},{"fileName":"Clone286.java","fileLine":30,"positionStart":{"line":30,"character":8},"positionEnd":{"line":31,"character":6},"text":"noncore-sim1","codeSnippet":"}}\n    );","status":"noncore-sim","id":447,"createdAt":"2023-05-18T17:05:14.746Z"},{"fileName":"Clone291.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":15,"character":7},"text":"core-diff1","codeSnippet":"view.setOnClickListener ((v) -> {\n        int adapterPosition = getAdapterPosition ();\n        if (adapterPosition >= 0) {\n            clicks.onItemSelected (myObject, adapterPosition);\n        }\n    });","status":"core-diff","id":448,"createdAt":"2023-05-18T17:05:50.970Z"},{"fileName":"Clone291.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":25,"character":36},"text":"core-diff1","codeSnippet":"image = (ImageView) itemView.findViewById (R.id.horizontal_list_image);\n    title = (TextView) itemView.findViewById (R.id.horizontal_list_title);\n    price = (TextView) itemView.findViewById (R.id.horizontal_list_price);\n    image.setOnClickListener (this);\n    title.setOnClickListener (this);\n    price.setOnClickListener (this);","status":"core-diff","id":449,"createdAt":"2023-05-18T17:05:57.238Z"},{"fileName":"Clone291.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":21},"text":"noncore-sim1","codeSnippet":"super (itemView);","status":"noncore-sim","id":450,"createdAt":"2023-05-18T17:06:06.520Z"},{"fileName":"Clone291.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":17},"text":"noncore-sim1","codeSnippet":"super (view);","status":"noncore-sim","id":451,"createdAt":"2023-05-18T17:06:11.716Z"},{"fileName":"Clone292.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":16,"character":16},"text":"core-diff1","codeSnippet":"long threadId = Thread.currentThread ().getId ();\n    System.out.println (\"I am thread \" + threadId);\n    response = response + \"Thread Id = \" + threadId;\n    t.sendResponseHeaders (200, response.length ());\n    OutputStream os = t.getResponseBody ();\n    os.write (response.getBytes ());\n    os.close ();","status":"core-diff","id":452,"createdAt":"2023-05-18T17:07:38.294Z"},{"fileName":"Clone292.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":44,"character":5},"text":"core-diff1","codeSnippet":"byte [] inBytes = getBytes (ex.getRequestBody ());\n    ex.getRequestBody ().close ();\n    final ByteArrayInputStream newInput = new ByteArrayInputStream (inBytes);\n    final ServletInputStream is = new ServletInputStream () {\n        @Override\n        public int read () throws IOException {\n            return newInput.read ();\n        }}\n    ;\n    Map < String, String [] > parsePostData = new HashMap < > ();\n    try {\n        parsePostData.putAll (HttpUtils.parseQueryString (ex.getRequestURI ().getQuery ()));\n        parsePostData.putAll (HttpUtils.parsePostData (inBytes.length, is));\n    } catch (IllegalArgumentException e) {\n        newInput.reset ();\n    }\n    final Map < String, String [] > postData = parsePostData;\n    RequestWrapper req = new RequestWrapper (createUnimplementAdapter (HttpServletRequest.class), ex, postData, is);\n    ResponseWrapper resp = new ResponseWrapper (createUnimplementAdapter (HttpServletResponse.class), ex);\n    try {\n        servlet.service (req, resp);\n        resp.complete ();\n    } catch (ServletException e) {\n        throw new IOException (e);\n    }","status":"core-diff","id":453,"createdAt":"2023-05-18T17:07:48.753Z"},{"fileName":"Clone292.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":45},"text":"noncore-diff1","codeSnippet":"String response = \"This is the response\";","status":"noncore-diff","id":454,"createdAt":"2023-05-18T17:07:56.678Z"},{"fileName":"Clone304.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":17,"character":5},"text":"core-diff1","codeSnippet":"try {\n        test (bytes);\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }","status":"core-diff","id":455,"createdAt":"2023-05-19T08:36:31.441Z"},{"fileName":"Clone304.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":32,"character":5},"text":"core-diff2","codeSnippet":"try {\n        for (int read = input.read (buffer, 0, buffer.length);\n        read != - 1; read = input.read (buffer, 0, buffer.length)) {\n            output.append (buffer, 0, read);\n        }\n    } catch (IOException ignore) {\n    }","status":"core-diff","id":456,"createdAt":"2023-05-19T08:36:45.044Z"},{"fileName":"Clone304.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":43},"text":"noncore-sim1","codeSnippet":"byte [] bytes = new byte [1024 * 1024];","status":"noncore-sim","id":457,"createdAt":"2023-05-19T08:37:04.783Z"},{"fileName":"Clone304.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":24,"character":53},"text":"noncore-sim1","codeSnippet":"final char [] buffer = new char [CHARS_PER_PAGE];","status":"noncore-sim","id":458,"createdAt":"2023-05-19T08:37:11.854Z"},{"fileName":"Clone304.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":24},"text":"noncore-diff1","codeSnippet":"log (\"App started\");","status":"noncore-diff","id":459,"createdAt":"2023-05-19T08:39:26.085Z"},{"fileName":"Clone304.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":12,"character":30},"text":"noncore-diff1","codeSnippet":"new Random ().nextBytes (bytes);\n    log (\"Stream is ready\\n\");","status":"noncore-diff","id":460,"createdAt":"2023-05-19T08:39:43.268Z"},{"fileName":"Clone304.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":23,"character":36},"text":"noncore-diff2","codeSnippet":"InputStream is = StringFromFileFast.class.getResourceAsStream (\"file.txt\");\n    InputStreamReader input = new InputStreamReader (is);\n    final int CHARS_PER_PAGE = 5000;","status":"noncore-diff","id":461,"createdAt":"2023-05-19T08:40:23.892Z"},{"fileName":"Clone304.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":62},"text":"noncore-diff2","codeSnippet":"StringBuilder output = new StringBuilder (CHARS_PER_PAGE);","status":"noncore-diff","id":462,"createdAt":"2023-05-19T08:40:40.320Z"},{"fileName":"Clone304.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":34,"character":30},"text":"noncore-diff3","codeSnippet":"String text = output.toString ();\n    System.out.println (text);","status":"noncore-diff","id":463,"createdAt":"2023-05-19T08:40:46.702Z"},{"fileName":"Clone307.java","fileLine":25,"positionStart":{"line":25,"character":3},"positionEnd":{"line":29,"character":30},"text":"core-sim1","codeSnippet":" while ((line = reader.readLine ()) != null) {\n        result.append (flag ? newLine : \"\").append (line);\n        flag = true;\n    }\n    return result.toString ();","status":"core-sim","id":464,"createdAt":"2023-05-19T08:48:37.659Z"},{"fileName":"Clone307.java","fileLine":12,"positionStart":{"line":12,"character":8},"positionEnd":{"line":15,"character":39},"text":"core-sim1","codeSnippet":"while ((length = inputStream.read (buffer)) != - 1) {\n            result.write (buffer, 0, length);\n        }\n        return result.toString (UTF_8);","status":"core-sim","id":465,"createdAt":"2023-05-19T08:48:49.906Z"},{"fileName":"Clone307.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":19},"text":"noncore-diff1","codeSnippet":"try (ByteArrayOutputStream result = new ByteArrayOutputStream ()) {\n        byte [] buffer = new byte [1024];\n        int length;","status":"noncore-diff","id":466,"createdAt":"2023-05-19T08:49:42.205Z"},{"fileName":"Clone307.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":16,"character":5},"text":"noncore-diff1","codeSnippet":"}","status":"noncore-diff","id":467,"createdAt":"2023-05-19T08:49:48.088Z"},{"fileName":"Clone307.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":24,"character":25},"text":"noncore-diff1","codeSnippet":"String newLine = System.getProperty (\"line.separator\");\n    BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream));\n    StringBuilder result = new StringBuilder (UTF_8);\n    String line;\n    boolean flag = false;","status":"noncore-diff","id":468,"createdAt":"2023-05-19T08:49:56.130Z"},{"fileName":"Clone310.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":14,"character":5},"text":"core-sim1","codeSnippet":"for (char c : s.toCharArray ()) {\n        if (c < 256) {\n            arr [c] ++;\n        }\n    }","status":"core-sim","id":469,"createdAt":"2023-05-19T08:51:28.001Z"},{"fileName":"Clone310.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":37,"character":5},"text":"core-sim1","codeSnippet":"char [] c = s.toCharArray ();\n    for (int i = 0;\n    i < c.length; i ++) {\n        Integer count = 0;\n        if (letterCountMap.containsKey (c [i])) {\n            count = letterCountMap.get (c [i]) + 1;\n        } else {\n            count = 1;\n        }\n        letterCountMap.put (c [i], count);\n    }","status":"core-sim","id":470,"createdAt":"2023-05-19T08:51:39.765Z"},{"fileName":"Clone310.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":22,"character":5},"text":"core-sim2","codeSnippet":"for (int i = 0;\n    i != 256; i ++) {\n        if (arr [i] != 0) {\n            System.out.print ((char) i);\n            System.out.print (\" : \");\n            System.out.println (arr [i]);\n        }\n    }","status":"core-sim","id":471,"createdAt":"2023-05-19T08:51:46.737Z"},{"fileName":"Clone310.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":40,"character":5},"text":"core-sim2","codeSnippet":"for (Map.Entry < String, String > entry : letterCountMap.entrySet ()) {\n        System.out.println (entry.getValue () + \"( for\" + entry.getKey () + \" )\");\n    }","status":"core-sim","id":472,"createdAt":"2023-05-19T08:51:52.138Z"},{"fileName":"Clone310.java","fileLine":9,"positionStart":{"line":9,"character":3},"positionEnd":{"line":9,"character":31},"text":"noncore-diff1","codeSnippet":" int [] arr = new int [256];","status":"noncore-diff","id":473,"createdAt":"2023-05-19T08:52:16.668Z"},{"fileName":"Clone310.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":26,"character":90},"text":"noncore-diff2","codeSnippet":"HashMap < Character, Integer > letterCountMap = new HashMap < Character, Integer > ();","status":"noncore-diff","id":474,"createdAt":"2023-05-19T08:52:22.666Z"},{"fileName":"Clone322.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":16,"character":5},"text":"core-sim1","codeSnippet":"while (true) {\n        if (console.hasNextInt ()) {\n            System.out.print (\"**hours input accepted**\");\n            return console.nextInt ();\n        }\n        console.nextLine ();\n        System.out.print (\", please re-enter the hours again:\");\n    }","status":"core-sim","id":475,"createdAt":"2023-05-19T09:32:25.999Z"},{"fileName":"Clone322.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":38,"character":17},"text":"core-sim1","codeSnippet":"boolean hoursNotOk = true;\n    do {\n        try {\n            System.out.println (\"Here\");\n            hours = console.nextInt ();\n            hoursNotOk = false;\n        } catch (Exception e) {\n            e.printStackTrace ();\n            console.nextLine ();\n        } finally {\n            if (hoursNotOk) {\n                System.out.println (\", please re-enter the hours again:\");\n            } else {\n                System.out.println (\"**hours input accepted**\");\n            }\n        }\n    } while (hoursNotOk);\n    return hours;","status":"core-sim","id":476,"createdAt":"2023-05-19T09:32:46.090Z"},{"fileName":"Clone322.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":18},"text":"noncore-diff1","codeSnippet":"int hours = 0;","status":"noncore-diff","id":477,"createdAt":"2023-05-19T09:32:52.333Z"},{"fileName":"Clone337.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":50,"character":5},"text":"core-diff1","codeSnippet":"for (int i = 0;\n    i < test.length (); i ++) {\n        switch (test.charAt (i)) {\n            case 'a' :\n            case 'A' :\n                countA ++;\n                break;\n            case 'o' :\n            case 'O' :\n                countO ++;\n                break;\n            case ' ' :\n                countSpace ++;\n                break;\n            case '.' :\n                countDot ++;\n                break;\n        }\n    }","status":"core-diff","id":478,"createdAt":"2023-05-19T09:36:01.905Z"},{"fileName":"Clone337.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":26,"character":5},"text":"core-diff1","codeSnippet":"for (int i = 0;\n    i < str.length (); i ++) {\n        int j = str.charAt (i) - 'a';\n        if (ar [j] == null) {\n            ar [j] = 1;\n        } else {\n            ar [j] += 1;\n        }\n    }\n    for (int i = 0;\n    i < ar.length; i ++) {\n        if (ar [i] != null && ar [i] > 1) {\n            char c = (char) (97 + i);\n            System.out.println (\"'\" + c + \"' comes \" + ar [i] + \" times.\");\n        }\n    }","status":"core-diff","id":479,"createdAt":"2023-05-19T09:36:09.356Z"},{"fileName":"Clone337.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":37},"text":"noncore-diff1","codeSnippet":"String str = \"abcdabghplhhnfl\".toLowerCase ();\n    Integer [] ar = new Integer [26];","status":"noncore-diff","id":480,"createdAt":"2023-05-19T09:36:15.253Z"},{"fileName":"Clone337.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":31,"character":61},"text":"noncore-diff1","codeSnippet":"String test = \"The quick brown fox jumped over the lazy dog.\";\n    int countA = 0, countO = 0, countSpace = 0, countDot = 0;","status":"noncore-diff","id":481,"createdAt":"2023-05-19T09:36:20.125Z"},{"fileName":"Clone337.java","fileLine":52,"positionStart":{"line":52,"character":1},"positionEnd":{"line":52,"character":1},"text":"noncore-diff2","codeSnippet":"","status":"noncore-diff","id":482,"createdAt":"2023-05-19T09:36:28.503Z"},{"fileName":"Clone337.java","fileLine":51,"positionStart":{"line":51,"character":4},"positionEnd":{"line":52,"character":0},"text":"noncore-diff2","codeSnippet":"System.out.printf (\"%s%d%n%s%d%n%s%d%n%s%d\", \"A: \", countA, \"O: \", countO, \"Space: \", countSpace, \"Dot: \", countDot);\n","status":"noncore-diff","id":484,"createdAt":"2023-05-19T09:40:56.184Z"},{"fileName":"Clone343.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":45,"character":5},"text":"core-diff1","codeSnippet":"for (int i = 0;\n    i < test.length (); i ++) {\n        switch (test.charAt (i)) {\n            case 'a' :\n            case 'A' :\n                countA ++;\n                break;\n            case 'o' :\n            case 'O' :\n                countO ++;\n                break;\n            case ' ' :\n                countSpace ++;\n                break;\n            case '.' :\n                countDot ++;\n                break;\n        }\n    }","status":"core-diff","id":486,"createdAt":"2023-05-19T09:52:47.398Z"},{"fileName":"Clone343.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":26,"character":61},"text":"noncore-diff1","codeSnippet":"String test = \"The quick brown fox jumped over the lazy dog.\";\n    int countA = 0, countO = 0, countSpace = 0, countDot = 0;","status":"noncore-diff","id":487,"createdAt":"2023-05-19T09:57:50.588Z"},{"fileName":"Clone343.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":20,"character":5},"text":"core-diff1","codeSnippet":"String s1 = sc.nextLine ();\n    for (int i = 0;\n    i < s1.length (); i ++) {\n        if (! hm.containsKey (s1.charAt (i))) {\n            hm.put (s1.charAt (i), (Integer) 1);\n        } else {\n            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);\n        }\n    }","status":"core-diff","id":488,"createdAt":"2023-05-19T09:58:15.066Z"},{"fileName":"Clone343.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":41},"text":"noncore-diff1","codeSnippet":"HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();\n    System.out.println (\"Enter an String:\");\n    Scanner sc = new Scanner (System.in);","status":"noncore-diff","id":489,"createdAt":"2023-05-19T09:58:27.757Z"},{"fileName":"Clone343.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":52},"text":"noncore-diff2","codeSnippet":"System.out.println (\"The Charecters are:\" + hm);","status":"noncore-diff","id":490,"createdAt":"2023-05-19T09:58:34.477Z"},{"fileName":"Clone343.java","fileLine":46,"positionStart":{"line":46,"character":4},"positionEnd":{"line":47,"character":0},"text":"noncore-diff2","codeSnippet":"System.out.printf (\"%s%d%n%s%d%n%s%d%n%s%d\", \"A: \", countA, \"O: \", countO, \"Space: \", countSpace, \"Dot: \", countDot);\n","status":"noncore-diff","id":491,"createdAt":"2023-05-19T09:58:42.137Z"},{"fileName":"Clone344.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":12,"character":31},"text":"core-sim1","codeSnippet":"Scanner sc = new Scanner (System.in);\n    String s1 = sc.nextLine ();","status":"core-sim","id":492,"createdAt":"2023-05-19T10:00:22.263Z"},{"fileName":"Clone344.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":27,"character":31},"text":"core-sim1","codeSnippet":"Scanner sc = new Scanner (System.in);\n    String st = sc.nextLine ();","status":"core-sim","id":493,"createdAt":"2023-05-19T10:00:28.408Z"},{"fileName":"Clone344.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":43,"character":5},"text":"core-sim2","codeSnippet":"for (int i = 0;\n    i < st.length (); i ++) {\n        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;\n    }\n    for (int i = 0;\n    i < 256; i ++) {\n        char ch = (char) i;\n        if (ar [i] > 0) {\n            if (ar [i] == 1) {\n                System.out.print (ch);\n            } else {\n                System.out.print (ch + \"\" + ar [i]);\n            }\n        }\n    }","status":"core-sim","id":494,"createdAt":"2023-05-19T10:00:57.076Z"},{"fileName":"Clone344.java","fileLine":13,"positionStart":{"line":13,"character":3},"positionEnd":{"line":20,"character":5},"text":"core-sim2","codeSnippet":" for (int i = 0;\n    i < s1.length (); i ++) {\n        if (! hm.containsKey (s1.charAt (i))) {\n            hm.put (s1.charAt (i), (Integer) 1);\n        } else {\n            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);\n        }\n    }","status":"core-sim","id":495,"createdAt":"2023-05-19T10:01:05.092Z"},{"fileName":"Clone344.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":44},"text":"noncore-sim1","codeSnippet":"System.out.println (\"Enter an String:\");","status":"noncore-sim","id":496,"createdAt":"2023-05-19T10:01:15.347Z"},{"fileName":"Clone344.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":78},"text":"noncore-diff1","codeSnippet":"HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();","status":"noncore-diff","id":497,"createdAt":"2023-05-19T10:14:18.278Z"},{"fileName":"Clone344.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":28,"character":30},"text":"noncore-diff1","codeSnippet":"int [] ar = new int [256];","status":"noncore-diff","id":498,"createdAt":"2023-05-19T10:14:26.874Z"},{"fileName":"Clone344.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":42},"text":"noncore-sim1","codeSnippet":"System.out.print (\"Enter the String\");","status":"noncore-sim","id":499,"createdAt":"2023-05-19T10:14:31.120Z"},{"fileName":"Clone344.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":52},"text":"noncore-diff2","codeSnippet":"System.out.println (\"The Charecters are:\" + hm);","status":"noncore-diff","id":500,"createdAt":"2023-05-19T10:14:39.837Z"},{"fileName":"Clone345.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":21,"character":5},"text":"core-diff1","codeSnippet":"for (char val : arr) {\n        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);\n    }\n    for (Entry < Character, Integer > entry : map.entrySet ()) {\n        if (entry.getValue () > 1) {\n            Character key = entry.getKey ();\n            Object value = entry.getValue ();\n            System.out.println (key + \":\" + value);\n        }\n    }","status":"core-diff","id":501,"createdAt":"2023-05-19T10:15:22.482Z"},{"fileName":"Clone345.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":45,"character":5},"text":"core-diff1","codeSnippet":"for (int i = 0;\n    i < test.length (); i ++) {\n        switch (test.charAt (i)) {\n            case 'a' :\n            case 'A' :\n                countA ++;\n                break;\n            case 'o' :\n            case 'O' :\n                countO ++;\n                break;\n            case ' ' :\n                countSpace ++;\n                break;\n            case '.' :\n                countDot ++;\n                break;\n        }\n    }","status":"core-diff","id":502,"createdAt":"2023-05-19T10:15:35.667Z"},{"fileName":"Clone345.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":79},"text":"noncore-diff1","codeSnippet":"String name = \"AnuvratAnuvra\";\n    char [] arr = name.toCharArray ();\n    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();","status":"noncore-diff","id":503,"createdAt":"2023-05-19T10:15:48.416Z"},{"fileName":"Clone345.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":26,"character":61},"text":"noncore-diff1","codeSnippet":"String test = \"The quick brown fox jumped over the lazy dog.\";\n    int countA = 0, countO = 0, countSpace = 0, countDot = 0;","status":"noncore-diff","id":504,"createdAt":"2023-05-19T10:15:55.234Z"},{"fileName":"Clone345.java","fileLine":46,"positionStart":{"line":46,"character":3},"positionEnd":{"line":46,"character":121},"text":"noncore-diff2","codeSnippet":" System.out.printf (\"%s%d%n%s%d%n%s%d%n%s%d\", \"A: \", countA, \"O: \", countO, \"Space: \", countSpace, \"Dot: \", countDot);","status":"noncore-diff","id":505,"createdAt":"2023-05-19T10:16:10.745Z"},{"fileName":"Clone349.java","fileLine":12,"positionStart":{"line":12,"character":8},"positionEnd":{"line":14,"character":20},"text":"core-diff1","codeSnippet":"xe.setPersistenceDelegate (DefaultTableModel.class, new DefaultTableModelPersistenceDelegate ());\n        xe.writeObject (model);\n        xe.close ();","status":"core-diff","id":506,"createdAt":"2023-05-19T10:27:23.329Z"},{"fileName":"Clone349.java","fileLine":16,"positionStart":{"line":16,"character":8},"positionEnd":{"line":16,"character":32},"text":"core-diff1","codeSnippet":"textArea.read (r, null);","status":"core-diff","id":508,"createdAt":"2023-05-19T10:30:41.151Z"},{"fileName":"Clone349.java","fileLine":26,"positionStart":{"line":26,"character":8},"positionEnd":{"line":27,"character":31},"text":"core-diff2","codeSnippet":"model = (DefaultTableModel) xd.readObject ();\n        table.setModel (model);","status":"core-diff","id":509,"createdAt":"2023-05-19T10:30:56.017Z"},{"fileName":"Clone349.java","fileLine":24,"positionStart":{"line":24,"character":8},"positionEnd":{"line":25,"character":44},"text":"noncore-diff1","codeSnippet":"InputStream is = new BufferedInputStream (new FileInputStream (file));\n        XMLDecoder xd = new XMLDecoder (is);","status":"noncore-diff","id":510,"createdAt":"2023-05-19T10:31:42.417Z"},{"fileName":"Clone349.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":11,"character":44},"text":"noncore-diff1","codeSnippet":"OutputStream os = new BufferedOutputStream (new FileOutputStream (file));\n        XMLEncoder xe = new XMLEncoder (os);","status":"noncore-diff","id":511,"createdAt":"2023-05-19T10:32:08.538Z"},{"fileName":"Clone349.java","fileLine":15,"positionStart":{"line":15,"character":8},"positionEnd":{"line":15,"character":100},"text":"noncore-diff2","codeSnippet":"Reader r = new BufferedReader (new InputStreamReader (new FileInputStream (file), \"UTF-8\"));","status":"noncore-diff","id":512,"createdAt":"2023-05-19T10:32:23.769Z"},{"fileName":"Clone349.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":9},"text":"noncore-sim1","codeSnippet":"try {","status":"noncore-sim","id":513,"createdAt":"2023-05-19T10:32:29.024Z"},{"fileName":"Clone349.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":19,"character":5},"text":"noncore-sim1","codeSnippet":"} catch (IOException ex) {\n        ex.printStackTrace ();\n    }","status":"noncore-sim","id":514,"createdAt":"2023-05-19T10:32:43.045Z"},{"fileName":"Clone349.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":9},"text":"noncore-sim1","codeSnippet":"try {","status":"noncore-sim","id":515,"createdAt":"2023-05-19T10:32:49.107Z"},{"fileName":"Clone349.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":30,"character":5},"text":"noncore-sim1","codeSnippet":"} catch (IOException ex) {\n        ex.printStackTrace ();\n    }","status":"noncore-sim","id":516,"createdAt":"2023-05-19T10:32:55.751Z"},{"fileName":"Clone351.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":16,"character":14},"text":"core-diff1","codeSnippet":"switch (requestCode) {\n        case Constants.PERMISSIONS_REQUEST_CALL_PHONE :\n            {\n                if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    checkPermissionsAndCall ();\n                }\n            }}","status":"core-diff","id":518,"createdAt":"2023-05-24T13:09:04.593Z"},{"fileName":"Clone351.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":44},"text":"noncore-diff1","codeSnippet":"int index = (requestCode>> 16) & 0xffff;","status":"noncore-diff","id":519,"createdAt":"2023-05-24T13:10:35.239Z"},{"fileName":"Clone351.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":37,"character":5},"text":"core-diff1","codeSnippet":"if (index != 0) {\n        index --;\n        String who = mPendingFragmentActivityResults.get (index);\n        mPendingFragmentActivityResults.remove (index);\n        if (who == null) {\n            Log.w (TAG, \"Activity result delivered for unknown Fragment.\");\n            return;\n        }\n        Fragment frag = mFragments.findFragmentByWho (who);\n        if (frag == null) {\n            Log.w (TAG, \"Activity result no fragment exists for who: \" + who);\n        } else {\n            frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);\n        }\n    }","status":"core-diff","id":520,"createdAt":"2023-05-24T13:24:26.043Z"},{"fileName":"Clone355.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":59,"character":5},"text":"core-sim1","codeSnippet":"int rightValue = i >= 0 && i < mat.length - 1 && mat [i] [j] < mat [i + 1] [j] ? mat [i + 1] [j] : mat [i] [j];\n    int belowValue = j >= 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j + 1] ? mat [i] [j + 1] : mat [i] [j];\n    int aboveValue = i > 0 && i < mat.length - 1 && mat [i] [j] < mat [i - 1] [j] ? mat [i - 1] [j] : mat [i] [j];\n    int leftValue = j > 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j - 1] ? mat [i] [j - 1] : mat [i] [j];\n    if (rightValue > leftValue) {\n        if (rightValue > belowValue) {\n            if (rightValue > aboveValue) {\n                printPath (mat, i + 1, j);\n            } else {\n                printPath (mat, i, j + 1);\n            }\n        } else {\n            if (belowValue > aboveValue) {\n                printPath (mat, i - 1, j);\n            } else {\n                printPath (mat, i, j + 1);\n            }\n        }\n    } else {\n        if (leftValue > belowValue) {\n            if (leftValue > aboveValue) {\n                printPath (mat, i - 1, j);\n            } else {\n                printPath (mat, i, j + 1);\n            }\n        } else {\n            if (belowValue > aboveValue) {\n                printPath (mat, i - 1, j);\n            } else {\n                printPath (mat, i, j + 1);\n            }\n        }\n    }","status":"core-sim","id":521,"createdAt":"2023-05-24T13:32:25.653Z"},{"fileName":"Clone355.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":18,"character":5},"text":"core-sim1","codeSnippet":"if (i >= 0 && i < mat.length - 1 && mat [i] [j] < mat [i + 1] [j]) {\n        printPath (mat, i + 1, j);\n    } else if (j >= 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j + 1]) {\n        printPath (mat, i, j + 1);\n    } else if (i > 0 && i < mat.length - 1 && mat [i] [j] < mat [i - 1] [j]) {\n        printPath (mat, i - 1, j);\n    } else if (j > 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j - 1]) {\n        printPath (mat, i, j - 1);\n    }","status":"core-sim","id":522,"createdAt":"2023-05-24T13:32:34.846Z"},{"fileName":"Clone355.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":26,"character":49},"text":"noncore-sim1","codeSnippet":"System.out.println (\"(\" + i + \",\" + j + \")\");","status":"noncore-sim","id":523,"createdAt":"2023-05-24T13:32:53.465Z"},{"fileName":"Clone355.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":49},"text":"noncore-sim1","codeSnippet":"System.out.println (\"(\" + i + \",\" + j + \")\");","status":"noncore-sim","id":524,"createdAt":"2023-05-24T13:33:03.846Z"},{"fileName":"Clone355.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":25,"character":5},"text":"noncore-diff1","codeSnippet":"if (mat.length == 0 || mat [0].length == 0) {\n        System.out.println (\"Empty matrix\");\n        return;\n    }","status":"noncore-diff","id":525,"createdAt":"2023-05-24T13:33:11.573Z"},{"fileName":"Clone363.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":56},"text":"noncore-sim1","codeSnippet":"CustomClassLoader loader = new CustomClassLoader ();","status":"noncore-sim","id":526,"createdAt":"2023-05-24T13:50:05.492Z"},{"fileName":"Clone363.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":42},"text":"noncore-sim1","codeSnippet":"Class < Foo > fooClass = loadClass ();","status":"noncore-sim","id":528,"createdAt":"2023-05-24T14:02:36.698Z"},{"fileName":"Clone363.java","fileLine":25,"positionStart":{"line":25,"character":8},"positionEnd":{"line":26,"character":36},"text":"core-diff1","codeSnippet":"Class < ? > c = loader.findClass (\"sample.Sample\");\n        Object o = c.newInstance ();","status":"core-diff","id":529,"createdAt":"2023-05-24T14:05:15.720Z"},{"fileName":"Clone363.java","fileLine":10,"positionStart":{"line":10,"character":3},"positionEnd":{"line":19,"character":5},"text":"core-diff2","codeSnippet":" initializeClass (fooClass);\n    URLClassLoader myClassLoader = ((URLClassLoader) InitializeClassMultipleTimes.class.getClassLoader ());\n    URL [] urls = myClassLoader.getURLs ();\n    for (int i = 0;\n    i < 2; i ++) {\n        URLClassLoader newClassLoader = new URLClassLoader (urls, null);\n        System.out.format (\"%nLoading class using another class loader%n\", Foo.class.getSimpleName ());\n        Class < ? > fooClassAgain = Class.forName (fooClass.getName (), false, newClassLoader);\n        initializeClass (fooClassAgain);\n    }","status":"core-diff","id":530,"createdAt":"2023-05-24T14:05:31.040Z"},{"fileName":"Clone363.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":24,"character":9},"text":"noncore-diff1","codeSnippet":"try {","status":"noncore-diff","id":531,"createdAt":"2023-05-24T14:05:54.630Z"},{"fileName":"Clone363.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":33,"character":5},"text":"noncore-diff1","codeSnippet":"} catch (ClassNotFoundException e) {\n        e.printStackTrace ();\n    } catch (InstantiationException e) {\n        e.printStackTrace ();\n    } catch (IllegalAccessException e) {\n        e.printStackTrace ();\n    }","status":"noncore-diff","id":532,"createdAt":"2023-05-24T14:06:08.303Z"},{"fileName":"Clone364.java","fileLine":11,"positionStart":{"line":11,"character":8},"positionEnd":{"line":11,"character":18},"text":"noncore-sim1","codeSnippet":"int i = 0;","status":"noncore-sim","id":533,"createdAt":"2023-05-24T14:10:13.762Z"},{"fileName":"Clone364.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":14},"text":"noncore-sim1","codeSnippet":"int i = 0;","status":"noncore-sim","id":534,"createdAt":"2023-05-24T14:10:22.483Z"},{"fileName":"Clone364.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":30,"character":5},"text":"core-sim1","codeSnippet":"try {\n        i = 10;\n        return i;\n    } finally {\n        i = 40;\n        System.out.println (\"local: \" + i);\n    }","status":"core-sim","id":535,"createdAt":"2023-05-24T14:12:27.049Z"},{"fileName":"Clone364.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":9},"text":"core-sim1","codeSnippet":"int returnValue;\n    try {","status":"core-sim","id":536,"createdAt":"2023-05-24T14:12:34.219Z"},{"fileName":"Clone364.java","fileLine":12,"positionStart":{"line":12,"character":8},"positionEnd":{"line":19,"character":5},"text":"core-sim1","codeSnippet":"i = 10;\n        returnValue = i;\n        i = 40;\n        return returnValue;\n    } catch (RuntimeException e) {\n        i = 40;\n        throw e;\n    }","status":"core-sim","id":537,"createdAt":"2023-05-24T14:12:41.796Z"},{"fileName":"Clone365.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":5},"text":"core-sim1","codeSnippet":"if (s1.length () != s2.length ()) {\n        return false;\n    }","status":"core-sim","id":539,"createdAt":"2023-05-24T14:29:24.355Z"},{"fileName":"Clone365.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":32,"character":5},"text":"core-sim1","codeSnippet":"if (a.length () != b.length ()) {\n        return false;\n    }","status":"core-sim","id":540,"createdAt":"2023-05-24T14:29:35.826Z"},{"fileName":"Clone365.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":24,"character":16},"text":"core-sim2","codeSnippet":"for (int i = 0;\n    i < s1.length (); i ++) {\n        charCount [s1.charAt (i)] ++;\n        charCount [s2.charAt (i)] --;\n    }\n    for (int i = 0;\n    i < charCount.length; i ++) {\n        if (charCount [i] != 0) {\n            return false;\n        }\n    }\n    return true;","status":"core-sim","id":541,"createdAt":"2023-05-24T14:30:02.255Z"},{"fileName":"Clone365.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":46,"character":32},"text":"core-sim2","codeSnippet":"int found = 0;\n    for (int i = 0;\n    i < aArray.length; i ++) {\n        char eachA = aArray [i];\n        for (int k = 0;\n        k < bArray.length; k ++) {\n            if (eachA == bArray [k]) {\n                found ++;\n                bArray [k] = '\\uFFFF';\n                break;\n            }\n        }\n    }\n    return found == a.length ();","status":"core-sim","id":542,"createdAt":"2023-05-24T14:30:25.220Z"},{"fileName":"Clone365.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":37},"text":"noncore-diff1","codeSnippet":"int [] charCount = new int [256];","status":"noncore-diff","id":543,"createdAt":"2023-05-24T14:30:32.780Z"},{"fileName":"Clone365.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":29,"character":38},"text":"noncore-diff2","codeSnippet":"char [] aArray = a.toCharArray ();\n    char [] bArray = b.toCharArray ();","status":"noncore-diff","id":544,"createdAt":"2023-05-24T14:30:41.727Z"},{"fileName":"Clone368.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":43,"character":5},"text":"core-sim1","codeSnippet":"MyThread mt = new MyThread (sayThisManyTimes, saidHello);\n    mt.start ();\n    for (int i = 0;\n    i < sayThisManyTimes; i ++) {\n        while (saidHello.get ()) {\n        }\n        System.out.println (\"Hello \");\n        saidHello.set (true);\n    }","status":"core-sim","id":546,"createdAt":"2023-05-24T14:44:00.611Z"},{"fileName":"Clone368.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":16,"character":9},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < 6; i ++) {\n        Runnable helloTask = new Runnable () {\n            @Override\n            public void run () {\n                new ThreadSeq ().printHello ();\n            }}\n        ;","status":"core-sim","id":547,"createdAt":"2023-05-24T14:45:04.224Z"},{"fileName":"Clone368.java","fileLine":23,"positionStart":{"line":23,"character":8},"positionEnd":{"line":23,"character":43},"text":"core-sim1","codeSnippet":"Thread t1 = new Thread (helloTask);","status":"core-sim","id":548,"createdAt":"2023-05-24T14:45:14.446Z"},{"fileName":"Clone368.java","fileLine":25,"positionStart":{"line":25,"character":8},"positionEnd":{"line":25,"character":20},"text":"core-sim1","codeSnippet":"t1.start ();","status":"core-sim","id":549,"createdAt":"2023-05-24T14:45:24.223Z"},{"fileName":"Clone368.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":29,"character":5},"text":"core-sim1","codeSnippet":"}","status":"core-sim","id":550,"createdAt":"2023-05-24T14:48:52.936Z"},{"fileName":"Clone368.java","fileLine":26,"positionStart":{"line":26,"character":8},"positionEnd":{"line":28,"character":19},"text":"noncore-diff3","codeSnippet":"t1.join ();\n        t2.start ();\n        t2.join ();","status":"noncore-diff","id":553,"createdAt":"2023-05-24T14:52:56.345Z"},{"fileName":"Clone368.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":34,"character":56},"text":"noncore-diff4","codeSnippet":"int sayThisManyTimes = 5;\n    AtomicBoolean saidHello = new AtomicBoolean (false);","status":"noncore-diff","id":554,"createdAt":"2023-05-24T14:53:08.294Z"},{"fileName":"Clone370.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":15,"character":9},"text":"core-sim1","codeSnippet":"for (int i = 0;\n        i < 5; i ++) {\n            world.acquire ();\n            System.out.println (\"  World!\");\n            hello.release ();\n        }","status":"core-sim","id":555,"createdAt":"2023-05-24T14:54:50.798Z"},{"fileName":"Clone370.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":28,"character":5},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < sayThisManyTimes; i ++) {\n        while (! saidHello.get ()) {\n        }\n        System.out.println (\"World!\");\n        saidHello.set (false);\n    }","status":"core-sim","id":556,"createdAt":"2023-05-24T14:59:21.107Z"},{"fileName":"Clone370.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":9},"text":"noncore-diff1","codeSnippet":"try {","status":"noncore-diff","id":557,"createdAt":"2023-05-24T15:00:02.555Z"},{"fileName":"Clone370.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":18,"character":5},"text":"noncore-diff1","codeSnippet":"} catch (InterruptedException e) {\n        e.printStackTrace ();\n    }","status":"noncore-diff","id":558,"createdAt":"2023-05-24T15:00:11.706Z"},{"fileName":"Clone372.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":10,"character":78},"text":"core-diff1","codeSnippet":"UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());","status":"core-diff","id":559,"createdAt":"2023-05-24T15:02:51.066Z"},{"fileName":"Clone372.java","fileLine":30,"positionStart":{"line":30,"character":12},"positionEnd":{"line":42,"character":36},"text":"core-diff2","codeSnippet":"long startedAt = System.currentTimeMillis ();\n            SwingUtilities.invokeAndWait (new Runnable () {\n                @Override\n                public void run () {\n                    game.repaint ();\n                }}\n            );\n            long completedAt = System.currentTimeMillis ();\n            long sleepFor = 30 - (completedAt - startedAt);\n            if (sleepFor < 0) {\n                sleepFor = 30;\n            }\n            Thread.sleep (sleepFor);","status":"core-diff","id":560,"createdAt":"2023-05-24T15:10:46.685Z"},{"fileName":"Clone372.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":23,"character":28},"text":"core-diff3","codeSnippet":"frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    frame.setLayout (new BorderLayout ());\n    frame.add (game);\n    frame.pack ();\n    frame.setLocationRelativeTo (null);\n    frame.setVisible (true);","status":"core-diff","id":561,"createdAt":"2023-05-24T15:10:57.970Z"},{"fileName":"Clone372.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":9},"text":"noncore-sim1","codeSnippet":"try {","status":"noncore-sim","id":562,"createdAt":"2023-05-24T15:11:56.691Z"},{"fileName":"Clone372.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":15,"character":5},"text":"noncore-sim1","codeSnippet":"} catch (ClassNotFoundException ex) {\n    } catch (InstantiationException ex) {\n    } catch (IllegalAccessException ex) {\n    } catch (UnsupportedLookAndFeelException ex) {\n    }","status":"noncore-sim","id":563,"createdAt":"2023-05-24T15:12:04.170Z"},{"fileName":"Clone372.java","fileLine":29,"positionStart":{"line":29,"character":8},"positionEnd":{"line":29,"character":13},"text":"noncore-simq","codeSnippet":"try {","status":"noncore-sim","id":564,"createdAt":"2023-05-24T15:22:36.842Z"},{"fileName":"Clone372.java","fileLine":43,"positionStart":{"line":43,"character":8},"positionEnd":{"line":45,"character":9},"text":"noncore-sim1","codeSnippet":"} catch (Exception exp) {\n            exp.printStackTrace ();\n        }","status":"noncore-sim","id":565,"createdAt":"2023-05-24T15:23:40.009Z"},{"fileName":"Clone372.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":28,"character":21},"text":"noncore-diff1","codeSnippet":"while (true) {\n        game.move ();","status":"noncore-diff","id":566,"createdAt":"2023-05-24T15:23:47.268Z"},{"fileName":"Clone372.java","fileLine":46,"positionStart":{"line":46,"character":4},"positionEnd":{"line":46,"character":5},"text":"noncore-diff1","codeSnippet":"}","status":"noncore-diff","id":567,"createdAt":"2023-05-24T15:23:54.137Z"},{"fileName":"Clone372.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":17,"character":39},"text":"noncore-diff1","codeSnippet":"Game game = new Game ();\n    JFrame frame = new JFrame (\"Test\");","status":"noncore-diff","id":568,"createdAt":"2023-05-24T15:34:42.566Z"},{"fileName":"Clone375.java","fileLine":33,"positionStart":{"line":33,"character":12},"positionEnd":{"line":49,"character":13},"text":"core-diff1","codeSnippet":"while ((inputLine = in.readLine ()) != null) {\n                System.out.println (\"Received: \" + inputLine);\n                try {\n                    long pauseCommand = Long.parseLong (inputLine);\n                    pause = pauseCommand;\n                    out.println (\"OK, pausing for \" + inputLine + \" ms\");\n                } catch (NumberFormatException e) {\n                }\n                if (inputLine.equals (\"BYE\")) {\n                    out.println (\"OK, bye!\");\n                    break;\n                }\n                if (inputLine.equals (\"STOP\")) {\n                    out.println (\"OK, stopping!\");\n                    System.exit (1);\n                }\n            }","status":"core-diff","id":569,"createdAt":"2023-05-24T15:38:49.769Z"},{"fileName":"Clone375.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":24},"text":"core-diff2","codeSnippet":"while (appRunning) {","status":"core-diff","id":570,"createdAt":"2023-05-24T15:39:08.636Z"},{"fileName":"Clone375.java","fileLine":11,"positionStart":{"line":11,"character":8},"positionEnd":{"line":23,"character":5},"text":"core-diff2","codeSnippet":"try {\n            Thread.sleep (1000);\n        } catch (InterruptedException e) {\n        }\n        if (pause > 0) {\n            System.out.println (\"App pausing for \" + pause + \" ms\");\n            try {\n                Thread.sleep (pause);\n            } catch (InterruptedException e) {\n            }\n            pause = 0;\n        }\n    }","status":"core-diff","id":571,"createdAt":"2023-05-24T15:39:33.126Z"},{"fileName":"Clone375.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":10,"character":46},"text":"noncore-diff1","codeSnippet":"System.out.println (\"App running...\");","status":"noncore-diff","id":572,"createdAt":"2023-05-24T15:39:40.840Z"},{"fileName":"Clone375.java","fileLine":28,"positionStart":{"line":28,"character":8},"positionEnd":{"line":32,"character":29},"text":"noncore-diff2","codeSnippet":"System.out.println (\"New Communication Thread Started\");\n        try {\n            PrintWriter out = new PrintWriter (clientSocket.getOutputStream (), true);\n            BufferedReader in = new BufferedReader (new InputStreamReader (clientSocket.getInputStream ()));\n            String inputLine;","status":"noncore-diff","id":573,"createdAt":"2023-05-24T15:39:50.620Z"},{"fileName":"Clone375.java","fileLine":50,"positionStart":{"line":50,"character":12},"positionEnd":{"line":56,"character":9},"text":"noncore-diff2","codeSnippet":"out.close ();\n            in.close ();\n            clientSocket.close ();\n        } catch (IOException e) {\n            System.err.println (\"Problem with Communication Server\");\n            System.exit (1);\n        }","status":"noncore-diff","id":574,"createdAt":"2023-05-24T15:39:58.117Z"},{"fileName":"Clone376.java","fileLine":11,"positionStart":{"line":11,"character":8},"positionEnd":{"line":22,"character":10},"text":"core-sim1","codeSnippet":"public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {\n            FileVisitResult result = super.visitFile (file, attrs);\n            Path relativize = one.relativize (file);\n            Path fileInOther = other.resolve (relativize);\n            log.debug (\"=== comparing: {} to {}\", file, fileInOther);\n            byte [] otherBytes = Files.readAllBytes (fileInOther);\n            byte [] thisBytes = Files.readAllBytes (file);\n            if (! Arrays.equals (otherBytes, thisTypes)) {\n                throw new AssertionFailedError (file + \" is not equal to \" + fileInOther);\n            }\n            return result;\n        }}","status":"core-sim","id":575,"createdAt":"2023-05-24T15:49:00.490Z"},{"fileName":"Clone376.java","fileLine":41,"positionStart":{"line":41,"character":8},"positionEnd":{"line":50,"character":10},"text":"core-sim1","codeSnippet":"public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {\n            FileVisitResult result = super.visitFile (file, attrs);\n            Path relativize = expected.toPath ().relativize (file);\n            File fileInOther = generated.toPath ().resolve (relativize).toFile ();\n            log.debug (\"=== comparing: \" + file + \" to \" + fileInOther);\n            String expectedContents = FileUtils.readFileToString (file.toFile ());\n            String generatedContents = FileUtils.readFileToString (fileInOther);\n            assertEquals (\"(\" + fileInOther + \")  csv standard doesn't match expected (\" + file + \")!\", expectedContents, generatedContents);\n            return result;\n        }}","status":"core-sim","id":576,"createdAt":"2023-05-24T15:49:09.287Z"},{"fileName":"Clone376.java","fileLine":40,"positionStart":{"line":40,"character":9},"positionEnd":{"line":40,"character":18},"text":"noncore-sim1","codeSnippet":"@Override","status":"noncore-sim","id":577,"createdAt":"2023-05-24T15:52:42.248Z"},{"fileName":"Clone376.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":10,"character":17},"text":"noncore-sim1+","codeSnippet":"@Override","status":"noncore-sim","id":578,"createdAt":"2023-05-24T15:52:56.384Z"},{"fileName":"Clone376.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":64},"text":"noncore-sim2","codeSnippet":"Files.walkFileTree (one, new SimpleFileVisitor < Path > () {","status":"noncore-sim","id":579,"createdAt":"2023-05-24T15:53:05.126Z"},{"fileName":"Clone376.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":6},"text":"noncore-sim2","codeSnippet":");","status":"noncore-sim","id":580,"createdAt":"2023-05-24T15:53:26.597Z"},{"fileName":"Clone376.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":31,"character":79},"text":"noncore-sim2","codeSnippet":"Files.walkFileTree (expected.toPath (), new SimpleFileVisitor < Path > () {","status":"noncore-sim","id":581,"createdAt":"2023-05-24T15:53:39.244Z"},{"fileName":"Clone376.java","fileLine":51,"positionStart":{"line":51,"character":4},"positionEnd":{"line":51,"character":6},"text":"noncore-sim2","codeSnippet":");","status":"noncore-sim","id":582,"createdAt":"2023-05-24T15:53:54.906Z"},{"fileName":"Clone379.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":22,"character":5},"text":"core-diff1","codeSnippet":"while (true) {\n        int i = counter.get ();\n        if (i > MAX_COUNTER) {\n            break;\n        }\n        if (i % 2 == (odd ? 1 : 0)) {\n            System.out.println (i + (odd ? \" odd\" : \" even\"));\n            counter.incrementAndGet ();\n        } else {\n            emptyCycleCounter ++;\n            Thread.yield ();\n        }\n    }","status":"core-diff","id":583,"createdAt":"2023-05-24T16:13:52.081Z"},{"fileName":"Clone379.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":42,"character":5},"text":"core-diff2","codeSnippet":"for (int i = 0;\n    i <= 10; i += 2) {\n        synchronized (o) {\n            try {\n                while (turn) {\n                    o.wait ();\n                }\n            } catch (InterruptedException ie) {\n                ie.printStackTrace ();\n            } finally {\n                System.out.println (i);\n                turn = ! turn;\n                o.notifyAll ();\n            }\n        }\n    }","status":"core-diff","id":584,"createdAt":"2023-05-24T16:14:00.204Z"},{"fileName":"Clone379.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":30},"text":"noncore-diff1","codeSnippet":"int emptyCycleCounter = 0;","status":"noncore-diff","id":585,"createdAt":"2023-05-24T16:14:10.599Z"},{"fileName":"Clone379.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":113},"text":"noncore-diff2","codeSnippet":"System.out.println (\"Finished\" + (odd ? \" odd\" : \" even\") + \" with \" + emptyCycleCounter + \" empty cycles.\");","status":"noncore-diff","id":586,"createdAt":"2023-05-24T16:14:21.254Z"},{"fileName":"Clone380.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":22,"character":5},"text":"core-diff1","codeSnippet":"while (true) {\n        int i = counter.get ();\n        if (i > MAX_COUNTER) {\n            break;\n        }\n        if (i % 2 == (odd ? 1 : 0)) {\n            System.out.println (i + (odd ? \" odd\" : \" even\"));\n            counter.incrementAndGet ();\n        } else {\n            emptyCycleCounter ++;\n            Thread.yield ();\n        }\n    }","status":"core-diff","id":587,"createdAt":"2023-05-24T16:14:50.107Z"},{"fileName":"Clone380.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":42,"character":5},"text":"core-diff2","codeSnippet":"for (int i = 1;\n    i < 10; i += 2) {\n        synchronized (o) {\n            try {\n                while (! turn) {\n                    o.wait ();\n                }\n            } catch (InterruptedException ie) {\n                ie.printStackTrace ();\n            } finally {\n                System.out.println (i);\n                turn = ! turn;\n                o.notifyAll ();\n            }\n        }\n    }","status":"core-diff","id":588,"createdAt":"2023-05-24T16:14:58.310Z"},{"fileName":"Clone380.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":30},"text":"noncore-diff2","codeSnippet":"int emptyCycleCounter = 0;","status":"noncore-diff","id":589,"createdAt":"2023-05-24T16:15:09.465Z"},{"fileName":"Clone380.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":113},"text":"noncore-diff2","codeSnippet":"System.out.println (\"Finished\" + (odd ? \" odd\" : \" even\") + \" with \" + emptyCycleCounter + \" empty cycles.\");","status":"noncore-diff","id":590,"createdAt":"2023-05-24T16:15:19.293Z"},{"fileName":"Clone384.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":19,"character":5},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < input.length; i ++) {\n        for (int j = i + 1;\n        j < input.length; j ++) {\n            if (input [i] > input [j]) {\n                int tmp = input [i];\n                input [i] = input [j];\n                input [j] = tmp;\n            }\n        }\n    }","status":"core-sim","id":591,"createdAt":"2023-05-24T16:20:25.528Z"},{"fileName":"Clone384.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":37,"character":5},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < input.length - 1; i ++) {\n        int k = i + 1;\n        int nxtVal = input [k];\n        while (input [k - 1] > nxtVal) {\n            input [k] = input [k - 1];\n            k --;\n            if (k == 0) break;\n        }\n        input [k] = nxtVal;\n    }","status":"core-sim","id":592,"createdAt":"2023-05-24T16:20:34.830Z"},{"fileName":"Clone384.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":23,"character":5},"text":"core-sim2","codeSnippet":"System.out.println (\"Slow sorting is done and the result is :\");\n    for (int i : input) {\n        System.out.print (i + \",\");\n    }","status":"core-sim","id":593,"createdAt":"2023-05-24T16:20:48.126Z"},{"fileName":"Clone384.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":41,"character":5},"text":"core-sim2","codeSnippet":"System.out.println (\"Medium sorting is done and the result is :\");\n    for (int i : input) {\n        System.out.print (i + \",\");\n    }","status":"core-sim","id":594,"createdAt":"2023-05-24T16:21:11.737Z"},{"fileName":"Clone397.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":32},"text":"noncore-sim1","codeSnippet":"JFrame main = new JFrame ();","status":"noncore-sim","id":595,"createdAt":"2023-05-24T16:21:53.255Z"},{"fileName":"Clone397.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":53},"text":"noncore-sim1","codeSnippet":"JFrame frame = new JFrame (\"GridBagLayout Demo\");","status":"noncore-sim","id":596,"createdAt":"2023-05-24T16:22:09.168Z"},{"fileName":"Clone397.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":51},"text":"core-sim1","codeSnippet":"p.add (new JLabel (\"test\"), BorderLayout.WEST);","status":"core-sim","id":597,"createdAt":"2023-05-24T16:24:32.678Z"},{"fileName":"Clone397.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":45},"text":"core-sim1","codeSnippet":"JLabel label = new JLabel (\"Demo Label\");","status":"core-sim","id":598,"createdAt":"2023-05-24T16:24:49.064Z"},{"fileName":"Clone397.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":28,"character":28},"text":"core-sim1","codeSnippet":"frame.add (label, cons);","status":"core-sim","id":599,"createdAt":"2023-05-24T16:24:59.469Z"},{"fileName":"Clone397.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":13,"character":61},"text":"core-sim2","codeSnippet":"p.add (new JTextField (\"growable\"), BorderLayout.CENTER);","status":"core-sim","id":600,"createdAt":"2023-05-24T16:25:27.502Z"},{"fileName":"Clone397.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":24,"character":56},"text":"core-sim2","codeSnippet":"JTextField textField = new JTextField (\"Demo Text\");","status":"core-sim","id":601,"createdAt":"2023-05-24T16:25:34.639Z"},{"fileName":"Clone397.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":34,"character":32},"text":"core-sim2","codeSnippet":"frame.add (textField, cons);","status":"core-sim","id":602,"createdAt":"2023-05-24T16:27:17.959Z"},{"fileName":"Clone397.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":14,"character":48},"text":"core-sim3","codeSnippet":"p.add (new JComboBox (), BorderLayout.EAST);","status":"core-sim","id":603,"createdAt":"2023-05-24T16:27:30.410Z"},{"fileName":"Clone397.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":83},"text":"core-sim3","codeSnippet":"JComboBox comboBox = new JComboBox (new String [] {\"hello\", \"goodbye\", \"foo\"});","status":"core-sim","id":604,"createdAt":"2023-05-24T16:27:43.845Z"},{"fileName":"Clone397.java","fileLine":40,"positionStart":{"line":40,"character":4},"positionEnd":{"line":40,"character":31},"text":"core-sim3","codeSnippet":"frame.add (comboBox, cons);","status":"core-sim","id":605,"createdAt":"2023-05-24T16:27:52.388Z"},{"fileName":"Clone397.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":17,"character":27},"text":"core-sim4","codeSnippet":"main.pack ();\n    main.setVisible (true);","status":"core-sim","id":606,"createdAt":"2023-05-24T16:28:31.689Z"},{"fileName":"Clone397.java","fileLine":41,"positionStart":{"line":41,"character":4},"positionEnd":{"line":42,"character":28},"text":"core-sim4","codeSnippet":"frame.pack ();\n    frame.setVisible (true);","status":"core-sim","id":607,"createdAt":"2023-05-24T16:28:45.180Z"},{"fileName":"Clone397.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":38},"text":"noncore-diff1","codeSnippet":"p.setLayout (new BorderLayout ());","status":"noncore-diff","id":608,"createdAt":"2023-05-24T16:29:09.815Z"},{"fileName":"Clone397.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":43},"text":"noncore-diff1","codeSnippet":"frame.setLayout (new GridBagLayout ());","status":"noncore-diff","id":609,"createdAt":"2023-05-24T16:29:17.162Z"},{"fileName":"Clone397.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":15,"character":17},"text":"noncore-diff3","codeSnippet":"main.add (p);","status":"noncore-diff","id":611,"createdAt":"2023-05-24T16:37:55.955Z"},{"fileName":"Clone397.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":29},"text":"noncore-diff2","codeSnippet":"JPanel p = new JPanel ();","status":"noncore-diff","id":612,"createdAt":"2023-05-24T16:38:21.370Z"},{"fileName":"Clone397.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":27,"character":46},"text":"noncore-diff4","codeSnippet":"GridBagConstraints cons = new GridBagConstraints ();\n    cons.insets = new Insets (10, 10, 10, 10);","status":"noncore-diff","id":613,"createdAt":"2023-05-24T16:38:29.920Z"},{"fileName":"Clone397.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":33,"character":46},"text":"noncore-diff5","codeSnippet":"cons.gridx = 1;\n    cons.weightx = 1;\n    cons.weighty = 1;\n    cons.insets = new Insets (10, 0, 10, 10);\n    cons.fill = GridBagConstraints.HORIZONTAL;","status":"noncore-diff","id":614,"createdAt":"2023-05-24T16:38:42.496Z"},{"fileName":"Clone397.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":39,"character":40},"text":"noncore-diff5","codeSnippet":"cons.gridx = 2;\n    cons.weightx = 0;\n    cons.weighty = 0;\n    cons.insets = new Insets (10, 0, 10, 10);\n    cons.fill = GridBagConstraints.NONE;","status":"noncore-diff","id":616,"createdAt":"2023-05-24T16:42:05.373Z"},{"fileName":"Clone399.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":32,"character":22},"text":"core-sim1","codeSnippet":"try {\n        java.sql.Driver mySqlDriver = DriverManager.getDriver (\"jdbc:mysql://localhost:3306/\");\n        DriverManager.deregisterDriver (mySqlDriver);\n    } catch (SQLException ex) {\n        logger.info (\"Could not deregister driver:\".concat (ex.getMessage ()));\n    }\n    dataSource = null;","status":"core-sim","id":617,"createdAt":"2023-05-24T16:43:14.059Z"},{"fileName":"Clone399.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":16,"character":27},"text":"core-sim1","codeSnippet":"try {\n            DriverManager.deregisterDriver (driver);\n            LOG.info (String.format (\"deregistering jdbc driver: %s\", driver));\n        } catch (SQLException e) {\n            LOG.warn (String.format (\"Error deregistering driver %s\", driver), e);\n        }\n        this.driver = null;","status":"core-sim","id":618,"createdAt":"2023-05-24T16:43:30.760Z"},{"fileName":"Clone399.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":30},"text":"noncore-diff1","codeSnippet":"if (this.driver != null) {","status":"noncore-diff","id":619,"createdAt":"2023-05-24T16:46:08.055Z"},{"fileName":"Clone399.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":19,"character":5},"text":"noncore-diff1","codeSnippet":"} else {\n        LOG.warn (\"No driver to deregister\");\n    }","status":"noncore-diff","id":621,"createdAt":"2023-05-24T16:46:35.067Z"},{"fileName":"Clone399.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":25,"character":77},"text":"noncore-diff1","codeSnippet":"Context initContext = new InitialContext ();\n    Context envContext = (Context) initContext.lookup (\"java:/comp/env\");\n    DataSource datasource = (DataSource) envContext.lookup (\"jdbc/database\");","status":"noncore-diff","id":622,"createdAt":"2023-05-24T16:46:44.267Z"},{"fileName":"Clone105.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":18,"character":5},"text":"core-sim1","codeSnippet":"handleSpecialCharacter (character);\n    if (Character.isLowerCase (character)) {\n        typeCharacter (Character.toUpperCase (character));\n    }\n    if (Character.isUpperCase (character)) {\n        typeShiftCharacter (character);\n    }\n    if (Character.isDigit (character)) {\n        typeCharacter (character);\n    }","status":"core-sim","id":623,"createdAt":"2023-05-25T03:49:16.999Z"},{"fileName":"Clone105.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":31,"character":5},"text":"core-sim1","codeSnippet":"for (int ii = 0;\n    ii < text.length (); ii ++) {\n        c = text.charAt (ii);\n        if (c <= 31 || c == 129) {\n            pressControlKey (c);\n        } else {\n            typeAsciiCode (c);\n        }\n    }","status":"core-sim","id":624,"createdAt":"2023-05-25T03:49:23.192Z"},{"fileName":"Clone105.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":11},"text":"noncore-sim1","codeSnippet":"char c;","status":"noncore-sim","id":625,"createdAt":"2023-05-25T03:49:28.839Z"},{"fileName":"Clone400.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":15,"character":9},"text":"core-sim1","codeSnippet":"try {\n            DriverManager.deregisterDriver (driver);\n            LOG.info (String.format (\"deregistering jdbc driver: %s\", driver));\n        } catch (SQLException e) {\n            LOG.warn (String.format (\"Error deregistering driver %s\", driver), e);\n        }","status":"core-sim","id":626,"createdAt":"2023-05-26T08:03:24.653Z"},{"fileName":"Clone400.java","fileLine":28,"positionStart":{"line":28,"character":12},"positionEnd":{"line":33,"character":13},"text":"core-sim1","codeSnippet":"try {\n                log.info (\"Deregistering JDBC driver {}\", driver);\n                DriverManager.deregisterDriver (driver);\n            } catch (SQLException ex) {\n                log.error (\"Error deregistering JDBC driver {}\", driver, ex);\n            }","status":"core-sim","id":627,"createdAt":"2023-05-26T08:03:31.863Z"},{"fileName":"Clone400.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":19,"character":5},"text":"noncore-sim1","codeSnippet":"} else {\n        LOG.warn (\"No driver to deregister\");\n    }","status":"noncore-sim","id":628,"createdAt":"2023-05-26T08:07:27.442Z"},{"fileName":"Clone400.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":8},"text":"noncore-sim1","codeSnippet":"if (","status":"noncore-sim","id":629,"createdAt":"2023-05-26T08:07:33.879Z"},{"fileName":"Clone400.java","fileLine":9,"positionStart":{"line":9,"character":27},"positionEnd":{"line":9,"character":30},"text":"noncore-sim1","codeSnippet":") {","status":"noncore-sim","id":630,"createdAt":"2023-05-26T08:08:44.934Z"},{"fileName":"Clone400.java","fileLine":27,"positionStart":{"line":27,"character":8},"positionEnd":{"line":27,"character":12},"text":"noncore-sim1","codeSnippet":"if (","status":"noncore-sim","id":631,"createdAt":"2023-05-26T08:08:51.519Z"},{"fileName":"Clone400.java","fileLine":27,"positionStart":{"line":27,"character":54},"positionEnd":{"line":27,"character":57},"text":"noncore-sim1","codeSnippet":") {","status":"noncore-sim","id":632,"createdAt":"2023-05-26T08:08:57.318Z"},{"fileName":"Clone400.java","fileLine":34,"positionStart":{"line":34,"character":8},"positionEnd":{"line":36,"character":9},"text":"noncore-sim1","codeSnippet":"} else {\n            log.trace (\"Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader\", driver);\n        }","status":"noncore-sim","id":633,"createdAt":"2023-05-26T08:09:03.501Z"},{"fileName":"Clone400.java","fileLine":9,"positionStart":{"line":9,"character":8},"positionEnd":{"line":9,"character":27},"text":"noncore-diff1","codeSnippet":"this.driver != null","status":"noncore-diff","id":634,"createdAt":"2023-05-26T08:09:14.263Z"},{"fileName":"Clone400.java","fileLine":27,"positionStart":{"line":27,"character":12},"positionEnd":{"line":27,"character":54},"text":"noncore-diff1","codeSnippet":"driver.getClass ().getClassLoader () == cl","status":"noncore-diff","id":635,"createdAt":"2023-05-26T08:09:34.186Z"},{"fileName":"Clone400.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":26,"character":47},"text":"noncore-diff2","codeSnippet":"ClassLoader cl = Thread.currentThread ().getContextClassLoader ();\n    Enumeration < Driver > drivers = DriverManager.getDrivers ();\n    while (drivers.hasMoreElements ()) {\n        Driver driver = drivers.nextElement ();","status":"noncore-diff","id":636,"createdAt":"2023-05-26T08:10:11.437Z"},{"fileName":"Clone400.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":37,"character":5},"text":"noncore-diff2","codeSnippet":"}","status":"noncore-diff","id":637,"createdAt":"2023-05-26T08:10:18.310Z"},{"fileName":"Clone401.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":65},"text":"core-sim1","codeSnippet":"Enumeration < Driver > drivers = DriverManager.getDrivers ();","status":"core-sim","id":638,"createdAt":"2023-05-26T08:14:25.348Z"},{"fileName":"Clone401.java","fileLine":13,"positionStart":{"line":13,"character":8},"positionEnd":{"line":13,"character":95},"text":"core-sim1","codeSnippet":"java.sql.Driver mySqlDriver = DriverManager.getDriver (\"jdbc:mysql://localhost:3306/\");","status":"core-sim","id":639,"createdAt":"2023-05-26T08:15:42.330Z"},{"fileName":"Clone401.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":9},"text":"core-sim2","codeSnippet":"try {","status":"core-sim","id":640,"createdAt":"2023-05-26T08:17:02.045Z"},{"fileName":"Clone401.java","fileLine":14,"positionStart":{"line":14,"character":8},"positionEnd":{"line":17,"character":5},"text":"core-sim2","codeSnippet":"DriverManager.deregisterDriver (mySqlDriver);\n    } catch (SQLException ex) {\n        logger.info (\"Could not deregister driver:\".concat (ex.getMessage ()));\n    }","status":"core-sim","id":641,"createdAt":"2023-05-26T08:17:09.558Z"},{"fileName":"Clone401.java","fileLine":27,"positionStart":{"line":27,"character":12},"positionEnd":{"line":32,"character":13},"text":"core-sim2","codeSnippet":"try {\n                log.info (\"Deregistering JDBC driver {}\", driver);\n                DriverManager.deregisterDriver (driver);\n            } catch (SQLException ex) {\n                log.error (\"Error deregistering JDBC driver {}\", driver, ex);\n            }","status":"core-sim","id":642,"createdAt":"2023-05-26T08:17:17.324Z"},{"fileName":"Clone401.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":70},"text":"core-diff1","codeSnippet":"ClassLoader cl = Thread.currentThread ().getContextClassLoader ();","status":"core-diff","id":644,"createdAt":"2023-05-26T08:19:41.004Z"},{"fileName":"Clone401.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":25,"character":47},"text":"core-diff2","codeSnippet":"while (drivers.hasMoreElements ()) {\n        Driver driver = drivers.nextElement ();","status":"core-diff","id":645,"createdAt":"2023-05-26T08:19:56.970Z"},{"fileName":"Clone401.java","fileLine":26,"positionStart":{"line":26,"character":8},"positionEnd":{"line":26,"character":57},"text":"noncore-diff1","codeSnippet":"if (driver.getClass ().getClassLoader () == cl) {","status":"noncore-diff","id":646,"createdAt":"2023-05-26T08:21:31.360Z"},{"fileName":"Clone401.java","fileLine":33,"positionStart":{"line":33,"character":8},"positionEnd":{"line":35,"character":9},"text":"noncore-diff2","codeSnippet":"} else {\n            log.trace (\"Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader\", driver);\n        }","status":"noncore-diff","id":647,"createdAt":"2023-05-26T08:21:41.320Z"},{"fileName":"Clone401.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":36,"character":5},"text":"core-diff2","codeSnippet":"}","status":"core-diff","id":648,"createdAt":"2023-05-26T08:21:52.568Z"},{"fileName":"Clone401.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":77},"text":"core-diff3","codeSnippet":"Context initContext = new InitialContext ();\n    Context envContext = (Context) initContext.lookup (\"java:/comp/env\");\n    DataSource datasource = (DataSource) envContext.lookup (\"jdbc/database\");","status":"core-diff","id":649,"createdAt":"2023-05-26T08:21:59.831Z"},{"fileName":"Clone401.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":18,"character":22},"text":"core-diff4","codeSnippet":"dataSource = null;","status":"core-diff","id":650,"createdAt":"2023-05-26T08:22:06.870Z"},{"fileName":"Clone404.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":35,"character":28},"text":"core-diff1","codeSnippet":"frame.add (iconPanel);\n    iconPanel.add (firewallButton);\n    iconPanel.add (networkButton);\n    iconPanel.add (printerButton);\n    grid.setBackground (Color.GREEN);\n    frame.setLayout (new GridLayout (1, 2, 3, 3));\n    frame.add (grid);\n    frame.add (iconPanel);\n    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    frame.pack ();\n    frame.setLocationRelativeTo (null);\n    frame.setVisible (true);","status":"core-diff","id":651,"createdAt":"2023-05-26T08:25:59.646Z"},{"fileName":"Clone404.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":23,"character":52},"text":"noncore-diff1","codeSnippet":"JFrame frame = new JFrame (\"Application Name\");\n    JPanel iconPanel = new JPanel ();\n    JPanel grid = new JPanel (new FlowLayout ());\n    JButton firewallButton = new JButton (\"Firewall\");\n    JButton networkButton = new JButton (\"Network\");\n    JButton printerButton = new JButton (\"Printer\");","status":"noncore-diff","id":652,"createdAt":"2023-05-26T08:26:34.534Z"},{"fileName":"Clone404.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":14,"character":6},"text":"core-diff1","codeSnippet":"EventQueue.invokeLater (new Runnable () {\n        @Override\n        public void run () {\n            display ();\n        }}\n    );","status":"core-diff","id":653,"createdAt":"2023-05-26T08:26:50.948Z"},{"fileName":"Clone406.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":34,"character":27},"text":"noncore-sim1","codeSnippet":"Scanner scan = new Scanner (System.in);\n    System.out.print (\"Enter a String : \");\n    str = scan.nextLine ();","status":"noncore-sim","id":654,"createdAt":"2023-05-26T08:34:12.040Z"},{"fileName":"Clone406.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":34},"text":"noncore-sim1","codeSnippet":"Scanner scan = new Scanner (System.in);\n    System.out.print (\"Enter a String : \");\n    String str = scan.nextLine ();","status":"noncore-sim","id":655,"createdAt":"2023-05-26T08:34:24.552Z"},{"fileName":"Clone406.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":24,"character":96},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < str.length () - 1; i ++) {\n        digram = str.substring (i, i + 2);\n        if (repetition.contains (digram) || digram.contains (\" \") || digram.length () < 2) continue;\n        int occurances = (str.length () - str.replace (digram, \"\").length ()) / 2;\n        occurances += (str.replaceFirst (\".*?(\" + digram.charAt (0) + \"+).*\", \"$1\").length () - 1) / 2;\n        digrams.add (digram + \":\" + occurances);\n        repetition.add (digram);\n    }\n    Collections.sort (digrams, (s1, s2) -> s1.substring (3, 4).compareTo (s2.substring (3, 4)));","status":"core-sim","id":656,"createdAt":"2023-05-26T08:38:22.363Z"},{"fileName":"Clone406.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":50,"character":5},"text":"core-sim1","codeSnippet":"i = str.length ();\n    for (c1 = 'A'; c1 <= 'z'; c1 ++) {\n        for (c2 = 'A'; c2 <= 'z'; c2 ++) {\n            result = new String (new char [] {c1, c2});\n            k = 0;\n            for (j = 0; j < i - 1; j ++) {\n                subString = str.substring (j, j + 2);\n                if (result.equals (subString)) {\n                    k ++;\n                }\n            }\n            if (k > 0) {\n                System.out.println (\"\" + result + \": \" + k);\n            }\n        }\n    }","status":"core-sim","id":657,"createdAt":"2023-05-26T08:38:36.058Z"},{"fileName":"Clone406.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":31,"character":20},"text":"noncore-diff1","codeSnippet":"int ci, i, j, k, l = 0;\n    String str, str1, result, subString;\n    char c1, c2, ch;","status":"noncore-diff","id":659,"createdAt":"2023-05-26T08:39:03.560Z"},{"fileName":"Clone406.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":14,"character":18},"text":"noncore-diff1","codeSnippet":"ArrayList < String > repetition = new ArrayList < String > ();\n    ArrayList < String > digrams = new ArrayList < String > ();\n    String digram;","status":"noncore-diff","id":661,"createdAt":"2023-05-26T08:39:42.654Z"},{"fileName":"Clone406.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":33},"text":"noncore-diff2","codeSnippet":"System.out.println (digrams);","status":"noncore-diff","id":662,"createdAt":"2023-05-26T08:39:52.715Z"},{"fileName":"Clone410.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":26,"character":30},"text":"core-diff1","codeSnippet":"if (value.length () > 3) {\n        number = Integer.valueOf (value.substring (value.length () - 3), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 100;\n    if (number < 10) {\n        offset = (number % 10) - 1;\n    } else if (number < 20) {\n        offset = (number % 20) - 1;\n    }\n    if (offset != NO_VALUE && offset < TOKENS.length) {\n        buffer.append (TOKENS [offset]);\n    }\n    return buffer.toString ();","status":"core-diff","id":663,"createdAt":"2023-05-26T08:47:54.953Z"},{"fileName":"Clone410.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":53,"character":30},"text":"core-diff2","codeSnippet":"if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! highName.isEmpty ()) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! lowName.isEmpty ()) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! lowName.isEmpty ()) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();","status":"core-diff","id":664,"createdAt":"2023-05-26T08:48:03.814Z"},{"fileName":"Clone410.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":48},"text":"noncore-sim1","codeSnippet":"StringBuilder buffer = new StringBuilder ();","status":"noncore-sim","id":666,"createdAt":"2023-05-26T08:48:17.072Z"},{"fileName":"Clone410.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":30,"character":48},"text":"noncore-sim1","codeSnippet":"StringBuilder buffer = new StringBuilder ();","status":"noncore-sim","id":667,"createdAt":"2023-05-26T08:48:24.813Z"},{"fileName":"Clone410.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":11,"character":15},"text":"noncore-diff1","codeSnippet":"int offset = NO_VALUE;\n    int number;","status":"noncore-diff","id":668,"createdAt":"2023-05-26T08:48:42.651Z"},{"fileName":"Clone410.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":31,"character":21},"text":"noncore-diff2","codeSnippet":"String high, low;","status":"noncore-diff","id":669,"createdAt":"2023-05-26T08:48:57.467Z"},{"fileName":"Clone413.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":26,"character":30},"text":"core-diff1","codeSnippet":"if (value.length () > 3) {\n        number = Integer.valueOf (value.substring (value.length () - 3), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 100;\n    if (number < 10) {\n        offset = (number % 10) - 1;\n    } else if (number < 20) {\n        offset = (number % 20) - 1;\n    }\n    if (offset != NO_VALUE && offset < TOKENS.length) {\n        buffer.append (TOKENS [offset]);\n    }\n    return buffer.toString ();","status":"core-diff","id":670,"createdAt":"2023-05-26T09:04:25.653Z"},{"fileName":"Clone413.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":59,"character":16},"text":"core-diff2.","codeSnippet":"if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (\"\".equals (name)) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || \"\".equals (decimalValue))) {\n        String zeroDecimalValue = \"\";\n        for (int i = 0;\n        i < decimalValue.length (); i ++) {\n            zeroDecimalValue = zeroDecimalValue + \"0\";\n        }\n        if (decimalValue.equals (zeroDecimalValue)) {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (\"zero\").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        } else {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        }\n    }\n    return name;","status":"core-diff","id":671,"createdAt":"2023-05-26T09:04:34.156Z"},{"fileName":"Clone413.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":15},"text":"noncore-diff1","codeSnippet":"StringBuilder buffer = new StringBuilder ();\n    int offset = NO_VALUE;\n    int number;","status":"noncore-diff","id":672,"createdAt":"2023-05-26T09:04:41.687Z"},{"fileName":"Clone413.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":30,"character":29},"text":"noncore-diff2","codeSnippet":"boolean negative = false;","status":"noncore-diff","id":673,"createdAt":"2023-05-26T09:04:50.430Z"},{"fileName":"Clone418.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":48},"text":"noncore-sim1","codeSnippet":"StringBuilder buffer = new StringBuilder ();","status":"noncore-sim","id":674,"createdAt":"2023-05-26T09:05:21.572Z"},{"fileName":"Clone418.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":33,"character":48},"text":"noncore-sim1","codeSnippet":"StringBuilder buffer = new StringBuilder ();","status":"noncore-sim","id":675,"createdAt":"2023-05-26T09:05:29.120Z"},{"fileName":"Clone418.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":56,"character":30},"text":"core-diff1","codeSnippet":"if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! highName.isEmpty ()) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! lowName.isEmpty ()) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! lowName.isEmpty ()) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();","status":"core-diff","id":677,"createdAt":"2023-05-26T14:56:27.039Z"},{"fileName":"Clone418.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":29,"character":30},"text":"core-diff2","codeSnippet":"if (value.isEmpty ()) {\n        number = 0;\n    } else if (value.length () > 4) {\n        number = Integer.valueOf (value.substring (value.length () - 4), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 1000;\n    if (number >= 100) {\n        buffer.append (unitProcessor.getName (number / 100));\n        buffer.append (SEPARATOR);\n        buffer.append (SCALE.getName (EXPONENT));\n    }\n    String tensName = tensProcessor.getName (number % 100);\n    if (! tensName.isEmpty () && (number >= 100)) {\n        buffer.append (SEPARATOR);\n    }\n    buffer.append (tensName);\n    return buffer.toString ();","status":"core-diff","id":678,"createdAt":"2023-05-26T14:56:35.542Z"},{"fileName":"Clone418.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":34,"character":21},"text":"noncore-diff1","codeSnippet":"String high, low;","status":"noncore-diff","id":679,"createdAt":"2023-05-26T14:56:41.595Z"},{"fileName":"Clone418.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":15},"text":"noncore-diff2","codeSnippet":"int number;","status":"noncore-diff","id":680,"createdAt":"2023-05-26T15:02:02.887Z"},{"fileName":"Clone424.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":56,"character":16},"text":"core-diff1","codeSnippet":"if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (name.isEmpty ()) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || decimalValue.isEmpty ())) {\n        name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n    }\n    return name;","status":"core-diff","id":681,"createdAt":"2023-05-26T15:02:36.139Z"},{"fileName":"Clone424.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":32,"character":30},"text":"core-diff2","codeSnippet":"if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! highName.isEmpty ()) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! lowName.isEmpty ()) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! lowName.isEmpty ()) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();","status":"core-diff","id":682,"createdAt":"2023-05-26T15:02:46.572Z"},{"fileName":"Clone424.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":21},"text":"noncore-diff1","codeSnippet":"StringBuilder buffer = new StringBuilder ();\n    String high, low;","status":"noncore-diff","id":684,"createdAt":"2023-05-26T15:03:32.036Z"},{"fileName":"Clone424.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":36,"character":29},"text":"noncore-diff2","codeSnippet":"boolean negative = false;","status":"noncore-diff","id":685,"createdAt":"2023-05-26T15:03:38.287Z"},{"fileName":"Clone434.java","fileLine":12,"positionStart":{"line":12,"character":3},"positionEnd":{"line":28,"character":99},"text":"core-diff1","codeSnippet":" for (long val : values) {\n        System.out.println (val + \" = \" + processor.getName (val));\n    }\n    for (String strVal : strValues) {\n        System.out.println (strVal + \" = \" + processor.getName (strVal));\n    }\n    StringBuilder bigNumber = new StringBuilder ();\n    for (int d = 0;\n    d < 66; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    bigNumber.append (\".\");\n    for (int d = 0;\n    d < 26; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    System.out.println (bigNumber.toString () + \" = \" + processor.getName (bigNumber.toString ()));","status":"core-diff","id":686,"createdAt":"2023-05-26T15:22:06.809Z"},{"fileName":"Clone434.java","fileLine":37,"positionStart":{"line":37,"character":3},"positionEnd":{"line":52,"character":37},"text":"core-diff2","codeSnippet":" while (num > 0) {\n        if (i == 0) {\n            rem = (int) (num % 1000);\n            printText (rem);\n            num = num / 1000;\n            i ++;\n        } else if (num > 0) {\n            rem = (int) (num % 100);\n            if (rem > 0) text = denom.values () [i - 1] + \" \" + text;\n            printText (rem);\n            num = num / 100;\n            i ++;\n        }\n    }\n    if (i > 0) System.out.println (text);\n    else System.out.println (\"Zero\");","status":"core-diff","id":687,"createdAt":"2023-05-26T15:22:20.091Z"},{"fileName":"Clone434.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":63},"text":"noncore-diff1","codeSnippet":"processor = new DefaultProcessor ();\n    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};\n    String [] strValues = new String [] {\"0001.2\", \"3.141592\"};","status":"noncore-diff","id":688,"createdAt":"2023-05-26T15:22:28.693Z"},{"fileName":"Clone434.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":36,"character":14},"text":"noncore-diff2","codeSnippet":"System.out.println (\"Enter Number to convert into words\");\n    Scanner sc = new Scanner (System.in);\n    long num = sc.nextInt ();\n    int rem = 0;\n    int i = 0;","status":"noncore-diff","id":689,"createdAt":"2023-05-26T15:22:36.608Z"},{"fileName":"Clone436.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":60,"character":75},"text":"core-diff1","codeSnippet":"System.out.println (\"*** \" + FrenchNumberToWords.convert (0));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (9));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (19));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (21));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (28));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (71));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (72));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (80));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (81));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (89));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (90));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (91));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (97));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (100));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (101));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (110));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (120));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (200));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (201));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (232));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (999));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (1000));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (1001));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (10000));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (10001));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (100000));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (2000000));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (3000000000L));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (2147483647));","status":"core-diff","id":690,"createdAt":"2023-05-27T06:07:45.456Z"},{"fileName":"Clone436.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":28,"character":99},"text":"core-diff2","codeSnippet":"for (long val : values) {\n        System.out.println (val + \" = \" + processor.getName (val));\n    }\n    for (String strVal : strValues) {\n        System.out.println (strVal + \" = \" + processor.getName (strVal));\n    }\n    StringBuilder bigNumber = new StringBuilder ();\n    for (int d = 0;\n    d < 66; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    bigNumber.append (\".\");\n    for (int d = 0;\n    d < 26; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    System.out.println (bigNumber.toString () + \" = \" + processor.getName (bigNumber.toString ()));","status":"core-diff","id":691,"createdAt":"2023-05-27T06:08:38.648Z"},{"fileName":"Clone436.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":63},"text":"noncore-diff1","codeSnippet":"processor = new DefaultProcessor ();\n    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};\n    String [] strValues = new String [] {\"0001.2\", \"3.141592\"};","status":"noncore-diff","id":692,"createdAt":"2023-05-27T06:08:46.189Z"},{"fileName":"Clone441.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":46,"character":99},"text":"core-diff1","codeSnippet":"for (long val : values) {\n        System.out.println (val + \" = \" + processor.getName (val));\n    }\n    for (String strVal : strValues) {\n        System.out.println (strVal + \" = \" + processor.getName (strVal));\n    }\n    StringBuilder bigNumber = new StringBuilder ();\n    for (int d = 0;\n    d < 66; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    bigNumber.append (\".\");\n    for (int d = 0;\n    d < 26; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    System.out.println (bigNumber.toString () + \" = \" + processor.getName (bigNumber.toString ()));","status":"core-diff","id":694,"createdAt":"2023-05-27T06:11:31.919Z"},{"fileName":"Clone441.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":23,"character":5},"text":"core-diff1","codeSnippet":"n = s.nextInt ();\n    if (n <= 0) System.out.print (\"Enter numbers greater than 0\");\n    else {\n        NumberToWord a = new NumberToWord ();\n        System.out.print (\"After conversion number in words is :\");\n        a.pw ((n / 1000000000), \" Hundred\");\n        a.pw ((n / 10000000) % 100, \" crore\");\n        a.pw (((n / 100000) % 100), \" lakh\");\n        a.pw (((n / 1000) % 100), \" thousand\");\n        a.pw (((n / 100) % 10), \" hundred\");\n        a.pw ((n % 100), \" \");\n    }","status":"core-diff","id":695,"createdAt":"2023-05-27T06:11:45.129Z"},{"fileName":"Clone441.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":29,"character":77},"text":"noncore-diff1","codeSnippet":"processor = new DefaultProcessor ();\n    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};\n    String [] strValues = new String [] {\"0\", \"1.30\", \"0001.00\", \"3.141592\"};","status":"noncore-diff","id":696,"createdAt":"2023-05-27T06:11:56.734Z"},{"fileName":"Clone441.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":51},"text":"noncore-diff2","codeSnippet":"int n = 0;\n    Scanner s = new Scanner (System.in);\n    System.out.print (\"Enter an integer number: \");","status":"noncore-diff","id":697,"createdAt":"2023-05-27T06:12:06.543Z"},{"fileName":"Clone447.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":31,"character":30},"text":"core-diff1","codeSnippet":"if (value.length () > 3) {\n        number = Integer.valueOf (value.substring (value.length () - 3), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 100;\n    if (number >= 20) {\n        buffer.append (TOKENS [(number / 10) - 2]);\n        number %= 10;\n        tensFound = true;\n    } else {\n        number %= 20;\n    }\n    if (number != 0) {\n        if (tensFound) {\n            buffer.append (UNION_SEPARATOR);\n        }\n        buffer.append (unitProcessor.getName (number));\n    }\n    return buffer.toString ();","status":"core-diff","id":698,"createdAt":"2023-05-27T06:28:57.798Z"},{"fileName":"Clone447.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":58,"character":30},"text":"core-diff1","codeSnippet":"if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! \"\".equals (highName)) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! \"\".equals (lowName)) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! \"\".equals (lowName)) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();","status":"core-diff","id":699,"createdAt":"2023-05-27T06:29:15.109Z"},{"fileName":"Clone447.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":48},"text":"noncore-sim1","codeSnippet":"StringBuilder buffer = new StringBuilder ();","status":"noncore-sim","id":700,"createdAt":"2023-05-27T06:29:23.014Z"},{"fileName":"Clone447.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":35,"character":48},"text":"noncore-sim1","codeSnippet":"StringBuilder buffer = new StringBuilder ();","status":"noncore-sim","id":701,"createdAt":"2023-05-27T06:29:30.838Z"},{"fileName":"Clone447.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":11,"character":15},"text":"noncore-diff1","codeSnippet":"boolean tensFound = false;\n    int number;","status":"noncore-diff","id":702,"createdAt":"2023-05-27T06:36:42.102Z"},{"fileName":"Clone447.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":36,"character":21},"text":"noncore-diff2","codeSnippet":"String high, low;","status":"noncore-diff","id":703,"createdAt":"2023-05-27T06:37:00.348Z"},{"fileName":"Clone452.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":26},"text":"noncore-sim1","codeSnippet":"int len = args.length;","status":"noncore-sim","id":704,"createdAt":"2023-05-27T06:37:52.524Z"},{"fileName":"Clone452.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":26},"text":"noncore-sim1","codeSnippet":"int len = args.length;","status":"noncore-sim","id":705,"createdAt":"2023-05-27T06:39:07.489Z"},{"fileName":"Clone452.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":29,"character":5},"text":"core-sim1","codeSnippet":"if (len == 0) {\n        sopl (\"\\n\\tUsage: java echo <args:String[]>\");\n        System.exit (0);\n    }","status":"core-sim","id":706,"createdAt":"2023-05-27T06:40:20.451Z"},{"fileName":"Clone452.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":15,"character":5},"text":"core-sim1","codeSnippet":"if (len <= 0) {\n        System.out.println (\" ERROR: Please input a value of 1-5\");\n        System.exit (0);\n    }","status":"core-sim","id":707,"createdAt":"2023-05-27T06:40:29.836Z"},{"fileName":"Clone452.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":37,"character":14},"text":"core-diff1","codeSnippet":"sop (\"\\n\\t\");\n    for (int i = 0;\n    i < len; i ++) {\n        sop (args [i] + \" \");\n    }\n    sop (\"\\n\\t\");\n    while (len > 0) sop (args [args.length - len --] + \" \");\n    sopl (\"\");","status":"core-diff","id":708,"createdAt":"2023-05-27T06:40:38.573Z"},{"fileName":"Clone452.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":21,"character":5},"text":"core-diff2","codeSnippet":"for (int i = 0;\n    i <= row; i ++) {\n        for (j = 0; j <= i; j ++) System.out.print (\"*\");\n        System.out.println (\"\");\n    }","status":"core-diff","id":709,"createdAt":"2023-05-27T06:40:48.570Z"},{"fileName":"Clone452.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":42},"text":"noncore-diff1","codeSnippet":"System.out.println (\"Enter no of rows to be printed\");\n    int row = Integer.parseInt (args [0]);","status":"noncore-diff","id":710,"createdAt":"2023-05-27T06:41:02.483Z"},{"fileName":"Clone452.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":16,"character":10},"text":"noncore-diff2","codeSnippet":"int j;","status":"noncore-diff","id":711,"createdAt":"2023-05-27T06:41:09.218Z"},{"fileName":"Clone455.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":40,"character":60},"text":"noncore-sim1","codeSnippet":"AtomicInteger counter = new AtomicInteger ();\n    ExecutorService pool = Executors.newFixedThreadPool (4);","status":"noncore-sim","id":712,"createdAt":"2023-05-27T06:43:21.788Z"},{"fileName":"Clone455.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":72},"text":"noncore-sim1","codeSnippet":"final AtomicInteger outputCount = new AtomicInteger (0);\n    ExecutorService threadPool = Executors.newFixedThreadPool (THREADS);","status":"noncore-sim","id":713,"createdAt":"2023-05-27T06:43:58.468Z"},{"fileName":"Clone455.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":34,"character":30},"text":"noncore-sim2","codeSnippet":"threadPool.shutdownNow ();","status":"noncore-sim","id":714,"createdAt":"2023-05-27T06:45:34.482Z"},{"fileName":"Clone455.java","fileLine":45,"positionStart":{"line":45,"character":4},"positionEnd":{"line":45,"character":21},"text":"noncore-sim2","codeSnippet":"pool.shutdown ();","status":"noncore-sim","id":715,"createdAt":"2023-05-27T06:46:19.421Z"},{"fileName":"Clone455.java","fileLine":41,"positionStart":{"line":41,"character":4},"positionEnd":{"line":44,"character":5},"text":"core-diff1","codeSnippet":"for (int i = 0;\n    i < 4; ++ i) {\n        pool.execute (new MyTask (counter));\n    }","status":"core-diff","id":716,"createdAt":"2023-05-27T06:47:31.403Z"},{"fileName":"Clone455.java","fileLine":46,"positionStart":{"line":46,"character":4},"positionEnd":{"line":46,"character":46},"text":"core-diff2","codeSnippet":"pool.awaitTermination (1, TimeUnit.HOURS);","status":"core-diff","id":717,"createdAt":"2023-05-27T06:47:52.746Z"},{"fileName":"Clone455.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":33,"character":33},"text":"core-diff3","codeSnippet":"for (int i = 0;\n    i < THREADS; i ++) {\n        tasks.add (new Callable < Object > () {\n            private SecureRandom rand = new SecureRandom ();\n            private String task () {\n                return rand.nextDouble () > 0.5 ? Thread.currentThread ().getName () : null;\n            }@Override\n            public Object call () {\n                for (int i;\n                (i = outputCount.get ()) < TASKS;) {\n                    String output = task ();\n                    if (output != null) {\n                        if ((i = outputCount.incrementAndGet ()) < TASKS) {\n                            System.out.println (output + \": \" + i);\n                        }\n                    }\n                }\n                return null;\n            }}\n        );\n    }\n    threadPool.invokeAll (tasks);","status":"core-diff","id":718,"createdAt":"2023-05-27T06:48:13.715Z"},{"fileName":"Clone455.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":35,"character":32},"text":"noncore-diff1","codeSnippet":"System.out.println (\"done\");","status":"noncore-diff","id":719,"createdAt":"2023-05-27T06:48:34.618Z"},{"fileName":"Clone455.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":75},"text":"noncore-diff2","codeSnippet":"Collection < Callable < Object > > tasks = new ArrayList < > (THREADS);","status":"noncore-diff","id":720,"createdAt":"2023-05-27T06:49:06.957Z"},{"fileName":"Clone457.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":28,"character":46},"text":"core-diff1","codeSnippet":"ExecutorService pool = Executors.newFixedThreadPool (4);\n    for (int i = 0; i < 4; ++ i) {\n        pool.execute (new MyTask (counter));\n    }\n    pool.shutdown ();\n    pool.awaitTermination (1, TimeUnit.HOURS);","status":"core-diff","id":721,"createdAt":"2023-05-27T06:51:28.007Z"},{"fileName":"Clone457.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":49},"text":"noncore-diff1","codeSnippet":"AtomicInteger counter = new AtomicInteger ();","status":"noncore-diff","id":722,"createdAt":"2023-05-27T06:55:10.264Z"},{"fileName":"Clone457.java","fileLine":12,"positionStart":{"line":12,"character":3},"positionEnd":{"line":17,"character":24},"text":"core-diff2","codeSnippet":" ExecutorService service = Executors.newCachedThreadPool ();\n    for (int i = 0; i < 4; i ++) {\n        service.execute (new CountDownTask (theLatch, output, random));\n    }\n    theLatch.await (1, TimeUnit.MINUTES);\n    service.shutdown ();","status":"core-diff","id":723,"createdAt":"2023-05-27T06:55:36.275Z"},{"fileName":"Clone457.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":46},"text":"noncore-diff2","codeSnippet":"CountDownLatch theLatch = new CountDownLatch (100);\n    List < String > output = Collections.synchronizedList (new ArrayList < String > ());\n    SecureRandom random = new SecureRandom ();","status":"noncore-diff","id":724,"createdAt":"2023-05-27T06:55:44.595Z"},{"fileName":"Clone457.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":18,"character":40},"text":"noncore-diff3","codeSnippet":"System.out.println (output.size ());","status":"noncore-diff","id":725,"createdAt":"2023-05-27T06:55:52.343Z"},{"fileName":"Clone459.java","fileLine":25,"positionStart":{"line":25,"character":12},"positionEnd":{"line":25,"character":36},"text":"core-sim1","codeSnippet":"String output = task ();","status":"core-sim","id":726,"createdAt":"2023-05-27T06:57:51.208Z"},{"fileName":"Clone459.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":10,"character":32},"text":"core-sim1","codeSnippet":"String output = task ();","status":"core-sim","id":727,"createdAt":"2023-05-27T06:58:12.703Z"},{"fileName":"Clone459.java","fileLine":11,"positionStart":{"line":11,"character":8},"positionEnd":{"line":17,"character":9},"text":"core-sim2","codeSnippet":"if (output != null) {\n            int count = counter.getAndIncrement ();\n            System.out.println (output);\n            if (count >= 100) {\n                break;\n            }\n        }","status":"core-sim","id":728,"createdAt":"2023-05-27T06:58:47.392Z"},{"fileName":"Clone459.java","fileLine":27,"positionStart":{"line":27,"character":12},"positionEnd":{"line":33,"character":13},"text":"core-sim2","codeSnippet":"if (output != null) {\n                int counter = outputCount.getAndIncrement ();\n                System.out.println (counter);\n                if (counter >= 100) {\n                    break;\n                }\n            }","status":"core-sim","id":729,"createdAt":"2023-05-27T06:58:56.383Z"},{"fileName":"Clone459.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":18},"text":"noncore-sim1","codeSnippet":"while (true) {","status":"noncore-sim","id":731,"createdAt":"2023-05-27T07:00:05.234Z"},{"fileName":"Clone459.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":37,"character":5},"text":"noncore-sim1","codeSnippet":"}","status":"noncore-sim","id":732,"createdAt":"2023-05-27T07:00:18.597Z"},{"fileName":"Clone459.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":18},"text":"noncore-sim1","codeSnippet":"while (true) {","status":"noncore-sim","id":733,"createdAt":"2023-05-27T07:00:29.221Z"},{"fileName":"Clone459.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":18,"character":5},"text":"noncore-sim1","codeSnippet":"}","status":"noncore-sim","id":734,"createdAt":"2023-05-27T07:00:36.072Z"},{"fileName":"Clone459.java","fileLine":23,"positionStart":{"line":23,"character":8},"positionEnd":{"line":24,"character":62},"text":"noncore-diff1","codeSnippet":"try {\n            Object expensiveObject = expensiveObjects.take ();","status":"noncore-diff","id":736,"createdAt":"2023-05-27T07:00:53.283Z"},{"fileName":"Clone459.java","fileLine":34,"positionStart":{"line":34,"character":8},"positionEnd":{"line":36,"character":9},"text":"noncore-diff1","codeSnippet":"} catch (InterruptedException e) {\n            System.out.println (\"Error!\");\n        }","status":"noncore-diff","id":737,"createdAt":"2023-05-27T07:01:08.586Z"},{"fileName":"Clone459.java","fileLine":26,"positionStart":{"line":26,"character":12},"positionEnd":{"line":26,"character":51},"text":"noncore-diff1","codeSnippet":"expensiveObjects.put (expensiveObject);","status":"noncore-diff","id":738,"createdAt":"2023-05-27T07:01:22.683Z"},{"fileName":"Clone463.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":21,"character":26},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < length; i ++) {\n        int c = RANDOM.nextInt (62);\n        if (c <= 9) {\n            sb.append (String.valueOf (c));\n        } else if (c < 36) {\n            sb.append ((char) ('a' + c - 10));\n        } else {\n            sb.append ((char) ('A' + c - 36));\n        }\n    }\n    return sb.toString ();","status":"core-sim","id":739,"createdAt":"2023-05-27T07:03:36.287Z"},{"fileName":"Clone463.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":27,"character":5},"text":"core-diff1","codeSnippet":"if (length < 1) {\n        throw new IllegalArgumentException (\"length must be greater than 0\");\n    }","status":"core-diff","id":740,"createdAt":"2023-05-27T07:03:45.198Z"},{"fileName":"Clone463.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":33,"character":38},"text":"core-sim1","codeSnippet":"for (int idx = 0;\n    idx < buf.length; ++ idx) {\n        buf [idx] = symbols [RANDOM.nextInt (symbols.length)];\n    }\n    return shuffle (new String (buf));","status":"core-sim","id":741,"createdAt":"2023-05-27T07:04:41.565Z"},{"fileName":"Clone463.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":50},"text":"noncore-diff1","codeSnippet":"StringBuilder sb = new StringBuilder (length);","status":"noncore-diff","id":742,"createdAt":"2023-05-27T07:04:48.719Z"},{"fileName":"Clone463.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":28,"character":42},"text":"noncore-diff2","codeSnippet":"final char [] buf = new char [length];","status":"noncore-diff","id":743,"createdAt":"2023-05-27T07:04:58.492Z"},{"fileName":"Clone464.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":71},"text":"core-sim1","codeSnippet":"URI uri = ResourceWalker.class.getResource (\"/resources\").toURI ();","status":"core-sim","id":744,"createdAt":"2023-05-27T07:05:32.918Z"},{"fileName":"Clone464.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":71},"text":"core-sim1","codeSnippet":"URI uri = ResourceWalker.class.getResource (\"/resources\").toURI ();","status":"core-sim","id":745,"createdAt":"2023-05-27T07:05:40.038Z"},{"fileName":"Clone464.java","fileLine":27,"positionStart":{"line":27,"character":34},"positionEnd":{"line":27,"character":65},"text":"core-sim2","codeSnippet":"uri.getScheme ().equals (\"jar\")","status":"core-sim","id":747,"createdAt":"2023-05-27T07:08:44.694Z"},{"fileName":"Clone464.java","fileLine":11,"positionStart":{"line":11,"character":8},"positionEnd":{"line":11,"character":39},"text":"core-sim2","codeSnippet":"uri.getScheme ().equals (\"jar\")","status":"core-sim","id":748,"createdAt":"2023-05-27T07:08:54.175Z"},{"fileName":"Clone464.java","fileLine":12,"positionStart":{"line":12,"character":32},"positionEnd":{"line":12,"character":108},"text":"core-sim3","codeSnippet":"FileSystems.newFileSystem (uri, Collections.< String, Object > emptyMap ());","status":"core-sim","id":749,"createdAt":"2023-05-27T07:09:13.269Z"},{"fileName":"Clone464.java","fileLine":27,"positionStart":{"line":27,"character":68},"positionEnd":{"line":27,"character":143},"text":"core-sim3","codeSnippet":"FileSystems.newFileSystem (uri, Collections.< String, Object > emptyMap ())","status":"core-sim","id":750,"createdAt":"2023-05-27T07:09:27.263Z"},{"fileName":"Clone464.java","fileLine":28,"positionStart":{"line":28,"character":8},"positionEnd":{"line":28,"character":38},"text":"core-sim4","codeSnippet":"Path myPath = Paths.get (uri);","status":"core-sim","id":751,"createdAt":"2023-05-27T07:10:04.838Z"},{"fileName":"Clone464.java","fileLine":15,"positionStart":{"line":15,"character":8},"positionEnd":{"line":15,"character":33},"text":"core-sim4","codeSnippet":"myPath = Paths.get (uri);","status":"core-sim","id":752,"createdAt":"2023-05-27T07:10:13.080Z"},{"fileName":"Clone464.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":21,"character":5},"text":"core-sim5","codeSnippet":"Stream < Path > walk = Files.walk (myPath, 1);\n    for (Iterator < Path > it = walk.iterator ();\n    it.hasNext ();) {\n        System.out.println (it.next ());\n    }","status":"core-sim","id":753,"createdAt":"2023-05-27T07:11:00.479Z"},{"fileName":"Clone464.java","fileLine":29,"positionStart":{"line":29,"character":8},"positionEnd":{"line":35,"character":10},"text":"core-sim5","codeSnippet":"Files.walkFileTree (myPath, new SimpleFileVisitor < Path > () {\n            @Override\n            public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {\n                System.out.println (file);\n                return FileVisitResult.CONTINUE;\n            }}\n        );","status":"core-sim","id":754,"createdAt":"2023-05-27T07:11:09.378Z"},{"fileName":"Clone464.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":26,"character":49},"text":"noncore-diff1","codeSnippet":"System.out.println (\"Starting from: \" + uri);","status":"noncore-diff","id":755,"createdAt":"2023-05-27T07:11:25.825Z"},{"fileName":"Clone464.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":34},"text":"noncore-diff2","codeSnippet":"try (FileSystem fileSystem = (","status":"noncore-diff","id":756,"createdAt":"2023-05-27T07:11:37.293Z"},{"fileName":"Clone464.java","fileLine":27,"positionStart":{"line":27,"character":66},"positionEnd":{"line":27,"character":67},"text":"noncore-diff2","codeSnippet":"?","status":"noncore-diff","id":757,"createdAt":"2023-05-27T07:11:44.651Z"},{"fileName":"Clone464.java","fileLine":27,"positionStart":{"line":27,"character":144},"positionEnd":{"line":27,"character":154},"text":"noncore-diff2","codeSnippet":": null)) {","status":"noncore-diff","id":758,"createdAt":"2023-05-27T07:11:51.230Z"},{"fileName":"Clone464.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":36,"character":5},"text":"noncore-diff2","codeSnippet":"}","status":"noncore-diff","id":759,"createdAt":"2023-05-27T07:11:57.524Z"},{"fileName":"Clone464.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":16},"text":"noncore-diff3","codeSnippet":"Path myPath;","status":"noncore-diff","id":760,"createdAt":"2023-05-27T07:12:05.364Z"},{"fileName":"Clone464.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":8},"text":"noncore-diff3","codeSnippet":"if (","status":"noncore-diff","id":761,"createdAt":"2023-05-27T07:12:54.044Z"},{"fileName":"Clone464.java","fileLine":11,"positionStart":{"line":11,"character":39},"positionEnd":{"line":11,"character":42},"text":"noncore-diff3","codeSnippet":") {","status":"noncore-diff","id":762,"createdAt":"2023-05-27T07:13:04.411Z"},{"fileName":"Clone464.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":14,"character":12},"text":"noncore-diff3","codeSnippet":"} else {","status":"noncore-diff","id":763,"createdAt":"2023-05-27T07:13:16.771Z"},{"fileName":"Clone464.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":14,"character":12},"text":"noncore-diff3","codeSnippet":"} else {","status":"noncore-diff","id":764,"createdAt":"2023-05-27T07:13:33.890Z"},{"fileName":"Clone464.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":16,"character":5},"text":"noncore-diff3","codeSnippet":"}","status":"noncore-diff","id":765,"createdAt":"2023-05-27T07:13:42.420Z"},{"fileName":"Clone464.java","fileLine":12,"positionStart":{"line":12,"character":8},"positionEnd":{"line":12,"character":32},"text":"noncore-diff4","codeSnippet":"FileSystem fileSystem = ","status":"noncore-diff","id":766,"createdAt":"2023-05-27T07:13:53.854Z"},{"fileName":"Clone464.java","fileLine":13,"positionStart":{"line":13,"character":8},"positionEnd":{"line":13,"character":51},"text":"noncore-diff5","codeSnippet":"myPath = fileSystem.getPath (\"/resources\");","status":"noncore-diff","id":767,"createdAt":"2023-05-27T07:14:01.134Z"},{"fileName":"Clone467.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":15,"character":30},"text":"core-sim1","codeSnippet":"commands.add (\"ping\");\n    commands.add (\"-c\");\n    commands.add (\"5\");\n    commands.add (\"74.125.236.73\");\n    ping.doCommand (commands);","status":"core-sim","id":768,"createdAt":"2023-05-27T07:14:25.631Z"},{"fileName":"Clone467.java","fileLine":20,"positionStart":{"line":20,"character":8},"positionEnd":{"line":21,"character":56},"text":"core-sim1","codeSnippet":"InetAddress address = InetAddress.getByName (\"192.168.1.103\");\n        boolean reachable = address.isReachable (10000);","status":"core-sim","id":769,"createdAt":"2023-05-27T07:14:35.990Z"},{"fileName":"Clone467.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":9},"text":"noncore-diff1","codeSnippet":"try {","status":"noncore-diff","id":770,"createdAt":"2023-05-27T07:14:42.013Z"},{"fileName":"Clone467.java","fileLine":22,"positionStart":{"line":22,"character":8},"positionEnd":{"line":25,"character":5},"text":"noncore-diff1","codeSnippet":"System.out.println (\"Is host reachable? \" + reachable);\n    } catch (Exception e) {\n        e.printStackTrace ();\n    }","status":"noncore-diff","id":771,"createdAt":"2023-05-27T07:14:49.250Z"},{"fileName":"Clone467.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":59},"text":"noncore-diff2","codeSnippet":"JavaPingExampleProgram ping = new JavaPingExampleProgram ();\n    List < String > commands = new ArrayList < String > ();","status":"noncore-diff","id":772,"createdAt":"2023-05-27T07:25:38.656Z"},{"fileName":"Clone468.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":15,"character":30},"text":"core-sim1","codeSnippet":"commands.add (\"ping\");\n    commands.add (\"-c\");\n    commands.add (\"5\");\n    commands.add (\"74.125.236.73\");\n    ping.doCommand (commands);","status":"core-sim","id":773,"createdAt":"2023-05-27T07:38:02.686Z"},{"fileName":"Clone468.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":65},"text":"core-sim1","codeSnippet":"inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});","status":"core-sim","id":774,"createdAt":"2023-05-27T07:38:23.876Z"},{"fileName":"Clone468.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":23,"character":83},"text":"core-sim1","codeSnippet":"System.out.println (inet.isReachable (5000) ? \"Host is reachable\" : \"Host is NOT reachable\");\n    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});","status":"core-sim","id":775,"createdAt":"2023-05-27T07:39:13.229Z"},{"fileName":"Clone468.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":26,"character":1},"text":"core-sim2","codeSnippet":"System.out.println (inet.isReachable (5000) ? \"Host is reachable\" : \"Host is NOT reachable\");\n}","status":"core-sim","id":776,"createdAt":"2023-05-27T07:39:21.262Z"},{"fileName":"Clone468.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":59},"text":"noncore-diff1","codeSnippet":"JavaPingExampleProgram ping = new JavaPingExampleProgram ();\n    List < String > commands = new ArrayList < String > ();","status":"noncore-diff","id":777,"createdAt":"2023-05-27T07:42:28.084Z"},{"fileName":"Clone468.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":21},"text":"noncore-diff2","codeSnippet":"InetAddress inet;","status":"noncore-diff","id":778,"createdAt":"2023-05-27T07:42:35.247Z"},{"fileName":"Clone468.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":59},"text":"noncore-diff1","codeSnippet":"System.out.println (\"Sending Ping Request to \" + inet);","status":"noncore-diff","id":779,"createdAt":"2023-05-27T07:44:35.599Z"},{"fileName":"Clone468.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":24,"character":59},"text":"noncore-diff2","codeSnippet":"System.out.println (\"Sending Ping Request to \" + inet);","status":"noncore-diff","id":780,"createdAt":"2023-05-27T07:44:51.923Z"},{"fileName":"Clone469.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":11,"character":56},"text":"core-sim1","codeSnippet":"InetAddress address = InetAddress.getByName (\"192.168.1.103\");\n        boolean reachable = address.isReachable (10000);","status":"core-sim","id":781,"createdAt":"2023-05-27T07:45:21.623Z"},{"fileName":"Clone469.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":65},"text":"core-sim1","codeSnippet":"inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});","status":"core-sim","id":782,"createdAt":"2023-05-27T07:46:00.154Z"},{"fileName":"Clone469.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":23,"character":83},"text":"core-sim2","codeSnippet":"System.out.println (inet.isReachable (5000) ? \"Host is reachable\" : \"Host is NOT reachable\");\n    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});","status":"core-sim","id":783,"createdAt":"2023-05-27T07:46:13.149Z"},{"fileName":"Clone469.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":97},"text":"core-sim1","codeSnippet":"System.out.println (inet.isReachable (5000) ? \"Host is reachable\" : \"Host is NOT reachable\");","status":"core-sim","id":784,"createdAt":"2023-05-27T07:47:58.480Z"},{"fileName":"Clone469.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":9},"text":"noncore-diff1","codeSnippet":"try {","status":"noncore-diff","id":785,"createdAt":"2023-05-27T07:49:07.404Z"},{"fileName":"Clone469.java","fileLine":12,"positionStart":{"line":12,"character":8},"positionEnd":{"line":15,"character":5},"text":"noncore-diff1","codeSnippet":"System.out.println (\"Is host reachable? \" + reachable);\n    } catch (Exception e) {\n        e.printStackTrace ();\n    }","status":"noncore-diff","id":786,"createdAt":"2023-05-27T07:49:20.748Z"},{"fileName":"Clone469.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":21},"text":"noncore-diff2","codeSnippet":"InetAddress inet;","status":"noncore-diff","id":787,"createdAt":"2023-05-27T07:51:33.342Z"},{"fileName":"Clone469.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":59},"text":"noncore-diff3","codeSnippet":"System.out.println (\"Sending Ping Request to \" + inet);","status":"noncore-diff","id":788,"createdAt":"2023-05-27T07:51:51.954Z"},{"fileName":"Clone469.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":24,"character":59},"text":"noncore-diff3","codeSnippet":"System.out.println (\"Sending Ping Request to \" + inet);","status":"noncore-diff","id":789,"createdAt":"2023-05-27T07:52:23.925Z"},{"fileName":"Clone479.java","fileLine":86,"positionStart":{"line":86,"character":4},"positionEnd":{"line":86,"character":29},"text":"noncore-sim1","codeSnippet":"super.paintComponent (g);","status":"noncore-sim","id":790,"createdAt":"2023-05-27T07:54:32.699Z"},{"fileName":"Clone479.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":29},"text":"noncore-sim1","codeSnippet":"super.paintComponent (g);","status":"noncore-sim","id":791,"createdAt":"2023-05-27T07:54:40.260Z"},{"fileName":"Clone479.java","fileLine":87,"positionStart":{"line":87,"character":4},"positionEnd":{"line":87,"character":35},"text":"noncore-sim2","codeSnippet":"Graphics2D gg = (Graphics2D) g;","status":"noncore-sim","id":792,"createdAt":"2023-05-27T07:54:50.301Z"},{"fileName":"Clone479.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":35},"text":"noncore-sim2","codeSnippet":"Graphics2D g2 = (Graphics2D) g;","status":"noncore-sim","id":793,"createdAt":"2023-05-27T07:55:04.354Z"},{"fileName":"Clone479.java","fileLine":88,"positionStart":{"line":88,"character":4},"positionEnd":{"line":88,"character":93},"text":"core-sim1","codeSnippet":"gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","status":"core-sim","id":794,"createdAt":"2023-05-27T07:55:26.274Z"},{"fileName":"Clone479.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":93},"text":"core-sim1","codeSnippet":"g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","status":"core-sim","id":795,"createdAt":"2023-05-27T07:55:35.680Z"},{"fileName":"Clone479.java","fileLine":35,"positionStart":{"line":35,"character":12},"positionEnd":{"line":35,"character":55},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g2.getFontMetrics ();","status":"core-sim","id":796,"createdAt":"2023-05-27T07:58:28.734Z"},{"fileName":"Clone479.java","fileLine":53,"positionStart":{"line":53,"character":16},"positionEnd":{"line":53,"character":59},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g2.getFontMetrics ();","status":"core-sim","id":797,"createdAt":"2023-05-27T07:58:39.968Z"},{"fileName":"Clone479.java","fileLine":91,"positionStart":{"line":91,"character":4},"positionEnd":{"line":91,"character":50},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g.getFontMetrics (font);","status":"core-sim","id":798,"createdAt":"2023-05-27T07:59:08.499Z"},{"fileName":"Clone479.java","fileLine":54,"positionStart":{"line":54,"character":16},"positionEnd":{"line":54,"character":62},"text":"core-sim3","codeSnippet":"int labelWidth = metrics.stringWidth (xLabel);","status":"core-sim","id":799,"createdAt":"2023-05-27T08:00:31.499Z"},{"fileName":"Clone479.java","fileLine":92,"positionStart":{"line":92,"character":4},"positionEnd":{"line":92,"character":45},"text":"core-sim3","codeSnippet":"int width = metrics.stringWidth (string);","status":"core-sim","id":800,"createdAt":"2023-05-27T08:00:38.596Z"},{"fileName":"Clone479.java","fileLine":36,"positionStart":{"line":36,"character":12},"positionEnd":{"line":36,"character":58},"text":"core-sim3","codeSnippet":"int labelWidth = metrics.stringWidth (yLabel);","status":"core-sim","id":801,"createdAt":"2023-05-27T08:00:54.383Z"},{"fileName":"Clone479.java","fileLine":95,"positionStart":{"line":95,"character":4},"positionEnd":{"line":95,"character":58},"text":"core-sim4","codeSnippet":"gg.drawString (string, (getWidth () - width) / 2, 11);","status":"core-sim","id":802,"createdAt":"2023-05-27T08:01:24.940Z"},{"fileName":"Clone479.java","fileLine":55,"positionStart":{"line":55,"character":16},"positionEnd":{"line":55,"character":91},"text":"core-sim4","codeSnippet":"g2.drawString (xLabel, x0 - labelWidth / 2, y0 + metrics.getHeight () + 3);","status":"core-sim","id":803,"createdAt":"2023-05-27T08:01:34.166Z"},{"fileName":"Clone479.java","fileLine":37,"positionStart":{"line":37,"character":12},"positionEnd":{"line":37,"character":93},"text":"core-sim4","codeSnippet":"g2.drawString (yLabel, x0 - labelWidth - 5, y0 + (metrics.getHeight () / 2) - 3);","status":"core-sim","id":804,"createdAt":"2023-05-27T08:03:40.640Z"},{"fileName":"Clone479.java","fileLine":89,"positionStart":{"line":89,"character":4},"positionEnd":{"line":90,"character":35},"text":"noncore-diff1","codeSnippet":"Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Distance (m)\";","status":"noncore-diff","id":805,"createdAt":"2023-05-27T08:04:00.471Z"},{"fileName":"Clone479.java","fileLine":93,"positionStart":{"line":93,"character":4},"positionEnd":{"line":94,"character":22},"text":"noncore-diff2","codeSnippet":"int height = metrics.getHeight ();\n    gg.setFont (font);","status":"noncore-diff","id":806,"createdAt":"2023-05-27T08:04:12.660Z"},{"fileName":"Clone479.java","fileLine":56,"positionStart":{"line":56,"character":12},"positionEnd":{"line":82,"character":5},"text":"core-diff1","codeSnippet":"}\n            g2.drawLine (x0, y0, x1, y1);\n        }\n    }\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, padding + labelPadding, padding);\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, getWidth () - padding, getHeight () - padding - labelPadding);\n    Stroke oldStroke = g2.getStroke ();\n    g2.setColor (lineColor);\n    g2.setStroke (GRAPH_STROKE);\n    for (int i = 0;\n    i < graphPoints.size () - 1; i ++) {\n        int x1 = graphPoints.get (i).x;\n        int y1 = graphPoints.get (i).y;\n        int x2 = graphPoints.get (i + 1).x;\n        int y2 = graphPoints.get (i + 1).y;\n        g2.drawLine (x1, y1, x2, y2);\n    }\n    g2.setStroke (oldStroke);\n    g2.setColor (pointColor);\n    for (int i = 0;\n    i < graphPoints.size (); i ++) {\n        int x = graphPoints.get (i).x - pointWidth / 2;\n        int y = graphPoints.get (i).y - pointWidth / 2;\n        int ovalW = pointWidth;\n        int ovalH = pointWidth;\n        g2.fillOval (x, y, ovalW, ovalH);\n    }","status":"core-diff","id":808,"createdAt":"2023-05-27T08:04:50.042Z"},{"fileName":"Clone479.java","fileLine":38,"positionStart":{"line":38,"character":8},"positionEnd":{"line":52,"character":39},"text":"core-diff1","codeSnippet":"}\n        g2.drawLine (x0, y0, x1, y1);\n    }\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        if (scores.size () > 1) {\n            int x0 = i * (getWidth () - padding * 2 - labelPadding) / (scores.size () - 1) + padding + labelPadding;\n            int x1 = x0;\n            int y0 = getHeight () - padding - labelPadding;\n            int y1 = y0 - pointWidth;\n            if ((i % ((int) ((scores.size () / 20.0)) + 1)) == 0) {\n                g2.setColor (gridColor);\n                g2.drawLine (x0, getHeight () - padding - labelPadding - 1 - pointWidth, x1, padding);\n                g2.setColor (Color.BLACK);\n                String xLabel = i + \"\";","status":"core-diff","id":809,"createdAt":"2023-05-27T08:04:58.574Z"},{"fileName":"Clone479.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":34,"character":143},"text":"core-diff1","codeSnippet":"double xScale = ((double) getWidth () - (2 * padding) - labelPadding) / (scores.size () - 1);\n    double yScale = ((double) getHeight () - 2 * padding - labelPadding) / (getMaxScore () - getMinScore ());\n    List < Point > graphPoints = new ArrayList < > ();\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        int x1 = (int) (i * xScale + padding + labelPadding);\n        int y1 = (int) ((getMaxScore () - scores.get (i)) * yScale + padding);\n        graphPoints.add (new Point (x1, y1));\n    }\n    g2.setColor (Color.WHITE);\n    g2.fillRect (padding + labelPadding, padding, getWidth () - (2 * padding) - labelPadding, getHeight () - 2 * padding - labelPadding);\n    g2.setColor (Color.BLACK);\n    for (int i = 0;\n    i < numberYDivisions + 1; i ++) {\n        int x0 = padding + labelPadding;\n        int x1 = pointWidth + padding + labelPadding;\n        int y0 = getHeight () - ((i * (getHeight () - padding * 2 - labelPadding)) / numberYDivisions + padding + labelPadding);\n        int y1 = y0;\n        if (scores.size () > 0) {\n            g2.setColor (gridColor);\n            g2.drawLine (padding + labelPadding + 1 + pointWidth, y0, getWidth () - padding, y1);\n            g2.setColor (Color.BLACK);\n            String yLabel = ((int) ((getMinScore () + (getMaxScore () - getMinScore ()) * ((i * 1.0) / numberYDivisions)) * 100)) / 100.0 + \"\";","status":"core-diff","id":810,"createdAt":"2023-05-27T08:05:09.252Z"},{"fileName":"Clone481.java","fileLine":86,"positionStart":{"line":86,"character":4},"positionEnd":{"line":88,"character":93},"text":"core-sim1","codeSnippet":"super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","status":"core-sim","id":811,"createdAt":"2023-05-27T08:13:27.751Z"},{"fileName":"Clone481.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":93},"text":"core-sim1","codeSnippet":"super.paintComponent (g);\n    Graphics2D g2 = (Graphics2D) g;\n    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","status":"core-sim","id":812,"createdAt":"2023-05-27T08:13:36.936Z"},{"fileName":"Clone481.java","fileLine":91,"positionStart":{"line":91,"character":4},"positionEnd":{"line":92,"character":45},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);","status":"core-sim","id":813,"createdAt":"2023-05-27T08:13:59.620Z"},{"fileName":"Clone481.java","fileLine":53,"positionStart":{"line":53,"character":16},"positionEnd":{"line":54,"character":62},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g2.getFontMetrics ();\n                int labelWidth = metrics.stringWidth (xLabel);","status":"core-sim","id":814,"createdAt":"2023-05-27T08:14:15.383Z"},{"fileName":"Clone481.java","fileLine":35,"positionStart":{"line":35,"character":12},"positionEnd":{"line":36,"character":58},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g2.getFontMetrics ();\n            int labelWidth = metrics.stringWidth (yLabel);","status":"core-sim","id":815,"createdAt":"2023-05-27T08:14:52.938Z"},{"fileName":"Clone481.java","fileLine":95,"positionStart":{"line":95,"character":4},"positionEnd":{"line":95,"character":58},"text":"core-sim3","codeSnippet":"gg.drawString (string, (getWidth () - width) / 2, 11);","status":"core-sim","id":816,"createdAt":"2023-05-27T08:15:08.482Z"},{"fileName":"Clone481.java","fileLine":55,"positionStart":{"line":55,"character":16},"positionEnd":{"line":55,"character":91},"text":"core-sim3","codeSnippet":"g2.drawString (xLabel, x0 - labelWidth / 2, y0 + metrics.getHeight () + 3);","status":"core-sim","id":817,"createdAt":"2023-05-27T08:15:56.350Z"},{"fileName":"Clone481.java","fileLine":37,"positionStart":{"line":37,"character":12},"positionEnd":{"line":37,"character":93},"text":"core-sim3","codeSnippet":"g2.drawString (yLabel, x0 - labelWidth - 5, y0 + (metrics.getHeight () / 2) - 3);","status":"core-sim","id":818,"createdAt":"2023-05-27T08:16:03.110Z"},{"fileName":"Clone481.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":34,"character":143},"text":"core-diff1","codeSnippet":"double xScale = ((double) getWidth () - (2 * padding) - labelPadding) / (scores.size () - 1);\n    double yScale = ((double) getHeight () - 2 * padding - labelPadding) / (getMaxScore () - getMinScore ());\n    List < Point > graphPoints = new ArrayList < > ();\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        int x1 = (int) (i * xScale + padding + labelPadding);\n        int y1 = (int) ((getMaxScore () - scores.get (i)) * yScale + padding);\n        graphPoints.add (new Point (x1, y1));\n    }\n    g2.setColor (Color.WHITE);\n    g2.fillRect (padding + labelPadding, padding, getWidth () - (2 * padding) - labelPadding, getHeight () - 2 * padding - labelPadding);\n    g2.setColor (Color.BLACK);\n    for (int i = 0;\n    i < numberYDivisions + 1; i ++) {\n        int x0 = padding + labelPadding;\n        int x1 = pointWidth + padding + labelPadding;\n        int y0 = getHeight () - ((i * (getHeight () - padding * 2 - labelPadding)) / numberYDivisions + padding + labelPadding);\n        int y1 = y0;\n        if (scores.size () > 0) {\n            g2.setColor (gridColor);\n            g2.drawLine (padding + labelPadding + 1 + pointWidth, y0, getWidth () - padding, y1);\n            g2.setColor (Color.BLACK);\n            String yLabel = ((int) ((getMinScore () + (getMaxScore () - getMinScore ()) * ((i * 1.0) / numberYDivisions)) * 100)) / 100.0 + \"\";","status":"core-diff","id":819,"createdAt":"2023-05-27T08:16:13.334Z"},{"fileName":"Clone481.java","fileLine":38,"positionStart":{"line":38,"character":8},"positionEnd":{"line":52,"character":39},"text":"core-diff1","codeSnippet":"}\n        g2.drawLine (x0, y0, x1, y1);\n    }\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        if (scores.size () > 1) {\n            int x0 = i * (getWidth () - padding * 2 - labelPadding) / (scores.size () - 1) + padding + labelPadding;\n            int x1 = x0;\n            int y0 = getHeight () - padding - labelPadding;\n            int y1 = y0 - pointWidth;\n            if ((i % ((int) ((scores.size () / 20.0)) + 1)) == 0) {\n                g2.setColor (gridColor);\n                g2.drawLine (x0, getHeight () - padding - labelPadding - 1 - pointWidth, x1, padding);\n                g2.setColor (Color.BLACK);\n                String xLabel = i + \"\";","status":"core-diff","id":820,"createdAt":"2023-05-27T08:16:19.484Z"},{"fileName":"Clone481.java","fileLine":56,"positionStart":{"line":56,"character":12},"positionEnd":{"line":82,"character":5},"text":"core-diff1","codeSnippet":"}\n            g2.drawLine (x0, y0, x1, y1);\n        }\n    }\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, padding + labelPadding, padding);\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, getWidth () - padding, getHeight () - padding - labelPadding);\n    Stroke oldStroke = g2.getStroke ();\n    g2.setColor (lineColor);\n    g2.setStroke (GRAPH_STROKE);\n    for (int i = 0;\n    i < graphPoints.size () - 1; i ++) {\n        int x1 = graphPoints.get (i).x;\n        int y1 = graphPoints.get (i).y;\n        int x2 = graphPoints.get (i + 1).x;\n        int y2 = graphPoints.get (i + 1).y;\n        g2.drawLine (x1, y1, x2, y2);\n    }\n    g2.setStroke (oldStroke);\n    g2.setColor (pointColor);\n    for (int i = 0;\n    i < graphPoints.size (); i ++) {\n        int x = graphPoints.get (i).x - pointWidth / 2;\n        int y = graphPoints.get (i).y - pointWidth / 2;\n        int ovalW = pointWidth;\n        int ovalH = pointWidth;\n        g2.fillOval (x, y, ovalW, ovalH);\n    }","status":"core-diff","id":821,"createdAt":"2023-05-27T08:18:10.261Z"},{"fileName":"Clone481.java","fileLine":89,"positionStart":{"line":89,"character":4},"positionEnd":{"line":90,"character":35},"text":"noncore-diff1","codeSnippet":"Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Distance (m)\";","status":"noncore-diff","id":822,"createdAt":"2023-05-27T08:18:25.175Z"},{"fileName":"Clone481.java","fileLine":93,"positionStart":{"line":93,"character":4},"positionEnd":{"line":94,"character":22},"text":"noncore-diff2","codeSnippet":"int height = metrics.getHeight ();\n    gg.setFont (font);","status":"noncore-diff","id":823,"createdAt":"2023-05-27T08:18:44.312Z"},{"fileName":"Clone482.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":93},"text":"core-sim1","codeSnippet":"super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","status":"core-sim","id":824,"createdAt":"2023-05-27T08:20:41.579Z"},{"fileName":"Clone482.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":24,"character":93},"text":"core-sim1","codeSnippet":"super.paintComponent (g);\n    Graphics2D g2 = (Graphics2D) g;\n    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","status":"core-sim","id":825,"createdAt":"2023-05-27T08:20:52.328Z"},{"fileName":"Clone482.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":15,"character":45},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);","status":"core-sim","id":826,"createdAt":"2023-05-27T08:23:37.739Z"},{"fileName":"Clone482.java","fileLine":48,"positionStart":{"line":48,"character":12},"positionEnd":{"line":49,"character":58},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g2.getFontMetrics ();\n            int labelWidth = metrics.stringWidth (yLabel);","status":"core-sim","id":827,"createdAt":"2023-05-27T08:23:51.557Z"},{"fileName":"Clone482.java","fileLine":66,"positionStart":{"line":66,"character":16},"positionEnd":{"line":67,"character":62},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g2.getFontMetrics ();\n                int labelWidth = metrics.stringWidth (xLabel);","status":"core-sim","id":828,"createdAt":"2023-05-27T08:24:29.308Z"},{"fileName":"Clone482.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":18,"character":74},"text":"core-diff1","codeSnippet":"drawRotate (gg, getWidth (), (getHeight () + width) / 2, 270, string);","status":"core-diff","id":829,"createdAt":"2023-05-27T08:24:40.991Z"},{"fileName":"Clone482.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":13,"character":31},"text":"noncore-diff1","codeSnippet":"Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Time (s)\";","status":"noncore-diff","id":830,"createdAt":"2023-05-27T08:27:48.738Z"},{"fileName":"Clone482.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":17,"character":22},"text":"noncore-diff2","codeSnippet":"int height = metrics.getHeight ();\n    gg.setFont (font);","status":"noncore-diff","id":831,"createdAt":"2023-05-27T08:27:56.598Z"},{"fileName":"Clone482.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":47,"character":143},"text":"core-diff2","codeSnippet":"double xScale = ((double) getWidth () - (2 * padding) - labelPadding) / (scores.size () - 1);\n    double yScale = ((double) getHeight () - 2 * padding - labelPadding) / (getMaxScore () - getMinScore ());\n    List < Point > graphPoints = new ArrayList < > ();\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        int x1 = (int) (i * xScale + padding + labelPadding);\n        int y1 = (int) ((getMaxScore () - scores.get (i)) * yScale + padding);\n        graphPoints.add (new Point (x1, y1));\n    }\n    g2.setColor (Color.WHITE);\n    g2.fillRect (padding + labelPadding, padding, getWidth () - (2 * padding) - labelPadding, getHeight () - 2 * padding - labelPadding);\n    g2.setColor (Color.BLACK);\n    for (int i = 0;\n    i < numberYDivisions + 1; i ++) {\n        int x0 = padding + labelPadding;\n        int x1 = pointWidth + padding + labelPadding;\n        int y0 = getHeight () - ((i * (getHeight () - padding * 2 - labelPadding)) / numberYDivisions + padding + labelPadding);\n        int y1 = y0;\n        if (scores.size () > 0) {\n            g2.setColor (gridColor);\n            g2.drawLine (padding + labelPadding + 1 + pointWidth, y0, getWidth () - padding, y1);\n            g2.setColor (Color.BLACK);\n            String yLabel = ((int) ((getMinScore () + (getMaxScore () - getMinScore ()) * ((i * 1.0) / numberYDivisions)) * 100)) / 100.0 + \"\";","status":"core-diff","id":832,"createdAt":"2023-05-27T08:28:28.926Z"},{"fileName":"Clone482.java","fileLine":50,"positionStart":{"line":50,"character":12},"positionEnd":{"line":65,"character":39},"text":"core-diff2","codeSnippet":"g2.drawString (yLabel, x0 - labelWidth - 5, y0 + (metrics.getHeight () / 2) - 3);\n        }\n        g2.drawLine (x0, y0, x1, y1);\n    }\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        if (scores.size () > 1) {\n            int x0 = i * (getWidth () - padding * 2 - labelPadding) / (scores.size () - 1) + padding + labelPadding;\n            int x1 = x0;\n            int y0 = getHeight () - padding - labelPadding;\n            int y1 = y0 - pointWidth;\n            if ((i % ((int) ((scores.size () / 20.0)) + 1)) == 0) {\n                g2.setColor (gridColor);\n                g2.drawLine (x0, getHeight () - padding - labelPadding - 1 - pointWidth, x1, padding);\n                g2.setColor (Color.BLACK);\n                String xLabel = i + \"\";","status":"core-diff","id":833,"createdAt":"2023-05-27T08:28:38.161Z"},{"fileName":"Clone482.java","fileLine":68,"positionStart":{"line":68,"character":16},"positionEnd":{"line":95,"character":5},"text":"core-diff2","codeSnippet":"g2.drawString (xLabel, x0 - labelWidth / 2, y0 + metrics.getHeight () + 3);\n            }\n            g2.drawLine (x0, y0, x1, y1);\n        }\n    }\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, padding + labelPadding, padding);\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, getWidth () - padding, getHeight () - padding - labelPadding);\n    Stroke oldStroke = g2.getStroke ();\n    g2.setColor (lineColor);\n    g2.setStroke (GRAPH_STROKE);\n    for (int i = 0;\n    i < graphPoints.size () - 1; i ++) {\n        int x1 = graphPoints.get (i).x;\n        int y1 = graphPoints.get (i).y;\n        int x2 = graphPoints.get (i + 1).x;\n        int y2 = graphPoints.get (i + 1).y;\n        g2.drawLine (x1, y1, x2, y2);\n    }\n    g2.setStroke (oldStroke);\n    g2.setColor (pointColor);\n    for (int i = 0;\n    i < graphPoints.size (); i ++) {\n        int x = graphPoints.get (i).x - pointWidth / 2;\n        int y = graphPoints.get (i).y - pointWidth / 2;\n        int ovalW = pointWidth;\n        int ovalH = pointWidth;\n        g2.fillOval (x, y, ovalW, ovalH);\n    }","status":"core-diff","id":834,"createdAt":"2023-05-27T08:28:47.416Z"},{"fileName":"Clone485.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":93},"text":"core-sim1","codeSnippet":"super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","status":"core-sim","id":835,"createdAt":"2023-05-27T08:31:39.754Z"},{"fileName":"Clone485.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":24,"character":93},"text":"core-sim1","codeSnippet":"super.paintComponent (g);\n    Graphics2D g2 = (Graphics2D) g;\n    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","status":"core-sim","id":836,"createdAt":"2023-05-27T08:31:47.315Z"},{"fileName":"Clone485.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":15,"character":45},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);","status":"core-sim","id":837,"createdAt":"2023-05-27T08:31:55.363Z"},{"fileName":"Clone485.java","fileLine":48,"positionStart":{"line":48,"character":12},"positionEnd":{"line":49,"character":58},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g2.getFontMetrics ();\n            int labelWidth = metrics.stringWidth (yLabel);","status":"core-sim","id":838,"createdAt":"2023-05-27T08:32:05.334Z"},{"fileName":"Clone485.java","fileLine":66,"positionStart":{"line":66,"character":16},"positionEnd":{"line":67,"character":62},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g2.getFontMetrics ();\n                int labelWidth = metrics.stringWidth (xLabel);","status":"core-sim","id":839,"createdAt":"2023-05-27T08:32:21.054Z"},{"fileName":"Clone485.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":18,"character":58},"text":"core-sim3","codeSnippet":"gg.drawString (string, (getWidth () - width) / 2, 11);","status":"core-sim","id":840,"createdAt":"2023-05-27T08:32:51.723Z"},{"fileName":"Clone485.java","fileLine":50,"positionStart":{"line":50,"character":12},"positionEnd":{"line":50,"character":93},"text":"core-sim3","codeSnippet":"g2.drawString (yLabel, x0 - labelWidth - 5, y0 + (metrics.getHeight () / 2) - 3);","status":"core-sim","id":841,"createdAt":"2023-05-27T08:33:09.304Z"},{"fileName":"Clone485.java","fileLine":68,"positionStart":{"line":68,"character":16},"positionEnd":{"line":68,"character":91},"text":"core-sim3","codeSnippet":"g2.drawString (xLabel, x0 - labelWidth / 2, y0 + metrics.getHeight () + 3);","status":"core-sim","id":842,"createdAt":"2023-05-27T08:33:17.379Z"},{"fileName":"Clone485.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":13,"character":35},"text":"noncore-diff1","codeSnippet":"Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Distance (m)\";","status":"noncore-diff","id":843,"createdAt":"2023-05-27T08:34:10.852Z"},{"fileName":"Clone485.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":17,"character":22},"text":"noncore-diff2","codeSnippet":"int height = metrics.getHeight ();\n    gg.setFont (font);","status":"noncore-diff","id":844,"createdAt":"2023-05-27T08:34:21.431Z"},{"fileName":"Clone485.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":47,"character":143},"text":"core-diff1","codeSnippet":"double xScale = ((double) getWidth () - (2 * padding) - labelPadding) / (scores.size () - 1);\n    double yScale = ((double) getHeight () - 2 * padding - labelPadding) / (getMaxScore () - getMinScore ());\n    List < Point > graphPoints = new ArrayList < > ();\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        int x1 = (int) (i * xScale + padding + labelPadding);\n        int y1 = (int) ((getMaxScore () - scores.get (i)) * yScale + padding);\n        graphPoints.add (new Point (x1, y1));\n    }\n    g2.setColor (Color.WHITE);\n    g2.fillRect (padding + labelPadding, padding, getWidth () - (2 * padding) - labelPadding, getHeight () - 2 * padding - labelPadding);\n    g2.setColor (Color.BLACK);\n    for (int i = 0;\n    i < numberYDivisions + 1; i ++) {\n        int x0 = padding + labelPadding;\n        int x1 = pointWidth + padding + labelPadding;\n        int y0 = getHeight () - ((i * (getHeight () - padding * 2 - labelPadding)) / numberYDivisions + padding + labelPadding);\n        int y1 = y0;\n        if (scores.size () > 0) {\n            g2.setColor (gridColor);\n            g2.drawLine (padding + labelPadding + 1 + pointWidth, y0, getWidth () - padding, y1);\n            g2.setColor (Color.BLACK);\n            String yLabel = ((int) ((getMinScore () + (getMaxScore () - getMinScore ()) * ((i * 1.0) / numberYDivisions)) * 100)) / 100.0 + \"\";","status":"core-diff","id":845,"createdAt":"2023-05-27T08:34:47.282Z"},{"fileName":"Clone485.java","fileLine":51,"positionStart":{"line":51,"character":8},"positionEnd":{"line":65,"character":39},"text":"core-diff1","codeSnippet":"}\n        g2.drawLine (x0, y0, x1, y1);\n    }\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        if (scores.size () > 1) {\n            int x0 = i * (getWidth () - padding * 2 - labelPadding) / (scores.size () - 1) + padding + labelPadding;\n            int x1 = x0;\n            int y0 = getHeight () - padding - labelPadding;\n            int y1 = y0 - pointWidth;\n            if ((i % ((int) ((scores.size () / 20.0)) + 1)) == 0) {\n                g2.setColor (gridColor);\n                g2.drawLine (x0, getHeight () - padding - labelPadding - 1 - pointWidth, x1, padding);\n                g2.setColor (Color.BLACK);\n                String xLabel = i + \"\";","status":"core-diff","id":846,"createdAt":"2023-05-27T08:34:58.475Z"},{"fileName":"Clone485.java","fileLine":69,"positionStart":{"line":69,"character":12},"positionEnd":{"line":95,"character":5},"text":"core-diff1","codeSnippet":"}\n            g2.drawLine (x0, y0, x1, y1);\n        }\n    }\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, padding + labelPadding, padding);\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, getWidth () - padding, getHeight () - padding - labelPadding);\n    Stroke oldStroke = g2.getStroke ();\n    g2.setColor (lineColor);\n    g2.setStroke (GRAPH_STROKE);\n    for (int i = 0;\n    i < graphPoints.size () - 1; i ++) {\n        int x1 = graphPoints.get (i).x;\n        int y1 = graphPoints.get (i).y;\n        int x2 = graphPoints.get (i + 1).x;\n        int y2 = graphPoints.get (i + 1).y;\n        g2.drawLine (x1, y1, x2, y2);\n    }\n    g2.setStroke (oldStroke);\n    g2.setColor (pointColor);\n    for (int i = 0;\n    i < graphPoints.size (); i ++) {\n        int x = graphPoints.get (i).x - pointWidth / 2;\n        int y = graphPoints.get (i).y - pointWidth / 2;\n        int ovalW = pointWidth;\n        int ovalH = pointWidth;\n        g2.fillOval (x, y, ovalW, ovalH);\n    }","status":"core-diff","id":847,"createdAt":"2023-05-27T08:37:17.040Z"},{"fileName":"Clone487.java","fileLine":86,"positionStart":{"line":86,"character":4},"positionEnd":{"line":88,"character":93},"text":"core-sim1","codeSnippet":"super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","status":"core-sim","id":848,"createdAt":"2023-05-27T08:37:50.576Z"},{"fileName":"Clone487.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":93},"text":"core-sim1","codeSnippet":"super.paintComponent (g);\n    Graphics2D g2 = (Graphics2D) g;\n    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","status":"core-sim","id":849,"createdAt":"2023-05-27T08:40:13.293Z"},{"fileName":"Clone487.java","fileLine":91,"positionStart":{"line":91,"character":4},"positionEnd":{"line":92,"character":45},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);","status":"core-sim","id":850,"createdAt":"2023-05-27T08:40:23.964Z"},{"fileName":"Clone487.java","fileLine":53,"positionStart":{"line":53,"character":16},"positionEnd":{"line":54,"character":62},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g2.getFontMetrics ();\n                int labelWidth = metrics.stringWidth (xLabel);","status":"core-sim","id":851,"createdAt":"2023-05-27T08:40:43.399Z"},{"fileName":"Clone487.java","fileLine":35,"positionStart":{"line":35,"character":12},"positionEnd":{"line":36,"character":58},"text":"core-sim2","codeSnippet":"FontMetrics metrics = g2.getFontMetrics ();\n            int labelWidth = metrics.stringWidth (yLabel);","status":"core-sim","id":852,"createdAt":"2023-05-27T08:40:51.179Z"},{"fileName":"Clone487.java","fileLine":37,"positionStart":{"line":37,"character":12},"positionEnd":{"line":37,"character":93},"text":"core-sim3","codeSnippet":"g2.drawString (yLabel, x0 - labelWidth - 5, y0 + (metrics.getHeight () / 2) - 3);","status":"core-sim","id":853,"createdAt":"2023-05-27T08:40:56.970Z"},{"fileName":"Clone487.java","fileLine":55,"positionStart":{"line":55,"character":16},"positionEnd":{"line":55,"character":91},"text":"core-sim3","codeSnippet":"g2.drawString (xLabel, x0 - labelWidth / 2, y0 + metrics.getHeight () + 3);","status":"core-sim","id":854,"createdAt":"2023-05-27T08:41:02.061Z"},{"fileName":"Clone487.java","fileLine":95,"positionStart":{"line":95,"character":4},"positionEnd":{"line":95,"character":58},"text":"core-sim3","codeSnippet":"gg.drawString (string, (getWidth () - width) / 2, 11);","status":"core-sim","id":855,"createdAt":"2023-05-27T08:41:15.167Z"},{"fileName":"Clone487.java","fileLine":56,"positionStart":{"line":56,"character":12},"positionEnd":{"line":82,"character":5},"text":"core-diff1","codeSnippet":"}\n            g2.drawLine (x0, y0, x1, y1);\n        }\n    }\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, padding + labelPadding, padding);\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, getWidth () - padding, getHeight () - padding - labelPadding);\n    Stroke oldStroke = g2.getStroke ();\n    g2.setColor (lineColor);\n    g2.setStroke (GRAPH_STROKE);\n    for (int i = 0;\n    i < graphPoints.size () - 1; i ++) {\n        int x1 = graphPoints.get (i).x;\n        int y1 = graphPoints.get (i).y;\n        int x2 = graphPoints.get (i + 1).x;\n        int y2 = graphPoints.get (i + 1).y;\n        g2.drawLine (x1, y1, x2, y2);\n    }\n    g2.setStroke (oldStroke);\n    g2.setColor (pointColor);\n    for (int i = 0;\n    i < graphPoints.size (); i ++) {\n        int x = graphPoints.get (i).x - pointWidth / 2;\n        int y = graphPoints.get (i).y - pointWidth / 2;\n        int ovalW = pointWidth;\n        int ovalH = pointWidth;\n        g2.fillOval (x, y, ovalW, ovalH);\n    }","status":"core-diff","id":856,"createdAt":"2023-05-27T08:42:25.664Z"},{"fileName":"Clone487.java","fileLine":38,"positionStart":{"line":38,"character":8},"positionEnd":{"line":52,"character":39},"text":"core-diff1","codeSnippet":"}\n        g2.drawLine (x0, y0, x1, y1);\n    }\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        if (scores.size () > 1) {\n            int x0 = i * (getWidth () - padding * 2 - labelPadding) / (scores.size () - 1) + padding + labelPadding;\n            int x1 = x0;\n            int y0 = getHeight () - padding - labelPadding;\n            int y1 = y0 - pointWidth;\n            if ((i % ((int) ((scores.size () / 20.0)) + 1)) == 0) {\n                g2.setColor (gridColor);\n                g2.drawLine (x0, getHeight () - padding - labelPadding - 1 - pointWidth, x1, padding);\n                g2.setColor (Color.BLACK);\n                String xLabel = i + \"\";","status":"core-diff","id":857,"createdAt":"2023-05-27T08:42:40.426Z"},{"fileName":"Clone487.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":34,"character":143},"text":"core-diff1","codeSnippet":"double xScale = ((double) getWidth () - (2 * padding) - labelPadding) / (scores.size () - 1);\n    double yScale = ((double) getHeight () - 2 * padding - labelPadding) / (getMaxScore () - getMinScore ());\n    List < Point > graphPoints = new ArrayList < > ();\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        int x1 = (int) (i * xScale + padding + labelPadding);\n        int y1 = (int) ((getMaxScore () - scores.get (i)) * yScale + padding);\n        graphPoints.add (new Point (x1, y1));\n    }\n    g2.setColor (Color.WHITE);\n    g2.fillRect (padding + labelPadding, padding, getWidth () - (2 * padding) - labelPadding, getHeight () - 2 * padding - labelPadding);\n    g2.setColor (Color.BLACK);\n    for (int i = 0;\n    i < numberYDivisions + 1; i ++) {\n        int x0 = padding + labelPadding;\n        int x1 = pointWidth + padding + labelPadding;\n        int y0 = getHeight () - ((i * (getHeight () - padding * 2 - labelPadding)) / numberYDivisions + padding + labelPadding);\n        int y1 = y0;\n        if (scores.size () > 0) {\n            g2.setColor (gridColor);\n            g2.drawLine (padding + labelPadding + 1 + pointWidth, y0, getWidth () - padding, y1);\n            g2.setColor (Color.BLACK);\n            String yLabel = ((int) ((getMinScore () + (getMaxScore () - getMinScore ()) * ((i * 1.0) / numberYDivisions)) * 100)) / 100.0 + \"\";","status":"core-diff","id":858,"createdAt":"2023-05-27T08:42:57.056Z"},{"fileName":"Clone487.java","fileLine":89,"positionStart":{"line":89,"character":4},"positionEnd":{"line":90,"character":35},"text":"noncore-diff1","codeSnippet":"Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Distance (m)\";","status":"noncore-diff","id":859,"createdAt":"2023-05-27T08:43:05.431Z"},{"fileName":"Clone487.java","fileLine":93,"positionStart":{"line":93,"character":4},"positionEnd":{"line":94,"character":22},"text":"noncore-diff2","codeSnippet":"int height = metrics.getHeight ();\n    gg.setFont (font);","status":"noncore-diff","id":860,"createdAt":"2023-05-27T08:43:14.597Z"},{"fileName":"Clone495.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":35,"character":5},"text":"core-sim1","codeSnippet":"if (leftRight) {\n        x += deltaX;\n        if (x >= (Ball.this.getWidth () - canvasWidth / 2)) {\n            leftRight = false;\n            updateDelta ();\n        }\n    } else {\n        x += - deltaX;\n        if (x <= 0) {\n            leftRight = true;\n            updateDelta ();\n        }\n    }\n    if (upDown) {\n        y += deltaY;\n        upDown = ! (y >= (Ball.this.getHeight () - canvasHeight / 2));\n        if (y >= (Ball.this.getHeight () - canvasHeight / 2)) {\n            upDown = false;\n            updateDelta ();\n        }\n    } else {\n        y += - deltaY;\n        if (y <= 0) {\n            upDown = true;\n            updateDelta ();\n        }\n    }","status":"core-sim","id":861,"createdAt":"2023-05-27T08:46:26.230Z"},{"fileName":"Clone495.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":46,"character":16},"text":"core-sim1","codeSnippet":"if (x >= canvasWidth || x <= 0) {\n        deltaX = - 1 * deltaX;\n    }\n    if (y >= canvasHeight || y <= 0) {\n        deltaY = - 1 * deltaY;\n    }\n    x += deltaX;\n    y += deltaY;","status":"core-sim","id":862,"createdAt":"2023-05-27T08:46:34.308Z"},{"fileName":"Clone497.java","fileLine":41,"positionStart":{"line":41,"character":4},"positionEnd":{"line":52,"character":40},"text":"core-sim1","codeSnippet":"Button buttonOne = (Button) findViewById (R.id.block1);\n    Button buttonTwo = (Button) findViewById (R.id.block2);\n    Button buttonThree = (Button) findViewById (R.id.block3);\n    Button buttonFour = (Button) findViewById (R.id.block4);\n    Button buttonFive = (Button) findViewById (R.id.block5);\n    Button buttonSix = (Button) findViewById (R.id.block6);\n    buttonOne.setOnClickListener (this);\n    buttonTwo.setOnClickListener (this);\n    buttonThree.setOnClickListener (this);\n    buttonFour.setOnClickListener (this);\n    buttonFive.setOnClickListener (this);\n    buttonSix.setOnClickListener (this);","status":"core-sim","id":863,"createdAt":"2023-05-27T08:48:15.769Z"},{"fileName":"Clone497.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":24,"character":40},"text":"core-sim1","codeSnippet":"mButton00 = (Button) findViewById (R.id.button_0_0);\n    mButton10 = (Button) findViewById (R.id.button_1_0);\n    mButton01 = (Button) findViewById (R.id.button_0_1);\n    mButton11 = (Button) findViewById (R.id.button_1_1);\n    mButton02 = (Button) findViewById (R.id.button_0_2);\n    mButton12 = (Button) findViewById (R.id.button_1_2);\n    mButton00.setOnClickListener (this);\n    mButton10.setOnClickListener (this);\n    mButton01.setOnClickListener (this);\n    mButton11.setOnClickListener (this);\n    mButton02.setOnClickListener (this);\n    mButton12.setOnClickListener (this);","status":"core-sim","id":864,"createdAt":"2023-05-27T08:48:28.457Z"},{"fileName":"Clone497.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":57},"text":"core-sim2","codeSnippet":"mEditText = (EditText) findViewById (R.id.edit_text);","status":"core-sim","id":865,"createdAt":"2023-05-27T08:48:46.862Z"},{"fileName":"Clone497.java","fileLine":40,"positionStart":{"line":40,"character":4},"positionEnd":{"line":40,"character":60},"text":"core-sim2","codeSnippet":"txtMessage = (TextView) findViewById (R.id.txtMesssage);","status":"core-sim","id":866,"createdAt":"2023-05-27T08:48:59.081Z"},{"fileName":"Clone497.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":35,"character":44},"text":"noncore-sim1","codeSnippet":"super.onCreate (savedInstanceState);\n    setContentView (R.layout.activity_main);","status":"noncore-sim","id":867,"createdAt":"2023-05-27T08:49:17.785Z"},{"fileName":"Clone497.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":38},"text":"noncore-sim1","codeSnippet":"super.onCreate (savedInstanceState);\n    setContentView (R.layout.buttons);","status":"noncore-sim","id":868,"createdAt":"2023-05-27T08:49:26.745Z"},{"fileName":"Clone497.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":24},"text":"noncore-diff1","codeSnippet":"initializeLookup ();","status":"noncore-diff","id":869,"createdAt":"2023-05-27T08:50:28.151Z"},{"fileName":"Clone497.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":30,"character":5},"text":"noncore-diff2","codeSnippet":"mHandleInputRunnable = new Runnable () {\n        @Override\n        public void run () {\n            handleAlarmTrigger ();\n        }}\n    ;","status":"noncore-diff","id":870,"createdAt":"2023-05-27T08:50:36.218Z"},{"fileName":"Clone497.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":39,"character":69},"text":"noncore-diff3","codeSnippet":"Window window = this.getWindow ();\n    window.addFlags (WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);\n    window.addFlags (WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);\n    window.addFlags (WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);","status":"noncore-diff","id":871,"createdAt":"2023-05-27T08:50:47.361Z"},{"fileName":"Clone500.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":40},"text":"noncore-sim1","codeSnippet":"Scanner s = new Scanner (System.in);","status":"noncore-sim","id":872,"createdAt":"2023-05-27T09:28:56.997Z"},{"fileName":"Clone500.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":39,"character":41},"text":"noncore-sim1","codeSnippet":"Scanner in = new Scanner (System.in);","status":"noncore-sim","id":873,"createdAt":"2023-05-27T09:29:04.899Z"},{"fileName":"Clone500.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":45},"text":"core-sim1","codeSnippet":"int n = Integer.parseInt (s.nextLine ());","status":"core-sim","id":874,"createdAt":"2023-05-27T09:33:28.246Z"},{"fileName":"Clone500.java","fileLine":40,"positionStart":{"line":40,"character":4},"positionEnd":{"line":40,"character":26},"text":"core-sim1","codeSnippet":"int n = in.nextInt ();","status":"core-sim","id":875,"createdAt":"2023-05-27T09:33:36.484Z"},{"fileName":"Clone500.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":34},"text":"noncore-sim2","codeSnippet":"int [] [] a = new int [n] [n];","status":"noncore-sim","id":876,"createdAt":"2023-05-27T09:33:50.027Z"},{"fileName":"Clone500.java","fileLine":41,"positionStart":{"line":41,"character":4},"positionEnd":{"line":41,"character":34},"text":"noncore-sim2","codeSnippet":"int a [] [] = new int [n] [n];","status":"noncore-sim","id":877,"createdAt":"2023-05-27T09:33:58.114Z"},{"fileName":"Clone500.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":20,"character":5},"text":"core-sim2","codeSnippet":"for (int i = 0;\n    i < n; i ++) {\n        String str = s.nextLine ();\n        String [] tempArray = str.split (\" \");\n        for (int j = 0;\n        j < n; j ++) {\n            a [i] [j] = Integer.parseInt (tempArray [j]);\n        }\n    }","status":"core-sim","id":878,"createdAt":"2023-05-27T09:35:38.885Z"},{"fileName":"Clone500.java","fileLine":42,"positionStart":{"line":42,"character":4},"positionEnd":{"line":48,"character":5},"text":"core-sim2","codeSnippet":"for (int a_i = 0;\n    a_i < n; a_i ++) {\n        for (int a_j = 0;\n        a_j < n; a_j ++) {\n            a [a_i] [a_j] = in.nextInt ();\n        }\n    }","status":"core-sim","id":879,"createdAt":"2023-05-27T09:35:48.405Z"},{"fileName":"Clone500.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":35,"character":40},"text":"core-sim3","codeSnippet":"int sum = 0;\n    for (int i = 0;\n    i < n; i ++) {\n        x += a [i] [i];\n    }\n    for (int p = 0;\n    p < n; p ++) {\n        int k = a.length - p - 1;\n        y += a [p] [a.length - p - 1];\n        k += - 1;\n    }\n    sum = x - y;\n    System.out.println (Math.abs (sum));","status":"core-sim","id":880,"createdAt":"2023-05-27T09:36:07.228Z"},{"fileName":"Clone500.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":22,"character":14},"text":"noncore-diff1","codeSnippet":"int x = 0;\n    int y = 0;","status":"noncore-diff","id":882,"createdAt":"2023-05-27T09:36:33.847Z"},{"fileName":"Clone500.java","fileLine":49,"positionStart":{"line":49,"character":4},"positionEnd":{"line":60,"character":29},"text":"core-sim3","codeSnippet":"int l_sum = 0;\n    for (int i = 0;\n    i < n; i ++) {\n        l_sum += a [i] [i];\n    }\n    int r_sum = 0;\n    for (int j = 0;\n    j < n; j ++) {\n        r_sum += a [j] [n - 1 - j];\n    }\n    int sum = l_sum + r_sum;\n    System.out.println (sum);","status":"core-sim","id":883,"createdAt":"2023-05-27T09:36:49.470Z"},{"fileName":"Clone501.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":26},"text":"core-sim1","codeSnippet":"Scanner in = new Scanner (System.in);\n    int n = in.nextInt ();","status":"core-sim","id":884,"createdAt":"2023-05-27T09:39:12.691Z"},{"fileName":"Clone501.java","fileLine":46,"positionStart":{"line":46,"character":3},"positionEnd":{"line":47,"character":26},"text":"core-sim1","codeSnippet":" Scanner in = new Scanner (System.in);\n    int n = in.nextInt ();","status":"core-sim","id":885,"createdAt":"2023-05-27T09:39:20.835Z"},{"fileName":"Clone501.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":22,"character":5},"text":"core-sim2","codeSnippet":"int a [] [] = new int [n] [n];\n    for (int a_i = 0;\n    a_i < n; a_i ++) {\n        for (int a_j = 0;\n        a_j < n; a_j ++) {\n            a [a_i] [a_j] = in.nextInt ();\n        }\n    }","status":"core-sim","id":886,"createdAt":"2023-05-27T09:40:02.974Z"},{"fileName":"Clone501.java","fileLine":48,"positionStart":{"line":48,"character":4},"positionEnd":{"line":55,"character":5},"text":"core-sim2","codeSnippet":"int a [] [] = new int [n] [n];\n    for (int a_i = 0;\n    a_i < n; a_i ++) {\n        for (int a_j = 0;\n        a_j < n; a_j ++) {\n            a [a_i] [a_j] = in.nextInt ();\n        }\n    }","status":"core-sim","id":887,"createdAt":"2023-05-27T09:40:09.853Z"},{"fileName":"Clone501.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":42,"character":41},"text":"core-diff1","codeSnippet":"for (int a_i = 0;\n    a_i < n; a_i ++) {\n        boolean leftNotFound = true;\n        boolean rightNotFound = true;\n        rightStartDiagnol = -- rightStartDiagnol;\n        for (int a_j = 0;\n        a_j < n; a_j ++) {\n            if (leftStartDiagnol == a_j && leftNotFound) {\n                leftTotal = leftTotal + a [a_i] [a_j];\n                leftNotFound = false;\n            }\n            if (rightStartDiagnol == a_j && rightNotFound) {\n                rightTotal = rightTotal + a [a_i] [a_j];\n                rightNotFound = false;\n            }\n        }\n        leftStartDiagnol = ++ leftStartDiagnol;\n    }\n    int data = leftTotal - rightTotal;\n    System.out.println (Math.abs (data));","status":"core-diff","id":888,"createdAt":"2023-05-27T09:41:09.579Z"},{"fileName":"Clone501.java","fileLine":56,"positionStart":{"line":56,"character":4},"positionEnd":{"line":67,"character":29},"text":"core-diff1","codeSnippet":"int l_sum = 0;\n    for (int i = 0;\n    i < n; i ++) {\n        l_sum += a [i] [i];\n    }\n    int r_sum = 0;\n    for (int j = 0;\n    j < n; j ++) {\n        r_sum += a [j] [n - 1 - j];\n    }\n    int sum = l_sum + r_sum;\n    System.out.println (sum);","status":"core-diff","id":889,"createdAt":"2023-05-27T09:41:21.304Z"},{"fileName":"Clone501.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":14,"character":23},"text":"noncore-diff1","codeSnippet":"int leftStartDiagnol = 0;\n    int rightStartDiagnol = n;\n    int leftTotal = 0;\n    int rightTotal = 0;","status":"noncore-diff","id":890,"createdAt":"2023-05-27T09:41:28.307Z"},{"fileName":"Clone506.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":10,"character":77},"text":"core-sim1","codeSnippet":"BufferedImage image = ImageIO.read (new File (strfilename + \".jpg\"));","status":"core-sim","id":893,"createdAt":"2023-05-27T12:56:57.092Z"},{"fileName":"Clone506.java","fileLine":25,"positionStart":{"line":25,"character":12},"positionEnd":{"line":25,"character":67},"text":"core-sim1","codeSnippet":"image = ImageIO.read (new File (strfilename + \".jpg\"));","status":"core-sim","id":895,"createdAt":"2023-05-27T12:59:57.785Z"},{"fileName":"Clone506.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":31,"character":27},"text":"core-sim3","codeSnippet":"ImageIcon icon = new ImageIcon (image);\n    JLlabel.setIcon (icon);","status":"core-sim","id":896,"createdAt":"2023-05-27T13:00:25.717Z"},{"fileName":"Clone506.java","fileLine":14,"positionStart":{"line":14,"character":8},"positionEnd":{"line":15,"character":29},"text":"core-sim3","codeSnippet":"ImageIcon icon = new ImageIcon (\"NOIMAGE.jpg\");\n        label.setIcon (icon);","status":"core-sim","id":897,"createdAt":"2023-05-27T13:00:47.042Z"},{"fileName":"Clone506.java","fileLine":11,"positionStart":{"line":11,"character":8},"positionEnd":{"line":12,"character":29},"text":"core-sim3","codeSnippet":"ImageIcon icon = new ImageIcon (image);\n        label.setIcon (icon);","status":"core-sim","id":898,"createdAt":"2023-05-27T13:13:14.965Z"},{"fileName":"Clone506.java","fileLine":10,"positionStart":{"line":10,"character":30},"positionEnd":{"line":10,"character":30},"text":"core-sim1","codeSnippet":"","status":"core-sim","id":899,"createdAt":"2023-05-27T13:38:25.930Z"},{"fileName":"Clone506.java","fileLine":22,"positionStart":{"line":22,"character":8},"positionEnd":{"line":22,"character":56},"text":"core-sim1","codeSnippet":"image = ImageIO.read (new File (\"NOIMAGE.jpg\"));","status":"core-sim","id":900,"createdAt":"2023-05-27T13:43:23.499Z"},{"fileName":"Clone506.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":9},"text":"noncore-sim1","codeSnippet":"try {","status":"noncore-sim","id":901,"createdAt":"2023-05-27T13:43:39.669Z"},{"fileName":"Clone506.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":13,"character":53},"text":"noncore-sim1","codeSnippet":"} catch (IOException | NullPointerException ex) {","status":"noncore-sim","id":902,"createdAt":"2023-05-27T13:43:49.500Z"},{"fileName":"Clone506.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":16,"character":5},"text":"noncore-sim1","codeSnippet":"}","status":"noncore-sim","id":903,"createdAt":"2023-05-27T13:44:03.550Z"},{"fileName":"Clone506.java","fileLine":24,"positionStart":{"line":24,"character":8},"positionEnd":{"line":24,"character":13},"text":"noncore-sim1","codeSnippet":"try {","status":"noncore-sim","id":904,"createdAt":"2023-05-27T13:44:13.724Z"},{"fileName":"Clone506.java","fileLine":26,"positionStart":{"line":26,"character":7},"positionEnd":{"line":28,"character":9},"text":"core-sim1","codeSnippet":" } catch (IOException ioe) {\n            ioe.printStackTrace ();\n        }","status":"core-sim","id":905,"createdAt":"2023-05-27T13:44:22.768Z"},{"fileName":"Clone506.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":21,"character":39},"text":"noncore-diff1","codeSnippet":"BufferedImage image = null;\n    if (! isImageExist (strfilename)) {","status":"noncore-diff","id":906,"createdAt":"2023-05-27T13:44:32.077Z"},{"fileName":"Clone506.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":12},"text":"noncore-diff1","codeSnippet":"} else {","status":"noncore-diff","id":907,"createdAt":"2023-05-27T13:44:40.987Z"},{"fileName":"Clone506.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":29,"character":5},"text":"noncore-diff1","codeSnippet":"}","status":"noncore-diff","id":908,"createdAt":"2023-05-27T13:44:48.422Z"},{"fileName":"Clone517.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":37,"character":23},"text":"core-diff1","codeSnippet":"o_tc.setInput (x);\n    o_tc.getOutput (x);","status":"core-diff","id":909,"createdAt":"2023-05-27T14:24:16.804Z"},{"fileName":"Clone517.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":40,"character":24},"text":"core-diff1","codeSnippet":"CodilityTest o_tc1 = new CodilityTest ();\n    o_tc1.getOutput (y);","status":"core-diff","id":910,"createdAt":"2023-05-27T14:29:35.226Z"},{"fileName":"Clone517.java","fileLine":16,"positionStart":{"line":16,"character":8},"positionEnd":{"line":27,"character":9},"text":"core-diff3","codeSnippet":"int runs = len > 1000 * 1000 ? 10 : len >= 100 * 1000 ? 100 : 1000;\n        for (int i = 0;\n        i < runs; i ++) {\n            long time1 = System.nanoTime ();\n            int count = countDistinct (nums);\n            long time2 = System.nanoTime ();\n            int count2 = countDistinctUsingSet (nums);\n            long time3 = System.nanoTime ();\n            timeArray += time2 - time1;\n            timeSet += time3 - time2;\n            assert count == count2;\n        }","status":"core-diff","id":911,"createdAt":"2023-05-27T14:29:56.444Z"},{"fileName":"Clone517.java","fileLine":12,"positionStart":{"line":12,"character":8},"positionEnd":{"line":13,"character":27},"text":"core-diff4","codeSnippet":"i < len; i ++) nums [i] = (int) (Math.random () * (Math.random () * 2001 - 1000));\n        Arrays.sort (nums);","status":"core-diff","id":912,"createdAt":"2023-05-27T14:30:07.191Z"},{"fileName":"Clone517.java","fileLine":9,"positionStart":{"line":9,"character":3},"positionEnd":{"line":11,"character":23},"text":"noncore-diff1","codeSnippet":" for (int len : new int [] {100 * 1000 * 1000, 10 * 1000 * 1000, 1000 * 1000, 100 * 1000, 10 * 1000, 1000}) {\n        int [] nums = new int [len];\n        for (int i = 0;","status":"noncore-diff","id":913,"createdAt":"2023-05-27T14:30:20.852Z"},{"fileName":"Clone517.java","fileLine":14,"positionStart":{"line":14,"character":8},"positionEnd":{"line":15,"character":25},"text":"noncore-diff1","codeSnippet":"long timeArray = 0;\n        long timeSet = 0;","status":"noncore-diff","id":914,"createdAt":"2023-05-27T14:30:29.655Z"},{"fileName":"Clone517.java","fileLine":28,"positionStart":{"line":28,"character":8},"positionEnd":{"line":29,"character":5},"text":"noncore-diff1","codeSnippet":"System.out.printf (\"For %,d numbers, using an array took %,d us on average, using a Set took %,d us on average, ratio=%.1f%n\", len, timeArray / 1000 / runs, timeSet / 1000 / runs, 1.0 * timeSet / timeArray);\n    }","status":"noncore-diff","id":915,"createdAt":"2023-05-27T14:30:39.330Z"},{"fileName":"Clone517.java","fileLine":33,"positionStart":{"line":33,"character":3},"positionEnd":{"line":33,"character":44},"text":"core-diff5","codeSnippet":" CodilityTest o_tc = new CodilityTest ();","status":"core-diff","id":917,"createdAt":"2023-05-27T14:30:58.492Z"},{"fileName":"Clone517.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":35,"character":27},"text":"noncore-diff2","codeSnippet":"int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};\n    int [] y = new int [0];","status":"noncore-diff","id":918,"createdAt":"2023-05-27T14:31:07.306Z"},{"fileName":"Clone517.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":38,"character":31},"text":"noncore-diff2","codeSnippet":"System.out.println (count);","status":"noncore-diff","id":919,"createdAt":"2023-05-27T14:31:14.177Z"},{"fileName":"Clone524.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":30,"character":52},"text":"noncore-sim1","codeSnippet":"final StringBuffer result = new StringBuffer ();","status":"noncore-sim","id":920,"createdAt":"2023-05-27T14:32:07.362Z"},{"fileName":"Clone524.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":49},"text":"noncore-sim1","codeSnippet":"StringBuilder message = new StringBuilder ();","status":"noncore-sim","id":921,"createdAt":"2023-05-27T14:32:16.192Z"},{"fileName":"Clone524.java","fileLine":40,"positionStart":{"line":40,"character":4},"positionEnd":{"line":40,"character":30},"text":"noncore-sim2","codeSnippet":"return result.toString ();","status":"noncore-sim","id":922,"createdAt":"2023-05-27T14:32:28.085Z"},{"fileName":"Clone524.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":24,"character":31},"text":"noncore-sim2","codeSnippet":"return message.toString ();","status":"noncore-sim","id":923,"createdAt":"2023-05-27T14:32:44.864Z"},{"fileName":"Clone524.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":39,"character":5},"text":"core-diff1","codeSnippet":"while (regexMatcher.find ()) {\n        if (regexMatcher.group (2) == null) {\n            c = regexMatcher.group (1);\n        } else {\n            c = regexMatcher.group (2);\n        }\n        result.append ((char) ((Integer.parseInt (c) + 'a') - 1));\n    }","status":"core-diff","id":924,"createdAt":"2023-05-27T14:34:18.760Z"},{"fileName":"Clone524.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":23,"character":5},"text":"core-diff2","codeSnippet":"for (String code : cipher_char_codes) {\n        int index = Integer.parseInt (code);\n        if (index > 26) {\n            char [] pair = code.toCharArray ();\n            for (int i = 0;\n            i < pair.length; i ++) {\n                int x = Integer.parseInt (\"\" + code.charAt (i));\n                message.append ((char) ('a' + ((x - 1) % 26)));\n            }\n        } else {\n            message.append ((char) ('a' + ((index - 1) % 26)));\n        }\n    }","status":"core-diff","id":925,"createdAt":"2023-05-27T14:34:28.614Z"},{"fileName":"Clone524.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":53},"text":"core-diff3","codeSnippet":"String [] cipher_char_codes = cipher.split (\"#\");","status":"core-diff","id":926,"createdAt":"2023-05-27T14:36:05.634Z"},{"fileName":"Clone524.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":29,"character":53},"text":"core-diff4","codeSnippet":"final Pattern regex = Pattern.compile (\"((\\\\d\\\\d)(#)|(\\\\d))\");\n    final Matcher regexMatcher = regex.matcher (msg);","status":"core-diff","id":927,"createdAt":"2023-05-27T14:36:15.680Z"},{"fileName":"Clone524.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":31,"character":13},"text":"noncore-diff1","codeSnippet":"String c;","status":"noncore-diff","id":928,"createdAt":"2023-05-27T14:36:40.745Z"},{"fileName":"Clone528.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":61,"character":19},"text":"core-diff1","codeSnippet":"if (rowView == null) {\n        LayoutInflater inflater = context.getLayoutInflater ();\n        rowView = inflater.inflate (R.layout.test_row, null);\n        final TestViewHolder viewHolder = new TestViewHolder ();\n        viewHolder.tvCounter = (TextView) rowView.findViewById (R.id.tvCounter);\n        rowView.setTag (viewHolder);\n    }\n    TestViewHolder holder = (TestViewHolder) rowView.getTag ();\n    final TextView tv = holder.tvCounter;\n    CountDownTimer cdt = counters.get (holder.tvCounter);\n    if (cdt != null) {\n        cdt.cancel ();\n        cdt = null;\n    }\n    Date date = values.get (position);\n    long currentDate = Calendar.getInstance ().getTime ().getTime ();\n    long limitDate = date.getTime ();\n    long difference = limitDate - currentDate;\n    cdt = new CountDownTimer (difference, 1000) {\n        @Override\n        public void onTick (long millisUntilFinished) {\n            int days = 0;\n            int hours = 0;\n            int minutes = 0;\n            int seconds = 0;\n            String sDate = \"\";\n            if (millisUntilFinished > DateUtils.DAY_IN_MILLIS) {\n                days = (int) (millisUntilFinished / DateUtils.DAY_IN_MILLIS);\n                sDate += days + \"d\";\n            }\n            millisUntilFinished -= (days * DateUtils.DAY_IN_MILLIS);\n            if (millisUntilFinished > DateUtils.HOUR_IN_MILLIS) {\n                hours = (int) (millisUntilFinished / DateUtils.HOUR_IN_MILLIS);\n            }\n            millisUntilFinished -= (hours * DateUtils.HOUR_IN_MILLIS);\n            if (millisUntilFinished > DateUtils.MINUTE_IN_MILLIS) {\n                minutes = (int) (millisUntilFinished / DateUtils.MINUTE_IN_MILLIS);\n            }\n            millisUntilFinished -= (minutes * DateUtils.MINUTE_IN_MILLIS);\n            if (millisUntilFinished > DateUtils.SECOND_IN_MILLIS) {\n                seconds = (int) (millisUntilFinished / DateUtils.SECOND_IN_MILLIS);\n            }\n            sDate += \" \" + String.format (\"%02d\", hours) + \":\" + String.format (\"%02d\", minutes) + \":\" + String.format (\"%02d\", seconds);\n            tv.setText (sDate.trim ());\n        }@Override\n        public void onFinish () {\n            tv.setText (\"Finished\");\n        }}\n    ;\n    counters.put (tv, cdt);\n    cdt.start ();\n    return rowView;","status":"core-diff","id":929,"createdAt":"2023-05-27T14:42:02.183Z"},{"fileName":"Clone528.java","fileLine":65,"positionStart":{"line":65,"character":4},"positionEnd":{"line":71,"character":23},"text":"core-diff2","codeSnippet":"convertView = mInflater.inflate (R.layout.listview_row, null);\n    TextView tvTimer = (TextView) convertView.findViewById (R.id.textview_timer);\n    TextView tvName = (TextView) convertView.findViewById (R.id.textview_name);\n    Item item = data.get (position);\n    tvName.setText (item.getName ());\n    myTimer.setTimer (tvTimer, item.getTime ());\n    return convertView;","status":"core-diff","id":930,"createdAt":"2023-05-27T14:42:14.855Z"},{"fileName":"Clone528.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":31},"text":"noncore-diff1","codeSnippet":"View rowView = convertView;","status":"noncore-diff","id":931,"createdAt":"2023-05-27T14:42:24.809Z"},{"fileName":"Clone529.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":9},"text":"noncore-sim1","codeSnippet":"try {","status":"noncore-sim","id":932,"createdAt":"2023-05-27T14:43:23.609Z"},{"fileName":"Clone529.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":31,"character":5},"text":"noncore-sim1","codeSnippet":"} catch (InterruptedException e) {\n        e.printStackTrace ();\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }","status":"noncore-sim","id":933,"createdAt":"2023-05-27T14:43:31.933Z"},{"fileName":"Clone529.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":9},"text":"noncore-sim1","codeSnippet":"try {","status":"noncore-sim","id":934,"createdAt":"2023-05-27T14:45:20.185Z"},{"fileName":"Clone529.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":17,"character":5},"text":"noncore-sim1","codeSnippet":"} catch (Exception e) {\n        e.printStackTrace ();\n    }","status":"noncore-sim","id":935,"createdAt":"2023-05-27T14:45:34.346Z"},{"fileName":"Clone529.java","fileLine":23,"positionStart":{"line":23,"character":8},"positionEnd":{"line":26,"character":25},"text":"core-diff1","codeSnippet":"int retValue = pro.waitFor ();\n        println (\"Command exit with return value \" + retValue);\n        outStream.close ();\n        outStream = null;","status":"core-diff","id":936,"createdAt":"2023-05-27T14:45:52.882Z"},{"fileName":"Clone529.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":14,"character":9},"text":"core-diff2","codeSnippet":"String line = null;\n        BufferedReader in = new BufferedReader (new InputStreamReader (inStream));\n        while ((line = in.readLine ()) != null) {\n            println (line);\n        }","status":"core-diff","id":937,"createdAt":"2023-05-27T14:46:10.001Z"},{"fileName":"Clone529.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":18,"character":55},"text":"noncore-diff1","codeSnippet":"System.out.println (\"Exit reading process output\");","status":"noncore-diff","id":938,"createdAt":"2023-05-27T14:46:21.801Z"},{"fileName":"Clone530.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":9},"text":"noncore-sim1","codeSnippet":"try {","status":"noncore-sim","id":939,"createdAt":"2023-05-27T14:47:01.543Z"},{"fileName":"Clone530.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":17,"character":5},"text":"noncore-sim2","codeSnippet":"} catch (Exception e) {\n        e.printStackTrace ();\n    }","status":"noncore-sim","id":940,"createdAt":"2023-05-27T14:47:08.195Z"},{"fileName":"Clone530.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":9},"text":"noncore-sim1","codeSnippet":"try {","status":"noncore-sim","id":941,"createdAt":"2023-05-27T15:31:38.707Z"},{"fileName":"Clone530.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":31,"character":5},"text":"noncore-sim1","codeSnippet":"} catch (InterruptedException e) {\n        e.printStackTrace ();\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }","status":"noncore-sim","id":942,"createdAt":"2023-05-27T15:31:46.515Z"},{"fileName":"Clone530.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":14,"character":9},"text":"core-diff1","codeSnippet":"String line = null;\n        BufferedReader inErr = new BufferedReader (new InputStreamReader (inErrStream));\n        while ((line = inErr.readLine ()) != null) {\n            println (line);\n        }","status":"core-diff","id":943,"createdAt":"2023-05-27T15:31:56.400Z"},{"fileName":"Clone530.java","fileLine":23,"positionStart":{"line":23,"character":8},"positionEnd":{"line":26,"character":25},"text":"core-diff2","codeSnippet":"int retValue = pro.waitFor ();\n        println (\"Command exit with return value \" + retValue);\n        outStream.close ();\n        outStream = null;","status":"core-diff","id":944,"createdAt":"2023-05-27T15:32:04.094Z"},{"fileName":"Clone530.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":18,"character":53},"text":"noncore-diff1","codeSnippet":"System.out.println (\"Exit reading error stream\");","status":"noncore-diff","id":945,"createdAt":"2023-05-27T15:32:12.319Z"},{"fileName":"Clone531.java","fileLine":9,"positionStart":{"line":9,"character":3},"positionEnd":{"line":11,"character":28},"text":"noncore-sim1","codeSnippet":" Runnable doRun = new Runnable () {\n        @Override\n        public void run () {","status":"noncore-sim","id":946,"createdAt":"2023-05-27T15:56:21.140Z"},{"fileName":"Clone531.java","fileLine":13,"positionStart":{"line":13,"character":8},"positionEnd":{"line":14,"character":5},"text":"noncore-sim1","codeSnippet":"}}\n    ;","status":"noncore-sim","id":948,"createdAt":"2023-05-27T15:56:47.301Z"},{"fileName":"Clone531.java","fileLine":12,"positionStart":{"line":12,"character":12},"positionEnd":{"line":12,"character":28},"text":"core-diff1","codeSnippet":"System.exit (0);","status":"core-diff","id":949,"createdAt":"2023-05-27T15:57:04.438Z"},{"fileName":"Clone531.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":15,"character":39},"text":"core-diff2","codeSnippet":"SwingUtilities.invokeLater (doRun);","status":"core-diff","id":950,"createdAt":"2023-05-27T15:57:13.519Z"},{"fileName":"Clone531.java","fileLine":21,"positionStart":{"line":21,"character":20},"positionEnd":{"line":23,"character":32},"text":"noncore-sim1","codeSnippet":"new Runnable () {\n            @Override\n            public void run () {","status":"noncore-sim","id":951,"createdAt":"2023-05-27T15:57:35.433Z"},{"fileName":"Clone531.java","fileLine":33,"positionStart":{"line":33,"character":12},"positionEnd":{"line":33,"character":14},"text":"noncore-sim1","codeSnippet":"}}","status":"noncore-sim","id":952,"createdAt":"2023-05-27T15:57:59.164Z"},{"fileName":"Clone531.java","fileLine":19,"positionStart":{"line":19,"character":3},"positionEnd":{"line":21,"character":18},"text":"core-diff2","codeSnippet":" timer.start ();\n    if (count > 5) {\n        new Thread","status":"core-diff","id":953,"createdAt":"2023-05-27T16:02:50.085Z"},{"fileName":"Clone531.java","fileLine":24,"positionStart":{"line":24,"character":16},"positionEnd":{"line":74,"character":5},"text":"core-diff1","codeSnippet":"try {\n                    Thread.sleep (500);\n                    changeBtnForegroung (Color.darkGray);\n                    Thread.sleep (500);\n                    count = 0;\n                    Thread.sleep (750);\n                } catch (Exception e) {\n                    System.out.println (e);\n                }\n            }}\n        ).start ();\n    } else {\n        new Thread (new Runnable () {\n            @Override\n            public void run () {\n                try {\n                    runs = true;\n                    if (noColor < 2) {\n                        noColor ++;\n                        changeBtnForegroung (clr [noColor]);\n                    } else {\n                        noColor = 0;\n                        changeBtnForegroung (clr [noColor]);\n                    }\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));\n                    border = new EmptyBorder (0, 5, 10, 5);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));\n                    border = new EmptyBorder (0, 0, 10, 10);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));\n                    border = new EmptyBorder (5, 10, 5, 0);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));\n                    border = new EmptyBorder (10, 10, 0, 0);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left, initMargin.bottom, initMargin.right));\n                    border = new EmptyBorder (5, 5, 5, 5);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    count ++;\n                } catch (Exception e) {\n                    System.out.println (e);\n                }\n            }}\n        ).start ();\n    }","status":"core-diff","id":954,"createdAt":"2023-05-27T16:02:58.447Z"},{"fileName":"Clone532.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":9},"text":"noncore-sim1","codeSnippet":"try {","status":"noncore-sim","id":955,"createdAt":"2023-05-27T16:27:40.490Z"},{"fileName":"Clone532.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":17,"character":5},"text":"noncore-sim1","codeSnippet":"} catch (Exception e) {\n        System.out.println (e);\n    }","status":"noncore-sim","id":956,"createdAt":"2023-05-27T16:27:49.567Z"},{"fileName":"Clone532.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":9},"text":"noncore-sim1","codeSnippet":"try {","status":"noncore-sim","id":957,"createdAt":"2023-05-27T16:27:55.650Z"},{"fileName":"Clone532.java","fileLine":51,"positionStart":{"line":51,"character":4},"positionEnd":{"line":53,"character":5},"text":"noncore-sim1","codeSnippet":"} catch (Exception e) {\n        System.out.println (e);\n    }","status":"noncore-sim","id":958,"createdAt":"2023-05-27T16:28:02.063Z"},{"fileName":"Clone532.java","fileLine":11,"positionStart":{"line":11,"character":8},"positionEnd":{"line":11,"character":27},"text":"core-sim1","codeSnippet":"changeBtnForegroung","status":"core-sim","id":960,"createdAt":"2023-05-27T16:29:11.257Z"},{"fileName":"Clone532.java","fileLine":25,"positionStart":{"line":25,"character":12},"positionEnd":{"line":25,"character":31},"text":"core-sim1","codeSnippet":"changeBtnForegroung","status":"core-sim","id":961,"createdAt":"2023-05-27T16:29:20.193Z"},{"fileName":"Clone532.java","fileLine":28,"positionStart":{"line":28,"character":12},"positionEnd":{"line":28,"character":31},"text":"core-sim1","codeSnippet":"changeBtnForegroung","status":"core-sim","id":962,"createdAt":"2023-05-27T16:29:26.332Z"},{"fileName":"Clone532.java","fileLine":30,"positionStart":{"line":30,"character":8},"positionEnd":{"line":30,"character":23},"text":"core-sim1","codeSnippet":"changeBtnMargin","status":"core-sim","id":963,"createdAt":"2023-05-27T16:29:31.858Z"},{"fileName":"Clone532.java","fileLine":34,"positionStart":{"line":34,"character":8},"positionEnd":{"line":34,"character":23},"text":"core-sim1","codeSnippet":"changeBtnMargin","status":"core-sim","id":964,"createdAt":"2023-05-27T16:29:37.930Z"},{"fileName":"Clone532.java","fileLine":38,"positionStart":{"line":38,"character":8},"positionEnd":{"line":38,"character":23},"text":"core-sim1","codeSnippet":"changeBtnMargin","status":"core-sim","id":965,"createdAt":"2023-05-27T16:29:43.655Z"},{"fileName":"Clone532.java","fileLine":42,"positionStart":{"line":42,"character":8},"positionEnd":{"line":42,"character":23},"text":"core-sim1","codeSnippet":"changeBtnMargin","status":"core-sim","id":966,"createdAt":"2023-05-27T16:29:50.458Z"},{"fileName":"Clone532.java","fileLine":46,"positionStart":{"line":46,"character":8},"positionEnd":{"line":46,"character":23},"text":"core-sim1","codeSnippet":"changeBtnMargin","status":"core-sim","id":967,"createdAt":"2023-05-27T16:29:56.384Z"},{"fileName":"Clone532.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":10,"character":27},"text":"core-sim2","codeSnippet":"Thread.sleep (500);","status":"core-sim","id":968,"createdAt":"2023-05-27T16:30:40.128Z"},{"fileName":"Clone532.java","fileLine":12,"positionStart":{"line":12,"character":8},"positionEnd":{"line":12,"character":27},"text":"core-sim2","codeSnippet":"Thread.sleep (500);","status":"core-sim","id":969,"createdAt":"2023-05-27T16:30:46.222Z"},{"fileName":"Clone532.java","fileLine":14,"positionStart":{"line":14,"character":8},"positionEnd":{"line":14,"character":27},"text":"core-sim2","codeSnippet":"Thread.sleep (750);","status":"core-sim","id":970,"createdAt":"2023-05-27T16:31:07.325Z"},{"fileName":"Clone532.java","fileLine":33,"positionStart":{"line":33,"character":8},"positionEnd":{"line":33,"character":27},"text":"core-sim2","codeSnippet":"Thread.sleep (100);","status":"core-sim","id":972,"createdAt":"2023-05-27T16:31:30.625Z"},{"fileName":"Clone532.java","fileLine":37,"positionStart":{"line":37,"character":8},"positionEnd":{"line":37,"character":27},"text":"core-sim2","codeSnippet":"Thread.sleep (100);","status":"core-sim","id":973,"createdAt":"2023-05-27T16:31:38.446Z"},{"fileName":"Clone532.java","fileLine":41,"positionStart":{"line":41,"character":8},"positionEnd":{"line":41,"character":27},"text":"core-sim2","codeSnippet":"Thread.sleep (100);","status":"core-sim","id":974,"createdAt":"2023-05-27T16:31:45.638Z"},{"fileName":"Clone532.java","fileLine":45,"positionStart":{"line":45,"character":8},"positionEnd":{"line":45,"character":27},"text":"core-sim2","codeSnippet":"Thread.sleep (100);","status":"core-sim","id":975,"createdAt":"2023-05-27T16:31:51.777Z"},{"fileName":"Clone532.java","fileLine":49,"positionStart":{"line":49,"character":8},"positionEnd":{"line":49,"character":27},"text":"core-sim2","codeSnippet":"Thread.sleep (100);","status":"core-sim","id":976,"createdAt":"2023-05-27T16:32:04.989Z"},{"fileName":"Clone532.java","fileLine":13,"positionStart":{"line":13,"character":8},"positionEnd":{"line":13,"character":18},"text":"noncore-diff1","codeSnippet":"count = 0;","status":"noncore-diff","id":977,"createdAt":"2023-05-27T16:32:28.565Z"},{"fileName":"Clone532.java","fileLine":11,"positionStart":{"line":11,"character":28},"positionEnd":{"line":11,"character":45},"text":"noncore-diff2","codeSnippet":"(Color.darkGray);","status":"noncore-diff","id":978,"createdAt":"2023-05-27T16:32:35.229Z"},{"fileName":"Clone532.java","fileLine":22,"positionStart":{"line":22,"character":8},"positionEnd":{"line":24,"character":23},"text":"noncore-diff3","codeSnippet":"runs = true;\n        if (noColor < 2) {\n            noColor ++;","status":"noncore-diff","id":979,"createdAt":"2023-05-27T16:32:43.510Z"},{"fileName":"Clone532.java","fileLine":25,"positionStart":{"line":25,"character":32},"positionEnd":{"line":27,"character":24},"text":"noncore-diff3","codeSnippet":"(clr [noColor]);\n        } else {\n            noColor = 0;","status":"noncore-diff","id":980,"createdAt":"2023-05-27T16:32:51.015Z"},{"fileName":"Clone532.java","fileLine":28,"positionStart":{"line":28,"character":32},"positionEnd":{"line":29,"character":9},"text":"noncore-diff3","codeSnippet":"(clr [noColor]);\n        }","status":"noncore-diff","id":981,"createdAt":"2023-05-27T16:33:02.659Z"},{"fileName":"Clone532.java","fileLine":30,"positionStart":{"line":30,"character":24},"positionEnd":{"line":32,"character":33},"text":"noncore-diff4","codeSnippet":"(new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));\n        border = new EmptyBorder (0, 5, 10, 5);\n        changePnlBorder (border);","status":"noncore-diff","id":983,"createdAt":"2023-05-27T16:34:05.761Z"},{"fileName":"Clone532.java","fileLine":34,"positionStart":{"line":34,"character":24},"positionEnd":{"line":36,"character":33},"text":"noncore-diff4","codeSnippet":"(new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));\n        border = new EmptyBorder (0, 0, 10, 10);\n        changePnlBorder (border);","status":"noncore-diff","id":984,"createdAt":"2023-05-27T16:34:12.296Z"},{"fileName":"Clone532.java","fileLine":38,"positionStart":{"line":38,"character":24},"positionEnd":{"line":40,"character":33},"text":"noncore-diff4","codeSnippet":"(new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));\n        border = new EmptyBorder (5, 10, 5, 0);\n        changePnlBorder (border);","status":"noncore-diff","id":985,"createdAt":"2023-05-27T16:34:21.764Z"},{"fileName":"Clone532.java","fileLine":42,"positionStart":{"line":42,"character":24},"positionEnd":{"line":44,"character":33},"text":"noncore-diff4","codeSnippet":"(new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));\n        border = new EmptyBorder (10, 10, 0, 0);\n        changePnlBorder (border);","status":"noncore-diff","id":986,"createdAt":"2023-05-27T16:34:31.546Z"},{"fileName":"Clone532.java","fileLine":46,"positionStart":{"line":46,"character":24},"positionEnd":{"line":48,"character":33},"text":"noncore-diff4","codeSnippet":"(new Insets (initMargin.top, initMargin.left, initMargin.bottom, initMargin.right));\n        border = new EmptyBorder (5, 5, 5, 5);\n        changePnlBorder (border);","status":"noncore-diff","id":987,"createdAt":"2023-05-27T16:44:40.736Z"},{"fileName":"Clone532.java","fileLine":50,"positionStart":{"line":50,"character":8},"positionEnd":{"line":50,"character":17},"text":"noncore-diff4","codeSnippet":"count ++;","status":"noncore-diff","id":988,"createdAt":"2023-05-27T16:45:07.076Z"},{"fileName":"Clone534.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":26,"character":5},"text":"core-diff1","codeSnippet":"DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance ();\n    factory.setNamespaceAware (true);\n    DocumentBuilder builder;\n    Document doc = null;\n    try {\n        builder = factory.newDocumentBuilder ();\n        doc = builder.parse (\"employees.xml\");\n        XPathFactory xpathFactory = XPathFactory.newInstance ();\n        XPath xpath = xpathFactory.newXPath ();\n        String name = getEmployeeNameById (doc, xpath, 4);\n        System.out.println (\"Employee Name with ID 4: \" + name);\n        List < String > names = getEmployeeNameWithAge (doc, xpath, 30);\n        System.out.println (\"Employees with 'age>30' are:\" + Arrays.toString (names.toArray ()));\n        List < String > femaleEmps = getFemaleEmployeesName (doc, xpath);\n        System.out.println (\"Female Employees names are:\" + Arrays.toString (femaleEmps.toArray ()));\n    } catch (ParserConfigurationException | SAXException | IOException e) {\n        e.printStackTrace ();\n    }","status":"core-diff","id":989,"createdAt":"2023-05-27T16:46:26.558Z"},{"fileName":"Clone534.java","fileLine":30,"positionStart":{"line":30,"character":3},"positionEnd":{"line":40,"character":26},"text":"core-diff2","codeSnippet":" VTDGen vg = new VTDGen ();\n    if (! vg.parseFile (\"input.xml\", false)) return;\n    VTDNav vn = vg.getNav ();\n    AutoPilot ap = new AutoPilot (vn);\n    XMLModifier xm = new XMLModifier (vn);\n    ap.selectXPath (\"/*/place[@id=\\\"p14\\\" and   @initialMarking=\\\"2\\\"]/@initialMarking\");\n    int i = 0;\n    while ((i = ap.evalXPath ()) != - 1) {\n        xm.updateToken (i + 1, \"499\");\n    }\n    xm.output (\"new.xml\");","status":"core-diff","id":990,"createdAt":"2023-05-27T16:46:49.946Z"},{"fileName":"Clone537.java","fileLine":12,"positionStart":{"line":12,"character":8},"positionEnd":{"line":12,"character":41},"text":"core-sim1","codeSnippet":"String userInput = input.next ();","status":"core-sim","id":991,"createdAt":"2023-05-27T16:50:32.529Z"},{"fileName":"Clone537.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":32},"text":"core-sim1","codeSnippet":"String name = input.next ();","status":"core-sim","id":992,"createdAt":"2023-05-27T16:50:39.813Z"},{"fileName":"Clone537.java","fileLine":9,"positionStart":{"line":9,"character":3},"positionEnd":{"line":9,"character":56},"text":"noncore-diff1","codeSnippet":" HashSet < String > validInputs = new HashSet < > ();","status":"noncore-diff","id":996,"createdAt":"2023-05-27T16:55:03.074Z"},{"fileName":"Clone537.java","fileLine":9,"positionStart":{"line":9,"character":3},"positionEnd":{"line":9,"character":56},"text":"noncore-diff1","codeSnippet":" HashSet < String > validInputs = new HashSet < > ();","status":"noncore-diff","id":997,"createdAt":"2023-05-27T16:56:09.224Z"},{"fileName":"Clone537.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":21},"text":"noncore-diff2","codeSnippet":"String user = \"\";","status":"noncore-diff","id":998,"createdAt":"2023-05-27T16:56:15.763Z"},{"fileName":"Clone543.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":37,"character":51},"text":"core-sim1","codeSnippet":"if (s1.length () != s2.length ()) return false;","status":"core-sim","id":999,"createdAt":"2023-05-27T16:57:06.163Z"},{"fileName":"Clone543.java","fileLine":11,"positionStart":{"line":11,"character":6},"positionEnd":{"line":13,"character":5},"text":"core-sim1","codeSnippet":"else if (leftString.length () != rightString.length ()) {\n        return false;\n    }","status":"core-sim","id":1000,"createdAt":"2023-05-27T16:57:16.745Z"},{"fileName":"Clone543.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":33,"character":16},"text":"core-sim2","codeSnippet":"for (char l : letters) {\n        occurrencesMap.put (l, 0);\n    }\n    for (int i = 0;\n    i < leftString.length (); i ++) {\n        char charFromLeft = leftString.charAt (i);\n        Integer nrOfCharsInLeft = occurrencesMap.get (charFromLeft);\n        occurrencesMap.put (charFromLeft, ++ nrOfCharsInLeft);\n        char charFromRight = rightString.charAt (i);\n        Integer nrOfCharsInRight = occurrencesMap.get (charFromRight);\n        occurrencesMap.put (charFromRight, -- nrOfCharsInRight);\n    }\n    for (Integer occurrencesNr : occurrencesMap.values ()) {\n        if (occurrencesNr != 0) {\n            return false;\n        }\n    }\n    return true;","status":"core-sim","id":1001,"createdAt":"2023-05-27T16:59:05.952Z"},{"fileName":"Clone543.java","fileLine":42,"positionStart":{"line":42,"character":4},"positionEnd":{"line":55,"character":16},"text":"core-sim2","codeSnippet":"for (int i = 0;\n    i < s1.length (); i ++) {\n        seen [s1.charAt (i)] = seen [s1.charAt (i)] + 1;\n    }\n    for (int i = 0;\n    i < s2.length (); i ++) {\n        if (seen [s2.charAt (i)] == 0) return false;\n        seen [s2.charAt (i)] = seen [s2.charAt (i)] - 1;\n    }\n    for (int i = 0;\n    i < 256; i ++) {\n        if (seen [i] != 0) return false;\n    }\n    return true;","status":"core-sim","id":1002,"createdAt":"2023-05-27T16:59:16.479Z"},{"fileName":"Clone543.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":5},"text":"noncore-diff1","codeSnippet":"if (leftString == null || rightString == null) {\n        return false;\n    }","status":"noncore-diff","id":1003,"createdAt":"2023-05-27T16:59:44.282Z"},{"fileName":"Clone543.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":15,"character":67},"text":"noncore-diff2","codeSnippet":"char letters [] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};\n    Map < Character, Integer > occurrencesMap = new HashMap < > ();","status":"noncore-diff","id":1004,"createdAt":"2023-05-27T16:59:52.041Z"},{"fileName":"Clone543.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":41,"character":27},"text":"noncore-diff3","codeSnippet":"int [] seen = new int [256];\n    Arrays.fill (seen, 0);\n    s1 = s1.toLowerCase ();\n    s2 = s2.toLowerCase ();","status":"noncore-diff","id":1005,"createdAt":"2023-05-27T17:00:01.267Z"},{"fileName":"Clone545.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":41,"character":5},"text":"core-sim1","codeSnippet":"if (positive.length () != negative.length ()) {\n        return false;\n    }","status":"core-sim","id":1006,"createdAt":"2023-05-27T17:00:19.227Z"},{"fileName":"Clone545.java","fileLine":11,"positionStart":{"line":11,"character":6},"positionEnd":{"line":13,"character":5},"text":"core-sim1","codeSnippet":"else if (leftString.length () != rightString.length ()) {\n        return false;\n    }","status":"core-sim","id":1007,"createdAt":"2023-05-27T17:00:29.650Z"},{"fileName":"Clone545.java","fileLine":44,"positionStart":{"line":44,"character":4},"positionEnd":{"line":61,"character":21},"text":"core-sim2","codeSnippet":"for (int i = 0;\n    i < positive.length (); i ++) {\n        int pos = (int) positive.charAt (i) - 97;\n        if (counts [pos] >= 0) {\n            diff ++;\n        } else {\n            diff --;\n        }\n        counts [pos] ++;\n        int neg = (int) negative.charAt (i) - 97;\n        if (counts [neg] <= 0) {\n            diff ++;\n        } else {\n            diff --;\n        }\n        counts [neg] --;\n    }\n    return diff == 0;","status":"core-sim","id":1008,"createdAt":"2023-05-27T17:00:48.182Z"},{"fileName":"Clone545.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":33,"character":16},"text":"core-sim2","codeSnippet":"for (char l : letters) {\n        occurrencesMap.put (l, 0);\n    }\n    for (int i = 0;\n    i < leftString.length (); i ++) {\n        char charFromLeft = leftString.charAt (i);\n        Integer nrOfCharsInLeft = occurrencesMap.get (charFromLeft);\n        occurrencesMap.put (charFromLeft, ++ nrOfCharsInLeft);\n        char charFromRight = rightString.charAt (i);\n        Integer nrOfCharsInRight = occurrencesMap.get (charFromRight);\n        occurrencesMap.put (charFromRight, -- nrOfCharsInRight);\n    }\n    for (Integer occurrencesNr : occurrencesMap.values ()) {\n        if (occurrencesNr != 0) {\n            return false;\n        }\n    }\n    return true;","status":"core-sim","id":1009,"createdAt":"2023-05-27T17:00:56.483Z"},{"fileName":"Clone545.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":5},"text":"noncore-diff1","codeSnippet":"if (leftString == null || rightString == null) {\n        return false;\n    }","status":"noncore-diff","id":1010,"createdAt":"2023-05-27T17:01:04.966Z"},{"fileName":"Clone545.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":15,"character":67},"text":"noncore-diff2","codeSnippet":"char letters [] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};\n    Map < Character, Integer > occurrencesMap = new HashMap < > ();","status":"noncore-diff","id":1011,"createdAt":"2023-05-27T17:01:12.948Z"},{"fileName":"Clone545.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":38,"character":44},"text":"noncore-diff3","codeSnippet":"String positive = first.toLowerCase ();\n    String negative = second.toLowerCase ();","status":"noncore-diff","id":1012,"createdAt":"2023-05-27T17:01:19.723Z"},{"fileName":"Clone545.java","fileLine":42,"positionStart":{"line":42,"character":4},"positionEnd":{"line":43,"character":17},"text":"noncore-diff2","codeSnippet":"int [] counts = new int [26];\n    int diff = 0;","status":"noncore-diff","id":1013,"createdAt":"2023-05-27T17:03:43.909Z"},{"fileName":"Clone547.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":51},"text":"core-sim1","codeSnippet":"if (s1.length () != s2.length ()) return false;","status":"core-sim","id":1014,"createdAt":"2023-05-27T17:04:44.292Z"},{"fileName":"Clone547.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":33,"character":5},"text":"core-sim1","codeSnippet":"if (word.length () != anagram_word.length ()) {\n        return false;\n    }","status":"core-sim","id":1015,"createdAt":"2023-05-27T17:05:22.298Z"},{"fileName":"Clone547.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":27,"character":16},"text":"core-sim2","codeSnippet":"for (int i = 0;\n    i < s1.length (); i ++) {\n        seen [s1.charAt (i)] = seen [s1.charAt (i)] + 1;\n    }\n    for (int i = 0;\n    i < s2.length (); i ++) {\n        if (seen [s2.charAt (i)] == 0) return false;\n        seen [s2.charAt (i)] = seen [s2.charAt (i)] - 1;\n    }\n    for (int i = 0;\n    i < 256; i ++) {\n        if (seen [i] != 0) return false;\n    }\n    return true;","status":"core-sim","id":1017,"createdAt":"2023-05-27T17:11:44.917Z"},{"fileName":"Clone547.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":47,"character":46},"text":"core-sim2","codeSnippet":"for (int i = 0;\n    i < words_char.length; i ++) {\n        words_char_num *= wordPrimeMap.get (words_char [i]);\n    }\n    for (int i = 0;\n    i < anagram_word_char.length; i ++) {\n        anagram_word_num *= wordPrimeMap.get (anagram_word_char [i]);\n    }\n    return anagram_word_num == words_char_num;","status":"core-sim","id":1018,"createdAt":"2023-05-27T17:11:53.938Z"},{"fileName":"Clone547.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":13,"character":27},"text":"noncore-diff1","codeSnippet":"int [] seen = new int [256];\n    Arrays.fill (seen, 0);\n    s1 = s1.toLowerCase ();\n    s2 = s2.toLowerCase ();","status":"noncore-diff","id":1019,"createdAt":"2023-05-27T17:12:03.435Z"},{"fileName":"Clone547.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":38,"character":62},"text":"noncore-diff1","codeSnippet":"char [] words_char = word.toCharArray ();\n    char [] anagram_word_char = anagram_word.toCharArray ();\n    int words_char_num = 1;\n    int anagram_word_num = 1;\n    Map < Character, Integer > wordPrimeMap = wordPrimeMap ();","status":"noncore-diff","id":1020,"createdAt":"2023-05-27T17:12:14.375Z"},{"fileName":"Clone550.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":5},"text":"core-sim1","codeSnippet":"if (word.length () != anagram_word.length ()) {\n        return false;\n    }","status":"core-sim","id":1021,"createdAt":"2023-05-27T17:21:59.034Z"},{"fileName":"Clone550.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":33,"character":5},"text":"core-sim1","codeSnippet":"if (positive.length () != negative.length ()) {\n        return false;\n    }","status":"core-sim","id":1022,"createdAt":"2023-05-27T17:22:06.732Z"},{"fileName":"Clone550.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":25,"character":46},"text":"core-sim2","codeSnippet":"for (int i = 0;\n    i < words_char.length; i ++) {\n        words_char_num *= wordPrimeMap.get (words_char [i]);\n    }\n    for (int i = 0;\n    i < anagram_word_char.length; i ++) {\n        anagram_word_num *= wordPrimeMap.get (anagram_word_char [i]);\n    }\n    return anagram_word_num == words_char_num;","status":"core-sim","id":1023,"createdAt":"2023-05-27T17:22:32.475Z"},{"fileName":"Clone550.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":53,"character":21},"text":"core-sim2","codeSnippet":"for (int i = 0;\n    i < positive.length (); i ++) {\n        int pos = (int) positive.charAt (i) - 97;\n        if (counts [pos] >= 0) {\n            diff ++;\n        } else {\n            diff --;\n        }\n        counts [pos] ++;\n        int neg = (int) negative.charAt (i) - 97;\n        if (counts [neg] <= 0) {\n            diff ++;\n        } else {\n            diff --;\n        }\n        counts [neg] --;\n    }\n    return diff == 0;","status":"core-sim","id":1024,"createdAt":"2023-05-27T17:22:45.747Z"},{"fileName":"Clone550.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":16,"character":62},"text":"noncore-diff2","codeSnippet":"char [] words_char = word.toCharArray ();\n    char [] anagram_word_char = anagram_word.toCharArray ();\n    int words_char_num = 1;\n    int anagram_word_num = 1;\n    Map < Character, Integer > wordPrimeMap = wordPrimeMap ();","status":"noncore-diff","id":1025,"createdAt":"2023-05-27T17:30:31.285Z"},{"fileName":"Clone550.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":35,"character":17},"text":"noncore-diff2","codeSnippet":"int [] counts = new int [26];\n    int diff = 0;","status":"noncore-diff","id":1026,"createdAt":"2023-05-27T17:30:37.829Z"},{"fileName":"Clone550.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":30,"character":44},"text":"noncore-diff1","codeSnippet":"String positive = first.toLowerCase ();\n    String negative = second.toLowerCase ();","status":"noncore-diff","id":1027,"createdAt":"2023-05-27T17:30:45.898Z"},{"fileName":"Clone553.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":19,"character":16},"text":"core-sim1","codeSnippet":"int len = a.length ();\n    if (len != b.length ()) return false;\n    Map < Integer, Integer > ocr = new HashMap < > (64);\n    a.codePoints ().forEach (c -> ocr.merge (c, 1, Integer :: sum));\n    for (int i = 0, c = 0;\n    i < len; i += Character.charCount (c)) {\n        int cc = ocr.getOrDefault ((c = Character.codePointAt (b, i)), 0);\n        if (cc == 0) return false;\n        ocr.put (c, cc - 1);\n    }\n    return true;","status":"core-sim","id":1028,"createdAt":"2023-05-27T17:33:26.219Z"},{"fileName":"Clone553.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":50,"character":5},"text":"core-sim1","codeSnippet":"if (one.length () == two.length ()) {\n        String s0 = one.toLowerCase ();\n        String s1 = two.toLowerCase ();\n        HashMap < Character, Integer > chars = new HashMap < Character, Integer > (one.length ());\n        Integer count;\n        for (char c : s0.toCharArray ()) {\n            count = chars.get (c);\n            count = Integer.valueOf (count != null ? count + 1 : 1);\n            chars.put (c, count);\n        }\n        for (char c : s1.toCharArray ()) {\n            count = chars.get (c);\n            if (count == null) {\n                return false;\n            } else {\n                count --;\n                chars.put (c, count);\n            }\n        }\n        for (Integer i : chars.values ()) {\n            if (i != 0) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }","status":"core-sim","id":1029,"createdAt":"2023-05-27T17:33:37.731Z"},{"fileName":"Clone554.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":28,"character":41},"text":"core-sim1","codeSnippet":"for (String w : words) {\n        String first = w.substring (0, 1);\n        String f_after = w.substring (1);\n        capitalizedWord += first.toUpperCase () + f_after + \" \";\n    }\n    System.out.println (capitalizedWord);","status":"core-sim","id":1030,"createdAt":"2023-05-27T17:35:07.175Z"},{"fileName":"Clone554.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":22,"character":32},"text":"noncore-diff1","codeSnippet":"String str = \"my name is khan\";\n    String words [] = str.split (\"\\\\s\");\n    String capitalizedWord = \"\";","status":"noncore-diff","id":1032,"createdAt":"2023-05-27T17:35:21.417Z"},{"fileName":"Clone554.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":16,"character":54},"text":"core-sim1","codeSnippet":"final String str1 = \"HELLO WORLD\";\n    System.out.println (capitalizeFirstLetter (str1));\n    final String str2 = \"Hello WORLD\";\n    System.out.println (capitalizeFirstLetter (str2));\n    final String str3 = \"hello world\";\n    System.out.println (capitalizeFirstLetter (str3));\n    final String str4 = \"heLLo wORld\";\n    System.out.println (capitalizeFirstLetter (str4));","status":"core-sim","id":1033,"createdAt":"2023-05-27T17:35:35.229Z"},{"fileName":"Clone555.java","fileLine":9,"positionStart":{"line":9,"character":3},"positionEnd":{"line":10,"character":44},"text":"noncore-sim1","codeSnippet":" String [] palavras = texto.split (\" \");\n    StringBuilder sb = new StringBuilder ();","status":"noncore-sim","id":1034,"createdAt":"2023-05-27T17:52:19.649Z"},{"fileName":"Clone555.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":21,"character":44},"text":"noncore-sim1","codeSnippet":"String [] words = word.split (\" \");\n    StringBuilder sb = new StringBuilder ();","status":"noncore-sim","id":1035,"createdAt":"2023-05-27T17:52:27.050Z"},{"fileName":"Clone555.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":16,"character":34},"text":"core-sim1","codeSnippet":"for (String palavra : palavras) {\n        if (excessoes.contains (palavra.toLowerCase ())) sb.append (palavra.toLowerCase ()).append (\" \");\n        else sb.append (Character.toUpperCase (palavra.charAt (0))).append (palavra.substring (1).toLowerCase ()).append (\" \");\n    }\n    return sb.toString ().trim ();","status":"core-sim","id":1036,"createdAt":"2023-05-27T17:54:02.245Z"},{"fileName":"Clone555.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":30,"character":26},"text":"core-sim1","codeSnippet":"if (words [0].length () > 0) {\n        sb.append (Character.toUpperCase (words [0].charAt (0)) + words [0].subSequence (1, words [0].length ()).toString ().toLowerCase ());\n        for (int i = 1;\n        i < words.length; i ++) {\n            sb.append (\" \");\n            sb.append (Character.toUpperCase (words [i].charAt (0)) + words [i].subSequence (1, words [i].length ()).toString ().toLowerCase ());\n        }\n    }\n    return sb.toString ();","status":"core-sim","id":1037,"createdAt":"2023-05-27T17:54:09.779Z"},{"fileName":"Clone555.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":12,"character":0},"text":"core-diff1","codeSnippet":"List < String > excessoes = new ArrayList < String > (Arrays.asList (\"de\", \"da\", \"das\", \"do\", \"dos\", \"na\", \"nas\", \"no\", \"nos\", \"a\", \"e\", \"o\", \"em\", \"com\"));\n","status":"core-diff","id":1038,"createdAt":"2023-05-27T17:54:24.368Z"},{"fileName":"Clone556.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":25,"character":5},"text":"core-diff1","codeSnippet":"if (ae.getSource () == select) {\n        activeTool = SELECTION_TOOL;\n    } else if (ae.getSource () == draw) {\n        activeTool = DRAW_TOOL;\n    } else if (ae.getSource () == text) {\n        activeTool = TEXT_TOOL;\n    }","status":"core-diff","id":1039,"createdAt":"2023-05-27T17:54:48.806Z"},{"fileName":"Clone556.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":15,"character":5},"text":"core-diff2","codeSnippet":"if (dirty) {\n        result = JOptionPane.showConfirmDialog (gui, \"Erase the current painting?\");\n    }\n    if (result == JOptionPane.OK_OPTION) {\n        clear (canvasImage);\n    }","status":"core-diff","id":1040,"createdAt":"2023-05-27T17:54:55.049Z"},{"fileName":"Clone556.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":39},"text":"noncore-diff1","codeSnippet":"int result = JOptionPane.OK_OPTION;","status":"noncore-diff","id":1041,"createdAt":"2023-05-27T17:55:00.040Z"},{"fileName":"Clone557.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":15,"character":5},"text":"core-diff1","codeSnippet":"if (dirty) {\n        result = JOptionPane.showConfirmDialog (gui, \"Erase the current painting?\");\n    }\n    if (result == JOptionPane.OK_OPTION) {\n        clear (canvasImage);\n    }","status":"core-diff","id":1042,"createdAt":"2023-05-27T17:55:30.703Z"},{"fileName":"Clone557.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":33,"character":5},"text":"core-diff2","codeSnippet":"if (! dirty) {\n        JFileChooser ch = getFileChooser ();\n        int result = ch.showOpenDialog (gui);\n        if (result == JFileChooser.APPROVE_OPTION) {\n            try {\n                BufferedImage bi = ImageIO.read (ch.getSelectedFile ());\n                setImage (bi);\n            } catch (IOException e) {\n                showError (e);\n                e.printStackTrace ();\n            }\n        }\n    } else {\n        JOptionPane.showMessageDialog (gui, \"TODO - prompt save image..\");\n    }","status":"core-diff","id":1043,"createdAt":"2023-05-27T17:55:37.772Z"},{"fileName":"Clone557.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":39},"text":"noncore-diff1","codeSnippet":"int result = JOptionPane.OK_OPTION;","status":"noncore-diff","id":1044,"createdAt":"2023-05-27T17:55:43.344Z"},{"fileName":"Clone558.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":31,"character":5},"text":"core-diff1","codeSnippet":"JFileChooser ch = getFileChooser ();\n    int result = ch.showSaveDialog (gui);\n    if (result == JFileChooser.APPROVE_OPTION) {\n        try {\n            File f = ch.getSelectedFile ();\n            ImageIO.write (BasicPaint.this.canvasImage, \"png\", f);\n            BasicPaint.this.originalImage = BasicPaint.this.canvasImage;\n            dirty = false;\n        } catch (IOException ioe) {\n            showError (ioe);\n            ioe.printStackTrace ();\n        }\n    }","status":"core-diff","id":1045,"createdAt":"2023-05-27T17:55:58.087Z"},{"fileName":"Clone558.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":15,"character":5},"text":"core-diff1","codeSnippet":"if (dirty) {\n        result = JOptionPane.showConfirmDialog (gui, \"Erase the current painting?\");\n    }\n    if (result == JOptionPane.OK_OPTION) {\n        clear (canvasImage);\n    }","status":"core-diff","id":1046,"createdAt":"2023-05-27T17:56:04.308Z"},{"fileName":"Clone558.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":39},"text":"noncore-diff1","codeSnippet":"int result = JOptionPane.OK_OPTION;","status":"noncore-diff","id":1047,"createdAt":"2023-05-27T17:56:08.945Z"},{"fileName":"Clone561.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":15,"character":5},"text":"core-diff1","codeSnippet":"if (ae.getSource () == select) {\n        activeTool = SELECTION_TOOL;\n    } else if (ae.getSource () == draw) {\n        activeTool = DRAW_TOOL;\n    } else if (ae.getSource () == text) {\n        activeTool = TEXT_TOOL;\n    }","status":"core-diff","id":1048,"createdAt":"2023-05-27T18:00:32.144Z"},{"fileName":"Clone561.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":31,"character":5},"text":"core-diff2","codeSnippet":"JFileChooser ch = getFileChooser ();\n    int result = ch.showSaveDialog (gui);\n    if (result == JFileChooser.APPROVE_OPTION) {\n        try {\n            File f = ch.getSelectedFile ();\n            ImageIO.write (BasicPaint.this.canvasImage, \"png\", f);\n            BasicPaint.this.originalImage = BasicPaint.this.canvasImage;\n            dirty = false;\n        } catch (IOException ioe) {\n            showError (ioe);\n            ioe.printStackTrace ();\n        }\n    }","status":"core-diff","id":1049,"createdAt":"2023-05-27T18:00:39.805Z"},{"fileName":"Clone564.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":21,"character":5},"text":"core-diff1","codeSnippet":"JFileChooser ch = getFileChooser ();\n    int result = ch.showSaveDialog (gui);\n    if (result == JFileChooser.APPROVE_OPTION) {\n        try {\n            File f = ch.getSelectedFile ();\n            ImageIO.write (BasicPaint.this.canvasImage, \"png\", f);\n            BasicPaint.this.originalImage = BasicPaint.this.canvasImage;\n            dirty = false;\n        } catch (IOException ioe) {\n            showError (ioe);\n            ioe.printStackTrace ();\n        }\n    }","status":"core-diff","id":1050,"createdAt":"2023-05-27T18:00:54.469Z"},{"fileName":"Clone564.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":37,"character":15},"text":"core-diff2","codeSnippet":"if (x + width > getWidth ()) {\n        x = getWidth () - width;\n    }\n    if (y + height > getHeight ()) {\n        y = getHeight () - height;\n    }\n    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));\n    lstShapes.add (new MyRectangle (x, y, width, height, color));\n    repaint ();","status":"core-diff","id":1052,"createdAt":"2023-05-27T18:01:12.383Z"},{"fileName":"Clone564.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":28,"character":61},"text":"noncore-diff1","codeSnippet":"int x = (int) (Math.random () * getWidth ());\n    int y = (int) (Math.random () * getHeight ());\n    int width = (int) (Math.random () * (getWidth () / 4));\n    int height = (int) (Math.random () * (getHeight () / 4));","status":"noncore-diff","id":1053,"createdAt":"2023-05-27T18:01:19.188Z"},{"fileName":"Clone570.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":26,"character":5},"text":"core-sim1","codeSnippet":"for (int j = 0;\n    j < 5; j ++) {\n        max = array [0];\n        index = 0;\n        for (i = 1; i < array.length; i ++) {\n            if (max < array [i]) {\n                max = array [i];\n                index = i;\n            }\n        }\n        large [j] = max;\n        array [index] = Integer.MIN_VALUE;\n        System.out.println (\"Largest \" + j + \" : \" + large [j]);\n    }","status":"core-sim","id":1055,"createdAt":"2023-05-27T18:05:08.732Z"},{"fileName":"Clone570.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":62,"character":61},"text":"core-sim1","codeSnippet":"for (int j = 1;\n    j < large.length; ++ j) {\n        if (smallest > large [j]) {\n            smallest = large [j];\n            smallestIndex = j;\n        }\n    }\n    for (i = large.length; i < array.length; i ++) {\n        if (smallest < array [i]) {\n            large [smallestIndex] = array [i];\n            smallest = large [0];\n            smallestIndex = 0;\n            for (int j = 1;\n            j < large.length; ++ j) {\n                if (smallest > large [j]) {\n                    smallest = large [j];\n                    smallestIndex = j;\n                }\n            }\n        }\n    }\n    for (int j = 0;\n    j < large.length; j ++) {\n        System.out.println (\"Largest 5 : \" + large [j]);\n    }\n    System.out.println ();\n    System.out.println (\"Largest is: \" + getHighest (large));","status":"core-sim","id":1056,"createdAt":"2023-05-27T18:05:46.413Z"},{"fileName":"Clone570.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":12,"character":23},"text":"noncore-diff1","codeSnippet":"int i;\n    int large [] = new int [5];\n    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};\n    int max = 0, index;","status":"noncore-diff","id":1057,"createdAt":"2023-05-27T18:05:54.769Z"},{"fileName":"Clone570.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":35,"character":26},"text":"noncore-diff1","codeSnippet":"int i;\n    int largestSize = 4;\n    int array [] = {33, 55, 13, 46, 87, 42, 10, 34};\n    int large [] = Arrays.copyOf (array, largestSize);\n    int smallest = large [0];\n    int smallestIndex = 0;","status":"noncore-diff","id":1058,"createdAt":"2023-05-27T18:06:04.770Z"},{"fileName":"Clone573.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":41},"text":"noncore-sim1","codeSnippet":"Scanner sc = new Scanner (System.in);","status":"noncore-sim","id":1059,"createdAt":"2023-05-27T18:06:29.034Z"},{"fileName":"Clone573.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":41},"text":"noncore-sim1","codeSnippet":"Scanner sc = new Scanner (System.in);","status":"noncore-sim","id":1060,"createdAt":"2023-05-27T18:07:39.968Z"},{"fileName":"Clone573.java","fileLine":11,"positionStart":{"line":11,"character":15},"positionEnd":{"line":11,"character":26},"text":"core-sim1","codeSnippet":"sc.next ();","status":"core-sim","id":1061,"createdAt":"2023-05-27T18:08:11.969Z"},{"fileName":"Clone573.java","fileLine":14,"positionStart":{"line":14,"character":15},"positionEnd":{"line":14,"character":26},"text":"core-sim1","codeSnippet":"sc.next ();","status":"core-sim","id":1062,"createdAt":"2023-05-27T18:08:20.013Z"},{"fileName":"Clone573.java","fileLine":24,"positionStart":{"line":24,"character":18},"positionEnd":{"line":24,"character":29},"text":"core-sim1","codeSnippet":"sc.next ();","status":"core-sim","id":1063,"createdAt":"2023-05-27T18:08:27.835Z"},{"fileName":"Clone573.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":24,"character":18},"text":"core-diff2","codeSnippet":"int cases = sc.nextInt ();\n    String [] str = new String [cases];\n    for (int i = 0;\n    i < cases; i ++) {\n        str [i] = ","status":"core-diff","id":1064,"createdAt":"2023-05-27T18:08:35.319Z"},{"fileName":"Clone573.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":5},"text":"core-diff2","codeSnippet":"}","status":"core-diff","id":1065,"createdAt":"2023-05-27T18:08:42.135Z"},{"fileName":"Clone573.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":11,"character":15},"text":"core-diff1","codeSnippet":"System.out.println (\"enter string for c\");\n    String c = ","status":"core-diff","id":1066,"createdAt":"2023-05-27T18:09:05.023Z"},{"fileName":"Clone573.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":14,"character":14},"text":"core-diff1","codeSnippet":"System.out.println (\"c is \" + c);\n    System.out.println (\"enter string for d\");\n    String d =","status":"core-diff","id":1067,"createdAt":"2023-05-27T18:09:16.199Z"},{"fileName":"Clone573.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":15,"character":37},"text":"core-diff1","codeSnippet":"System.out.println (\"d is \" + d);","status":"core-diff","id":1068,"createdAt":"2023-05-27T18:09:23.359Z"},{"fileName":"Clone574.java","fileLine":13,"positionStart":{"line":13,"character":8},"positionEnd":{"line":13,"character":40},"text":"noncore-sim1","codeSnippet":"URL originalURL = new URL (url);","status":"noncore-sim","id":1069,"createdAt":"2023-05-27T18:11:17.831Z"},{"fileName":"Clone574.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":35,"character":36},"text":"noncore-sim1","codeSnippet":"URI uri = new URI (originalURL);","status":"noncore-sim","id":1070,"createdAt":"2023-05-27T18:11:25.063Z"},{"fileName":"Clone574.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":41,"character":27},"text":"core-sim1","codeSnippet":"uri = new URI (uri.getScheme ().toLowerCase (Locale.US), newAuthority, uri.getPath (), uri.getQuery (), uri.getFragment ());\n    int port = uri.getPort ();\n    if (port > 0 && port == uri.toURL ().getDefaultPort ()) {\n        uri = new URI (uri.getScheme (), uri.getUserInfo (), uri.getHost (), - 1, uri.getPath (), uri.getQuery (), uri.getFragment ());\n    }\n    return uri.toString ();","status":"core-sim","id":1073,"createdAt":"2023-05-27T18:12:40.952Z"},{"fileName":"Clone574.java","fileLine":14,"positionStart":{"line":14,"character":8},"positionEnd":{"line":28,"character":22},"text":"core-sim1","codeSnippet":"boolean hostHasPort = newHost.indexOf (\":\") != - 1;\n        int newPort = originalURL.getPort ();\n        if (hostHasPort) {\n            URL hostURL = new URL (\"http://\" + newHost);\n            newHost = hostURL.getHost ();\n            newPort = hostURL.getPort ();\n        } else {\n            newPort = - 1;\n        }\n        boolean isHttps = originalURL.getProtocol ().equals (\"https\");\n        boolean useDefaultPort = (newPort == 443 && isHttps) || (newPort == 80 && ! isHttps);\n        newPort = useDefaultPort ? - 1 : newPort;\n        URL newURL = new URL (originalURL.getProtocol (), newHost, newPort, originalURL.getFile ());\n        String result = newURL.toString ();\n        return result;","status":"core-sim","id":1074,"createdAt":"2023-05-27T18:12:56.006Z"},{"fileName":"Clone574.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":31,"character":5},"text":"noncore-diff1","codeSnippet":"} catch (MalformedURLException e) {\n        throw new RuntimeException (\"Couldnt replace host in url, originalUrl=\" + url + \", newHost=\" + newHost);\n    }","status":"noncore-diff","id":1076,"createdAt":"2023-05-27T18:13:07.236Z"},{"fileName":"Clone574.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":9},"text":"noncore-diff1","codeSnippet":"try {","status":"noncore-diff","id":1077,"createdAt":"2023-05-27T18:13:30.389Z"},{"fileName":"Clone574.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":5},"text":"core-diff1","codeSnippet":"if (url == null || newHost == null) {\n        return url;\n    }","status":"core-diff","id":1078,"createdAt":"2023-05-27T18:13:35.108Z"},{"fileName":"Clone582.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":30,"character":92},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < count; i ++) {\n        int nextNumber = (int) ((Math.abs (random.nextDouble ()) * (b - a))) + a;\n        if (nextNumber < a || nextNumber > b) {\n            System.err.println (\"number not in range :\" + nextNumber);\n        } else {\n            System.out.println (nextNumber);\n        }\n        if (nextNumber < lowest) {\n            lowest = nextNumber;\n        }\n        if (nextNumber > highest) {\n            highest = nextNumber;\n        }\n    }\n    System.out.println (\"Produced \" + count + \" numbers from \" + lowest + \" to \" + highest);","status":"core-sim","id":1079,"createdAt":"2023-05-27T18:14:35.523Z"},{"fileName":"Clone582.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":41,"character":5},"text":"core-sim1","codeSnippet":"for (int idx = 1;\n    idx <= 10; ++ idx) {\n        showRandomInteger (START, END, randomGenerator);\n    }","status":"core-sim","id":1080,"createdAt":"2023-05-27T18:14:42.079Z"},{"fileName":"Clone582.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":37,"character":43},"text":"noncore-sim1","codeSnippet":"Random randomGenerator = new Random ();","status":"noncore-sim","id":1081,"createdAt":"2023-05-27T18:14:48.546Z"},{"fileName":"Clone582.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":14,"character":34},"text":"noncore-sim1","codeSnippet":"Random random = new Random ();","status":"noncore-sim","id":1082,"createdAt":"2023-05-27T18:15:01.428Z"},{"fileName":"Clone582.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":36,"character":17},"text":"noncore-diff1","codeSnippet":"log (\"Generating 10 random integers in range 1..10.\");\n    int START = 1;\n    int END = 10;","status":"noncore-diff","id":1083,"createdAt":"2023-05-27T18:15:08.847Z"},{"fileName":"Clone582.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":13,"character":23},"text":"noncore-diff1","codeSnippet":"int a = 100;\n    int b = 1000;\n    int lowest = b;\n    int highest = a;\n    int count = 100000;","status":"noncore-diff","id":1084,"createdAt":"2023-05-27T18:15:21.330Z"},{"fileName":"Clone582.java","fileLine":42,"positionStart":{"line":42,"character":4},"positionEnd":{"line":42,"character":17},"text":"noncore-diff2","codeSnippet":"log (\"Done\");","status":"noncore-diff","id":1085,"createdAt":"2023-05-27T18:15:27.503Z"},{"fileName":"Clone589.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":26,"character":5},"text":"core-diff1","codeSnippet":"AuthMethod auth = new TokenAuthMethod (API_KEY, API_SECRET);\n    NexmoClient client = new NexmoClient (auth);\n    TextMessage message = new TextMessage (FROM_NUMBER, TO_NUMBER, \"Hello from Nexmo!\");\n    SmsSubmissionResult [] responses = client.getSmsClient ().submitMessage (message);\n    for (SmsSubmissionResult response : responses) {\n        System.out.println (response);\n    }","status":"core-diff","id":1086,"createdAt":"2023-05-27T18:19:29.851Z"},{"fileName":"Clone589.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":16,"character":43},"text":"core-diff1","codeSnippet":"TwilioRestClient client = new TwilioRestClient (ACCOUNT_SID, AUTH_TOKEN);\n    List < NameValuePair > params = new ArrayList < NameValuePair > ();\n    params.add (new BasicNameValuePair (\"Body\", \"Test Twilio message\"));\n    params.add (new BasicNameValuePair (\"To\", \"+14159352345\"));\n    params.add (new BasicNameValuePair (\"From\", \"+14158141829\"));\n    MessageFactory messageFactory = client.getAccount ().getMessageFactory ();\n    Message message = messageFactory.create (params);\n    System.out.println (message.getSid ());","status":"core-diff","id":1087,"createdAt":"2023-05-27T18:19:49.593Z"},{"fileName":"Clone592.java","fileLine":34,"positionStart":{"line":34,"character":8},"positionEnd":{"line":202,"character":9},"text":"core-diff1","codeSnippet":"XMLInputFactory factory = XMLInputFactory.newInstance ();\n        XMLEventReader eventReader = factory.createXMLEventReader (new FileReader (\"c:\\\\staxTestFile.xml\"));\n        while (eventReader.hasNext ()) {\n            XMLEvent event = eventReader.nextEvent ();\n            switch (event.getEventType ()) {\n                case XMLStreamConstants.START_ELEMENT :\n                    StartElement startElement = event.asStartElement ();\n                    String qName = startElement.getName ().getLocalPart ();\n                    if (qName.equalsIgnoreCase (\"Part\")) {\n                        System.out.println (\"Start Element : Part\");\n                        Iterator < Attribute > attributes = startElement.getAttributes ();\n                    } else if (qName.equalsIgnoreCase (\"ObjectID\")) {\n                        ObjectID = true;\n                    } else if (qName.equalsIgnoreCase (\"Class\")) {\n                        Class = true;\n                    } else if (qName.equalsIgnoreCase (\"LastChangedBy\")) {\n                        LastChangedBy = true;\n                    } else if (qName.equalsIgnoreCase (\"Number\")) {\n                        Number = true;\n                    } else if (qName.equalsIgnoreCase (\"StartEffectivity\")) {\n                        StartEffectivity = true;\n                    } else if (qName.equalsIgnoreCase (\"EndSerialNumberEffectivity\")) {\n                        EndSerialNumberEffectivity = true;\n                    } else if (qName.equalsIgnoreCase (\"StartSerialNumberEffectivity\")) {\n                        StartSerialNumberEffectivity = true;\n                    } else if (qName.equalsIgnoreCase (\"EndSerialNumberEffectivity\")) {\n                        EndSerialNumberEffectivity = true;\n                    } else if (qName.equalsIgnoreCase (\"StartLotNumberEffectivity\")) {\n                        StartLotNumberEffectivity = true;\n                    } else if (qName.equalsIgnoreCase (\"EndLotNumberEffectivity\")) {\n                        EndLotNumberEffectivity = true;\n                    } else if (qName.equalsIgnoreCase (\"SerialNumberEffectivityCxtPartNumber\")) {\n                        SerialNumberEffectivityCxtPartNumber = true;\n                    } else if (qName.equalsIgnoreCase (\"LotNumberEffectivityCxtPartNumber\")) {\n                        LotNumberEffectivityCxtPartNumber = true;\n                    } else if (qName.equalsIgnoreCase (\"DefaultUnit\")) {\n                        DefaultUnit = true;\n                    } else if (qName.equalsIgnoreCase (\"Name\")) {\n                        Name = true;\n                    } else if (qName.equalsIgnoreCase (\"PartType\")) {\n                        PartType = true;\n                    } else if (qName.equalsIgnoreCase (\"Source\")) {\n                        Source = true;\n                    } else if (qName.equalsIgnoreCase (\"State\")) {\n                        State = true;\n                    } else if (qName.equalsIgnoreCase (\"IsPhantom\")) {\n                        IsPhantom = true;\n                    } else if (qName.equalsIgnoreCase (\"Version\")) {\n                        Version = true;\n                    } else if (qName.equalsIgnoreCase (\"Iteration\")) {\n                        Iteration = true;\n                    } else if (qName.equalsIgnoreCase (\"PreviousVersion\")) {\n                        PreviousVersion = true;\n                    } else if (qName.equalsIgnoreCase (\"IsConfigurable\")) {\n                        IsConfigurable = true;\n                    } else if (qName.equalsIgnoreCase (\"IsCollapsible\")) {\n                        IsCollapsible = true;\n                    } else if (qName.equalsIgnoreCase (\"TargetID\")) {\n                        TargetID = true;\n                    }\n                    break;\n                case XMLStreamConstants.CHARACTERS :\n                    Characters characters = event.asCharacters ();\n                    if (ObjectID) {\n                        System.out.println (\"ObjectID: \" + characters.getData ());\n                        ObjectID = false;\n                    }\n                    if (Class) {\n                        System.out.println (\"Class: \" + characters.getData ());\n                        Class = false;\n                    }\n                    if (LastChangedBy) {\n                        System.out.println (\"LastChangedBy \" + characters.getData ());\n                        LastChangedBy = false;\n                    }\n                    if (Number) {\n                        System.out.println (\"Number: \" + characters.getData ());\n                        Number = false;\n                    }\n                    if (StartEffectivity) {\n                        System.out.println (\"StartEffectivity: \" + characters.getData ());\n                        StartEffectivity = false;\n                    }\n                    if (EndEffectivity) {\n                        System.out.println (\"EndEffectivity \" + characters.getData ());\n                        EndEffectivity = false;\n                    }\n                    if (StartSerialNumberEffectivity) {\n                        System.out.println (\"StartSerialNumberEffectivity \" + characters.getData ());\n                        StartSerialNumberEffectivity = false;\n                    }\n                    if (EndSerialNumberEffectivity) {\n                        System.out.println (\"EndSerialNumberEffectivity: \" + characters.getData ());\n                        EndSerialNumberEffectivity = false;\n                    }\n                    if (StartLotNumberEffectivity) {\n                        System.out.println (\"StartLotNumberEffectivity\" + characters.getData ());\n                        StartLotNumberEffectivity = false;\n                    }\n                    if (EndLotNumberEffectivity) {\n                        System.out.println (\"EndLotNumberEffectivity: \" + characters.getData ());\n                        EndLotNumberEffectivity = false;\n                    }\n                    if (SerialNumberEffectivityCxtPartNumber) {\n                        System.out.println (\"SerialNumberEffectivityCxtPartNumber \" + characters.getData ());\n                        SerialNumberEffectivityCxtPartNumber = false;\n                    }\n                    if (LotNumberEffectivityCxtPartNumber) {\n                        System.out.println (\"LotNumberEffectivityCxtPartNumber: \" + characters.getData ());\n                        LotNumberEffectivityCxtPartNumber = false;\n                    }\n                    if (DefaultUnit) {\n                        System.out.println (\"DefaultUnit: \" + characters.getData ());\n                        DefaultUnit = false;\n                    }\n                    if (Name) {\n                        System.out.println (\"Name: \" + characters.getData ());\n                        Name = false;\n                    }\n                    if (PartType) {\n                        System.out.println (\"PartType: \" + characters.getData ());\n                        PartType = false;\n                    }\n                    if (Source) {\n                        System.out.println (\"Source: \" + characters.getData ());\n                        Source = false;\n                    }\n                    if (State) {\n                        System.out.println (\"State: \" + characters.getData ());\n                        State = false;\n                    }\n                    if (IsPhantom) {\n                        System.out.println (\"IsPhantom: \" + characters.getData ());\n                        IsPhantom = false;\n                    }\n                    if (Version) {\n                        System.out.println (\"Version: \" + characters.getData ());\n                        Version = false;\n                    }\n                    if (Iteration) {\n                        System.out.println (\"Iteration: \" + characters.getData ());\n                        Iteration = false;\n                    }\n                    if (PreviousVersion) {\n                        System.out.println (\"PreviousVersion: \" + characters.getData ());\n                        PreviousVersion = false;\n                    }\n                    if (IsConfigurable) {\n                        System.out.println (\"IsConfigurable: \" + characters.getData ());\n                        IsConfigurable = false;\n                    }\n                    if (IsCollapsible) {\n                        System.out.println (\"IsCollapsible: \" + characters.getData ());\n                        IsCollapsible = false;\n                    }\n                    if (TargetID) {\n                        System.out.println (\"TargetID: \" + characters.getData ());\n                        TargetID = false;\n                    }\n                    break;\n                case XMLStreamConstants.END_ELEMENT :\n                    EndElement endElement = event.asEndElement ();\n                    if (endElement.getName ().getLocalPart ().equalsIgnoreCase (\"Part\")) {\n                        System.out.println (\"End Element : Part\");\n                        System.out.println ();\n                    }\n                    break;\n            }\n        }","status":"core-diff","id":1088,"createdAt":"2023-05-27T18:20:21.159Z"},{"fileName":"Clone592.java","fileLine":211,"positionStart":{"line":211,"character":4},"positionEnd":{"line":221,"character":5},"text":"core-diff2","codeSnippet":"ap.selectXPath (\"//part/*[text()]\");\n    if (! vg.parseFile (\"d:\\\\xml\\\\soap.xml\", false)) {\n        System.out.println (\"invalid xml\");\n        System.exit (0);\n    }\n    VTDNav vn = vg.getNav ();\n    ap.bind (vn);\n    int i = 0;\n    while ((i = ap.evalXPath ()) != - 1) {\n        System.out.println (\" \" + vn.toRawString (i) + \" = \" + vn.toNormalizedString (vn.getText ()));\n    }","status":"core-diff","id":1089,"createdAt":"2023-05-27T18:20:36.729Z"},{"fileName":"Clone592.java","fileLine":209,"positionStart":{"line":209,"character":4},"positionEnd":{"line":210,"character":36},"text":"noncore-diff1","codeSnippet":"VTDGen vg = new VTDGen ();\n    AutoPilot ap = new AutoPilot ();","status":"noncore-diff","id":1090,"createdAt":"2023-05-27T18:20:42.670Z"},{"fileName":"Clone592.java","fileLine":203,"positionStart":{"line":203,"character":4},"positionEnd":{"line":205,"character":5},"text":"noncore-diff2","codeSnippet":"} catch (Exception e) {\n        e.printStackTrace ();\n    }","status":"noncore-diff","id":1091,"createdAt":"2023-05-27T18:20:51.928Z"},{"fileName":"Clone592.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":33,"character":9},"text":"noncore-diff2","codeSnippet":"boolean ObjectID = false;\n    boolean Class = false;\n    boolean LastChangedBy = false;\n    boolean Number = false;\n    boolean StartEffectivity = false;\n    boolean EndEffectivity = false;\n    boolean StartSerialNumberEffectivity = false;\n    boolean EndSerialNumberEffectivity = false;\n    boolean StartLotNumberEffectivity = false;\n    boolean EndLotNumberEffectivity = false;\n    boolean SerialNumberEffectivityCxtPartNumber = false;\n    boolean LotNumberEffectivityCxtPartNumber = false;\n    boolean DefaultUnit = false;\n    boolean Name = false;\n    boolean PartType = false;\n    boolean Source = false;\n    boolean State = false;\n    boolean IsPhantom = false;\n    boolean Version = false;\n    boolean Iteration = false;\n    boolean PreviousVersion = false;\n    boolean IsConfigurable = false;\n    boolean IsCollapsible = false;\n    boolean TargetID = false;\n    try {","status":"noncore-diff","id":1092,"createdAt":"2023-05-27T18:20:59.351Z"},{"fileName":"Clone593.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":31,"character":44},"text":"core-diff1","codeSnippet":"Object sharedObject = new Object ();\n    MyClass sampleA = new MyClass ();\n    sampleA.myObject = sharedObject;\n    MyClass sampleB = new MyClass ();\n    sampleB.myObject = sharedObject;\n    System.out.println (sampleA.sharedObject == sampleB.sharedObject);\n    System.out.println (sampleA == sampleB);","status":"core-diff","id":1093,"createdAt":"2023-05-27T18:21:14.243Z"},{"fileName":"Clone593.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":21,"character":63},"text":"core-diff1","codeSnippet":"char [] charA = getBackingArray (strA);\n    char [] charB = getBackingArray (strB);\n    char [] subA1 = getBackingArray (strA.substring (1));\n    char [] subA2 = getBackingArray (strA.substring (0, 9));\n    System.out.println (\"charA address: \" + System.identityHashCode (charA));\n    System.out.println (\"charB address: \" + System.identityHashCode (charB));\n    System.out.println (\"subA1 address: \" + System.identityHashCode (subA1));\n    System.out.println (\"subA2 address: \" + System.identityHashCode (subA2));\n    System.out.println (\"charA == charB: \" + (charA == charB));\n    System.out.println (\"charA == subA1: \" + (charA == subA1));\n    System.out.println (\"charA == subA2: \" + (charA == subA2));","status":"core-diff","id":1094,"createdAt":"2023-05-27T18:21:24.989Z"},{"fileName":"Clone593.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":31},"text":"noncore-diff1","codeSnippet":"String strA = \"1234567890\";\n    String strB = \"1234567890\";","status":"noncore-diff","id":1095,"createdAt":"2023-05-27T18:21:31.967Z"},{"fileName":"Clone596.java","fileLine":41,"positionStart":{"line":41,"character":4},"positionEnd":{"line":50,"character":5},"text":"core-sim1","codeSnippet":"for (Character c : characters) {\n        for (Character d : characters) {\n            for (Character e : characters) {\n                for (Character f : characters) {\n                    String s = \"\" + c + d + e + f;\n                    allStrings.add (s);\n                }\n            }\n        }\n    }","status":"core-sim","id":1096,"createdAt":"2023-05-27T18:24:45.299Z"},{"fileName":"Clone596.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":29,"character":10},"text":"core-sim1","codeSnippet":"OUTER : while (true) {\n        for (chars [last] = 'a'; chars [last] <= 'z'; chars [last] += 2) {\n            newComination (chars);\n            chars [last] ++;\n            newComination (chars);\n        }\n        UPDATED : {\n            for (int i = last - 1;\n            i >= 0; i --) {\n                if (chars [i] ++ >= 'z') chars [i] = 'a';\n                else break UPDATED;\n            }\n            break OUTER;\n        }}","status":"core-sim","id":1097,"createdAt":"2023-05-27T18:25:00.475Z"},{"fileName":"Clone596.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":15,"character":31},"text":"noncore-diff1","codeSnippet":"long start = System.nanoTime ();\n    int letters = 26;\n    int count = 6;\n    final int combinations = (int) Math.pow (letters, count);\n    char [] chars = new char [count];\n    Arrays.fill (chars, 'a');\n    final int last = count - 1;","status":"noncore-diff","id":1098,"createdAt":"2023-05-27T18:25:09.146Z"},{"fileName":"Clone596.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":40,"character":61},"text":"noncore-diff2","codeSnippet":"List < Character > characters = new ArrayList < Character > ();\n    for (char c = 'a';\n    c <= 'z'; c ++) {\n        characters.add (c);\n    }\n    List < String > allStrings = new ArrayList < String > ();","status":"noncore-diff","id":1099,"createdAt":"2023-05-27T18:25:14.637Z"},{"fileName":"Clone596.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":31,"character":101},"text":"noncore-diff1","codeSnippet":"long time = System.nanoTime () - start;\n    System.out.printf (\"Took %.3f seconds to generate %,d combinations%n\", time / 1e9, combinations);","status":"noncore-diff","id":1100,"createdAt":"2023-05-27T18:25:22.385Z"},{"fileName":"Clone596.java","fileLine":51,"positionStart":{"line":51,"character":4},"positionEnd":{"line":51,"character":44},"text":"noncore-diff3","codeSnippet":"System.out.println (allStrings.size ());","status":"noncore-diff","id":1101,"createdAt":"2023-05-27T18:25:27.242Z"},{"fileName":"Clone607.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":40,"character":49},"text":"core-sim1","codeSnippet":"while (i < string.length ()) {\n        counter = 1;\n        for (int j = i + 1;\n        j < string.length (); j ++) {\n            System.out.println (\"string length =\" + string.length ());\n            if (string.charAt (i) == string.charAt (j)) {\n                counter ++;\n            }\n        }\n        result = result + string.charAt (i) + counter;\n        string = string.replaceAll (String.valueOf (string.charAt (i)), \"\");\n    }\n    System.out.println (\"result is = \" + result);","status":"core-sim","id":1102,"createdAt":"2023-05-28T08:02:16.861Z"},{"fileName":"Clone607.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":20,"character":5},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < str.length (); i ++) {\n        arrlist.add (str.charAt (i));\n    }\n    for (int i = 0;\n    i < str.length (); i ++) {\n        int freq = Collections.frequency (arrlist, str.charAt (i));\n        System.out.println (\"Frequency of \" + str.charAt (i) + \"  is:   \" + freq);\n    }","status":"core-sim","id":1103,"createdAt":"2023-05-28T08:02:23.938Z"},{"fileName":"Clone607.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":33},"text":"core-diff1","codeSnippet":"inp = new Scanner (System.in);\n    String str = inp.nextLine ();","status":"core-diff","id":1104,"createdAt":"2023-05-28T08:02:37.600Z"},{"fileName":"Clone607.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":64},"text":"noncore-diff1","codeSnippet":"List < Character > arrlist = new ArrayList < Character > ();","status":"noncore-diff","id":1105,"createdAt":"2023-05-28T08:02:45.208Z"},{"fileName":"Clone607.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":27,"character":14},"text":"noncore-diff2","codeSnippet":"String string = \"aaabbbbbaccc\";\n    int counter;\n    String result = \"\";\n    int i = 0;","status":"noncore-diff","id":1106,"createdAt":"2023-05-28T08:03:00.833Z"},{"fileName":"Clone608.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":30,"character":5},"text":"core-diff1","codeSnippet":"for (Entry < String > string : wordsMultiset.entrySet ()) {\n        if (! string.getElement ().isEmpty ()) output += string.getCount () + \"\" + string.getElement ();\n    }","status":"core-diff","id":1107,"createdAt":"2023-05-28T08:03:57.738Z"},{"fileName":"Clone608.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":20,"character":5},"text":"core-diff2","codeSnippet":"for (int i = 0;\n    i < str.length (); i ++) {\n        arrlist.add (str.charAt (i));\n    }\n    for (int i = 0;\n    i < str.length (); i ++) {\n        int freq = Collections.frequency (arrlist, str.charAt (i));\n        System.out.println (\"Frequency of \" + str.charAt (i) + \"  is:   \" + freq);\n    }","status":"core-diff","id":1108,"createdAt":"2023-05-28T08:04:06.325Z"},{"fileName":"Clone608.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":27,"character":49},"text":"noncore-diff1","codeSnippet":"String output = \"\";\n    Multiset < String > wordsMultiset = HashMultiset.create ();\n    String [] words = \"AAABBBBCC\".split (\"\");\n    wordsMultiset.addAll (Arrays.asList (words));","status":"noncore-diff","id":1109,"createdAt":"2023-05-28T08:04:18.880Z"},{"fileName":"Clone608.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":64},"text":"noncore-diff2","codeSnippet":"inp = new Scanner (System.in);\n    String str = inp.nextLine ();\n    List < Character > arrlist = new ArrayList < Character > ();","status":"noncore-diff","id":1110,"createdAt":"2023-05-28T08:04:31.928Z"},{"fileName":"Clone608.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":31,"character":32},"text":"noncore-diff3","codeSnippet":"System.out.println (output);","status":"noncore-diff","id":1111,"createdAt":"2023-05-28T08:04:38.602Z"},{"fileName":"Clone610.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":75},"text":"noncore-sim1","codeSnippet":"DateTimeFormatter formatter = DateTimeFormatter.ofPattern (dateFormat);","status":"noncore-sim","id":1112,"createdAt":"2023-05-28T08:05:06.580Z"},{"fileName":"Clone610.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":75},"text":"noncore-sim1","codeSnippet":"DateTimeFormatter formatter = DateTimeFormatter.ofPattern (dateFormat);","status":"noncore-sim","id":1113,"createdAt":"2023-05-28T08:05:12.936Z"},{"fileName":"Clone610.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":18,"character":16},"text":"core-sim1","codeSnippet":"TemporalAccessor parsed = formatter.parseBest (date, ZonedDateTime :: from, LocalDateTime :: from);\n    if (parsed instanceof ZonedDateTime) {\n        return (ZonedDateTime) parsed;\n    }\n    if (parsed instanceof LocalDateTime) {\n        LocalDateTime dt = (LocalDateTime) parsed;\n        return dt.atZone (ZoneId.systemDefault ());\n    }\n    return null;","status":"core-sim","id":1114,"createdAt":"2023-05-28T08:07:08.010Z"},{"fileName":"Clone610.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":30,"character":25},"text":"core-sim1","codeSnippet":"try {\n        zonedDateTime = ZonedDateTime.parse (date, formatter);\n    } catch (DateTimeException e) {\n        LocalDateTime localDateTime = LocalDateTime.parse (date, formatter);\n        zonedDateTime = localDateTime.atZone (ZoneId.systemDefault ());\n    }\n    return zonedDateTime;","status":"core-sim","id":1116,"createdAt":"2023-05-28T08:07:39.292Z"},{"fileName":"Clone610.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":39},"text":"noncore-diff1","codeSnippet":"ZonedDateTime zonedDateTime = null;","status":"noncore-diff","id":1117,"createdAt":"2023-05-28T08:07:46.239Z"},{"fileName":"Clone612.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":17,"character":17},"text":"noncore-diff1","codeSnippet":"driver.close ();\n    p.destroy ();","status":"noncore-diff","id":1120,"createdAt":"2023-05-28T08:11:10.459Z"},{"fileName":"Clone612.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":22,"character":35},"text":"noncore-diff2","codeSnippet":"try {\n        Robot robot = new Robot ();","status":"noncore-diff","id":1121,"createdAt":"2023-05-28T08:11:16.525Z"},{"fileName":"Clone612.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":29,"character":5},"text":"noncore-diff2","codeSnippet":"} catch (AWTException e) {\n        e.printStackTrace ();\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }","status":"noncore-diff","id":1122,"createdAt":"2023-05-28T08:11:23.158Z"},{"fileName":"Clone614.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":14,"character":5},"text":"core-sim1","codeSnippet":"if (display.isDisposed () || bar.isDisposed ()) {\n        return;\n    }","status":"core-sim","id":1123,"createdAt":"2023-05-28T08:13:28.592Z"},{"fileName":"Clone614.java","fileLine":51,"positionStart":{"line":51,"character":4},"positionEnd":{"line":53,"character":5},"text":"core-sim1","codeSnippet":"if (bar.isDisposed () || bar.getShell ().isDisposed ()) {\n        return;\n    }","status":"core-sim","id":1124,"createdAt":"2023-05-28T08:13:43.182Z"},{"fileName":"Clone614.java","fileLine":28,"positionStart":{"line":28,"character":8},"positionEnd":{"line":30,"character":9},"text":"core-sim1","codeSnippet":"if (display.isDisposed () || bar.isDisposed ()) {\n            return;\n        }","status":"core-sim","id":1125,"createdAt":"2023-05-28T08:15:08.062Z"},{"fileName":"Clone614.java","fileLine":17,"positionStart":{"line":17,"character":12},"positionEnd":{"line":19,"character":13},"text":"core-sim1","codeSnippet":"if (bar.isDisposed () || bar.getShell ().isDisposed ()) {\n                return;\n            }","status":"core-sim","id":1126,"createdAt":"2023-05-28T08:15:27.368Z"},{"fileName":"Clone614.java","fileLine":20,"positionStart":{"line":20,"character":12},"positionEnd":{"line":24,"character":13},"text":"core-sim2","codeSnippet":"synchronized (lock) {\n                bar.getShell ().pack (true);\n                orgSize [0] = bar.getShell ().getSize ().y;\n                currentSize [0] = orgSize [0];\n            }","status":"core-sim","id":1127,"createdAt":"2023-05-28T08:15:35.629Z"},{"fileName":"Clone614.java","fileLine":34,"positionStart":{"line":34,"character":20},"positionEnd":{"line":36,"character":21},"text":"core-sim1","codeSnippet":"if (bar.isDisposed () || bar.getShell ().isDisposed ()) {\n                        return;\n                    }","status":"core-sim","id":1128,"createdAt":"2023-05-28T08:15:46.451Z"},{"fileName":"Clone614.java","fileLine":37,"positionStart":{"line":37,"character":20},"positionEnd":{"line":43,"character":21},"text":"core-sim2","codeSnippet":"currentSize [0] = bar.getShell ().getSize ().y;\n                    if (currentSize [0] != orgSize [0]) {\n                        return;\n                    } else {\n                        bar.getShell ().layout (true);\n                        bar.getShell ().pack (true);\n                    }","status":"core-sim","id":1129,"createdAt":"2023-05-28T08:16:05.321Z"},{"fileName":"Clone614.java","fileLine":54,"positionStart":{"line":54,"character":4},"positionEnd":{"line":58,"character":5},"text":"core-sim2","codeSnippet":"synchronized (lock) {\n        bar.getShell ().pack (true);\n        orgSize [0] = bar.getShell ().getSize ().y;\n        currentSize [0] = orgSize [0];\n    }","status":"core-sim","id":1130,"createdAt":"2023-05-28T08:16:11.325Z"},{"fileName":"Clone614.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":38},"text":"noncore-diff1","codeSnippet":"final int [] orgSize = new int [1];\n    final int [] currentSize = new int [1];\n    final Object lock = new Object ();","status":"noncore-diff","id":1131,"createdAt":"2023-05-28T08:16:18.007Z"},{"fileName":"Clone614.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":16,"character":28},"text":"noncore-diff2","codeSnippet":"display.syncExec (new Runnable () {\n        public void run () {","status":"noncore-diff","id":1132,"createdAt":"2023-05-28T08:16:27.545Z"},{"fileName":"Clone614.java","fileLine":25,"positionStart":{"line":25,"character":8},"positionEnd":{"line":27,"character":44},"text":"noncore-diff2","codeSnippet":"}}\n    );\n    while (currentSize [0] == orgSize [0]) {","status":"noncore-diff","id":1133,"createdAt":"2023-05-28T08:16:36.268Z"},{"fileName":"Clone614.java","fileLine":31,"positionStart":{"line":31,"character":8},"positionEnd":{"line":33,"character":37},"text":"noncore-diff2","codeSnippet":"display.syncExec (new Runnable () {\n            public void run () {\n                synchronized (lock) {","status":"noncore-diff","id":1134,"createdAt":"2023-05-28T08:42:10.129Z"},{"fileName":"Clone614.java","fileLine":44,"positionStart":{"line":44,"character":15},"positionEnd":{"line":47,"character":5},"text":"noncore-diff2","codeSnippet":" }\n            }}\n        );\n    }","status":"noncore-diff","id":1135,"createdAt":"2023-05-28T08:42:19.809Z"},{"fileName":"Clone618.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":15,"character":16},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < a.length (); i ++) {\n        temp = temp.replaceFirst (Pattern.quote (a.substring (i, i + 1)), \"\");\n        if (b.length () - temp.length () != i + 1) return false;\n    }\n    return true;","status":"core-sim","id":1136,"createdAt":"2023-05-28T08:43:04.187Z"},{"fileName":"Clone618.java","fileLine":22,"positionStart":{"line":22,"character":3},"positionEnd":{"line":43,"character":18},"text":"core-sim1","codeSnippet":" for (char i : a.toCharArray ()) {\n        Integer val = mapA.get (\"\" + i);\n        if (val != null) {\n            mapA.put (\"\" + i, val + 1);\n        } else {\n            mapA.put (\"\" + i, 1);\n        }\n    }\n    for (char i : b.toCharArray ()) {\n        Integer val = mapB.get (\"\" + i);\n        if (val != null) {\n            mapB.put (\"\" + i, val + 1);\n        } else {\n            mapB.put (\"\" + i, 1);\n        }\n    }\n    for (Map.Entry < String, Integer > entry : mapA.entrySet ()) {\n        if (mapB.get (entry.getKey ()) == null || entry.getValue () > mapB.get (entry.getKey ())) {\n            status = false;\n        }\n    }\n    return status;","status":"core-sim","id":1137,"createdAt":"2023-05-28T08:43:19.051Z"},{"fileName":"Clone618.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":20},"text":"noncore-diff1.","codeSnippet":"String temp = b;","status":"noncore-diff","id":1138,"createdAt":"2023-05-28T08:57:01.429Z"},{"fileName":"Clone618.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":21,"character":54},"text":"noncore-diff2","codeSnippet":"boolean status = true;\n    Map < String, Integer > mapA = new HashMap < > ();\n    Map < String, Integer > mapB = new HashMap < > ();","status":"noncore-diff","id":1139,"createdAt":"2023-05-28T08:57:31.648Z"},{"fileName":"Clone627.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":46,"character":56},"text":"core-sim1","codeSnippet":"if (arr1.length < arr2.length && arr1.length < arr3.length || arr2.length <= arr3.length) {\n        hashArray = arr1;\n        queryArray = ArrayUtils.addAll (arr2, arr3);\n    } else if (arr2.length < arr1.length && arr2.length < arr3.length || arr1.length <= arr3.length) {\n        hashArray = arr2;\n        queryArray = ArrayUtils.addAll (arr1, arr3);\n    } else if (arr3.length < arr1.length && arr3.length < arr2.length || arr1.length <= arr2.length) {\n        hashArray = arr3;\n        queryArray = ArrayUtils.addAll (arr1, arr2);\n    }\n    HashSet < Comparable > intersectionSet = new HashSet < > ();\n    HashSet < Comparable > arrayToHash = new HashSet < > ();\n    for (Comparable element : hashArray) {\n        arrayToHash.add (element);\n    }\n    for (Comparable element : queryArray) {\n        if (element != null) {\n            comparisons ++;\n        }\n        if (arrayToHash.contains (element)) {\n            intersectionSet.add (element);\n        }\n    }\n    return intersectionSet.toArray (new Comparable [0]);","status":"core-sim","id":1140,"createdAt":"2023-05-28T09:00:37.949Z"},{"fileName":"Clone627.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":16,"character":34},"text":"core-sim1","codeSnippet":"for (Comparable x : collectionSet1) {\n        if (! collectionSet2.add (x)) {\n            commonStuff.add (x);\n        }\n    }\n    return commonStuff.toArray ();","status":"core-sim","id":1141,"createdAt":"2023-05-28T09:00:46.547Z"},{"fileName":"Clone627.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":86},"text":"noncore-diff1","codeSnippet":"Set < Comparable > collectionSet1 = new HashSet < > (Arrays.asList (collection1));\n    Set < Comparable > collectionSet2 = new HashSet < > (Arrays.asList (collection2));","status":"noncore-diff","id":1142,"createdAt":"2023-05-28T09:00:53.180Z"},{"fileName":"Clone627.java","fileLine":20,"positionStart":{"line":20,"character":3},"positionEnd":{"line":22,"character":41},"text":"noncore-diff1","codeSnippet":" Comparable [] arr1 = collections [0];\n    Comparable [] arr2 = collections [1];\n    Comparable [] arr3 = collections [2];","status":"noncore-diff","id":1143,"createdAt":"2023-05-28T09:01:04.331Z"},{"fileName":"Clone632.java","fileLine":23,"positionStart":{"line":23,"character":3},"positionEnd":{"line":29,"character":5},"text":"core-diff1","codeSnippet":" while (makeMore) {\n        new Leakee (0).check ();\n    }\n    while (true) {\n        Thread.sleep (1000);\n        System.out.println (\"memory=\" + Runtime.getRuntime ().freeMemory () + \" / \" + Runtime.getRuntime ().totalMemory ());\n    }","status":"core-diff","id":1144,"createdAt":"2023-05-28T09:20:37.894Z"},{"fileName":"Clone632.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":19,"character":5},"text":"core-diff2","codeSnippet":"try {\n        for (;;) unsafe.allocateMemory (1024 * 1024);\n    } catch (Error e) {\n        System.out.println (\"Boom :)\");\n        e.printStackTrace ();\n    }","status":"core-diff","id":1145,"createdAt":"2023-05-28T09:21:13.705Z"},{"fileName":"Clone632.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":12,"character":42},"text":"core-diff3","codeSnippet":"Class unsafeClass = Class.forName (\"sun.misc.Unsafe\");\n    Field f = unsafeClass.getDeclaredField (\"theUnsafe\");\n    f.setAccessible (true);\n    Unsafe unsafe = (Unsafe) f.get (null);","status":"core-diff","id":1146,"createdAt":"2023-05-28T09:22:42.878Z"},{"fileName":"Clone632.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":13,"character":39},"text":"noncore-diff1","codeSnippet":"System.out.print (\"4..3..2..1...\");","status":"noncore-diff","id":1147,"createdAt":"2023-05-28T09:22:53.037Z"},{"fileName":"Clone633.java","fileLine":13,"positionStart":{"line":13,"character":3},"positionEnd":{"line":13,"character":39},"text":"noncore-diff1","codeSnippet":" System.out.print (\"4..3..2..1...\");","status":"noncore-diff","id":1148,"createdAt":"2023-05-28T09:23:13.093Z"},{"fileName":"Clone633.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":12,"character":42},"text":"core-diff1","codeSnippet":"Class unsafeClass = Class.forName (\"sun.misc.Unsafe\");\n    Field f = unsafeClass.getDeclaredField (\"theUnsafe\");\n    f.setAccessible (true);\n    Unsafe unsafe = (Unsafe) f.get (null);","status":"core-diff","id":1149,"createdAt":"2023-05-28T09:23:19.561Z"},{"fileName":"Clone633.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":19,"character":5},"text":"core-diff2","codeSnippet":"try {\n        for (;;) unsafe.allocateMemory (1024 * 1024);\n    } catch (Error e) {\n        System.out.println (\"Boom :)\");\n        e.printStackTrace ();\n    }","status":"core-diff","id":1150,"createdAt":"2023-05-28T09:23:27.540Z"},{"fileName":"Clone633.java","fileLine":28,"positionStart":{"line":28,"character":3},"positionEnd":{"line":31,"character":5},"text":"core-diff2","codeSnippet":" for (int i = 0;\n    i < 10000000; i ++) {\n        zos.write ((int) (Math.round (Math.random () * 100) + 20));\n    }","status":"core-diff","id":1151,"createdAt":"2023-05-28T09:23:38.628Z"},{"fileName":"Clone633.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":27,"character":54},"text":"core-diff3","codeSnippet":"ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File (\"big.jar\")));\n    zos.putNextEntry (new ZipEntry (\"resource.txt\"));\n    zos.write (\"not too much in here\".getBytes ());\n    zos.closeEntry ();\n    zos.putNextEntry (new ZipEntry (\"largeFile.out\"));","status":"core-diff","id":1152,"createdAt":"2023-05-28T09:23:47.212Z"},{"fileName":"Clone633.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":33,"character":17},"text":"noncore-diff2","codeSnippet":"zos.closeEntry ();\n    zos.close ();","status":"noncore-diff","id":1153,"createdAt":"2023-05-28T09:23:53.622Z"},{"fileName":"Clone645.java","fileLine":23,"positionStart":{"line":23,"character":3},"positionEnd":{"line":29,"character":5},"text":"core-sim1","codeSnippet":" while (scanner.hasNextLine ()) {\n        String line = scanner.nextLine ();\n        Matcher m = p.matcher (line);\n        if (m.find ()) {\n            System.out.println (line);\n        }\n    }","status":"core-sim","id":1154,"createdAt":"2023-05-28T09:43:05.876Z"},{"fileName":"Clone645.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":16,"character":5},"text":"core-sim1","codeSnippet":"try (final Reader r = new InputStreamReader (System.in, decoder); final BufferedReader reader = new BufferedReader (r)) {\n        String line;\n        while ((line = reader.readLine ()) != null) if (pattern.matcher (line).find ()) System.out.println (line);\n    }","status":"core-sim","id":1155,"createdAt":"2023-05-28T09:43:12.605Z"},{"fileName":"Clone645.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":55},"text":"noncore-sim1","codeSnippet":"final Pattern pattern = Pattern.compile (args [0]);","status":"noncore-sim","id":1156,"createdAt":"2023-05-28T09:43:19.048Z"},{"fileName":"Clone645.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":41},"text":"noncore-sim1","codeSnippet":"Pattern p = Pattern.compile (\"this\");","status":"noncore-sim","id":1157,"createdAt":"2023-05-28T09:43:26.190Z"},{"fileName":"Clone645.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":96},"text":"noncore-diff1","codeSnippet":"if (args.length == 0) throw new IllegalArgumentException (\"missing pattern as an argument\");","status":"noncore-diff","id":1158,"createdAt":"2023-05-28T09:43:36.513Z"},{"fileName":"Clone645.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":12,"character":96},"text":"noncore-diff2","codeSnippet":"final Charset cs = Charset.defaultCharset ();\n    final CharsetDecoder decoder = cs.newDecoder ().onMalformedInput (CodingErrorAction.REPORT);","status":"noncore-diff","id":1159,"createdAt":"2023-05-28T09:56:55.581Z"},{"fileName":"Clone645.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":82},"text":"noncore-diff3","codeSnippet":"String s = \"this is line one\\n\" + \"this is line two\\n\" + \"This is line three\";","status":"noncore-diff","id":1160,"createdAt":"2023-05-28T09:57:09.664Z"},{"fileName":"Clone645.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":38},"text":"noncore-diff4","codeSnippet":"Scanner scanner = new Scanner (s);","status":"noncore-diff","id":1161,"createdAt":"2023-05-28T09:57:32.230Z"},{"fileName":"Clone646.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":33,"character":30},"text":"core-diff1","codeSnippet":"Vector v1 = new Vector ();\n    v1.add (new PrintOneToHundered ());\n    Vector v2 = new Vector ();\n    v2.addAll (v1);\n    v2.addAll (v1);\n    Vector v4 = new Vector ();\n    v4.addAll (v2);\n    v4.addAll (v2);\n    Vector v8 = new Vector ();\n    v8.addAll (v4);\n    v8.addAll (v4);\n    Vector v16 = new Vector ();\n    v16.addAll (v8);\n    v16.addAll (v8);\n    Vector v32 = new Vector ();\n    v32.addAll (v16);\n    v32.addAll (v16);\n    Vector v64 = new Vector ();\n    v64.addAll (v32);\n    v64.addAll (v32);\n    Vector v100 = new Vector ();\n    v100.addAll (v64);\n    v100.addAll (v32);\n    v100.addAll (v4);\n    System.out.println (v100);","status":"core-diff","id":1162,"createdAt":"2023-05-28T09:58:54.796Z"},{"fileName":"Clone646.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":43,"character":50},"text":"core-diff2","codeSnippet":"String set = new java.util.BitSet () {\n        {\n            set (1, 100 + 1);\n        }\n    }\n    .toString ();\n    System.out.append (set, 1, set.length () - 1);","status":"core-diff","id":1163,"createdAt":"2023-05-28T09:59:00.990Z"},{"fileName":"Clone647.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":33,"character":30},"text":"core-diff1","codeSnippet":"Vector v1 = new Vector ();\n    v1.add (new PrintOneToHundered ());\n    Vector v2 = new Vector ();\n    v2.addAll (v1);\n    v2.addAll (v1);\n    Vector v4 = new Vector ();\n    v4.addAll (v2);\n    v4.addAll (v2);\n    Vector v8 = new Vector ();\n    v8.addAll (v4);\n    v8.addAll (v4);\n    Vector v16 = new Vector ();\n    v16.addAll (v8);\n    v16.addAll (v8);\n    Vector v32 = new Vector ();\n    v32.addAll (v16);\n    v32.addAll (v16);\n    Vector v64 = new Vector ();\n    v64.addAll (v32);\n    v64.addAll (v32);\n    Vector v100 = new Vector ();\n    v100.addAll (v64);\n    v100.addAll (v32);\n    v100.addAll (v4);\n    System.out.println (v100);","status":"core-diff","id":1164,"createdAt":"2023-05-28T09:59:29.486Z"},{"fileName":"Clone647.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":43,"character":50},"text":"core-diff2","codeSnippet":"Runnable r1 = new Runnable () {\n        int n;\n        public void run () {\n            System.out.println (++ n);\n        }}\n    ;\n    fourTimes (fiveTimes (fiveTimes (r1))).run ();","status":"core-diff","id":1165,"createdAt":"2023-05-28T09:59:37.694Z"},{"fileName":"Clone660.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":25,"character":26},"text":"core-sim1","codeSnippet":"do {\n        temp1 = getTemp ();\n        scale1 = scaleOne ();\n        scale2 = toScale ();\n        System.out.print (\"Your final temp is: \" + convert () + ' ' + scale2);\n    } while (cont == 'N');","status":"core-sim","id":1166,"createdAt":"2023-05-28T10:10:44.279Z"},{"fileName":"Clone660.java","fileLine":11,"positionStart":{"line":11,"character":3},"positionEnd":{"line":15,"character":77},"text":"core-sim1","codeSnippet":" System.out.println (\"What scale is your temp currently in?\\n\" + \"1: Fahrenheit\\n\" + \"2: Celsius\\n\" + \"3: Kelvin\\n\" + \"Please enter 1, 2, or 3: \\n\");\n    scaleOne = getScale ();\n    System.out.println (\"What scale would you like to convert to?\\n\" + \"1: Fahrenheit\\n\" + \"2: Celsius\\n\" + \"3: Kelvin\\n\" + \"Please enter 1, 2, or 3:\\n \");\n    scaleTwo = getScale ();\n    System.out.print (\"Your final temp is: \" + convert (scaleOne, scaleTwo));","status":"core-sim","id":1167,"createdAt":"2023-05-28T10:11:06.117Z"},{"fileName":"Clone660.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":20},"text":"noncore-diff1","codeSnippet":"String scaleOne;\n    String scaleTwo;","status":"noncore-diff","id":1168,"createdAt":"2023-05-28T10:11:14.586Z"},{"fileName":"Clone660.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":20},"text":"noncore-diff2","codeSnippet":"char cont = 'E';","status":"noncore-diff","id":1169,"createdAt":"2023-05-28T10:11:24.586Z"},{"fileName":"Clone664.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":21,"character":5},"text":"core-diff1","codeSnippet":"while (true) {\n        System.out.println (i);\n        try {\n            Thread.sleep (1000);\n            cb.await ();\n        } catch (InterruptedException e) {\n            e.printStackTrace ();\n        } catch (BrokenBarrierException e) {\n            e.printStackTrace ();\n        }\n        i = i + 3;\n    }","status":"core-diff","id":1170,"createdAt":"2023-05-28T10:30:02.646Z"},{"fileName":"Clone664.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":42,"character":5},"text":"core-diff2","codeSnippet":"while (i < 50) {\n        while (s.getState () != 2) {\n            synchronized (s) {\n                try {\n                    s.wait ();\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n            }\n        }\n        synchronized (s) {\n            if (s.getState () == 2) System.out.println (\"t3 \" + i);\n            i = i + 3;\n            s.setState (3);\n            s.notifyAll ();\n        }\n    }","status":"core-diff","id":1171,"createdAt":"2023-05-28T10:30:08.918Z"},{"fileName":"Clone664.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":14},"text":"noncore-diff1","codeSnippet":"int i = 1;","status":"noncore-diff","id":1172,"createdAt":"2023-05-28T10:30:13.855Z"},{"fileName":"Clone664.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":14},"text":"noncore-diff2","codeSnippet":"int i = 3;","status":"noncore-diff","id":1173,"createdAt":"2023-05-28T10:30:21.859Z"},{"fileName":"Clone668.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":18,"character":5},"text":"core-diff1","codeSnippet":"try {\n        cb.await ();\n        i = i + 3;\n        Thread.sleep (1000);\n    } catch (InterruptedException e) {\n        e.printStackTrace ();\n    } catch (BrokenBarrierException e) {\n        e.printStackTrace ();\n    }","status":"core-diff","id":1174,"createdAt":"2023-05-28T16:07:51.104Z"},{"fileName":"Clone668.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":39,"character":5},"text":"core-diff2","codeSnippet":"while (i < 50) {\n        while (s.getState () != 3) {\n            synchronized (s) {\n                try {\n                    s.wait ();\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n            }\n        }\n        synchronized (s) {\n            if (s.getState () == 3) System.out.println (\"t1 \" + i);\n            s.setState (1);\n            i = i + 3;\n            s.notifyAll ();\n        }\n    }","status":"core-diff","id":1175,"createdAt":"2023-05-28T16:10:15.882Z"},{"fileName":"Clone668.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":14},"text":"noncore-diff1","codeSnippet":"int i = 1;","status":"noncore-diff","id":1176,"createdAt":"2023-05-28T16:12:16.190Z"},{"fileName":"Clone668.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":27},"text":"noncore-diff2","codeSnippet":"System.out.println (i);","status":"noncore-diff","id":1177,"createdAt":"2023-05-28T16:12:28.150Z"},{"fileName":"Clone671.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":18,"character":5},"text":"core-diff1","codeSnippet":"try {\n        cb.await ();\n        i = i + 3;\n        Thread.sleep (1000);\n    } catch (InterruptedException e) {\n        e.printStackTrace ();\n    } catch (BrokenBarrierException e) {\n        e.printStackTrace ();\n    }","status":"core-diff","id":1179,"createdAt":"2023-05-28T16:13:20.167Z"},{"fileName":"Clone671.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":29,"character":5},"text":"core-diff2","codeSnippet":"try {\n        for (int i = 0;\n        i < 2; i ++) {\n            System.out.println (\"tic\");\n        }\n    } catch (Exception e) {\n        e.getStackTrace ();\n    }","status":"core-diff","id":1180,"createdAt":"2023-05-28T16:13:27.134Z"},{"fileName":"Clone671.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":27},"text":"noncore-diff1","codeSnippet":"System.out.println (i);","status":"noncore-diff","id":1181,"createdAt":"2023-05-28T16:13:45.507Z"},{"fileName":"Clone684.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":12,"character":14},"text":"noncore-sim1","codeSnippet":"int [] Number_arr = new int [11];\n    int count = 1;\n    int j = 0;\n    int k = 0;","status":"noncore-sim","id":1182,"createdAt":"2023-05-28T16:14:00.353Z"},{"fileName":"Clone684.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":34,"character":14},"text":"noncore-sim1","codeSnippet":"int [] Number_arr = new int [11];\n    int count = 1;\n    int j = 0;\n    int k = 0;","status":"noncore-sim","id":1183,"createdAt":"2023-05-28T16:14:07.510Z"},{"fileName":"Clone684.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":21,"character":5},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < arr.length - 1; i ++) {\n        if (arr [i].equals (arr [i + 1])) count ++;\n        else {\n            Number_arr [j] = count;\n            j ++;\n            count = 1;\n        }\n    }","status":"core-sim","id":1184,"createdAt":"2023-05-28T16:14:57.252Z"},{"fileName":"Clone684.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":43,"character":5},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < arr.length - 1; i ++) {\n        if (arr [i].equals (arr [i + 1])) count ++;\n        else {\n            Number_arr [j] = count;\n            j ++;\n            count = 1;\n        }\n    }","status":"core-sim","id":1185,"createdAt":"2023-05-28T16:15:12.677Z"},{"fileName":"Clone684.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":27},"text":"noncore-sim2","codeSnippet":"Number_arr [j] = count;","status":"noncore-sim","id":1186,"createdAt":"2023-05-28T16:15:27.984Z"},{"fileName":"Clone684.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":22},"text":"noncore-sim2","codeSnippet":"return Number_arr;","status":"noncore-sim","id":1187,"createdAt":"2023-05-28T16:15:50.634Z"},{"fileName":"Clone684.java","fileLine":44,"positionStart":{"line":44,"character":4},"positionEnd":{"line":45,"character":22},"text":"noncore-sim2","codeSnippet":"Number_arr [j] = count;\n    return Number_arr;","status":"noncore-sim","id":1188,"createdAt":"2023-05-28T16:15:58.996Z"},{"fileName":"Clone684.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":26,"character":5},"text":"noncore-diff1","codeSnippet":"for (int i = 0;\n    i < Number_arr.length; i ++) {\n        System.out.print (Number_arr [i] + \"  \");\n    }","status":"noncore-diff","id":1189,"createdAt":"2023-05-28T16:16:06.659Z"},{"fileName":"Clone687.java","fileLine":24,"positionStart":{"line":24,"character":8},"positionEnd":{"line":27,"character":9},"text":"noncore-sim1","codeSnippet":"for (int i = 0;\n        i < 5; i ++) {\n            System.out.println (String.format (\"%d -- %s\", i + start, Thread.currentThread ().getName ()));\n        }","status":"noncore-sim","id":1190,"createdAt":"2023-05-28T16:30:16.191Z"},{"fileName":"Clone687.java","fileLine":10,"positionStart":{"line":10,"character":8},"positionEnd":{"line":14,"character":9},"text":"noncore-sim1","codeSnippet":"for (int i = 0;\n        i < 5; i ++) {\n            count ++;\n            System.out.println (count + \" -- \" + Thread.currentThread ());\n        }","status":"noncore-sim","id":1191,"createdAt":"2023-05-28T16:30:27.920Z"},{"fileName":"Clone687.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":24},"text":"core-diff1","codeSnippet":"while (count < 15) {","status":"core-diff","id":1192,"createdAt":"2023-05-28T16:30:44.836Z"},{"fileName":"Clone687.java","fileLine":15,"positionStart":{"line":15,"character":7},"positionEnd":{"line":17,"character":5},"text":"core-diff1","codeSnippet":" notifyAll ();\n        wait ();\n    }","status":"core-diff","id":1193,"createdAt":"2023-05-28T16:30:53.615Z"},{"fileName":"Clone687.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":23,"character":33},"text":"core-diff2","codeSnippet":"try {\n        waitForSemaphore.acquire ();\n        int start = nextStartIdx;","status":"core-diff","id":1194,"createdAt":"2023-05-28T16:31:07.678Z"},{"fileName":"Clone687.java","fileLine":28,"positionStart":{"line":28,"character":8},"positionEnd":{"line":32,"character":5},"text":"core-diff2","codeSnippet":"nextStartIdx += 5;\n        next.release ();\n    } catch (InterruptedException ie) {\n        Thread.currentThread ().interrupt ();\n    }","status":"core-diff","id":1195,"createdAt":"2023-05-28T16:31:24.977Z"},{"fileName":"Clone691.java","fileLine":37,"positionStart":{"line":37,"character":8},"positionEnd":{"line":39,"character":9},"text":"core-sim1","codeSnippet":"if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {\n            LOGGER.error (\"The rest request is empty.No info to register\");\n        }","status":"core-sim","id":1199,"createdAt":"2023-05-28T16:33:44.233Z"},{"fileName":"Clone691.java","fileLine":11,"positionStart":{"line":11,"character":8},"positionEnd":{"line":14,"character":9},"text":"core-sim1","codeSnippet":"if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {\n            LOGGER.error (\"The rest request is empty.No info to register\");\n            return;\n        }","status":"core-sim","id":1200,"createdAt":"2023-05-28T16:34:02.214Z"},{"fileName":"Clone691.java","fileLine":36,"positionStart":{"line":36,"character":8},"positionEnd":{"line":36,"character":40},"text":"core-sim2","codeSnippet":"ModuleEntityDao moduleEntityDao;","status":"core-sim","id":1202,"createdAt":"2023-05-28T16:34:17.440Z"},{"fileName":"Clone691.java","fileLine":15,"positionStart":{"line":15,"character":8},"positionEnd":{"line":20,"character":9},"text":"core-sim2","codeSnippet":"ModuleEntityGenerator moduleEntityGenerator = new ModuleEntityGenerator ();\n        ModuleEntityDao moduleEntityDao = moduleEntityGenerator.get (req, moduleType);\n        if (moduleEntityDao == null) {\n            LOGGER.error (\"The BA object is null. There is nothing to register\");\n            return;\n        }","status":"core-sim","id":1204,"createdAt":"2023-05-28T16:34:50.156Z"},{"fileName":"Clone691.java","fileLine":39,"positionStart":{"line":39,"character":10},"positionEnd":{"line":41,"character":10},"text":"core-sim2","codeSnippet":"else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {\n            LOGGER.error (\"The BA object is null. There is nothing to register\");\n        } ","status":"core-sim","id":1205,"createdAt":"2023-05-28T16:35:09.759Z"},{"fileName":"Clone691.java","fileLine":41,"positionStart":{"line":41,"character":10},"positionEnd":{"line":45,"character":9},"text":"core-sim3","codeSnippet":"else if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {\n            processRegistryDal.addNewModule (moduleEntityDao);\n        } else {\n            processRegistryDal.updateModule (moduleEntityDao);\n        }","status":"core-sim","id":1206,"createdAt":"2023-05-28T16:35:22.766Z"},{"fileName":"Clone691.java","fileLine":21,"positionStart":{"line":21,"character":8},"positionEnd":{"line":25,"character":9},"text":"core-sim3","codeSnippet":"if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {\n            processRegistryDal.addNewModule (moduleEntityDao);\n        } else {\n            processRegistryDal.updateModule (moduleEntityDao);\n        }","status":"core-sim","id":1207,"createdAt":"2023-05-28T16:35:40.030Z"},{"fileName":"Clone691.java","fileLine":46,"positionStart":{"line":46,"character":4},"positionEnd":{"line":50,"character":5},"text":"noncore-sim1","codeSnippet":"} catch (IOException e) {\n        LOGGER.error (\"IO Error\\n\" + e.getMessage ());\n    } catch (ServletException e) {\n        LOGGER.error (\"Servlet Error\\n\" + e.getMessage ());\n    }","status":"noncore-sim","id":1208,"createdAt":"2023-05-28T16:35:52.855Z"},{"fileName":"Clone691.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":35,"character":9},"text":"noncore-sim1","codeSnippet":"LOGGER.debug (\"Register New Module - \" + moduleType.name ());\n    try {","status":"noncore-sim","id":1209,"createdAt":"2023-05-28T16:35:58.607Z"},{"fileName":"Clone691.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":9},"text":"noncore-sim1","codeSnippet":"LOGGER.debug (\"Register New Module - \" + moduleType.name ());\n    try {","status":"noncore-sim","id":1210,"createdAt":"2023-05-28T16:36:04.838Z"},{"fileName":"Clone691.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":30,"character":5},"text":"noncore-sim1","codeSnippet":"} catch (IOException e) {\n        LOGGER.error (\"IO Error\\n\" + e.getMessage ());\n    } catch (ServletException e) {\n        LOGGER.error (\"Servlet Error\\n\" + e.getMessage ());\n    }","status":"noncore-sim","id":1211,"createdAt":"2023-05-28T16:36:11.346Z"},{"fileName":"Clone692.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":28,"character":58},"text":"core-diff1","codeSnippet":"Thread thread = new Thread (() -> {\n        try {\n            Thread.sleep (5000);\n            if (alert.isShowing ()) {\n                Platform.runLater (() -> alert.close ());\n            }\n        } catch (Exception exp) {\n            exp.printStackTrace ();\n        }\n    });\n    thread.setDaemon (true);\n    thread.start ();\n    Optional < ButtonType > result = alert.showAndWait ();","status":"core-diff","id":1215,"createdAt":"2023-05-28T16:39:07.150Z"},{"fileName":"Clone692.java","fileLine":41,"positionStart":{"line":41,"character":4},"positionEnd":{"line":60,"character":5},"text":"core-diff2","codeSnippet":"Button b = new Button (\"close alert\");\n    b.setOnAction ((ActionEvent event) -> {\n        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {\n            System.out.println (\"bt = \" + bt);\n            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {\n                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);\n                cancelButton.fire ();\n                break;\n            }\n        }\n    });\n    final Scene scene = new Scene (new Group (b), 400, 300);\n    primaryStage.setScene (scene);\n    primaryStage.show ();\n    Optional < ButtonType > result = alert.showAndWait ();\n    if (result.get () == buttonTypeOne) {\n        System.out.println (\"one \");\n    } else if (result.get () == buttonTypeCancel) {\n        System.out.println (\"cancel \");\n    }","status":"core-diff","id":1216,"createdAt":"2023-05-28T16:39:14.574Z"},{"fileName":"Clone692.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":40,"character":69},"text":"noncore-sim1","codeSnippet":"Alert alert = new Alert (Alert.AlertType.CONFIRMATION);\n    alert.setTitle (\"Title\");\n    alert.setHeaderText (\"Some Text\");\n    alert.setContentText (\"Choose your option.\");\n    ButtonType buttonTypeOne = new ButtonType (\"Yes\");\n    alert.initModality (Modality.NONE);\n    ButtonType buttonTypeCancel = new ButtonType (\"No\", ButtonBar.ButtonData.CANCEL_CLOSE);\n    alert.getButtonTypes ().setAll (buttonTypeOne, buttonTypeCancel);","status":"noncore-sim","id":1217,"createdAt":"2023-05-28T16:39:23.696Z"},{"fileName":"Clone692.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":15,"character":69},"text":"noncore-sim1","codeSnippet":"Alert alert = new Alert (Alert.AlertType.CONFIRMATION);\n    alert.setTitle (\"Title\");\n    alert.setHeaderText (\"Some Text\");\n    alert.setContentText (\"Choose your option.\");\n    ButtonType buttonTypeOne = new ButtonType (\"Yes\");\n    ButtonType buttonTypeCancel = new ButtonType (\"No\", ButtonBar.ButtonData.CANCEL_CLOSE);\n    alert.getButtonTypes ().setAll (buttonTypeOne, buttonTypeCancel);","status":"noncore-sim","id":1218,"createdAt":"2023-05-28T16:39:33.146Z"},{"fileName":"Clone699.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":34,"character":46},"text":"noncore-sim1","codeSnippet":"JFrame myFrame = new JFrame (\"myJfTitle\");","status":"noncore-sim","id":1219,"createdAt":"2023-05-28T16:40:00.950Z"},{"fileName":"Clone699.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":46},"text":"noncore-sim1","codeSnippet":"JFrame myFrame = new JFrame (\"myJfTitle\");","status":"noncore-sim","id":1220,"createdAt":"2023-05-28T16:40:08.465Z"},{"fileName":"Clone699.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":35,"character":44},"text":"core-sim1","codeSnippet":"myFrame.setLayout (new BorderLayout ());","status":"core-sim","id":1221,"createdAt":"2023-05-28T16:40:16.690Z"},{"fileName":"Clone699.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":44},"text":"core-sim1","codeSnippet":"myFrame.setLayout (new BorderLayout ());","status":"core-sim","id":1222,"createdAt":"2023-05-28T16:40:31.554Z"},{"fileName":"Clone699.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":36,"character":48},"text":"core-sim2","codeSnippet":"JButton myButton = new JButton (\"Click me\");","status":"core-sim","id":1223,"createdAt":"2023-05-28T16:40:55.729Z"},{"fileName":"Clone699.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":13,"character":48},"text":"core-sim2","codeSnippet":"JButton myButton = new JButton (\"Click me\");","status":"core-sim","id":1224,"createdAt":"2023-05-28T16:41:02.422Z"},{"fileName":"Clone699.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":38,"character":45},"text":"core-sim3","codeSnippet":"JProgressBar myBar = new JProgressBar ();","status":"core-sim","id":1225,"createdAt":"2023-05-28T16:41:15.486Z"},{"fileName":"Clone699.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":14,"character":45},"text":"core-sim3","codeSnippet":"JProgressBar myBar = new JProgressBar ();","status":"core-sim","id":1226,"createdAt":"2023-05-28T16:41:35.201Z"},{"fileName":"Clone699.java","fileLine":41,"positionStart":{"line":41,"character":4},"positionEnd":{"line":41,"character":24},"text":"core-sim4","codeSnippet":"myBar.setValue (50);","status":"core-sim","id":1227,"createdAt":"2023-05-28T16:41:55.562Z"},{"fileName":"Clone699.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":24,"character":24},"text":"core-sim4","codeSnippet":"myBar.setValue (50);","status":"core-sim","id":1228,"createdAt":"2023-05-28T16:42:04.239Z"},{"fileName":"Clone699.java","fileLine":42,"positionStart":{"line":42,"character":4},"positionEnd":{"line":43,"character":45},"text":"core-sim5","codeSnippet":"myBar.add (myButton);\n    myFrame.add (myBar, BorderLayout.CENTER);","status":"core-sim","id":1230,"createdAt":"2023-05-28T16:43:17.509Z"},{"fileName":"Clone699.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":27,"character":26},"text":"core-sim5","codeSnippet":"glass.add (myButton, BorderLayout.CENTER);\n    myPanel.add (myBar);\n    myFrame.add (myPanel);","status":"core-sim","id":1231,"createdAt":"2023-05-28T16:43:30.833Z"},{"fileName":"Clone699.java","fileLine":46,"positionStart":{"line":46,"character":4},"positionEnd":{"line":46,"character":30},"text":"core-sim6","codeSnippet":"myFrame.setVisible (true);","status":"core-sim","id":1232,"createdAt":"2023-05-28T16:43:40.070Z"},{"fileName":"Clone699.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":30,"character":30},"text":"core-sim6","codeSnippet":"myFrame.setVisible (true);","status":"core-sim","id":1233,"createdAt":"2023-05-28T16:43:46.180Z"},{"fileName":"Clone699.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":31},"text":"noncore-diff1","codeSnippet":"myFrame.setSize (300, 100);","status":"noncore-diff","id":1234,"createdAt":"2023-05-28T16:43:56.672Z"},{"fileName":"Clone699.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":35},"text":"noncore-diff2","codeSnippet":"JPanel myPanel = new JPanel ();","status":"noncore-diff","id":1235,"createdAt":"2023-05-28T16:44:04.150Z"},{"fileName":"Clone699.java","fileLine":44,"positionStart":{"line":44,"character":4},"positionEnd":{"line":45,"character":47},"text":"core-diff1","codeSnippet":"myFrame.pack ();\n    myFrame.setSize (new Dimension (300, 100));","status":"core-diff","id":1240,"createdAt":"2023-05-28T16:44:45.143Z"},{"fileName":"Clone699.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":40,"character":30},"text":"core-diff2","codeSnippet":"LayoutManager overlay = new OverlayLayout (myBar);\n    myBar.setLayout (overlay);","status":"core-diff","id":1241,"createdAt":"2023-05-28T16:45:06.997Z"},{"fileName":"Clone699.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":37,"character":56},"text":"core-diff3","codeSnippet":"myButton.setAlignmentX (Component.CENTER_ALIGNMENT);","status":"core-diff","id":1242,"createdAt":"2023-05-28T16:45:20.855Z"},{"fileName":"Clone699.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":29,"character":23},"text":"core-diff4","codeSnippet":"myFrame.revalidate ();\n    myFrame.repaint ();","status":"core-diff","id":1243,"createdAt":"2023-05-28T16:45:30.847Z"},{"fileName":"Clone699.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":23,"character":28},"text":"core-diff5","codeSnippet":"myBar.setPreferredSize (new Dimension (myFrame.getWidth (), myFrame.getHeight ()));\n    myFrame.addComponentListener (new ComponentAdapter () {\n        public void componentResized (ComponentEvent evt) {\n            Component c = (Component) evt.getSource ();\n            myBar.setPreferredSize (new Dimension (myFrame.getWidth (), myFrame.getHeight ()));\n        }}\n    );\n    JPanel glass = (JPanel) myFrame.getGlassPane ();\n    glass.setVisible (true);","status":"core-diff","id":1244,"createdAt":"2023-05-28T16:45:43.528Z"},{"fileName":"Clone700.java","fileLine":44,"positionStart":{"line":44,"character":4},"positionEnd":{"line":44,"character":82},"text":"noncore-sim1","codeSnippet":"XMLStreamReader2 xmlsr = (XMLStreamReader2) xmlif.createXMLStreamReader (fis);","status":"noncore-sim","id":1245,"createdAt":"2023-05-29T14:26:48.298Z"},{"fileName":"Clone700.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":58},"text":"noncore-sim1","codeSnippet":"XMLStreamReader xsr = xif.createXMLStreamReader (xml);","status":"noncore-sim","id":1246,"createdAt":"2023-05-29T14:26:55.547Z"},{"fileName":"Clone700.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":35,"character":5},"text":"core-sim1","codeSnippet":"xsr = xif.createFilteredReader (xsr, new StreamFilter () {\n        private boolean accept = true;\n        @Override\n        public boolean accept (XMLStreamReader reader) {\n            if ((reader.isStartElement () || reader.isEndElement ()) && \"dad\".equals (reader.getLocalName ())) {\n                accept = ! accept;\n                return false;\n            } else {\n                return accept;\n            }\n        }}\n    );\n    while (xsr.hasNext ()) {\n        if (xsr.isStartElement ()) {\n            System.out.println (\"start: \" + xsr.getLocalName ());\n        } else if (xsr.isCharacters ()) {\n            if (xsr.getText ().trim ().length () > 0) {\n                System.out.println (\"chars: \" + xsr.getText ());\n            }\n        } else if (xsr.isEndElement ()) {\n            System.out.println (\"end: \" + xsr.getLocalName ());\n        }\n        xsr.next ();\n    }","status":"core-sim","id":1247,"createdAt":"2023-05-29T14:35:55.025Z"},{"fileName":"Clone700.java","fileLine":46,"positionStart":{"line":46,"character":4},"positionEnd":{"line":59,"character":5},"text":"core-sim1","codeSnippet":"while (xmlsr.hasNext ()) {\n        int eventType = xmlsr.next ();\n        switch (eventType) {\n            case (XMLEvent2.START_ELEMENT) :\n                currentElementName = xmlsr.getName ().toString ();\n                if (\"dad\".equals (currentElementName) == true) {\n                    System.out.println (\"isStartElement: \" + xmlsr.isStartElement ());\n                    System.out.println (\"Element BEGIN: \" + currentElementName);\n                    xmlsr.skipElement ();\n                } else {\n                    System.out.println (currentElementName);\n                }\n        }\n    }","status":"core-sim","id":1248,"createdAt":"2023-05-29T14:36:03.768Z"},{"fileName":"Clone700.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":43,"character":58},"text":"noncore-diff1","codeSnippet":"System.setProperty (\"javax.xml.stream.XMLInputFactory\", \"com.ctc.wstx.stax.WstxInputFactory\");\n    System.setProperty (\"javax.xml.stream.XMLOutputFactory\", \"com.ctc.wstx.stax.WstxOutputFactory\");\n    System.setProperty (\"javax.xml.stream.XMLEventFactory\", \"com.ctc.wstx.stax.WstxEventFactory\");\n    FileInputStream fis = new FileInputStream (new File (\"family.xml\"));\n    XMLInputFactory xmlif = XMLInputFactory.newFactory ();","status":"noncore-diff","id":1249,"createdAt":"2023-05-29T14:36:11.141Z"},{"fileName":"Clone700.java","fileLine":45,"positionStart":{"line":45,"character":4},"positionEnd":{"line":45,"character":37},"text":"noncore-diff1","codeSnippet":"String currentElementName = null;","status":"noncore-diff","id":1250,"createdAt":"2023-05-29T14:36:17.698Z"},{"fileName":"Clone700.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":72},"text":"noncore-diff2","codeSnippet":"XMLInputFactory xif = XMLInputFactory.newFactory ();\n    StreamSource xml = new StreamSource (\"src/forum14326598/input.xml\");","status":"noncore-diff","id":1251,"createdAt":"2023-05-29T14:36:24.950Z"},{"fileName":"Clone701.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":18,"character":152},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < countries.length; i ++) System.out.format (\"%-\" + (countryLength + 1) + \"s|%\" + (populationLength + 1) + \"d\\n\", countries [i], populations [i]);","status":"core-sim","id":1252,"createdAt":"2023-05-29T14:39:11.697Z"},{"fileName":"Clone701.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":30,"character":5},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < countries.length; i ++) {\n        System.out.printf (\"%-\" + longestCountry + \"s | %\" + longestPop + \"d%n\", countries [i], populations [i]);\n    }","status":"core-sim","id":1253,"createdAt":"2023-05-29T14:39:20.420Z"},{"fileName":"Clone701.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":16,"character":5},"text":"core-sim2","codeSnippet":"for (String country : countries) {\n        if (country.length () > countryLength) countryLength = country.length ();\n    }\n    for (int i : populations) {\n        if (String.valueOf (i).length () > populationLength) populationLength = String.valueOf (i).length ();\n    }","status":"core-sim","id":1254,"createdAt":"2023-05-29T14:39:31.402Z"},{"fileName":"Clone701.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":26,"character":127},"text":"core-sim2","codeSnippet":"int longestCountry = Arrays.stream (countries).map (String :: toString).mapToInt (String :: length).max ().getAsInt ();\n    int longestPop = Arrays.stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().getAsInt ();","status":"core-sim","id":1255,"createdAt":"2023-05-29T14:39:37.980Z"},{"fileName":"Clone701.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":30},"text":"noncore-diff1","codeSnippet":"int countryLength = 0;\n    long populationLength = 0;","status":"noncore-diff","id":1256,"createdAt":"2023-05-29T14:39:43.457Z"},{"fileName":"Clone701.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":24,"character":5},"text":"noncore-diff2","codeSnippet":"if (countries.length == 0 || populations.length == 0 || countries.length != populations.length) {\n        return;\n    }","status":"noncore-diff","id":1257,"createdAt":"2023-05-29T14:39:50.968Z"},{"fileName":"Clone707.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":49},"text":"core-sim1","codeSnippet":"if (! (that instanceof People)) return false;","status":"core-sim","id":1258,"createdAt":"2023-05-29T14:41:37.076Z"},{"fileName":"Clone707.java","fileLine":18,"positionStart":{"line":18,"character":27},"positionEnd":{"line":19,"character":23},"text":"core-sim1","codeSnippet":"(getClass () != other.getClass ())) {\n        result = false;","status":"core-sim","id":1259,"createdAt":"2023-05-29T14:42:57.861Z"},{"fileName":"Clone707.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":18,"character":8},"text":"core-sim1","codeSnippet":"if (","status":"core-sim","id":1260,"createdAt":"2023-05-29T14:44:28.607Z"},{"fileName":"Clone707.java","fileLine":21,"positionStart":{"line":21,"character":8},"positionEnd":{"line":22,"character":74},"text":"core-sim2","codeSnippet":"People otherPeople = (People) other;\n        result = name.equals (otherPeople.name) && age == otherPeople.age;","status":"core-sim","id":1261,"createdAt":"2023-05-29T14:44:39.429Z"},{"fileName":"Clone707.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":24,"character":18},"text":"core-sim2","codeSnippet":"return result;","status":"core-sim","id":1262,"createdAt":"2023-05-29T14:44:49.075Z"},{"fileName":"Clone707.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":17,"character":19},"text":"noncore-diff1","codeSnippet":"boolean result;","status":"noncore-diff","id":1263,"createdAt":"2023-05-29T14:44:57.135Z"},{"fileName":"Clone707.java","fileLine":18,"positionStart":{"line":18,"character":8},"positionEnd":{"line":18,"character":26},"text":"core-diff1","codeSnippet":"(other == null) ||","status":"core-diff","id":1264,"createdAt":"2023-05-29T14:45:04.923Z"},{"fileName":"Clone707.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":12},"text":"noncore-diff2","codeSnippet":"} else {","status":"noncore-diff","id":1265,"createdAt":"2023-05-29T14:45:14.937Z"},{"fileName":"Clone707.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":5},"text":"noncore-diff2","codeSnippet":"}","status":"noncore-diff","id":1266,"createdAt":"2023-05-29T14:45:21.846Z"},{"fileName":"Clone707.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":13,"character":76},"text":"core-sim2","codeSnippet":"People thatPeople = (People) that;\n    return this.name.equals (thatPeople.name) && this.age == thatPeople.age;","status":"core-sim","id":1267,"createdAt":"2023-05-29T14:45:27.815Z"},{"fileName":"Clone707.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":34},"text":"core-diff2","codeSnippet":"if (this == that) return true;","status":"core-diff","id":1268,"createdAt":"2023-05-29T14:45:35.207Z"},{"fileName":"Clone712.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":14},"text":"noncore-sim1","codeSnippet":"int n = 7;","status":"noncore-sim","id":1269,"createdAt":"2023-05-29T14:48:41.095Z"},{"fileName":"Clone712.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":14},"text":"noncore-sim1","codeSnippet":"int n = 7;","status":"noncore-sim","id":1270,"createdAt":"2023-05-29T14:48:47.295Z"},{"fileName":"Clone712.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":19,"character":5},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < 7; i ++) {\n        for (int j = 0;\n        j < 4; j ++) {\n            if (i + j <= n - 4 || j == 0 || i == n - 1) System.out.print (\"*\");\n            else if (i - j >= n - 4) System.out.print (\"*\");\n            else System.out.print (\" \");\n        }\n        System.out.println ();\n    }","status":"core-sim","id":1271,"createdAt":"2023-05-29T14:49:38.854Z"},{"fileName":"Clone712.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":32,"character":5},"text":"core-sim1","codeSnippet":"int mid = n / 2;\n    for (int i = 0;\n    i < n; i ++) {\n        for (int j = 0;\n        j < Math.abs (mid - i) + 1; j ++) {\n            System.out.print (\"*\");\n        }\n        System.out.println ();\n    }","status":"core-sim","id":1272,"createdAt":"2023-05-29T14:49:47.342Z"},{"fileName":"Clone715.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":19,"character":5},"text":"core-sim1","codeSnippet":"int maxDigit = 1;\n    while (maxDigit * 16 <= decimal && maxDigit > 0) {\n        maxDigit *= 16;\n    }\n    if (maxDigit <= 0) {\n        throw new IllegalArgumentException (\"Can not convert \" + decimal);\n    }\n    for (int digit = maxDigit;\n    digit > 0; digit /= 16) {\n        printHex ((decimal / digit) % 16);\n    }","status":"core-sim","id":1273,"createdAt":"2023-05-29T14:51:20.923Z"},{"fileName":"Clone715.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":35,"character":24},"text":"core-sim1","codeSnippet":"if (decimal >= 256) {\n        returnHex (decimal / 256);\n        decimal %= 256;\n    } else {\n        System.out.print (\"0\");\n    }\n    if (decimal >= 16) {\n        returnHex (decimal / 16);\n        decimal %= 16;\n    } else {\n        System.out.print (\"0\");\n    }\n    returnHex (decimal);","status":"core-sim","id":1274,"createdAt":"2023-05-29T14:58:09.242Z"},{"fileName":"Clone715.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":36,"character":18},"text":"noncore-diff1","codeSnippet":"decimal /= 16;","status":"noncore-diff","id":1275,"createdAt":"2023-05-29T14:58:17.603Z"},{"fileName":"Clone720.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":14,"character":6},"text":"core-diff1","codeSnippet":"SwingUtilities.invokeLater (new Runnable () {\n        @Override\n        public void run () {\n            new CaretPositionTest ();\n        }}\n    );","status":"core-diff","id":1276,"createdAt":"2023-05-29T14:58:54.077Z"},{"fileName":"Clone720.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":43,"character":28},"text":"core-diff2","codeSnippet":"panel.setLayout (new BoxLayout (panel, BoxLayout.Y_AXIS));\n    text1.setBorder (null);\n    text1.setOpaque (false);\n    text1.setEditable (false);\n    text2.setBorder (null);\n    text2.setOpaque (false);\n    text2.setEditable (false);\n    text1.getInputMap ().put (KeyStroke.getKeyStroke ('G', KeyEvent.CTRL_DOWN_MASK), \"copyAll\");\n    text1.getActionMap ().put (\"copyAll\", new AbstractAction () {\n        @Override\n        public void actionPerformed (ActionEvent e) {\n            StringBuilder s = new StringBuilder ();\n            s.append (text1.getText ()).append (\"\\n\").append (text2.getText ());\n            System.out.println (s.toString ());\n        }}\n    );\n    panel.add (text1);\n    panel.add (text2);\n    frame.setLayout (new BorderLayout ());\n    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    frame.getContentPane ().add (panel, BorderLayout.CENTER);\n    frame.setLocation (450, 400);\n    frame.pack ();\n    frame.setVisible (true);","status":"core-diff","id":1277,"createdAt":"2023-05-29T14:59:18.774Z"},{"fileName":"Clone720.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":19,"character":39},"text":"noncore-diff1","codeSnippet":"final JFrame frame = new JFrame (\"Display Keyword Panel\");\n    final JPanel panel = new JPanel ();","status":"noncore-diff","id":1278,"createdAt":"2023-05-29T14:59:26.989Z"},{"fileName":"Clone729.java","fileLine":33,"positionStart":{"line":33,"character":8},"positionEnd":{"line":53,"character":21},"text":"core-sim1","codeSnippet":"FileInputStream fin = new FileInputStream (_zipFile);\n        ZipInputStream zin = new ZipInputStream (fin);\n        ZipEntry ze = null;\n        while ((ze = zin.getNextEntry ()) != null) {\n            Log.v (\"Decompress\", \"Unzipping \" + ze.getName ());\n            if (ze.isDirectory ()) {\n                _dirChecker (ze.getName ());\n            } else {\n                FileOutputStream fout = new FileOutputStream (_location + ze.getName ());\n                BufferedOutputStream bufout = new BufferedOutputStream (fout);\n                byte [] buffer = new byte [1024];\n                int read = 0;\n                while ((read = zin.read (buffer)) != - 1) {\n                    bufout.write (buffer, 0, read);\n                }\n                bufout.close ();\n                zin.closeEntry ();\n                fout.close ();\n            }\n        }\n        zin.close ();","status":"core-sim","id":1279,"createdAt":"2023-05-29T15:00:51.937Z"},{"fileName":"Clone729.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":28,"character":5},"text":"core-sim1","codeSnippet":"ZipInputStream zis = new ZipInputStream (new BufferedInputStream (new FileInputStream (zipFile)));\n    try {\n        ZipEntry ze;\n        int count;\n        byte [] buffer = new byte [8192];\n        while ((ze = zis.getNextEntry ()) != null) {\n            File file = new File (targetDirectory, ze.getName ());\n            File dir = ze.isDirectory () ? file : file.getParentFile ();\n            if (! dir.isDirectory () && ! dir.mkdirs ()) throw new FileNotFoundException (\"Failed to ensure directory: \" + dir.getAbsolutePath ());\n            if (ze.isDirectory ()) continue;\n            FileOutputStream fout = new FileOutputStream (file);\n            try {\n                while ((count = zis.read (buffer)) != - 1) fout.write (buffer, 0, count);\n            } finally {\n                fout.close ();\n            }\n        }\n    } finally {\n        zis.close ();\n    }","status":"core-sim","id":1280,"createdAt":"2023-05-29T15:01:02.980Z"},{"fileName":"Clone729.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":32,"character":9},"text":"noncore-diff1","codeSnippet":"try {","status":"noncore-diff","id":1281,"createdAt":"2023-05-29T15:01:08.271Z"},{"fileName":"Clone729.java","fileLine":54,"positionStart":{"line":54,"character":8},"positionEnd":{"line":58,"character":5},"text":"noncore-diff1","codeSnippet":"Log.d (\"Unzip\", \"Unzipping complete. path :  \" + _location);\n    } catch (Exception e) {\n        Log.e (\"Decompress\", \"unzip\", e);\n        Log.d (\"Unzip\", \"Unzipping failed\");\n    }","status":"noncore-diff","id":1282,"createdAt":"2023-05-29T15:01:14.383Z"},{"fileName":"Clone732.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":59},"text":"noncore-sim1","codeSnippet":"HttpServletRequest request = (HttpServletRequest) arg0;","status":"noncore-sim","id":1283,"createdAt":"2023-05-29T15:01:52.605Z"},{"fileName":"Clone732.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":58},"text":"noncore-sim1","codeSnippet":"HttpServletRequest req = (HttpServletRequest) request;","status":"noncore-sim","id":1284,"createdAt":"2023-05-29T15:02:01.075Z"},{"fileName":"Clone732.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":16,"character":39},"text":"core-diff1","codeSnippet":"if (req.getHeader (\"x-dawson-nonce\") == null || req.getHeader (\"x-dawson-signature\") == null) {\n        HttpServletResponse httpResponse = (HttpServletResponse) response;\n        httpResponse.setContentType (\"application/json\");\n        httpResponse.sendError (HttpServletResponse.SC_BAD_REQUEST, \"Required headers not specified in the request\");\n        return;\n    }\n    chain.doFilter (request, response);","status":"core-diff","id":1285,"createdAt":"2023-05-29T15:06:15.082Z"},{"fileName":"Clone732.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":27,"character":5},"text":"core-diff2","codeSnippet":"String clientId = request.getHeader (\"clientId\");\n    if (StringUtils.isNotEmpty (clientId)) {\n        chain.doFilter (request, response);\n    } else {\n        logger.error (\"client id missing.\");\n    }","status":"core-diff","id":1287,"createdAt":"2023-05-29T15:06:40.498Z"},{"fileName":"Clone732.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":49},"text":"noncore-diff1","codeSnippet":"logger.info (\"checking client id in filter\");","status":"noncore-diff","id":1288,"createdAt":"2023-05-29T15:06:49.486Z"},{"fileName":"Clone738.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":18,"character":5},"text":"core-sim1","codeSnippet":"if (currentPos < currentLineEnd) {\n        in.seek (currentPos ++);\n        int readByte = in.readByte ();\n        return readByte;\n    } else if (currentPos < 0) {\n        return - 1;\n    } else {\n        findPrevLine ();\n        return read ();\n    }","status":"core-sim","id":1289,"createdAt":"2023-05-29T15:08:05.471Z"},{"fileName":"Clone738.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":34,"character":13},"text":"core-sim1","codeSnippet":"if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {\n        return - 1;\n    }\n    if (! lineBuffered) {\n        fillLineBuffer ();\n    }\n    if (lineBuffered) {\n        if (currentLineReadPos == 0) {\n            lineBuffered = false;\n        }\n        return currentLine [currentLineReadPos --];\n    }\n    return 0;","status":"core-sim","id":1290,"createdAt":"2023-05-29T15:08:14.522Z"},{"fileName":"Clone739.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":41,"character":13},"text":"core-sim1","codeSnippet":"if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {\n        return - 1;\n    }\n    if (! lineBuffered) {\n        fillLineBuffer ();\n    }\n    if (lineBuffered) {\n        if (currentLineReadPos == 0) {\n            lineBuffered = false;\n        }\n        return currentLine [currentLineReadPos --];\n    }\n    return 0;","status":"core-sim","id":1291,"createdAt":"2023-05-29T15:10:12.651Z"},{"fileName":"Clone739.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":25,"character":5},"text":"core-sim1","codeSnippet":"if (currentPos < currentLineEnd) {\n        in.seek (currentPos ++);\n        int readByte = in.readByte ();\n        return readByte;\n    } else if (currentPos > lastPosInFile && currentLineStart < currentLineEnd) {\n        findPrevLine ();\n        if (lastChar != '\\n' && lastChar != '\\r') {\n            return '\\n';\n        } else {\n            return read ();\n        }\n    } else if (currentPos < 0) {\n        return - 1;\n    } else {\n        findPrevLine ();\n        return read ();\n    }","status":"core-sim","id":1292,"createdAt":"2023-05-29T15:10:20.265Z"},{"fileName":"Clone744.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":72,"character":23},"text":"core-diff1","codeSnippet":"out.println (\"****************************************\");\n    out.println (\"DATE INFO\");\n    printCurrentTime ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"JVM COMMAND LINE ARGUMENTS\");\n    printCommandLineArguments ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"ENVIRONMENT\");\n    printSystemEnvironment ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"SYSTEM PROPERTIES\");\n    printSystemProperties ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"CLASS LOADER\");\n    printClassLoaderInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"OPERATING SYSTEM\");\n    printOSInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"MEMORY\");\n    printRuntimeMemory ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"CPU\");\n    printCPUUsage ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"DISK\");\n    printDiskInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"NETWORK\");\n    printNetworkInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"SECURITY\");\n    printSecurityInfo ();\n    out.println (\"\");\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"LOG\");\n    printLoggingInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"KEY MANAGER\");\n    printKeyManagerInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"DISPLAY DEVICES\");\n    printDisplayInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"FONTS\");\n    printFontsInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"LOCALES\");\n    printLocaleInfo ();","status":"core-diff","id":1293,"createdAt":"2023-05-29T15:10:49.447Z"},{"fileName":"Clone744.java","fileLine":76,"positionStart":{"line":76,"character":4},"positionEnd":{"line":82,"character":35},"text":"core-diff2","codeSnippet":"Runnable r = () -> {\n        MediaTypes mediaTypes = new MediaTypes ();\n        JPanel p = new JPanel ();\n        mediaTypes.createGui (p);\n        JOptionPane.showMessageDialog (null, p);\n    };\n    SwingUtilities.invokeLater (r);","status":"core-diff","id":1294,"createdAt":"2023-05-29T15:10:56.033Z"},{"fileName":"Clone746.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":26,"character":24},"text":"core-diff1","codeSnippet":"if (pressLocation != null && dragLocation != null) {\n        pressLocation = null;\n    } else if (dragLocation != null) {\n    } else {\n    }\n    pressLocation = null;\n    dragLocation = null;","status":"core-diff","id":1295,"createdAt":"2023-05-29T15:14:27.332Z"},{"fileName":"Clone746.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":16,"character":5},"text":"core-diff2","codeSnippet":"target.mouseReleased (e);\n    if (pressed != null) {\n        if (getDragDistance (e) < MAX_CLICK_DISTANCE) {\n            MouseEvent clickEvent = new MouseEvent ((Component) pressed.getSource (), MouseEvent.MOUSE_CLICKED, e.getWhen (), pressed.getModifiers (), pressed.getX (), pressed.getY (), pressed.getXOnScreen (), pressed.getYOnScreen (), pressed.getClickCount (), pressed.isPopupTrigger (), pressed.getButton ());\n            target.mouseClicked (clickEvent);\n        }\n        pressed = null;\n    }","status":"core-diff","id":1296,"createdAt":"2023-05-29T15:14:33.398Z"},{"fileName":"Clone747.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":19},"text":"noncore-sim1","codeSnippet":"int result = 0;","status":"noncore-sim","id":1297,"createdAt":"2023-05-29T15:14:45.094Z"},{"fileName":"Clone747.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":19},"text":"noncore-sim1","codeSnippet":"int result = 0;","status":"noncore-sim","id":1298,"createdAt":"2023-05-29T15:14:51.417Z"},{"fileName":"Clone747.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":39,"character":18},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < arr.length; i ++) {\n        if (i == 0) {\n            prev = arr [i];\n        } else {\n            if (arr [i] == prev) {\n                if (! same) {\n                    result ++;\n                    same = true;\n                }\n            } else {\n                prev = arr [i];\n                same = false;\n            }\n        }\n    }\n    return result;","status":"core-sim","id":1299,"createdAt":"2023-05-29T15:17:01.289Z"},{"fileName":"Clone747.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":16,"character":18},"text":"core-sim1","codeSnippet":"for (int i = 1;\n    i < arr.length; ++ i) {\n        if (arr [i] == arr [i - 1] && (i == arr.length - 1 || arr [i] != arr [i + 1])) {\n            ++ result;\n        }\n    }\n    return result;","status":"core-sim","id":1300,"createdAt":"2023-05-29T15:17:18.993Z"},{"fileName":"Clone747.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":22,"character":25},"text":"noncore-diff1","codeSnippet":"int prev = 0;\n    boolean same = false;","status":"noncore-diff","id":1301,"createdAt":"2023-05-29T15:17:26.484Z"},{"fileName":"Clone748.java","fileLine":40,"positionStart":{"line":40,"character":4},"positionEnd":{"line":41,"character":38},"text":"noncore-sim1","codeSnippet":"list.setSelectedIndex (index);\n    list.ensureIndexIsVisible (index);","status":"noncore-sim","id":1302,"createdAt":"2023-05-29T15:19:51.526Z"},{"fileName":"Clone748.java","fileLine":18,"positionStart":{"line":18,"character":8},"positionEnd":{"line":19,"character":42},"text":"noncore-sim1","codeSnippet":"list.setSelectedIndex (index);\n        list.ensureIndexIsVisible (index);","status":"noncore-sim","id":1303,"createdAt":"2023-05-29T15:19:58.529Z"},{"fileName":"Clone748.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":41},"text":"noncore-sim2","codeSnippet":"int index = list.getSelectedIndex ();","status":"noncore-sim","id":1304,"createdAt":"2023-05-29T15:20:10.761Z"},{"fileName":"Clone748.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":31,"character":41},"text":"noncore-sim2","codeSnippet":"int index = list.getSelectedIndex ();","status":"noncore-sim","id":1305,"createdAt":"2023-05-29T15:20:25.419Z"},{"fileName":"Clone748.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":17,"character":9},"text":"core-diff1","codeSnippet":"listModel.remove (index);\n    int size = listModel.getSize ();\n    if (size == 0) {\n        fireButton.setEnabled (false);\n    } else {\n        if (index == listModel.getSize ()) {\n            index --;\n        }","status":"core-diff","id":1306,"createdAt":"2023-05-29T15:20:34.008Z"},{"fileName":"Clone748.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":5},"text":"core-diff1","codeSnippet":"}","status":"core-diff","id":1307,"createdAt":"2023-05-29T15:20:39.415Z"},{"fileName":"Clone748.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":30,"character":5},"text":"core-diff2","codeSnippet":"String name = employeeName.getText ();\n    if (name.equals (\"\") || alreadyInList (name)) {\n        Toolkit.getDefaultToolkit ().beep ();\n        employeeName.requestFocusInWindow ();\n        employeeName.selectAll ();\n        return;\n    }","status":"core-diff","id":1308,"createdAt":"2023-05-29T15:20:48.310Z"},{"fileName":"Clone748.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":39,"character":30},"text":"core-diff2","codeSnippet":"if (index == - 1) {\n        index = 0;\n    } else {\n        index ++;\n    }\n    listModel.insertElementAt (employeeName.getText (), index);\n    employeeName.requestFocusInWindow ();\n    employeeName.setText (\"\");","status":"core-diff","id":1309,"createdAt":"2023-05-29T15:20:56.274Z"},{"fileName":"Clone752.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":29,"character":5},"text":"core-diff1","codeSnippet":"initialNumbers.add (1);\n    initialNumbers.add (2);\n    Observable < Integer > observableInitial = Observable.from (initialNumbers);\n    ReplaySubject < Integer > subject = ReplaySubject.create ();\n    Observable < Integer > source = Observable.merge (observableInitial, subject);\n    source.subscribe (System.out :: println);\n    for (int i = 0;\n    i < 100; ++ i) {\n        subject.onNext (i);\n    }","status":"core-diff","id":1310,"createdAt":"2023-05-29T15:23:21.699Z"},{"fileName":"Clone752.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":15,"character":18},"text":"core-diff2","codeSnippet":"olist.getObservable ().subscribe (System.out :: println);\n    olist.add (1);\n    Thread.sleep (1000);\n    olist.add (2);\n    Thread.sleep (1000);\n    olist.add (3);","status":"core-diff","id":1311,"createdAt":"2023-05-29T15:23:28.309Z"},{"fileName":"Clone752.java","fileLine":9,"positionStart":{"line":9,"character":3},"positionEnd":{"line":9,"character":65},"text":"noncore-sim1","codeSnippet":" ObservableList < Integer > olist = new ObservableList < > ();","status":"noncore-sim","id":1312,"createdAt":"2023-05-29T15:23:34.420Z"},{"fileName":"Clone752.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":67},"text":"noncore-sim1","codeSnippet":"List < Integer > initialNumbers = new ArrayList < Integer > ();","status":"noncore-sim","id":1313,"createdAt":"2023-05-29T15:23:41.368Z"},{"fileName":"Clone753.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":34,"character":99},"text":"core-sim1","codeSnippet":"Uri contactUri = Uri.withAppendedPath (ContactsContract.PhoneLookup.CONTENT_FILTER_URI, Uri.encode (number));\n    Cursor cursor = context.getContentResolver ().query (contactUri, projection, null, null, null);","status":"core-sim","id":1314,"createdAt":"2023-05-29T15:25:05.821Z"},{"fileName":"Clone753.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":20,"character":89},"text":"core-sim1","codeSnippet":"uri = Uri.withAppendedPath (mBaseUri, Uri.encode (phoneNumber));\n    Cursor cursor = this.getContentResolver ().query (uri, projection, null, null, null);","status":"core-sim","id":1315,"createdAt":"2023-05-29T15:25:19.142Z"},{"fileName":"Clone753.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":25,"character":20},"text":"core-sim2","codeSnippet":"if (cursor.moveToFirst ()) {\n        contactName = cursor.getString (0);\n    }\n    cursor.close ();","status":"core-sim","id":1316,"createdAt":"2023-05-29T15:25:33.561Z"},{"fileName":"Clone753.java","fileLine":36,"positionStart":{"line":36,"character":8},"positionEnd":{"line":37,"character":104},"text":"core-sim2","codeSnippet":"if (cursor.moveToFirst ()) {\n            name = cursor.getString (cursor.getColumnIndex (ContactsContract.PhoneLookup.DISPLAY_NAME));","status":"core-sim","id":1317,"createdAt":"2023-05-29T15:25:52.062Z"},{"fileName":"Clone753.java","fileLine":42,"positionStart":{"line":42,"character":8},"positionEnd":{"line":43,"character":24},"text":"core-sim2","codeSnippet":"}\n        cursor.close ();","status":"core-sim","id":1318,"createdAt":"2023-05-29T15:26:05.141Z"},{"fileName":"Clone753.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":23},"text":"core-sim3","codeSnippet":"return contactName;","status":"core-sim","id":1319,"createdAt":"2023-05-29T15:26:11.510Z"},{"fileName":"Clone753.java","fileLine":45,"positionStart":{"line":45,"character":4},"positionEnd":{"line":45,"character":16},"text":"core-sim3","codeSnippet":"return name;","status":"core-sim","id":1320,"createdAt":"2023-05-29T15:26:20.131Z"},{"fileName":"Clone753.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":18,"character":5},"text":"core-diff1","codeSnippet":"mBaseUri = Contacts.Phones.CONTENT_FILTER_URL;\n    projection = new String [] {android.provider.Contacts.People.NAME};\n    try {\n        Class < ? > c = Class.forName (\"android.provider.ContactsContract$PhoneLookup\");\n        mBaseUri = (Uri) c.getField (\"CONTENT_FILTER_URI\").get (mBaseUri);\n        projection = new String [] {\"display_name\"};\n    } catch (Exception e) {\n    }","status":"core-diff","id":1321,"createdAt":"2023-05-29T15:26:38.912Z"},{"fileName":"Clone753.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":25},"text":"noncore-diff1","codeSnippet":"Uri uri;\n    String [] projection;","status":"noncore-diff","id":1322,"createdAt":"2023-05-29T15:26:44.415Z"},{"fileName":"Clone753.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":28},"text":"noncore-diff1","codeSnippet":"String contactName = \"\";","status":"noncore-diff","id":1323,"createdAt":"2023-05-29T15:26:50.328Z"},{"fileName":"Clone753.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":26,"character":18},"text":"noncore-diff1","codeSnippet":"cursor = null;","status":"noncore-diff","id":1324,"createdAt":"2023-05-29T15:26:56.844Z"},{"fileName":"Clone753.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":32,"character":119},"text":"noncore-diff2","codeSnippet":"String name = null;\n    String [] projection = new String [] {ContactsContract.PhoneLookup.DISPLAY_NAME, ContactsContract.PhoneLookup._ID};","status":"noncore-diff","id":1325,"createdAt":"2023-05-29T15:27:25.976Z"},{"fileName":"Clone753.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":35,"character":25},"text":"noncore-diff2","codeSnippet":"if (cursor != null) {","status":"noncore-diff","id":1326,"createdAt":"2023-05-29T15:27:32.642Z"},{"fileName":"Clone753.java","fileLine":38,"positionStart":{"line":38,"character":12},"positionEnd":{"line":41,"character":57},"text":"noncore-diff2","codeSnippet":"Log.v (TAG, \"Started uploadcontactphoto: Contact Found @ \" + number);\n            Log.v (TAG, \"Started uploadcontactphoto: Contact name  = \" + name);\n        } else {\n            Log.v (TAG, \"Contact Not Found @ \" + number);","status":"noncore-diff","id":1327,"createdAt":"2023-05-29T15:27:52.814Z"},{"fileName":"Clone753.java","fileLine":44,"positionStart":{"line":44,"character":4},"positionEnd":{"line":44,"character":5},"text":"noncore-diff2","codeSnippet":"}","status":"noncore-diff","id":1328,"createdAt":"2023-05-29T15:27:59.106Z"},{"fileName":"Clone758.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":29,"character":23},"text":"core-diff1","codeSnippet":"ls.insert (1);\n    ls.insert (2);\n    ls.insert (3);\n    ls.insert (4);\n    ls.insert (5);\n    ls.insert (6);\n    ls.insert (7);\n    ls.inOrderPrint ();","status":"core-diff","id":1329,"createdAt":"2023-05-29T15:28:23.673Z"},{"fileName":"Clone758.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":17,"character":65},"text":"core-diff2","codeSnippet":"test.put (\"a\").put (\"b\").put (\"c\", 12);\n    Map.Entry < String, Integer > foo = test.put (\"a\").put (\"b\").put (\"d\", 12);\n    test.put (\"b\", 14);\n    ObjectMapper mapper = new ObjectMapper ();\n    System.out.println (mapper.writeValueAsString (test));\n    foo.setValue (99);\n    System.out.println (mapper.writeValueAsString (test));\n    System.out.println (test.get (\"a\").get (\"b\").getValue (\"d\"));","status":"core-diff","id":1330,"createdAt":"2023-05-29T15:28:31.836Z"},{"fileName":"Clone758.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":62},"text":"noncore-diff1","codeSnippet":"NestedMap < String, Integer > test = new NestedMap < > ();","status":"noncore-diff","id":1331,"createdAt":"2023-05-29T15:28:37.979Z"},{"fileName":"Clone758.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":86},"text":"noncore-diff2","codeSnippet":"BinaryTreeWithoutRecursion < Integer > ls = new BinaryTreeWithoutRecursion < > ();","status":"noncore-diff","id":1332,"createdAt":"2023-05-29T15:28:43.006Z"},{"fileName":"Clone759.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":30,"character":23},"text":"core-diff1","codeSnippet":"ls.insert (1);\n    ls.insert (2);\n    ls.insert (3);\n    ls.insert (4);\n    ls.insert (5);\n    ls.insert (6);\n    ls.insert (7);\n    ls.inOrderPrint ();","status":"core-diff","id":1333,"createdAt":"2023-05-29T15:41:06.363Z"},{"fileName":"Clone759.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":18,"character":76},"text":"core-diff1","codeSnippet":"Node tree = new Node ();\n    tree.value = \"root\";\n    Node [] n = {new Node (), new Node ()};\n    tree.nodes = n;\n    tree.nodes [0].value = \"leftish\";\n    tree.nodes [1].value = \"rightish-leafy\";\n    Node [] nn = {new Node ()};\n    tree.nodes [0].nodes = nn;\n    tree.nodes [0].nodes [0].value = \"off-leftish-leaf\";\n    System.out.println (Arrays.toString (list (tree, args [0]).toArray ()));","status":"core-diff","id":1334,"createdAt":"2023-05-29T15:41:20.521Z"},{"fileName":"Clone759.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":86},"text":"noncore-diff1","codeSnippet":"BinaryTreeWithoutRecursion < Integer > ls = new BinaryTreeWithoutRecursion < > ();","status":"noncore-diff","id":1335,"createdAt":"2023-05-29T15:41:25.972Z"},{"fileName":"Clone770.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":36,"character":5},"text":"core-sim1","codeSnippet":"while (true) {\n        if ((word.size () == 1) || (word.size () == 0)) {\n            return true;\n        }\n        if (word.get (0) == word.get (word.size () - 1)) {\n            word.remove (0);\n            word.remove (word.size () - 1);\n        } else {\n            return false;\n        }\n    }","status":"core-sim","id":1338,"createdAt":"2023-05-29T15:44:18.167Z"},{"fileName":"Clone770.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":16,"character":16},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < (n / 2); ++ i) {\n        if (s.charAt (i) != s.charAt (n - i - 1)) {\n            return false;\n        }\n    }\n    return true;","status":"core-sim","id":1339,"createdAt":"2023-05-29T15:44:26.820Z"},{"fileName":"Clone770.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":25,"character":5},"text":"noncore-diff1","codeSnippet":"for (char c : strChars) {\n        word.add (c);\n    }","status":"noncore-diff","id":1340,"createdAt":"2023-05-29T15:44:34.703Z"},{"fileName":"Clone770.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":24},"text":"noncore-diff2","codeSnippet":"int n = s.length ();","status":"noncore-diff","id":1341,"createdAt":"2023-05-29T15:44:40.036Z"},{"fileName":"Clone770.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":22,"character":51},"text":"noncore-diff2","codeSnippet":"str = str.toUpperCase ();\n    char [] strChars = str.toCharArray ();\n    List < Character > word = new ArrayList < > ();","status":"noncore-diff","id":1342,"createdAt":"2023-05-29T15:44:46.715Z"},{"fileName":"Clone776.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":42,"character":5},"text":"core-diff1","codeSnippet":"for (int counter = 0;\n    counter < number.length (); counter ++) {\n        a = Integer.parseInt (number.substring (counter, counter + 1));\n        if (a % 2 != 0 || a == 1) {\n            even = false;\n            total += a;\n        }\n    }","status":"core-diff","id":1343,"createdAt":"2023-05-29T15:47:35.263Z"},{"fileName":"Clone776.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":23,"character":5},"text":"core-diff1","codeSnippet":"for (int i = 0;\n    i < len; i ++) {\n        mod = num % 10;\n        num = num / 10;\n        if (mod % 2 == 0) {\n            even = even + mod;\n        } else {\n            od = od + mod;\n        }\n    }","status":"core-diff","id":1344,"createdAt":"2023-05-29T15:47:44.155Z"},{"fileName":"Clone776.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":33,"character":42},"text":"noncore-diff1","codeSnippet":"Scanner input = new Scanner (System.in);\n    String number = \"\";\n    int a = 0, total = 0;\n    boolean even = false;\n    System.out.println (\"Enter a number\");","status":"noncore-diff","id":1345,"createdAt":"2023-05-29T15:48:08.949Z"},{"fileName":"Clone776.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":13,"character":25},"text":"noncore-diff1","codeSnippet":"String s = \"1234\";\n    int len = s.length ();\n    int num = Integer.parseInt (s);\n    int mod;\n    int od = 0, even = 0;","status":"noncore-diff","id":1346,"createdAt":"2023-05-29T15:48:16.500Z"},{"fileName":"Clone776.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":34,"character":31},"text":"noncore-diff2","codeSnippet":"number = input.nextLine ();","status":"noncore-diff","id":1347,"createdAt":"2023-05-29T15:48:21.949Z"},{"fileName":"Clone776.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":25,"character":55},"text":"noncore-diff3","codeSnippet":"System.out.println (\"Sum of even numbers is \" + even);\n    System.out.println (\"Sum of odd numbers is \" + od);","status":"noncore-diff","id":1348,"createdAt":"2023-05-29T15:48:33.098Z"},{"fileName":"Clone776.java","fileLine":43,"positionStart":{"line":43,"character":4},"positionEnd":{"line":43,"character":47},"text":"noncore-diff3","codeSnippet":"System.out.println (\"The sum is \" + total);","status":"noncore-diff","id":1349,"createdAt":"2023-05-29T15:48:38.507Z"},{"fileName":"Clone796.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":26,"character":44},"text":"noncore-sim1","codeSnippet":"StringBuilder sb = new StringBuilder ();","status":"noncore-sim","id":1350,"createdAt":"2023-05-29T16:01:11.324Z"},{"fileName":"Clone796.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":13,"character":43},"text":"noncore-sim1","codeSnippet":"StringBuilder b = new StringBuilder ();","status":"noncore-sim","id":1351,"createdAt":"2023-05-29T16:01:18.904Z"},{"fileName":"Clone796.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":41,"character":26},"text":"core-sim1","codeSnippet":"edited = true;\n    while (edited) {\n        edited = false;\n        for (String s : strings) {\n            if (adv < s.length ()) {\n                sb.append (s.charAt (adv));\n                edited = true;\n            }\n        }\n        adv ++;\n    }\n    return sb.toString ();","status":"core-sim","id":1352,"createdAt":"2023-05-29T16:13:24.027Z"},{"fileName":"Clone796.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":22,"character":25},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < maxLen; ++ i) {\n        for (String str : s) {\n            if (str.length () > i) {\n                b.append (str.charAt (i));\n            }\n        }\n    }\n    return b.toString ();","status":"core-sim","id":1353,"createdAt":"2023-05-29T16:13:39.607Z"},{"fileName":"Clone796.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":12,"character":5},"text":"noncore-diff1","codeSnippet":"int maxLen = 0;\n    for (String str : s) {\n        maxLen = Math.max (maxLen, str.length ());\n    }","status":"noncore-diff","id":1354,"createdAt":"2023-05-29T16:13:49.863Z"},{"fileName":"Clone796.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":29,"character":12},"text":"noncore-diff2","codeSnippet":"int adv;\n    boolean edited;\n    adv = 0;","status":"noncore-diff","id":1355,"createdAt":"2023-05-29T16:13:56.117Z"},{"fileName":"Clone793.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":58},"text":"noncore-sim1","codeSnippet":"String [] arr = {\"foo:1,2,3\", \"bar:a,b\", \"baz:5,6,7\"};","status":"noncore-sim","id":1356,"createdAt":"2023-05-29T16:16:07.294Z"},{"fileName":"Clone793.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":22,"character":76},"text":"noncore-sim1","codeSnippet":"LinkedHashMap < String, Vector < String > > data = new LinkedHashMap < String, Vector < String > > ();\n    data.put (\"foo\", new Vector < String > (Arrays.asList (\"1\", \"2\", \"3\")));\n    data.put (\"bar\", new Vector < String > (Arrays.asList (\"3\", \"2\")));\n    data.put (\"baz\", new Vector < String > (Arrays.asList (\"5\", \"6\", \"7\")));","status":"noncore-sim","id":1357,"createdAt":"2023-05-29T16:16:14.285Z"},{"fileName":"Clone793.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":15,"character":5},"text":"core-sim1","codeSnippet":"List < List < String > > lls = cp.allUniqueCombinations ();\n    for (List < String > ls : lls) {\n        for (String s : ls) System.out.print (s + \"\\t\");\n        System.out.println ();\n    }","status":"core-sim","id":1358,"createdAt":"2023-05-29T16:16:23.139Z"},{"fileName":"Clone793.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":26,"character":5},"text":"core-sim1","codeSnippet":"Foo foo = new Foo (data);\n    for (String [] combination : foo.allUniqueCombinations ()) {\n        System.out.println (Arrays.toString (combination));\n    }","status":"core-sim","id":1359,"createdAt":"2023-05-29T16:16:29.227Z"},{"fileName":"Clone793.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":59},"text":"core-diff1","codeSnippet":"CartesianProductLHM cp = new CartesianProductLHM (arr);","status":"core-diff","id":1360,"createdAt":"2023-05-29T16:16:37.888Z"},{"fileName":"Clone790.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":28,"character":30},"text":"core-diff1","codeSnippet":"if (amount == 0) return 1;","status":"core-diff","id":1361,"createdAt":"2023-05-29T16:17:49.623Z"},{"fileName":"Clone790.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":5},"text":"core-diff1","codeSnippet":"if (sum < 0) {\n        return 0;\n    }","status":"core-diff","id":1362,"createdAt":"2023-05-29T16:18:01.071Z"},{"fileName":"Clone790.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":14,"character":5},"text":"core-sim1","codeSnippet":"if (vals == null || vals.length == 0) {\n        return 0;\n    }","status":"core-sim","id":1363,"createdAt":"2023-05-29T16:18:07.468Z"},{"fileName":"Clone789.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":30,"character":5},"text":"core-diff1","codeSnippet":"if (coins.length == 1) {\n        return amount % coins [0] == 0 ? 1 : 0;\n    }","status":"core-diff","id":1367,"createdAt":"2023-05-29T16:22:21.031Z"},{"fileName":"Clone789.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":14,"character":5},"text":"core-diff1","codeSnippet":"if (sum < 0) {\n        return 0;\n    }\n    if (vals == null || vals.length == 0) {\n        return 0;\n    }","status":"core-diff","id":1368,"createdAt":"2023-05-29T16:22:26.880Z"},{"fileName":"Clone789.java","fileLine":30,"positionStart":{"line":30,"character":6},"positionEnd":{"line":38,"character":5},"text":"core-sim1","codeSnippet":"else {\n        int total = 0;\n        int [] subCoins = arrayOfCoinsExceptTheFirstOne (coins);\n        for (int i = 0;\n        i * coins [0] <= amount; ++ i) {\n            total += findCombinationsCount (amount - i * coins [0], subCoins);\n        }\n        return total;\n    }","status":"core-sim","id":1369,"createdAt":"2023-05-29T16:22:56.571Z"},{"fileName":"Clone789.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":24,"character":20},"text":"core-sim1","codeSnippet":"int dp [] = new int [sum + 1];\n    dp [0] = 1;\n    for (int i = 0;\n    i < vals.length; ++ i) {\n        for (int j = vals [i];\n        j <= sum; ++ j) {\n            dp [j] += dp [j - vals [i]];\n        }\n    }\n    return dp [sum];","status":"core-sim","id":1370,"createdAt":"2023-05-29T16:23:04.091Z"},{"fileName":"Clone790.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":34,"character":5},"text":"core-sim2","codeSnippet":"else {\n        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);\n        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);\n        return withFirstCoin + withoutFirstCoin;\n    }","status":"core-sim","id":1372,"createdAt":"2023-05-29T16:23:33.330Z"},{"fileName":"Clone790.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":29,"character":68},"text":"core-sim1","codeSnippet":"else if (amount < 0 || coins.length == checkFromIndex) return 0;","status":"core-sim","id":1373,"createdAt":"2023-05-29T16:23:49.495Z"},{"fileName":"Clone790.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":24,"character":20},"text":"core-sim2","codeSnippet":"int dp [] = new int [sum + 1];\n    dp [0] = 1;\n    for (int i = 0;\n    i < vals.length; ++ i) {\n        for (int j = vals [i];\n        j <= sum; ++ j) {\n            dp [j] += dp [j - vals [i]];\n        }\n    }\n    return dp [sum];","status":"core-sim","id":1374,"createdAt":"2023-05-29T16:24:03.345Z"},{"fileName":"Clone786.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":15,"character":5},"text":"core-sim1","codeSnippet":"this.lines = size;\n    grid = new Cell [size] [size];\n    for (int i = 0;\n    i < size; i ++) for (int j = 0;\n    j < size; j ++) {\n        grid [i] [j] = new Cell ();\n    }","status":"core-sim","id":1375,"createdAt":"2023-05-29T16:24:49.216Z"},{"fileName":"Clone786.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":27,"character":5},"text":"core-sim1","codeSnippet":"this.lines = size;\n    grid = new Cell [size] [size];\n    for (int i = 0;\n    i < size; i ++) {\n        for (int j = 0;\n        j < size; j ++) {\n            grid [i] [j] = new Cell ();\n        }\n    }","status":"core-sim","id":1376,"createdAt":"2023-05-29T16:24:57.476Z"},{"fileName":"Clone780.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":27,"character":17},"text":"core-sim1","codeSnippet":"while (done == 0) {\n        if (first > last) {\n            index = - 1;\n            done = 1;\n        } else {\n            int mid = (first + last) / 2;\n            if (value == anArray [mid]) {\n                index = mid;\n                done = 1;\n            } else if (value < anArray [mid]) {\n                last = mid - 1;\n            } else {\n                first = mid + 1;\n            }\n        }\n    }\n    return index;","status":"core-sim","id":1377,"createdAt":"2023-05-29T16:25:26.467Z"},{"fileName":"Clone780.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":44,"character":19},"text":"core-sim1","codeSnippet":"do {\n        if (first > last) {\n            return - 1;\n        } else {\n            int mid = (first + last) / 2;\n            if (value == anArray [mid]) {\n                return mid;\n            } else if (value < anArray [mid]) {\n                last = mid - 1;\n            } else {\n                first = mid + 1;\n            }\n        }\n    } while (true);","status":"core-sim","id":1378,"createdAt":"2023-05-29T16:25:32.602Z"},{"fileName":"Clone780.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":17},"text":"noncore-diff1","codeSnippet":"int index;\n    int done = 0;","status":"noncore-diff","id":1379,"createdAt":"2023-05-29T16:25:45.875Z"},{"fileName":"Clone779.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":31,"character":5},"text":"core-sim1","codeSnippet":"for (String string : \"House, House, House, Dog, Dog, Dog, Dog\".split (\", \")) {\n        if (unique.get (string) == null) unique.put (string, 1);\n        else unique.put (string, unique.get (string) + 1);\n    }","status":"core-sim","id":1380,"createdAt":"2023-05-29T16:26:36.789Z"},{"fileName":"Clone779.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":18,"character":5},"text":"core-sim1","codeSnippet":"for (String t : item) {\n        if (map.containsKey (t)) {\n            map.put (t, map.get (t) + 1);\n        } else {\n            map.put (t, 1);\n        }\n    }","status":"core-sim","id":1381,"createdAt":"2023-05-29T16:26:44.813Z"},{"fileName":"Clone779.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":23,"character":5},"text":"core-sim2","codeSnippet":"Set < String > keys = map.keySet ();\n    for (String key : keys) {\n        System.out.println (key);\n        System.out.println (map.get (key));\n    }","status":"core-sim","id":1382,"createdAt":"2023-05-29T16:26:52.250Z"},{"fileName":"Clone779.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":35,"character":45},"text":"core-sim2","codeSnippet":"String uniqueString = join (unique.keySet (), \", \");\n    List < Integer > value = new ArrayList < Integer > (unique.values ());\n    System.out.println (\"Output = \" + uniqueString);\n    System.out.println (\"Values = \" + value);","status":"core-sim","id":1383,"createdAt":"2023-05-29T16:26:57.833Z"},{"fileName":"Clone779.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":57},"text":"noncore-diff1","codeSnippet":"HashMap < String, Integer > map = new HashMap < > ();","status":"noncore-diff","id":1384,"createdAt":"2023-05-29T16:27:04.764Z"},{"fileName":"Clone779.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":78},"text":"noncore-diff1","codeSnippet":"Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();","status":"noncore-diff","id":1385,"createdAt":"2023-05-29T16:27:09.874Z"},{"fileName":"Clone779.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":39},"text":"noncore-diff2","codeSnippet":"String value = \"This is testing Program testing Program\";\n    String item [] = value.split (\" \");","status":"noncore-diff","id":1386,"createdAt":"2023-05-29T16:27:18.241Z"},{"fileName":"Clone777.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":20,"character":25},"text":"core-sim1","codeSnippet":"StringBuilder b = new StringBuilder (\"[\");\n    for (Field f : getClass ().getFields ()) {\n        if (! isStaticField (f)) {\n            try {\n                b.append (f.getName () + \"=\" + f.get (this) + \" \");\n            } catch (IllegalAccessException e) {\n            }\n        }\n    }\n    b.append (']');\n    return b.toString ();","status":"core-sim","id":1387,"createdAt":"2023-05-29T16:28:35.555Z"},{"fileName":"Clone777.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":28,"character":48},"text":"noncore-diff1","codeSnippet":"if (obj == null) return \"null\";\n    if (visited.contains (obj)) return \"...\";\n    visited.add (obj);\n    Class cl = obj.getClass ();\n    if (cl == String.class) return (String) obj;","status":"noncore-diff","id":1388,"createdAt":"2023-05-29T16:28:51.937Z"},{"fileName":"Clone777.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":62,"character":13},"text":"core-sim1","codeSnippet":"if (cl.isArray ()) {\n        String r = cl.getComponentType () + \"[]{\";\n        for (int i = 0;\n        i < Array.getLength (obj); i ++) {\n            if (i > 0) r += \",\";\n            Object val = Array.get (obj, i);\n            if (cl.getComponentType ().isPrimitive ()) r += val;\n            else r += toString (val);\n        }\n        return r + \"}\";\n    }\n    String r = cl.getName ();\n    do {\n        r += \"[\";\n        Field [] fields = cl.getDeclaredFields ();\n        AccessibleObject.setAccessible (fields, true);\n        for (Field f : fields) {\n            if (! Modifier.isStatic (f.getModifiers ())) {\n                if (! r.endsWith (\"[\")) r += \",\";\n                r += f.getName () + \"=\";\n                try {\n                    Class t = f.getType ();\n                    Object val = f.get (obj);\n                    if (t.isPrimitive ()) r += val;\n                    else r += toString (val);\n                } catch (Exception e) {\n                    e.printStackTrace ();\n                }\n            }\n        }\n        r += \"]\";\n        cl = cl.getSuperclass ();\n    } while (cl != null);\n    return r;","status":"core-sim","id":1389,"createdAt":"2023-05-29T16:28:59.039Z"},{"fileName":"Clone803.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":27,"character":30},"text":"core-sim1","codeSnippet":"String temp1 = shuffle (text.substring (0, split));\n    String temp2 = shuffle (text.substring (split));\n    if (Math.random () > 0.5) return temp1 + temp2;\n    else return temp2 + temp1;","status":"core-sim","id":1390,"createdAt":"2023-05-30T03:40:02.596Z"},{"fileName":"Clone803.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":18,"character":44},"text":"core-sim1","codeSnippet":"while (characters.size () != 0) {\n        int randPicker = (int) (Math.random () * characters.size ());\n        output.append (characters.remove (randPicker));\n    }\n    System.out.println (output.toString ());","status":"core-sim","id":1391,"createdAt":"2023-05-30T03:40:58.850Z"},{"fileName":"Clone803.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":13,"character":63},"text":"noncore-diff1","codeSnippet":"List < Character > characters = new ArrayList < Character > ();\n    for (char c : input.toCharArray ()) {\n        characters.add (c);\n    }\n    StringBuilder output = new StringBuilder (input.length ());","status":"noncore-diff","id":1392,"createdAt":"2023-05-30T03:41:07.347Z"},{"fileName":"Clone803.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":23,"character":35},"text":"noncore-diff1","codeSnippet":"if (text.length () <= 1) return text;\n    int split = text.length () / 2;","status":"noncore-diff","id":1393,"createdAt":"2023-05-30T03:41:17.705Z"},{"fileName":"Clone806.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":14,"character":6},"text":"core-diff1","codeSnippet":"SwingUtilities.invokeLater (new Runnable () {\n        @Override\n        public void run () {\n            new Mail ().initUI ();\n        }}\n    );","status":"core-diff","id":1394,"createdAt":"2023-05-30T03:55:23.758Z"},{"fileName":"Clone806.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":37,"character":28},"text":"core-diff","codeSnippet":"frame.setSize (100, 100);\n    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    JTextArea textArea = new JTextArea ();\n    frame.add (textArea, BorderLayout.CENTER);\n    JPanel list = new JPanel ();\n    list.setLayout (new BoxLayout (list, BoxLayout.Y_AXIS));\n    frame.add (list, BorderLayout.NORTH);\n    String [] labels = {\"To: \", \"Cc: \", \"Bcc: \", \"Subject: \"};\n    for (int i = 0;\n    i < labels.length; i ++) {\n        JLabel l = new JLabel (labels [i]);\n        JTextField f = new JTextField ();\n        JPanel p = new JPanel (new BorderLayout ());\n        p.add (l, BorderLayout.WEST);\n        p.add (f, BorderLayout.CENTER);\n        list.add (p);\n    }\n    frame.pack ();\n    frame.setVisible (true);","status":"core-diff","id":1395,"createdAt":"2023-05-30T03:57:33.009Z"},{"fileName":"Clone806.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":18,"character":46},"text":"noncore-diff1","codeSnippet":"JFrame frame = new JFrame (\"New Message\");","status":"noncore-diff","id":1396,"createdAt":"2023-05-30T03:57:56.514Z"},{"fileName":"Clone807.java","fileLine":9,"positionStart":{"line":9,"character":10},"positionEnd":{"line":9,"character":23},"text":"noncore-sim1","codeSnippet":"dir.exists ()","status":"noncore-sim","id":1398,"createdAt":"2023-05-30T03:59:31.733Z"},{"fileName":"Clone807.java","fileLine":26,"positionStart":{"line":26,"character":8},"positionEnd":{"line":26,"character":27},"text":"noncore-sim1","codeSnippet":"directory.exists ()","status":"noncore-sim","id":1399,"createdAt":"2023-05-30T03:59:43.803Z"},{"fileName":"Clone807.java","fileLine":27,"positionStart":{"line":27,"character":8},"positionEnd":{"line":37,"character":9},"text":"core-sim1","codeSnippet":"File [] files = directory.listFiles ();\n        if (null != files) {\n            for (int i = 0;\n            i < files.length; i ++) {\n                if (files [i].isDirectory ()) {\n                    deleteDirectory (files [i]);\n                } else {\n                    files [i].delete ();\n                }\n            }\n        }","status":"core-sim","id":1400,"createdAt":"2023-05-30T04:02:41.443Z"},{"fileName":"Clone807.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":21,"character":5},"text":"core-sim1","codeSnippet":"String [] files = dir.list ();\n    for (int i = 0, len = files.length;\n    i < len; i ++) {\n        File f = new File (dir, files [i]);\n        if (f.isDirectory ()) {\n            deleteDirectory (f);\n        } else {\n            f.delete ();\n        }\n    }","status":"core-sim","id":1401,"createdAt":"2023-05-30T04:02:51.307Z"},{"fileName":"Clone807.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":25},"text":"core-sim2","codeSnippet":"return dir.delete ();","status":"core-sim","id":1402,"createdAt":"2023-05-30T04:03:02.361Z"},{"fileName":"Clone807.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":39,"character":33},"text":"core-sim2","codeSnippet":"return (directory.delete ());","status":"core-sim","id":1403,"createdAt":"2023-05-30T04:03:12.667Z"},{"fileName":"Clone807.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":9},"text":"noncore-diff1","codeSnippet":"if (!","status":"noncore-diff","id":1404,"createdAt":"2023-05-30T04:03:35.144Z"},{"fileName":"Clone807.java","fileLine":9,"positionStart":{"line":9,"character":24},"positionEnd":{"line":11,"character":5},"text":"noncore-diff1","codeSnippet":"|| ! dir.isDirectory ()) {\n        return false;\n    }","status":"noncore-diff","id":1405,"createdAt":"2023-05-30T04:03:42.176Z"},{"fileName":"Clone807.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":26,"character":8},"text":"noncore-diff2","codeSnippet":"if (","status":"noncore-diff","id":1406,"createdAt":"2023-05-30T04:03:48.378Z"},{"fileName":"Clone807.java","fileLine":26,"positionStart":{"line":26,"character":27},"positionEnd":{"line":26,"character":30},"text":"noncore-diff2","codeSnippet":") {","status":"noncore-diff","id":1407,"createdAt":"2023-05-30T04:03:57.387Z"},{"fileName":"Clone807.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":38,"character":5},"text":"noncore-diff2","codeSnippet":"}","status":"noncore-diff","id":1408,"createdAt":"2023-05-30T04:04:03.693Z"},{"fileName":"Clone810.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":42},"text":"noncore-sim1","codeSnippet":"final JPanel gui = new JPanel (cards);","status":"noncore-sim","id":1409,"createdAt":"2023-05-30T04:12:54.316Z"},{"fileName":"Clone810.java","fileLine":53,"positionStart":{"line":53,"character":4},"positionEnd":{"line":53,"character":39},"text":"noncore-sim1","codeSnippet":"final JPanel panel = new JPanel ();","status":"noncore-sim","id":1410,"createdAt":"2023-05-30T04:13:02.581Z"},{"fileName":"Clone810.java","fileLine":50,"positionStart":{"line":50,"character":8},"positionEnd":{"line":50,"character":78},"text":"core-diff1","codeSnippet":"UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());","status":"core-diff","id":1411,"createdAt":"2023-05-30T04:13:48.233Z"},{"fileName":"Clone810.java","fileLine":65,"positionStart":{"line":65,"character":12},"positionEnd":{"line":65,"character":44},"text":"noncore-sim1","codeSnippet":"JPanel newPanel = new JPanel ();","status":"noncore-sim","id":1412,"createdAt":"2023-05-30T04:14:14.601Z"},{"fileName":"Clone810.java","fileLine":49,"positionStart":{"line":49,"character":4},"positionEnd":{"line":49,"character":9},"text":"noncore-diff","codeSnippet":"try {","status":"noncore-diff","id":1413,"createdAt":"2023-05-30T04:14:22.886Z"},{"fileName":"Clone810.java","fileLine":51,"positionStart":{"line":51,"character":4},"positionEnd":{"line":52,"character":5},"text":"noncore-diff1","codeSnippet":"} catch (Exception ex) {\n    }","status":"noncore-diff","id":1414,"createdAt":"2023-05-30T04:14:31.969Z"},{"fileName":"Clone810.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":45,"character":18},"text":"core-diff2","codeSnippet":"gui.setBorder (new EmptyBorder (100, 300, 100, 300));\n    gui.setBackground (Color.WHITE);\n    gui.add (new JLabel (icon1), \"label \" + 1);\n    gui.add (new JLabel (icon2), \"label \" + 2);\n    gui.add (new JLabel (icon3), \"label \" + 3);\n    gui.add (new JLabel (icon4), \"label \" + 4);\n    gui.add (new JLabel (icon3), \"label \" + 5);\n    gui.add (new JLabel (icon2), \"label \" + 6);\n    ActionListener animate = new ActionListener () {\n        long lastTime = - 1;\n        int frameCount = 0;\n        String timeString;\n        DecimalFormat format = new DecimalFormat (\"0.00\");\n        @Override\n        public void actionPerformed (ActionEvent e) {\n            long time = System.nanoTime ();\n            if (lastTime < 0) {\n                lastTime = time;\n                timeString = \"00.00\";\n            } else if (time - lastTime > 1000) {\n                long duration = time - lastTime;\n                double fps = 1000000000d * (double) frameCount / (double) duration;\n                timeString = format.format (fps);\n                frameCount = 0;\n                lastTime = time;\n                System.out.println (timeString);\n            }\n            frameCount ++;\n            cards.next (gui);\n        }}\n    ;\n    Timer timer = new Timer (5, animate);\n    timer.start ();\n    JOptionPane.showMessageDialog (null, gui);\n    timer.stop ();","status":"core-diff","id":1415,"createdAt":"2023-05-30T04:14:58.611Z"},{"fileName":"Clone810.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":47},"text":"noncore-diff1","codeSnippet":"final CardLayout cards = new CardLayout ();","status":"noncore-diff","id":1416,"createdAt":"2023-05-30T04:15:05.551Z"},{"fileName":"Clone810.java","fileLine":54,"positionStart":{"line":54,"character":4},"positionEnd":{"line":74,"character":28},"text":"core-diff2","codeSnippet":"panel.setBackground (Color.RED);\n    final JFrame frame = new JFrame (\"Test\");\n    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    frame.add (panel);\n    JButton change = new JButton (\"Switch\");\n    change.addActionListener (new ActionListener () {\n        @Override\n        public void actionPerformed (ActionEvent e) {\n            long start = System.currentTimeMillis ();\n            frame.remove (panel);\n            long end = System.currentTimeMillis ();\n            JPanel newPanel = new JPanel ();\n            newPanel.setBackground (Color.BLUE);\n            frame.add (newPanel);\n            frame.validate ();\n        }}\n    );\n    frame.add (change, BorderLayout.SOUTH);\n    frame.setSize (100, 100);\n    frame.setLocationRelativeTo (null);\n    frame.setVisible (true);","status":"core-diff","id":1417,"createdAt":"2023-05-30T04:18:19.072Z"},{"fileName":"Clone815.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":22,"character":5},"text":"core-sim1","codeSnippet":"char [] chars = str.toCharArray ();\n    for (char ch : chars) {\n        if (character != null && character != ch) {\n            continue;\n        }\n        counts [ch] ++;\n    }\n    for (int i = 0;\n    i < counts.length; i ++) {\n        if (counts [i] > 0) {\n            System.out.println (\"Character \" + (char) i + \" appeared \" + counts [i] + \" times\");\n        }\n    }","status":"core-sim","id":1418,"createdAt":"2023-05-30T04:22:08.108Z"},{"fileName":"Clone815.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":44,"character":5},"text":"core-sim1","codeSnippet":"for (String s : arr) {\n        tempString.append (s);\n        for (char ch : s.toCharArray ()) {\n            System.out.println (\"Number of Occurrence of \" + ch + \" is:\" + tempString.chars ().filter (i -> i == ch).count ());\n        }\n    }\n    if (! (Character.toString (value).isEmpty ())) {\n        StringBuffer tempString2 = new StringBuffer ();\n        for (String s : arr) {\n            tempString2.append (s);\n            for (char ch : s.toCharArray ()) {\n                if (ch == value) {\n                    System.out.println (\"Number of Occurrence of \" + ch + \" is:\" + tempString2.chars ().filter (i -> i == ch).count ());\n                }\n            }\n        }\n    }","status":"core-sim","id":1419,"createdAt":"2023-05-30T04:22:21.328Z"},{"fileName":"Clone815.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":27,"character":50},"text":"noncore-diff1","codeSnippet":"String [] arr = str.split (\"\");\n    StringBuffer tempString = new StringBuffer ();","status":"noncore-diff","id":1420,"createdAt":"2023-05-30T04:22:38.048Z"},{"fileName":"Clone815.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":39},"text":"noncore-diff1","codeSnippet":"int [] counts = new int [MAX_CHAR];","status":"noncore-diff","id":1421,"createdAt":"2023-05-30T04:22:45.768Z"},{"fileName":"Clone819.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":36,"character":123},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < str.length (); i ++) {\n        if (str.charAt (i) == searchKey) count += str.charAt (i) + \"\\n\";\n    }\n    System.out.println (count + \"\\nNumber of Occurrence of \" + searchKey + \" is \" + count.length () + \" in string \" + str);","status":"core-sim","id":1422,"createdAt":"2023-05-30T04:23:55.963Z"},{"fileName":"Clone819.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":27,"character":5},"text":"core-sim1","codeSnippet":"for (String s : arr) {\n        tempString.append (s);\n        for (char ch : s.toCharArray ()) {\n            System.out.println (\"Number of Occurrence of \" + ch + \" is:\" + tempString.chars ().filter (i -> i == ch).count ());\n        }\n    }\n    if (! (Character.toString (value).isEmpty ())) {\n        StringBuffer tempString2 = new StringBuffer ();\n        for (String s : arr) {\n            tempString2.append (s);\n            for (char ch : s.toCharArray ()) {\n                if (ch == value) {\n                    System.out.println (\"Number of Occurrence of \" + ch + \" is:\" + tempString2.chars ().filter (i -> i == ch).count ());\n                }\n            }\n        }\n    }","status":"core-sim","id":1423,"createdAt":"2023-05-30T04:24:02.808Z"},{"fileName":"Clone819.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":50},"text":"noncore-diff1","codeSnippet":"String [] arr = str.split (\"\");\n    StringBuffer tempString = new StringBuffer ();","status":"noncore-diff","id":1424,"createdAt":"2023-05-30T04:24:12.925Z"},{"fileName":"Clone819.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":31,"character":22},"text":"noncore-diff1","codeSnippet":"String count = \"\";","status":"noncore-diff","id":1425,"createdAt":"2023-05-30T04:24:21.530Z"},{"fileName":"Clone368.java","fileLine":17,"positionStart":{"line":17,"character":8},"positionEnd":{"line":22,"character":9},"text":"core-diff1","codeSnippet":"Runnable worldTask = new Runnable () {\n            @Override\n            public void run () {\n                new ThreadSeq ().printWorld ();\n            }}\n        ;","status":"core-diff","id":1426,"createdAt":"2023-05-30T04:37:05.839Z"},{"fileName":"Clone368.java","fileLine":24,"positionStart":{"line":24,"character":8},"positionEnd":{"line":24,"character":43},"text":"core-diff2","codeSnippet":"Thread t2 = new Thread (worldTask);","status":"core-diff","id":1427,"createdAt":"2023-05-30T04:37:30.476Z"},{"fileName":"Clone820.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":29,"character":15},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < s.length (); i ++) {\n        c = s.charAt (i);\n        for (int j = 0;\n        j < s.length (); j ++) {\n            d = s.charAt (j);\n            if (c == d) {\n                s.deleteCharAt (j);\n                if (i >= j) i --;\n                j --;\n                counter ++;\n            }\n        }\n        end = end + counter + c;\n        counter = 0;\n    }\n    return end;","status":"core-sim","id":1428,"createdAt":"2023-05-30T04:39:40.450Z"},{"fileName":"Clone820.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":46,"character":15},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < s.length (); i ++) {\n        char c = s.charAt (i);\n        count [(int) (c - 'a')] ++;\n    }\n    String ans = \"\";\n    for (int i = 0;\n    i < 26; i ++) {\n        if (count [i] != 0) {\n            ans += String.valueOf (count [i]) + (char) (i + 'a');\n        }\n    }\n    return ans;","status":"core-sim","id":1429,"createdAt":"2023-05-30T04:39:46.334Z"},{"fileName":"Clone820.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":12,"character":14},"text":"noncore-diff1","codeSnippet":"StringBuilder s = new StringBuilder (s);\n    String end = new String ();\n    int counter = 0;\n    char c, d;","status":"noncore-diff","id":1430,"createdAt":"2023-05-30T04:39:52.408Z"},{"fileName":"Clone820.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":33,"character":32},"text":"noncore-diff1","codeSnippet":"int [] count = new int [26];","status":"noncore-diff","id":1431,"createdAt":"2023-05-30T04:40:04.881Z"},{"fileName":"Clone825.java","fileLine":14,"positionStart":{"line":14,"character":3},"positionEnd":{"line":36,"character":18},"text":"core-diff1","codeSnippet":" for (int i = 0;\n    i < sc.length; i ++) {\n        if (sc [i] == 'A') prevA = i;\n        else if (sc [i] == 'G') prevG = i;\n        else if (sc [i] == 'C') prevC = i;\n        A [i] = prevA;\n        G [i] = prevG;\n        C [i] = prevC;\n    }\n    int [] result = new int [P.length];\n    for (int i = 0;\n    i < P.length; i ++) {\n        if (A [K [i]] >= P [i] && A [K [i]] <= K [i]) {\n            result [i] = 1;\n        } else if (C [K [i]] >= P [i] && C [K [i]] <= K [i]) {\n            result [i] = 2;\n        } else if (G [K [i]] >= P [i] && G [K [i]] <= K [i]) {\n            result [i] = 3;\n        } else {\n            result [i] = 4;\n        }\n    }\n    return result;","status":"core-diff","id":1432,"createdAt":"2023-05-30T04:50:25.796Z"},{"fileName":"Clone825.java","fileLine":42,"positionStart":{"line":42,"character":4},"positionEnd":{"line":57,"character":18},"text":"core-diff2","codeSnippet":"for (int counter = 0;\n    counter < characterInput.length; counter ++) {\n        integerInput [counter] = characterMapping.get (characterInput [counter]);\n    }\n    int [] result = new int [P.length];\n    for (int index = 0;\n    index < P.length; index ++) {\n        if (P [index] == Q [index]) {\n            result [index] = integerInput [P [index]];\n            break;\n        }\n        final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);\n        final int minimumValue = minimum (subArray);\n        result [index] = minimumValue;\n    }\n    return result;","status":"core-diff","id":1433,"createdAt":"2023-05-30T04:50:35.037Z"},{"fileName":"Clone825.java","fileLine":40,"positionStart":{"line":40,"character":4},"positionEnd":{"line":41,"character":64},"text":"noncore-diff1","codeSnippet":"final char [] characterInput = S.toCharArray ();\n    final int [] integerInput = new int [characterInput.length];","status":"noncore-diff","id":1434,"createdAt":"2023-05-30T04:54:05.316Z"},{"fileName":"Clone825.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":13,"character":46},"text":"noncore-diff1","codeSnippet":"char [] sc = S.toCharArray ();\n    int [] A = new int [sc.length];\n    int [] G = new int [sc.length];\n    int [] C = new int [sc.length];\n    int prevA = - 1, prevG = - 1, prevC = - 1;","status":"noncore-diff","id":1435,"createdAt":"2023-05-30T04:54:13.301Z"},{"fileName":"Clone831.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":52},"text":"noncore-sim1","codeSnippet":"final char [] characterInput = S.toCharArray ();","status":"noncore-sim","id":1436,"createdAt":"2023-05-30T05:02:13.480Z"},{"fileName":"Clone831.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":31,"character":37},"text":"noncore-sim1","codeSnippet":"char [] chars = S.toCharArray ();","status":"noncore-sim","id":1437,"createdAt":"2023-05-30T05:02:20.000Z"},{"fileName":"Clone831.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":64},"text":"noncore-sim2","codeSnippet":"final int [] integerInput = new int [characterInput.length];","status":"noncore-sim","id":1438,"createdAt":"2023-05-30T05:03:19.150Z"},{"fileName":"Clone831.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":30,"character":39},"text":"noncore-sim2","codeSnippet":"int [] answer = new int [P.length];","status":"noncore-sim","id":1439,"createdAt":"2023-05-30T05:03:27.724Z"},{"fileName":"Clone831.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":26,"character":18},"text":"core-sim1","codeSnippet":"for (int counter = 0;\n    counter < characterInput.length; counter ++) {\n        integerInput [counter] = characterMapping.get (characterInput [counter]);\n    }\n    int [] result = new int [P.length];\n    for (int index = 0;\n    index < P.length; index ++) {\n        if (P [index] == Q [index]) {\n            result [index] = integerInput [P [index]];\n            break;\n        }\n        final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);\n        final int minimumValue = minimum (subArray);\n        result [index] = minimumValue;\n    }\n    return result;","status":"core-sim","id":1440,"createdAt":"2023-05-30T05:04:33.087Z"},{"fileName":"Clone831.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":66,"character":18},"text":"core-sim1","codeSnippet":"for (int iii = 0;\n    iii < chars.length; iii ++) {\n        if (iii > 0) {\n            for (int zzz = 0;\n            zzz < 4; zzz ++) {\n                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];\n            }\n        }\n        switch (chars [iii]) {\n            case 'A' :\n                cumulativeAnswers [0] [iii + 1] ++;\n                break;\n            case 'C' :\n                cumulativeAnswers [1] [iii + 1] ++;\n                break;\n            case 'G' :\n                cumulativeAnswers [2] [iii + 1] ++;\n                break;\n            case 'T' :\n                cumulativeAnswers [3] [iii + 1] ++;\n                break;\n        }\n    }\n    for (int iii = 0;\n    iii < P.length; iii ++) {\n        for (int zzz = 0;\n        zzz < 4; zzz ++) {\n            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {\n                answer [iii] = zzz + 1;\n                break;\n            }\n        }\n    }\n    return answer;","status":"core-sim","id":1441,"createdAt":"2023-05-30T05:04:49.918Z"},{"fileName":"Clone831.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":32,"character":65},"text":"noncore-diff1","codeSnippet":"int [] [] cumulativeAnswers = new int [4] [chars.length + 1];","status":"noncore-diff","id":1442,"createdAt":"2023-05-30T05:05:03.573Z"},{"fileName":"Clone835.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":45,"character":18},"text":"core-sim1","codeSnippet":"for (int iii = 0;\n    iii < chars.length; iii ++) {\n        if (iii > 0) {\n            for (int zzz = 0;\n            zzz < 4; zzz ++) {\n                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];\n            }\n        }\n        switch (chars [iii]) {\n            case 'A' :\n                cumulativeAnswers [0] [iii + 1] ++;\n                break;\n            case 'C' :\n                cumulativeAnswers [1] [iii + 1] ++;\n                break;\n            case 'G' :\n                cumulativeAnswers [2] [iii + 1] ++;\n                break;\n            case 'T' :\n                cumulativeAnswers [3] [iii + 1] ++;\n                break;\n        }\n    }\n    for (int iii = 0;\n    iii < P.length; iii ++) {\n        for (int zzz = 0;\n        zzz < 4; zzz ++) {\n            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {\n                answer [iii] = zzz + 1;\n                break;\n            }\n        }\n    }\n    return answer;","status":"core-sim","id":1443,"createdAt":"2023-05-30T05:06:07.318Z"},{"fileName":"Clone835.java","fileLine":56,"positionStart":{"line":56,"character":4},"positionEnd":{"line":85,"character":18},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < N; i ++) {\n        char c = S.charAt (i);\n        if (c == 'A') {\n            lastA = i;\n        } else if (c == 'C') {\n            lastC = i;\n        } else if (c == 'G') {\n            lastG = i;\n        }\n        lastOccurrencesMap [0] [i] = lastA;\n        lastOccurrencesMap [1] [i] = lastC;\n        lastOccurrencesMap [2] [i] = lastG;\n    }\n    for (int i = 0;\n    i < M; i ++) {\n        int startIndex = P [i];\n        int endIndex = Q [i];\n        int minimum = 4;\n        for (int n = 0;\n        n < 3; n ++) {\n            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);\n            if (lastOccurence != 0) {\n                minimum = n + 1;\n                break;\n            }\n        }\n        result [i] = minimum;\n    }\n    return result;","status":"core-sim","id":1444,"createdAt":"2023-05-30T05:07:45.485Z"},{"fileName":"Clone835.java","fileLine":50,"positionStart":{"line":50,"character":4},"positionEnd":{"line":51,"character":32},"text":"noncore-sim1","codeSnippet":"int M = P.length;\n    int [] result = new int [M];","status":"noncore-sim","id":1445,"createdAt":"2023-05-30T05:08:10.779Z"},{"fileName":"Clone835.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":39},"text":"noncore-sim1","codeSnippet":"int [] answer = new int [P.length];","status":"noncore-sim","id":1446,"createdAt":"2023-05-30T05:08:20.011Z"},{"fileName":"Clone835.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":11,"character":65},"text":"noncore-diff1","codeSnippet":"char [] chars = S.toCharArray ();\n    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];","status":"noncore-diff","id":1447,"createdAt":"2023-05-30T05:09:09.411Z"},{"fileName":"Clone835.java","fileLine":52,"positionStart":{"line":52,"character":4},"positionEnd":{"line":55,"character":20},"text":"noncore-diff2","codeSnippet":"lastOccurrencesMap = new int [3] [N];\n    int lastA = - 1;\n    int lastC = - 1;\n    int lastG = - 1;","status":"noncore-diff","id":1448,"createdAt":"2023-05-30T05:09:18.110Z"},{"fileName":"Clone835.java","fileLine":49,"positionStart":{"line":49,"character":4},"positionEnd":{"line":49,"character":23},"text":"noncore-diff3","codeSnippet":"int N = S.length ()","status":"noncore-diff","id":1449,"createdAt":"2023-05-30T05:09:23.400Z"},{"fileName":"Clone836.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":67,"character":18},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < S.length (); i ++) {\n        switch (S.charAt (i)) {\n            case 'A' :\n                factor1Sum ++;\n                break;\n            case 'C' :\n                factor2Sum ++;\n                break;\n            case 'G' :\n                factor3Sum ++;\n                break;\n            case 'T' :\n                factor4Sum ++;\n                break;\n            default :\n                break;\n        }\n        factor1 [i] = factor1Sum;\n        factor2 [i] = factor2Sum;\n        factor3 [i] = factor3Sum;\n        factor4 [i] = factor4Sum;\n    }\n    for (int i = 0;\n    i < P.length; i ++) {\n        int start = P [i];\n        int end = Q [i];\n        if (start == 0) {\n            if (factor1 [end] > 0) {\n                result [i] = 1;\n            } else if (factor2 [end] > 0) {\n                result [i] = 2;\n            } else if (factor3 [end] > 0) {\n                result [i] = 3;\n            } else {\n                result [i] = 4;\n            }\n        } else {\n            if (factor1 [end] > factor1 [start - 1]) {\n                result [i] = 1;\n            } else if (factor2 [end] > factor2 [start - 1]) {\n                result [i] = 2;\n            } else if (factor3 [end] > factor3 [start - 1]) {\n                result [i] = 3;\n            } else {\n                result [i] = 4;\n            }\n        }\n    }\n    return result;","status":"core-sim","id":1450,"createdAt":"2023-05-30T05:11:45.507Z"},{"fileName":"Clone836.java","fileLine":78,"positionStart":{"line":78,"character":4},"positionEnd":{"line":107,"character":18},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < N; i ++) {\n        char c = S.charAt (i);\n        if (c == 'A') {\n            lastA = i;\n        } else if (c == 'C') {\n            lastC = i;\n        } else if (c == 'G') {\n            lastG = i;\n        }\n        lastOccurrencesMap [0] [i] = lastA;\n        lastOccurrencesMap [1] [i] = lastC;\n        lastOccurrencesMap [2] [i] = lastG;\n    }\n    for (int i = 0;\n    i < M; i ++) {\n        int startIndex = P [i];\n        int endIndex = Q [i];\n        int minimum = 4;\n        for (int n = 0;\n        n < 3; n ++) {\n            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);\n            if (lastOccurence != 0) {\n                minimum = n + 1;\n                break;\n            }\n        }\n        result [i] = minimum;\n    }\n    return result;","status":"core-sim","id":1451,"createdAt":"2023-05-30T05:11:55.993Z"},{"fileName":"Clone836.java","fileLine":72,"positionStart":{"line":72,"character":4},"positionEnd":{"line":73,"character":32},"text":"noncore-sim1","codeSnippet":"int M = P.length;\n    int [] result = new int [M];","status":"noncore-sim","id":1452,"createdAt":"2023-05-30T05:12:09.692Z"},{"fileName":"Clone836.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":39},"text":"noncore-sim1","codeSnippet":"int [] result = new int [P.length];","status":"noncore-sim","id":1453,"createdAt":"2023-05-30T05:12:17.552Z"},{"fileName":"Clone836.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":17,"character":23},"text":"noncore-diff1","codeSnippet":"int [] factor1 = new int [S.length ()];\n    int [] factor2 = new int [S.length ()];\n    int [] factor3 = new int [S.length ()];\n    int [] factor4 = new int [S.length ()];\n    int factor1Sum = 0;\n    int factor2Sum = 0;\n    int factor3Sum = 0;\n    int factor4Sum = 0;","status":"noncore-diff","id":1454,"createdAt":"2023-05-30T05:12:25.365Z"},{"fileName":"Clone836.java","fileLine":71,"positionStart":{"line":71,"character":4},"positionEnd":{"line":71,"character":24},"text":"noncore-diff1","codeSnippet":"int N = S.length ();","status":"noncore-diff","id":1455,"createdAt":"2023-05-30T05:12:32.365Z"},{"fileName":"Clone836.java","fileLine":74,"positionStart":{"line":74,"character":4},"positionEnd":{"line":77,"character":20},"text":"noncore-diff1","codeSnippet":"lastOccurrencesMap = new int [3] [N];\n    int lastA = - 1;\n    int lastC = - 1;\n    int lastG = - 1;","status":"noncore-diff","id":1456,"createdAt":"2023-05-30T05:12:40.181Z"},{"fileName":"Clone840.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":37,"character":31},"text":"core-sim1","codeSnippet":"for (int i = 0, end = values.length - 1;\n    i < end; i ++) {\n        System.arraycopy (values [i].toCharArray (), 0, joined, pos, values [i].length ());\n        pos += values [i].length ();\n        System.arraycopy (sep, 0, joined, pos, sep.length);\n        pos += sep.length;\n    }\n    System.arraycopy (values [values.length - 1].toCharArray (), 0, joined, pos, values [values.length - 1].length ());\n    return new String (joined);","status":"core-sim","id":1457,"createdAt":"2023-05-30T05:20:44.176Z"},{"fileName":"Clone840.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":15,"character":26},"text":"core-sim1","codeSnippet":"for (int i = startIndex;\n    i < strings.length; i ++) {\n        if (i != startIndex) sb.append (separator);\n        sb.append (strings [i]);\n    }\n    return sb.toString ();","status":"core-sim","id":1458,"createdAt":"2023-05-30T05:20:50.753Z"},{"fileName":"Clone840.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":26,"character":5},"text":"core-diff1","codeSnippet":"for (int i = 0;\n    i < values.length; i ++) {\n        if (values [i] == null) values [i] = \"\";\n        else totalSize += values [i].length ();\n    }","status":"core-diff","id":1459,"createdAt":"2023-05-30T05:21:03.137Z"},{"fileName":"Clone840.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":38},"text":"core-diff1","codeSnippet":"if (values.length == 0) return \"\";","status":"core-diff","id":1460,"createdAt":"2023-05-30T05:21:13.346Z"},{"fileName":"Clone840.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":21,"character":53},"text":"noncore-diff1","codeSnippet":"char [] sep = separator.toCharArray ();\n    int totalSize = (values.length - 1) * sep.length;","status":"noncore-diff","id":1462,"createdAt":"2023-05-30T05:22:28.358Z"},{"fileName":"Clone840.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":28,"character":16},"text":"noncore-diff1","codeSnippet":"char [] joined = new char [totalSize];\n    int pos = 0;","status":"noncore-diff","id":1463,"createdAt":"2023-05-30T05:22:35.434Z"},{"fileName":"Clone840.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":42},"text":"noncore-diff2","codeSnippet":"StringBuffer sb = new StringBuffer ();","status":"noncore-diff","id":1464,"createdAt":"2023-05-30T05:22:42.513Z"},{"fileName":"Clone843.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":30,"character":44},"text":"noncore-sim1","codeSnippet":"StringBuilder sb = new StringBuilder ();","status":"noncore-sim","id":1465,"createdAt":"2023-05-30T05:24:54.681Z"},{"fileName":"Clone843.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":44},"text":"noncore-sim1","codeSnippet":"StringBuilder sb = new StringBuilder ();","status":"noncore-sim","id":1466,"createdAt":"2023-05-30T05:25:02.970Z"},{"fileName":"Clone843.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":26,"character":26},"text":"core-sim1","codeSnippet":"for (int i = 1;\n    i < size; i ++) {\n        current = nums [i];\n        expected = previous + 1;\n        if (current != expected) {\n            addRange (sb, rangeStart, previous);\n            rangeStart = current;\n        }\n        previous = current;\n    }\n    addRange (sb, rangeStart, nums [size - 1]);\n    return sb.toString ();","status":"core-sim","id":1467,"createdAt":"2023-05-30T05:25:42.071Z"},{"fileName":"Clone843.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":39,"character":28},"text":"core-sim1","codeSnippet":"for (int cur : nums) if (cur - end <= 1) end = cur;\n    else {\n        appendRange (sb, begin, end);\n        begin = end = cur;\n    }\n    appendRange (sb, begin, end);\n    return sb.substring (1);","status":"core-sim","id":1468,"createdAt":"2023-05-30T05:25:51.309Z"},{"fileName":"Clone843.java","fileLine":31,"positionStart":{"line":31,"character":3},"positionEnd":{"line":31,"character":48},"text":"core-diff1","codeSnippet":" if (nums.length == 0) return sb.toString ();","status":"core-diff","id":1469,"createdAt":"2023-05-30T05:26:03.003Z"},{"fileName":"Clone843.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":11,"character":28},"text":"noncore-sim2","codeSnippet":"int rangeStart = nums [0];\n    int previous = nums [0];","status":"noncore-sim","id":1470,"createdAt":"2023-05-30T05:26:11.837Z"},{"fileName":"Clone843.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":32,"character":41},"text":"noncore-sim2","codeSnippet":"int begin = nums [0], end = nums [0];","status":"noncore-sim","id":1471,"createdAt":"2023-05-30T05:26:20.690Z"},{"fileName":"Clone843.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":14,"character":27},"text":"noncore-diff1","codeSnippet":"int current;\n    int expected = previous + 1;\n    int size = nums.length;","status":"noncore-diff","id":1472,"createdAt":"2023-05-30T05:26:26.745Z"},{"fileName":"Clone844.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":37,"character":26},"text":"core-sim1","codeSnippet":"for (int i = 1;\n    i < nums.length; i ++) {\n        current = nums [i];\n        expected = previous + 1;\n        if (current != expected || i == (nums.length - 1)) {\n            if (current == rangeStart) {\n                sb.append (previous + \",\");\n            } else {\n                if (rangeStart != previous) {\n                    if (i == nums.length - 1) sb.append (rangeStart + \"-\" + current);\n                    else sb.append (rangeStart + \"-\" + previous + \",\");\n                } else {\n                    if (i == nums.length - 1) sb.append (rangeStart + \",\" + current);\n                    else sb.append (rangeStart + \",\");\n                }\n            }\n            rangeStart = current;\n        }\n        previous = current;\n    }\n    if (sb.charAt (sb.length () - 1) == ',') {\n        sb.deleteCharAt (sb.length () - 1);\n    }\n    return sb.toString ();","status":"core-sim","id":1473,"createdAt":"2023-05-30T06:02:53.712Z"},{"fileName":"Clone844.java","fileLine":44,"positionStart":{"line":44,"character":4},"positionEnd":{"line":50,"character":28},"text":"core-sim1","codeSnippet":"for (int cur : nums) if (cur - end <= 1) end = cur;\n    else {\n        appendRange (sb, begin, end);\n        begin = end = cur;\n    }\n    appendRange (sb, begin, end);\n    return sb.substring (1);","status":"core-sim","id":1474,"createdAt":"2023-05-30T06:03:13.785Z"},{"fileName":"Clone844.java","fileLine":42,"positionStart":{"line":42,"character":4},"positionEnd":{"line":42,"character":48},"text":"core-diff1","codeSnippet":"if (nums.length == 0) return sb.toString ();","status":"core-diff","id":1475,"createdAt":"2023-05-30T06:03:22.980Z"},{"fileName":"Clone844.java","fileLine":43,"positionStart":{"line":43,"character":4},"positionEnd":{"line":43,"character":41},"text":"noncore-sim1","codeSnippet":"int begin = nums [0], end = nums [0];","status":"noncore-sim","id":1476,"createdAt":"2023-05-30T06:03:32.235Z"},{"fileName":"Clone844.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":44},"text":"noncore-sim2","codeSnippet":"StringBuilder sb = new StringBuilder ();","status":"noncore-sim","id":1477,"createdAt":"2023-05-30T06:04:30.910Z"},{"fileName":"Clone844.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":11,"character":28},"text":"noncore-sim1","codeSnippet":"int rangeStart = nums [0];\n    int previous = nums [0];","status":"noncore-sim","id":1478,"createdAt":"2023-05-30T06:04:56.312Z"},{"fileName":"Clone844.java","fileLine":41,"positionStart":{"line":41,"character":4},"positionEnd":{"line":41,"character":44},"text":"noncore-sim1","codeSnippet":"StringBuilder sb = new StringBuilder ();","status":"noncore-sim","id":1479,"createdAt":"2023-05-30T06:05:03.326Z"},{"fileName":"Clone844.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":13,"character":32},"text":"noncore-diff1","codeSnippet":"int current;\n    int expected = previous + 1;","status":"noncore-diff","id":1480,"createdAt":"2023-05-30T06:05:11.551Z"},{"fileName":"Clone845.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":21,"character":5},"text":"core-sim1","codeSnippet":"int i = tGen ();\n    if (i >= 1 && i <= 5) {\n        int fastplod = 3;\n        return fastplod;\n    } else if (i >= 6 && i <= 8) {\n        int slowplod = 1;\n        return slowplod;\n    } else if (i >= 9 && i <= 10) {\n        int slip = - 6;\n        return slip;\n    } else {\n        return 0;\n    }","status":"core-sim","id":1481,"createdAt":"2023-05-30T06:10:59.022Z"},{"fileName":"Clone845.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":41,"character":5},"text":"core-sim1","codeSnippet":"switch (tGen ()) {\n        case 1 :\n        case 2 :\n        case 3 :\n        case 4 :\n        case 5 :\n            return 3;\n        case 6 :\n        case 7 :\n        case 8 :\n            return 1;\n        case 9 :\n        case 10 :\n            return - 6;\n        default :\n            return 0;\n    }","status":"core-sim","id":1482,"createdAt":"2023-05-30T06:11:05.051Z"},{"fileName":"Clone847.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":41},"text":"core-sim1","codeSnippet":"Scanner in = new Scanner (System.in);","status":"core-sim","id":1483,"createdAt":"2023-05-30T06:11:46.238Z"},{"fileName":"Clone847.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":44},"text":"core-sim1","codeSnippet":"Scanner input = new Scanner (System.in);","status":"core-sim","id":1484,"createdAt":"2023-05-30T06:12:23.065Z"},{"fileName":"Clone847.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":42},"text":"core-sim1","codeSnippet":"Scanner one = new Scanner (System.in);","status":"core-sim","id":1485,"createdAt":"2023-05-30T06:12:30.613Z"},{"fileName":"Clone847.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":37,"character":42},"text":"core-sim1","codeSnippet":"Scanner two = new Scanner (System.in);","status":"core-sim","id":1486,"createdAt":"2023-05-30T06:12:38.700Z"},{"fileName":"Clone847.java","fileLine":41,"positionStart":{"line":41,"character":4},"positionEnd":{"line":41,"character":44},"text":"core-sim1","codeSnippet":"Scanner three = new Scanner (System.in);","status":"core-sim","id":1487,"createdAt":"2023-05-30T06:12:45.135Z"},{"fileName":"Clone847.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":14,"character":23},"text":"core-sim2","codeSnippet":"s = in.nextLine ();","status":"core-sim","id":1488,"createdAt":"2023-05-30T06:12:53.302Z"},{"fileName":"Clone847.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":17,"character":22},"text":"core-sim2","codeSnippet":"a = in.nextInt ();","status":"core-sim","id":1489,"createdAt":"2023-05-30T06:13:02.954Z"},{"fileName":"Clone847.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":24},"text":"core-sim2","codeSnippet":"b = in.nextFloat ();","status":"core-sim","id":1490,"createdAt":"2023-05-30T06:13:09.550Z"},{"fileName":"Clone847.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":29,"character":31},"text":"core-sim2","codeSnippet":"String s = one.nextLine ();","status":"core-sim","id":1491,"createdAt":"2023-05-30T06:13:15.659Z"},{"fileName":"Clone847.java","fileLine":34,"positionStart":{"line":34,"character":8},"positionEnd":{"line":34,"character":28},"text":"core-sim2","codeSnippet":"s = one.nextLine ();","status":"core-sim","id":1492,"createdAt":"2023-05-30T06:13:23.231Z"},{"fileName":"Clone847.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":39,"character":27},"text":"core-sim2","codeSnippet":"int a = two.nextInt ();","status":"core-sim","id":1493,"createdAt":"2023-05-30T06:13:28.898Z"},{"fileName":"Clone847.java","fileLine":43,"positionStart":{"line":43,"character":4},"positionEnd":{"line":43,"character":35},"text":"core-sim2","codeSnippet":"String sex = three.nextLine ();","status":"core-sim","id":1494,"createdAt":"2023-05-30T06:13:34.370Z"},{"fileName":"Clone847.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":13},"text":"noncore-diff1","codeSnippet":"int a;\n    float b;\n    String s;","status":"noncore-diff","id":1495,"createdAt":"2023-05-30T06:14:30.618Z"},{"fileName":"Clone847.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":33,"character":45},"text":"core-diff1","codeSnippet":"if (s.length () < valid) {\n        System.out.println (\"Enter a valid username\");\n        System.out.println (\"User name must contain \" + valid + \" characters\");\n        System.out.println (\"Enter again: \");","status":"core-diff","id":1496,"createdAt":"2023-05-30T06:15:41.360Z"},{"fileName":"Clone847.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":28,"character":49},"text":"core-diff1","codeSnippet":"System.out.println (\"Enter your username: \");","status":"core-diff","id":1497,"createdAt":"2023-05-30T06:15:47.743Z"},{"fileName":"Clone847.java","fileLine":35,"positionStart":{"line":35,"character":4},"positionEnd":{"line":36,"character":51},"text":"core-diff1","codeSnippet":"}\n    System.out.println (\"Username accepted: \" + s);","status":"core-diff","id":1498,"createdAt":"2023-05-30T06:15:55.893Z"},{"fileName":"Clone847.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":38,"character":44},"text":"core-diff1","codeSnippet":"System.out.println (\"Enter your age: \");","status":"core-diff","id":1499,"createdAt":"2023-05-30T06:16:02.605Z"},{"fileName":"Clone847.java","fileLine":40,"positionStart":{"line":40,"character":4},"positionEnd":{"line":40,"character":46},"text":"core-diff1","codeSnippet":"System.out.println (\"Age accepted: \" + a);","status":"core-diff","id":1500,"createdAt":"2023-05-30T06:16:10.311Z"},{"fileName":"Clone847.java","fileLine":42,"positionStart":{"line":42,"character":4},"positionEnd":{"line":42,"character":44},"text":"core-diff1","codeSnippet":"System.out.println (\"Enter your sex: \");","status":"core-diff","id":1501,"createdAt":"2023-05-30T06:16:17.894Z"},{"fileName":"Clone847.java","fileLine":44,"positionStart":{"line":44,"character":4},"positionEnd":{"line":44,"character":48},"text":"core-diff1","codeSnippet":"System.out.println (\"Sex accepted: \" + sex);","status":"core-diff","id":1502,"createdAt":"2023-05-30T06:16:26.801Z"},{"fileName":"Clone847.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":13,"character":42},"text":"core-diff1","codeSnippet":"System.out.println (\"Enter a string\");","status":"core-diff","id":1503,"createdAt":"2023-05-30T06:16:37.012Z"},{"fileName":"Clone847.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":16,"character":44},"text":"core-diff1","codeSnippet":"System.out.println (\"You entered string \" + s);\n    System.out.println (\"Enter an integer\");","status":"core-diff","id":1504,"createdAt":"2023-05-30T06:16:43.258Z"},{"fileName":"Clone847.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":19,"character":41},"text":"core-diff1","codeSnippet":"System.out.println (\"You entered integer \" + a);\n    System.out.println (\"Enter a float\");","status":"core-diff","id":1505,"createdAt":"2023-05-30T06:16:49.990Z"},{"fileName":"Clone847.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":50},"text":"core-diff1","codeSnippet":"System.out.println (\"You entered float \" + b);","status":"core-diff","id":1506,"createdAt":"2023-05-30T06:16:58.310Z"},{"fileName":"Clone847.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":26,"character":24},"text":"noncore-diff1","codeSnippet":"final int valid = 6;","status":"noncore-diff","id":1507,"createdAt":"2023-05-30T06:17:05.671Z"},{"fileName":"Clone848.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":44},"text":"core-sim1","codeSnippet":"Scanner input = new Scanner (System.in);","status":"core-sim","id":1508,"createdAt":"2023-05-30T06:18:17.835Z"},{"fileName":"Clone848.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":38,"character":44},"text":"core-sim1","codeSnippet":"Scanner input = new Scanner (System.in);","status":"core-sim","id":1509,"createdAt":"2023-05-30T06:18:45.308Z"},{"fileName":"Clone848.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":18,"character":53},"text":"core-sim2","codeSnippet":"Scanner one = new Scanner (System.in);\n    System.out.println (\"Enter Name:\");\n    username = one.next ();\n    System.out.println (\"Name accepted \" + username);","status":"core-sim","id":1510,"createdAt":"2023-05-30T06:19:51.232Z"},{"fileName":"Clone848.java","fileLine":49,"positionStart":{"line":49,"character":4},"positionEnd":{"line":49,"character":51},"text":"core-sim2","codeSnippet":"System.out.println (\"Username accepted: \" + s);","status":"core-sim","id":1512,"createdAt":"2023-05-30T06:20:09.385Z"},{"fileName":"Clone848.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":22,"character":47},"text":"core-sim3","codeSnippet":"Scanner two = new Scanner (System.in);\n    System.out.println (\"Enter Age:\");\n    age = two.nextDouble ();\n    System.out.println (\"Age accepted \" + age);","status":"core-sim","id":1513,"createdAt":"2023-05-30T06:20:18.592Z"},{"fileName":"Clone848.java","fileLine":50,"positionStart":{"line":50,"character":4},"positionEnd":{"line":53,"character":46},"text":"core-sim3","codeSnippet":"Scanner two = new Scanner (System.in);\n    System.out.println (\"Enter your age: \");\n    int a = two.nextInt ();\n    System.out.println (\"Age accepted: \" + a);","status":"core-sim","id":1514,"createdAt":"2023-05-30T06:20:31.843Z"},{"fileName":"Clone848.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":26,"character":53},"text":"core-sim4","codeSnippet":"Scanner three = new Scanner (System.in);\n    System.out.println (\"Enter Gender:\");\n    gender = three.next ();\n    System.out.println (\"Gender accepted \" + gender);","status":"core-sim","id":1515,"createdAt":"2023-05-30T06:20:50.122Z"},{"fileName":"Clone848.java","fileLine":54,"positionStart":{"line":54,"character":4},"positionEnd":{"line":57,"character":48},"text":"core-sim4","codeSnippet":"Scanner three = new Scanner (System.in);\n    System.out.println (\"Enter your sex: \");\n    String sex = three.nextLine ();\n    System.out.println (\"Sex accepted: \" + sex);","status":"core-sim","id":1516,"createdAt":"2023-05-30T06:20:58.188Z"},{"fileName":"Clone848.java","fileLine":43,"positionStart":{"line":43,"character":4},"positionEnd":{"line":48,"character":5},"text":"core-diff1","codeSnippet":"if (s.length () < valid) {\n        System.out.println (\"Enter a valid username\");\n        System.out.println (\"User name must contain \" + valid + \" characters\");\n        System.out.println (\"Enter again: \");\n        s = one.nextLine ();\n    }","status":"core-diff","id":1517,"createdAt":"2023-05-30T06:21:06.047Z"},{"fileName":"Clone848.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":34,"character":73},"text":"core-diff2","codeSnippet":"Scanner four = new Scanner (System.in);\n    System.out.println (\"Enter Marital status:\");\n    marital_status = four.next ();\n    System.out.println (\"Marital status accepted \" + marital_status);\n    Scanner five = new Scanner (System.in);\n    System.out.println (\"Enter Telephone number:\");\n    telephone_number = five.nextInt ();\n    System.out.println (\"Telephone number accepted \" + telephone_number);","status":"core-diff","id":1518,"createdAt":"2023-05-30T06:21:13.719Z"},{"fileName":"Clone848.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":14,"character":25},"text":"noncore-diff1","codeSnippet":"String username;\n    double age;\n    String gender;\n    String marital_status;\n    int telephone_number;","status":"noncore-diff","id":1519,"createdAt":"2023-05-30T06:21:20.028Z"},{"fileName":"Clone848.java","fileLine":40,"positionStart":{"line":40,"character":4},"positionEnd":{"line":42,"character":31},"text":"core-sim2","codeSnippet":"Scanner one = new Scanner (System.in);\n    System.out.println (\"Enter your username: \");\n    String s = one.nextLine ();","status":"core-sim","id":1520,"createdAt":"2023-05-30T06:21:40.943Z"},{"fileName":"Clone848.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":39,"character":24},"text":"noncore-diff1","codeSnippet":"final int valid = 6;","status":"noncore-diff","id":1521,"createdAt":"2023-05-30T06:21:47.035Z"},{"fileName":"Clone854.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":14,"character":45},"text":"core-diff1","codeSnippet":"WSObject wsObject = new WSObject (new Foo (new Bar (new Baz (241))));\n    WSObject wsObjectNull = new WSObject (new Foo (null));\n    GetterResult < Integer > intResult = getterChain (wsObject, WSObject :: getFoo, Foo :: getBar, Bar :: getBar, Baz :: getInt);\n    GetterResult < Integer > intResult2 = getterChain (wsObjectNull, WSObject :: getFoo, Foo :: getBar, Bar :: getBar, Baz :: getInt);\n    System.out.println (intResult.result);\n    System.out.println (intResult.lastIndex);","status":"core-diff","id":1522,"createdAt":"2023-05-30T06:23:09.615Z"},{"fileName":"Clone854.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":17,"character":46},"text":"core-diff1","codeSnippet":"System.out.println (intResult2.result);\n    System.out.println (intResult2.lastIndex);","status":"core-diff","id":1523,"createdAt":"2023-05-30T06:23:22.684Z"},{"fileName":"Clone854.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":49,"character":57},"text":"core-diff2","codeSnippet":"Address address = new Address ();\n    address.setSomeCrap (null);\n    Person person = new Person ();\n    person.setAddress (address);\n    long startTime = System.currentTimeMillis ();\n    for (int i = 0;\n    i < 1000000; i ++) {\n        try {\n            System.out.println (person.getAddress ().getSomeCrap ().getCrap ());\n        } catch (NullPointerException npe) {\n        }\n    }\n    long endTime = System.currentTimeMillis ();\n    System.out.println ((endTime - startTime) / 1000F);\n    long startTime1 = System.currentTimeMillis ();\n    for (int i = 0;\n    i < 1000000; i ++) {\n        if (person != null) {\n            Address address1 = person.getAddress ();\n            if (address1 != null) {\n                SomeCrap someCrap2 = address1.getSomeCrap ();\n                if (someCrap2 != null) {\n                    System.out.println (someCrap2.getCrap ());\n                }\n            }\n        }\n    }\n    long endTime1 = System.currentTimeMillis ();\n    System.out.println ((endTime1 - startTime1) / 1000F);","status":"core-diff","id":1524,"createdAt":"2023-05-30T06:23:51.541Z"},{"fileName":"Clone854.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":15,"character":26},"text":"noncore-diff1","codeSnippet":"System.out.println ();","status":"noncore-diff","id":1525,"createdAt":"2023-05-30T06:24:00.249Z"},{"fileName":"Clone858.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":13,"character":50},"text":"core-sim1","codeSnippet":"if (low > high) return - 1;\n    int mid = (low + high) / 2;\n    if (a [mid] == x) return mid;\n    else if (a [mid] < x) return binarySearch (a, x, mid + 1, high);\n    else return binarySearch (a, x, low, mid - 1);","status":"core-sim","id":1527,"createdAt":"2023-05-30T06:25:00.721Z"},{"fileName":"Clone858.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":25,"character":15},"text":"core-sim1","codeSnippet":"int upper = sortedArray.length - 1;\n    while (lower <= upper) {\n        int mid = lower + (upper - lower) / 2;\n        if (intToSearch < sortedArray [mid]) upper = mid - 1;\n        else if (intToSearch > sortedArray [mid]) lower = mid + 1;\n        else return mid;\n    }\n    return - 1;","status":"core-sim","id":1528,"createdAt":"2023-05-30T06:25:17.006Z"},{"fileName":"Clone858.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":17,"character":18},"text":"noncore-diff1","codeSnippet":"int lower = 0;","status":"noncore-diff","id":1529,"createdAt":"2023-05-30T06:25:24.607Z"},{"fileName":"Clone861.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":47},"text":"noncore-sim1","codeSnippet":"System.out.println (\"Type in any integer\");","status":"noncore-sim","id":1530,"createdAt":"2023-05-30T06:30:06.280Z"},{"fileName":"Clone861.java","fileLine":30,"positionStart":{"line":30,"character":8},"positionEnd":{"line":30,"character":52},"text":"noncore-sim1","codeSnippet":"System.out.println (\"Type in any integer:\");","status":"noncore-sim","id":1531,"createdAt":"2023-05-30T06:30:16.492Z"},{"fileName":"Clone861.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":48},"text":"core-sim1","codeSnippet":"Scanner inputChar = new Scanner (System.in);","status":"core-sim","id":1532,"createdAt":"2023-05-30T06:30:26.241Z"},{"fileName":"Clone861.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":48},"text":"core-sim1","codeSnippet":"Scanner inputChar = new Scanner (System.in);","status":"core-sim","id":1533,"createdAt":"2023-05-30T06:30:34.006Z"},{"fileName":"Clone861.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":10},"text":"noncore-sim2","codeSnippet":"int i;","status":"noncore-sim","id":1534,"createdAt":"2023-05-30T06:30:43.520Z"},{"fileName":"Clone861.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":28,"character":10},"text":"noncore-sim2","codeSnippet":"int i;","status":"noncore-sim","id":1535,"createdAt":"2023-05-30T06:30:55.486Z"},{"fileName":"Clone861.java","fileLine":31,"positionStart":{"line":31,"character":8},"positionEnd":{"line":32,"character":48},"text":"core-sim2","codeSnippet":"if (! inputChar.hasNextInt ()) {\n            System.out.println (\"Not a number\");","status":"core-sim","id":1536,"createdAt":"2023-05-30T06:31:47.650Z"},{"fileName":"Clone861.java","fileLine":34,"positionStart":{"line":34,"character":8},"positionEnd":{"line":34,"character":9},"text":"core-sim2","codeSnippet":"}","status":"core-sim","id":1537,"createdAt":"2023-05-30T06:31:58.757Z"},{"fileName":"Clone861.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":71},"text":"core-sim2","codeSnippet":"if (! inputChar.hasNextInt ()) System.out.println (\"Not a number\");","status":"core-sim","id":1538,"createdAt":"2023-05-30T06:33:26.303Z"},{"fileName":"Clone861.java","fileLine":34,"positionStart":{"line":34,"character":10},"positionEnd":{"line":45,"character":9},"text":"core-sim3","codeSnippet":"else {\n            i = inputChar.nextInt ();\n            if (i != 0) {\n                if (i % 2 == 0) System.out.println (i + \" is even\");\n                else {\n                    System.out.println (i + \" is odd\");\n                }\n            } else {\n                System.out.println (\"Zeros are not allowed, bye!\");\n                break;\n            }\n        }","status":"core-sim","id":1539,"createdAt":"2023-05-30T06:33:33.886Z"},{"fileName":"Clone861.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":23,"character":5},"text":"core-sim3","codeSnippet":"else {\n        i = inputChar.nextInt ();\n        if (i != 0) {\n            if (i % 2 == 0) System.out.println (i + \" is even\");\n            else {\n                System.out.println (i + \" is odd\");\n            }\n        } else {\n            System.out.println (\"Zeros are not allowed, bye!\");\n        }\n    }","status":"core-sim","id":1540,"createdAt":"2023-05-30T06:33:45.578Z"},{"fileName":"Clone861.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":29,"character":18},"text":"core-diff1","codeSnippet":"while (true) {","status":"core-diff","id":1541,"createdAt":"2023-05-30T06:33:57.089Z"},{"fileName":"Clone861.java","fileLine":33,"positionStart":{"line":33,"character":12},"positionEnd":{"line":33,"character":30},"text":"core-diff1","codeSnippet":"inputChar.next ();","status":"core-diff","id":1542,"createdAt":"2023-05-30T06:34:03.438Z"},{"fileName":"Clone861.java","fileLine":46,"positionStart":{"line":46,"character":4},"positionEnd":{"line":46,"character":5},"text":"core-diff1","codeSnippet":"}","status":"core-diff","id":1543,"createdAt":"2023-05-30T06:34:08.911Z"},{"fileName":"Clone864.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":52,"character":13},"text":"core-diff1","codeSnippet":"LayoutInflater vi = (LayoutInflater) getSystemService (Context.LAYOUT_INFLATER_SERVICE);\n    v = vi.inflate (R.layout.row_layout, null);\n    final x obj = items.get (position);\n    TextView txt_name = (TextView) v.findViewById (R.id.txt_name);\n    CheckBox checkBox1 = (CheckBox) findViewById (R.id.checkBox1);\n    if (checkBox1.isChecked ()) {\n        new_al.add (x_list.get (position));\n    }\n    btn_clear.setOnItemClickListener (new Listener () {\n        public void onClick (View v) {\n            x_list.clear ();\n            x_list.add (new_al);\n        }}\n    );\n    notifyDataSetChanged ();\n    return v;","status":"core-diff","id":1544,"createdAt":"2023-05-30T06:35:48.754Z"},{"fileName":"Clone864.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":32,"character":23},"text":"core-diff1","codeSnippet":"if (convertView == null) {\n        holder = new ViewHolder ();\n        convertView = inflater.inflate (R.layout.row1, null);\n        holder.checkbox = (CheckBox) convertView.findViewById (R.id.add_food_item);\n        convertView.setTag (holder);\n    } else {\n        holder = (ViewHolder) convertView.getTag ();\n    }\n    final ItemInList element = list.get (position);\n    holder.checkbox.setChecked (element.isSelected ());\n    holder.checkbox.setOnCheckedChangeListener (new CompoundButton.OnCheckedChangeListener () {\n        @Override\n        public void onCheckedChanged (CompoundButton buttonView, boolean isChecked) {\n            element.setSelected (buttonView.isChecked ());\n            if (element.isSelected ()) {\n                array.add (element.getName ());\n            } else {\n                if (position < array.size ()) array.remove (position);\n            }\n        }}\n    );\n    return convertView;","status":"core-diff","id":1545,"createdAt":"2023-05-30T06:36:14.916Z"},{"fileName":"Clone864.java","fileLine":10,"positionStart":{"line":10,"character":3},"positionEnd":{"line":10,"character":28},"text":"noncore-diff1","codeSnippet":" final ViewHolder holder;","status":"noncore-diff","id":1546,"createdAt":"2023-05-30T06:36:27.939Z"},{"fileName":"Clone864.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":36,"character":25},"text":"noncore-diff1","codeSnippet":"View v = convertview;","status":"noncore-diff","id":1547,"createdAt":"2023-05-30T06:36:35.574Z"},{"fileName":"Clone867.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":25},"text":"core-sim1","codeSnippet":"synchronized (this) {","status":"core-sim","id":1548,"createdAt":"2023-05-30T06:37:52.328Z"},{"fileName":"Clone867.java","fileLine":29,"positionStart":{"line":29,"character":8},"positionEnd":{"line":29,"character":27},"text":"core-sim1","codeSnippet":"map.put (key, val);","status":"core-sim","id":1549,"createdAt":"2023-05-30T06:37:59.513Z"},{"fileName":"Clone867.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":31,"character":5},"text":"core-sim1","codeSnippet":"}","status":"core-sim","id":1550,"createdAt":"2023-05-30T06:38:08.949Z"},{"fileName":"Clone867.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":39},"text":"core-sim1","codeSnippet":"readWriteLock.writeLock ().lock ();","status":"core-sim","id":1551,"createdAt":"2023-05-30T06:38:15.907Z"},{"fileName":"Clone867.java","fileLine":12,"positionStart":{"line":12,"character":8},"positionEnd":{"line":12,"character":37},"text":"core-sim1","codeSnippet":"old = super.put (key, value);","status":"core-sim","id":1552,"createdAt":"2023-05-30T06:38:23.108Z"},{"fileName":"Clone867.java","fileLine":14,"positionStart":{"line":14,"character":8},"positionEnd":{"line":14,"character":45},"text":"core-sim1","codeSnippet":"readWriteLock.writeLock ().unlock ();","status":"core-sim","id":1553,"createdAt":"2023-05-30T06:38:29.485Z"},{"fileName":"Clone867.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":11,"character":9},"text":"noncore-diff1","codeSnippet":"V old;\n    try {","status":"noncore-diff","id":1554,"createdAt":"2023-05-30T06:38:37.158Z"},{"fileName":"Clone867.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":13,"character":15},"text":"noncore-diff1","codeSnippet":"} finally {","status":"noncore-diff","id":1555,"createdAt":"2023-05-30T06:38:47.637Z"},{"fileName":"Clone867.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":16,"character":15},"text":"noncore-diff1","codeSnippet":"}\n    return old;","status":"noncore-diff","id":1556,"createdAt":"2023-05-30T06:38:58.529Z"},{"fileName":"Clone867.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":26,"character":5},"text":"core-diff1","codeSnippet":"if (map.containsKey (key)) {\n        put (key, val);\n        return;\n    }\n    while (currentSize >= maxSize) {\n        freeSpace ();\n    }","status":"core-diff","id":1558,"createdAt":"2023-05-30T06:39:17.760Z"},{"fileName":"Clone867.java","fileLine":28,"positionStart":{"line":28,"character":8},"positionEnd":{"line":28,"character":24},"text":"core-diff1","codeSnippet":"queue.add (key);","status":"core-diff","id":1559,"createdAt":"2023-05-30T06:39:26.736Z"},{"fileName":"Clone867.java","fileLine":30,"positionStart":{"line":30,"character":8},"positionEnd":{"line":30,"character":23},"text":"core-diff1","codeSnippet":"currentSize ++;","status":"core-diff","id":1560,"createdAt":"2023-05-30T06:39:41.144Z"},{"fileName":"Clone868.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":39},"text":"core-sim1","codeSnippet":"readWriteLock.writeLock ().lock ();","status":"core-sim","id":1561,"createdAt":"2023-05-30T06:40:02.562Z"},{"fileName":"Clone868.java","fileLine":12,"positionStart":{"line":12,"character":8},"positionEnd":{"line":12,"character":35},"text":"core-sim1","codeSnippet":"value = super.remove (key);","status":"core-sim","id":1562,"createdAt":"2023-05-30T06:42:34.299Z"},{"fileName":"Clone868.java","fileLine":14,"positionStart":{"line":14,"character":8},"positionEnd":{"line":14,"character":45},"text":"core-sim1","codeSnippet":"readWriteLock.writeLock ().unlock ();","status":"core-sim","id":1563,"createdAt":"2023-05-30T06:42:47.158Z"},{"fileName":"Clone868.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":21,"character":46},"text":"core-sim1","codeSnippet":"synchronized (lock) {\n        Item < VV > item = cache.remove (key);","status":"core-sim","id":1564,"createdAt":"2023-05-30T06:42:56.054Z"},{"fileName":"Clone868.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":5},"text":"core-sim1","codeSnippet":"}","status":"core-sim","id":1565,"createdAt":"2023-05-30T06:43:08.371Z"},{"fileName":"Clone868.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":11,"character":9},"text":"noncore-diff1","codeSnippet":"V value;\n    try {","status":"noncore-diff","id":1566,"createdAt":"2023-05-30T06:43:15.760Z"},{"fileName":"Clone868.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":13,"character":15},"text":"noncore-diff1","codeSnippet":"} finally {","status":"noncore-diff","id":1567,"createdAt":"2023-05-30T06:43:26.589Z"},{"fileName":"Clone868.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":15,"character":5},"text":"noncore-diff1","codeSnippet":"}","status":"noncore-diff","id":1570,"createdAt":"2023-05-30T06:43:58.010Z"},{"fileName":"Clone868.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":16,"character":17},"text":"core-sim2","codeSnippet":"return value;","status":"core-sim","id":1571,"createdAt":"2023-05-30T06:44:06.341Z"},{"fileName":"Clone868.java","fileLine":22,"positionStart":{"line":22,"character":8},"positionEnd":{"line":26,"character":9},"text":"core-sim2","codeSnippet":"if (item != null) {\n            return item.payload;\n        } else {\n            return null;\n        }","status":"core-sim","id":1572,"createdAt":"2023-05-30T06:44:20.147Z"},{"fileName":"Clone869.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":29,"character":15},"text":"core-diff1","codeSnippet":"if (head == null) return null;\n    K val = head.value;\n    if (head.next == null) {\n        head = null;\n        tail = null;\n    } else {\n        head = head.next;\n        head.prev = null;\n    }\n    return val;","status":"core-diff","id":1573,"createdAt":"2023-05-30T06:44:50.968Z"},{"fileName":"Clone869.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":39},"text":"core-diff2","codeSnippet":"readWriteLock.writeLock ().lock ();","status":"core-diff","id":1574,"createdAt":"2023-05-30T06:45:05.469Z"},{"fileName":"Clone869.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":16,"character":17},"text":"core-diff2","codeSnippet":"try {\n        value = super.remove (key);\n    } finally {\n        readWriteLock.writeLock ().unlock ();\n    }\n    return value;","status":"core-diff","id":1575,"createdAt":"2023-05-30T06:45:18.029Z"},{"fileName":"Clone869.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":12},"text":"noncore-diff1","codeSnippet":"V value;","status":"noncore-diff","id":1576,"createdAt":"2023-05-30T06:45:25.563Z"},{"fileName":"Clone873.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":44},"text":"noncore-sim1","codeSnippet":"String pass = \"admin\";\n    Scanner input = new Scanner (System.in);","status":"noncore-sim","id":1577,"createdAt":"2023-05-30T06:52:10.766Z"},{"fileName":"Clone873.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":26,"character":44},"text":"noncore-sim1","codeSnippet":"String pass = \"admin\";\n    Scanner input = new Scanner (System.in);","status":"noncore-sim","id":1578,"createdAt":"2023-05-30T06:52:26.929Z"},{"fileName":"Clone873.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":21,"character":5},"text":"core-sim1","codeSnippet":"for (int i = 0;\n    i < 3; i ++) {\n        System.out.print (\"Insert the admin pass: \");\n        String test = input.nextLine ();\n        if (pass.equals (test)) {\n            System.out.print (\"Access granted\");\n            i = 3;\n        } else {\n            System.out.println (\"Incorrect password, you have \" + (2 - i) + \" attempts remaining\");\n        }\n    }","status":"core-sim","id":1579,"createdAt":"2023-05-30T06:52:49.302Z"},{"fileName":"Clone873.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":43,"character":5},"text":"core-sim1","codeSnippet":"System.out.print (\"Insert the admin pass: \");\n    String test = input.nextLine ();\n    if (pass.equals (test)) {\n        System.out.print (\"Access granted\");\n    } else {\n        for (int i = 1;\n        i < 3; i ++) {\n            System.out.print (\"You have \" + i + \" try(es): \");\n            test = input.nextLine ();\n            if (pass.equals (test)) {\n                System.out.print (\"Access granted\");\n                break;\n            } else if (i == 2) {\n                System.out.print (\"Access denied\");\n            }\n        }\n    }","status":"core-sim","id":1580,"createdAt":"2023-05-30T06:53:02.174Z"},{"fileName":"Clone875.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":35,"character":32},"text":"noncore-sim1","codeSnippet":"int max = 100;\n    int min = 1;\n    Random rand = new Random ();","status":"noncore-sim","id":1581,"createdAt":"2023-05-30T06:54:06.542Z"},{"fileName":"Clone875.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":16},"text":"noncore-sim1","codeSnippet":"int max = 100;\n    int min = 1;","status":"noncore-sim","id":1582,"createdAt":"2023-05-30T06:55:55.305Z"},{"fileName":"Clone875.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":32},"text":"noncore-sim1","codeSnippet":"Random rand = new Random ();","status":"noncore-sim","id":1583,"createdAt":"2023-05-30T06:56:04.710Z"},{"fileName":"Clone875.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":29,"character":5},"text":"core-sim1","codeSnippet":"for (int x = 0;\n    x < 20; x ++) {\n        duplicate = false;\n        int randomNum = rand.nextInt ((max - min) + 1) + min;\n        for (int i : all) {\n            if (i == randomNum) {\n                duplicate = true;\n                break;\n            }\n        }\n        if (duplicate) {\n            x --;\n        } else {\n            all [x] = randomNum;\n        }\n    }","status":"core-sim","id":1584,"createdAt":"2023-05-30T06:56:27.103Z"},{"fileName":"Clone875.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":51,"character":5},"text":"core-sim1","codeSnippet":"while (index < 20) {\n        boolean duplicate = false;\n        int randomNum = rand.nextInt ((max - min) + 1) + min;\n        for (int i = 0;\n        i < all.length; i ++) {\n            if (all [i] == randomNum) {\n                duplicate = true;\n                break;\n            }\n        }\n        if (! duplicate) {\n            all [index ++] = randomNum;\n        }\n    }","status":"core-sim","id":1585,"createdAt":"2023-05-30T06:56:39.117Z"},{"fileName":"Clone875.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":37,"character":30},"text":"noncore-sim2","codeSnippet":"int [] all = new int [20];","status":"noncore-sim","id":1586,"createdAt":"2023-05-30T06:56:44.649Z"},{"fileName":"Clone875.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":13,"character":30},"text":"noncore-sim2","codeSnippet":"int [] all = new int [20];","status":"noncore-sim","id":1587,"createdAt":"2023-05-30T06:56:55.446Z"},{"fileName":"Clone875.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":30},"text":"noncore-diff1","codeSnippet":"boolean duplicate = false;","status":"noncore-diff","id":1588,"createdAt":"2023-05-30T06:57:06.883Z"},{"fileName":"Clone875.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":36,"character":18},"text":"noncore-diff2","codeSnippet":"int index = 0;","status":"noncore-diff","id":1589,"createdAt":"2023-05-30T06:57:14.440Z"},{"fileName":"Clone877.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":42,"character":14},"text":"core-diff1","codeSnippet":"switch (requestCode) {\n        case REQUEST_ID_MULTIPLE_PERMISSIONS :\n            {\n                Map < String, Integer > perms = new HashMap < > ();\n                perms.put (Manifest.permission.SEND_SMS, PackageManager.PERMISSION_GRANTED);\n                perms.put (Manifest.permission.ACCESS_FINE_LOCATION, PackageManager.PERMISSION_GRANTED);\n                if (grantResults.length > 0) {\n                    for (int i = 0;\n                    i < permissions.length; i ++) perms.put (permissions [i], grantResults [i]);\n                    if (perms.get (Manifest.permission.SEND_SMS) == PackageManager.PERMISSION_GRANTED && perms.get (Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\n                        Log.d (TAG, \"sms & location services permission granted\");\n                    } else {\n                        Log.d (TAG, \"Some permissions are not granted ask again \");\n                        if (ActivityCompat.shouldShowRequestPermissionRationale (this, Manifest.permission.SEND_SMS) || ActivityCompat.shouldShowRequestPermissionRationale (this, Manifest.permission.ACCESS_FINE_LOCATION)) {\n                            showDialogOK (\"SMS and Location Services Permission required for this app\", new DialogInterface.OnClickListener () {\n                                @Override\n                                public void onClick (DialogInterface dialog, int which) {\n                                    switch (which) {\n                                        case DialogInterface.BUTTON_POSITIVE :\n                                            checkAndRequestPermissions ();\n                                            break;\n                                        case DialogInterface.BUTTON_NEGATIVE :\n                                            break;\n                                    }\n                                }}\n                            );\n                        } else {\n                            Toast.makeText (this, \"Go to settings and enable permissions\", Toast.LENGTH_LONG).show ();\n                        }\n                    }\n                }\n            }}","status":"core-diff","id":1590,"createdAt":"2023-05-30T07:00:11.960Z"},{"fileName":"Clone877.java","fileLine":48,"positionStart":{"line":48,"character":4},"positionEnd":{"line":60,"character":5},"text":"core-diff2","codeSnippet":"if (requestCode == mRequestCode) {\n        if (grantResults.length > 0) {\n            for (int grantResult : grantResults) {\n                if (grantResult != PackageManager.PERMISSION_GRANTED) {\n                    mRequestPermissionListener.onFailed ();\n                    return;\n                }\n            }\n            mRequestPermissionListener.onSuccess ();\n        } else {\n            mRequestPermissionListener.onFailed ();\n        }\n    }","status":"core-diff","id":1591,"createdAt":"2023-05-30T07:00:20.661Z"},{"fileName":"Clone877.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":53},"text":"noncore-diff1","codeSnippet":"Log.d (TAG, \"Permission callback called-------\");","status":"noncore-diff","id":1592,"createdAt":"2023-05-30T07:03:46.712Z"},{"fileName":"Clone880.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":14,"character":5},"text":"core-diff1","codeSnippet":"super.onRequestPermissionsResult (requestCode, permissions, grantResults);\n    if (grantResults.length == 0 || grantResults == null) {\n    } else if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n    } else if (grantResults [0] == PackageManager.PERMISSION_DENIED) {\n    }","status":"core-diff","id":1593,"createdAt":"2023-05-30T07:04:30.481Z"},{"fileName":"Clone880.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":32,"character":5},"text":"core-diff2","codeSnippet":"if (requestCode == mRequestCode) {\n        if (grantResults.length > 0) {\n            for (int grantResult : grantResults) {\n                if (grantResult != PackageManager.PERMISSION_GRANTED) {\n                    mRequestPermissionListener.onFailed ();\n                    return;\n                }\n            }\n            mRequestPermissionListener.onSuccess ();\n        } else {\n            mRequestPermissionListener.onFailed ();\n        }\n    }","status":"core-diff","id":1594,"createdAt":"2023-05-30T07:04:40.992Z"},{"fileName":"Clone882.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":57,"character":14},"text":"core-sim1","codeSnippet":"super.onRequestPermissionsResult (requestCode, permissions, grantResults);\n    switch (requestCode) {\n        case REQUEST_READ_PHONE_STATE :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to get your phone state. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            } case REQUEST_ACCESS_FINE_LOCATION :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to get your location. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            } case REQUEST_WRITE_STORAGE :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to write to your storage. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            }}","status":"core-sim","id":1595,"createdAt":"2023-05-30T07:05:49.749Z"},{"fileName":"Clone882.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":23,"character":5},"text":"core-sim1","codeSnippet":"if (requestCode == mRequestCode) {\n        if (grantResults.length > 0) {\n            for (int grantResult : grantResults) {\n                if (grantResult != PackageManager.PERMISSION_GRANTED) {\n                    mRequestPermissionListener.onFailed ();\n                    return;\n                }\n            }\n            mRequestPermissionListener.onSuccess ();\n        } else {\n            mRequestPermissionListener.onFailed ();\n        }\n    }","status":"core-sim","id":1596,"createdAt":"2023-05-30T07:06:01.842Z"},{"fileName":"Clone887.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":24},"text":"noncore-sim1","codeSnippet":"String s1 = \"a b c\";","status":"noncore-sim","id":1597,"createdAt":"2023-05-30T07:06:58.835Z"},{"fileName":"Clone887.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":26},"text":"noncore-sim1","codeSnippet":"String word = \"a b c\";","status":"noncore-sim","id":1598,"createdAt":"2023-05-30T07:10:45.930Z"},{"fileName":"Clone887.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":13,"character":33},"text":"core-sim1","codeSnippet":"String s2 = s1.replace (\" \", \"\");\n    int s2_length = s2.length ();","status":"core-sim","id":1599,"createdAt":"2023-05-30T07:10:56.810Z"},{"fileName":"Clone887.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":26,"character":5},"text":"core-sim1","codeSnippet":"while (i < word.length ()) {\n        if (word.charAt (i) == ' ') {\n            spaceCount ++;\n        }\n        i ++;\n    }","status":"core-sim","id":1600,"createdAt":"2023-05-30T07:11:03.638Z"},{"fileName":"Clone887.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":15,"character":69},"text":"core-sim2","codeSnippet":"System.out.println (\"No of spaces = \" + (s1_length - s2_length));","status":"core-sim","id":1602,"createdAt":"2023-05-30T07:11:22.549Z"},{"fileName":"Clone887.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":59},"text":"core-sim2","codeSnippet":"System.out.println (\"Spaces in string: \" + spaceCount);","status":"core-sim","id":1603,"createdAt":"2023-05-30T07:11:33.791Z"},{"fileName":"Clone887.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":11,"character":35},"text":"noncore-diff1","codeSnippet":"int s1_length = s1.length ();\n    System.out.println (s1_length);","status":"noncore-diff","id":1604,"createdAt":"2023-05-30T07:11:40.024Z"},{"fileName":"Clone887.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":14,"character":35},"text":"noncore-diff1","codeSnippet":"System.out.println (s2_length);","status":"noncore-diff","id":1605,"createdAt":"2023-05-30T07:11:46.573Z"},{"fileName":"Clone887.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":30},"text":"noncore-diff2","codeSnippet":"int i = 0, spaceCount = 0;","status":"noncore-diff","id":1606,"createdAt":"2023-05-30T07:11:52.318Z"},{"fileName":"Clone888.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":34,"character":5},"text":"core-diff1","codeSnippet":"final SSHClient ssh = new SSHClient ();\n    ssh.loadKnownHosts ();\n    ssh.connect (\"localhost\");\n    try {\n        ssh.authPublickey (System.getProperty (\"user.name\"));\n        final String src = System.getProperty (\"user.home\") + File.separator + \"test_file\";\n        final SFTPClient sftp = ssh.newSFTPClient ();\n        try {\n            sftp.put (new FileSystemFile (src), \"/tmp\");\n        } finally {\n            sftp.close ();\n        }\n    } finally {\n        ssh.disconnect ();\n    }","status":"core-diff","id":1607,"createdAt":"2023-05-30T07:13:14.243Z"},{"fileName":"Clone888.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":16,"character":53},"text":"core-diff2","codeSnippet":"SendMyFiles sendMyFiles = new SendMyFiles ();\n    if (args.length < 1) {\n        System.err.println (\"Usage: java \" + sendMyFiles.getClass ().getName () + \" Properties_file File_To_FTP \");\n        System.exit (1);\n    }\n    String propertiesFile = args [0].trim ();\n    String fileToFTP = args [1].trim ();\n    sendMyFiles.startFTP (propertiesFile, fileToFTP);","status":"core-diff","id":1608,"createdAt":"2023-05-30T07:13:25.273Z"},{"fileName":"Clone892.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":38,"character":25},"text":"noncore-sim1","codeSnippet":"primaryStage.show ();","status":"noncore-sim","id":1609,"createdAt":"2023-05-30T07:14:02.888Z"},{"fileName":"Clone892.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":18},"text":"noncore-sim1","codeSnippet":"stage.show ();","status":"noncore-sim","id":1610,"createdAt":"2023-05-30T07:14:10.408Z"},{"fileName":"Clone892.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":15,"character":27},"text":"noncore-sim2","codeSnippet":"Scene scene = new Scene (shadowPane);\n    stage.setScene (scene);","status":"noncore-sim","id":1611,"createdAt":"2023-05-30T07:14:33.586Z"},{"fileName":"Clone892.java","fileLine":36,"positionStart":{"line":36,"character":4},"positionEnd":{"line":37,"character":48},"text":"noncore-sim2","codeSnippet":"primaryStage.setTitle (\"Modal Confirm Example\");\n    primaryStage.setScene (new Scene (webView));","status":"noncore-sim","id":1612,"createdAt":"2023-05-30T07:14:40.859Z"},{"fileName":"Clone892.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":35,"character":65},"text":"core-diff1","codeSnippet":"final WebView webView = new WebView ();\n    final ModalDialog dialog = createWebViewPreferenceDialog (primaryStage, webView);\n    webView.getEngine ().getLoadWorker ().stateProperty ().addListener (new ChangeListener < Worker.State > () {\n        @Override\n        public void changed (ObservableValue < ? extends Worker.State > observableValue, Worker.State state, Worker.State newState) {\n            if (newState.equals (Worker.State.SUCCEEDED)) {\n                dialog.show ();\n                dialog.toFront ();\n            }\n        }}\n    );\n    webView.getEngine ().load (\"http://docs.oracle.com/javafx/\");","status":"core-diff","id":1613,"createdAt":"2023-05-30T07:14:49.383Z"},{"fileName":"Clone892.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":19,"character":45},"text":"core-diff2","codeSnippet":"shadowPane.setBorder (new Border (new BorderStroke (Color.RED, BorderStrokeStyle.SOLID, null, null)));\n    shadowPane.setStyle (\"-fx-background-color: transparent;\");\n    scene.setFill (Color.TRANSPARENT);\n    stage.initStyle (StageStyle.TRANSPARENT);","status":"core-diff","id":1614,"createdAt":"2023-05-30T07:14:58.327Z"},{"fileName":"Clone892.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":13,"character":132},"text":"core-diff2","codeSnippet":"FXMLLoader loader = new FXMLLoader (getClass ().getResource (\"/sample/screen.fxml\"));\n    AnchorPane shadowPane = loader.load ();\n    AnchorPane rootPane = (AnchorPane) shadowPane.lookup (\"#rootPane\");\n    rootPane.setStyle (\"-fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.4), 10, 0.5, 0.0, 0.0);\" + \"-fx-background-color: white;\");","status":"core-diff","id":1615,"createdAt":"2023-05-30T07:15:07.812Z"},{"fileName":"Clone895.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":17,"character":5},"text":"core-diff1","codeSnippet":"ServerModule serverModule = new ServerModule (latch);\n    serverModule.start ();\n    try {\n        latch.await ();\n    } catch (InterruptedException e) {\n        e.printStackTrace ();\n    }","status":"core-diff","id":1616,"createdAt":"2023-05-30T07:15:40.945Z"},{"fileName":"Clone895.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":28,"character":7},"text":"core-diff2","codeSnippet":"Thread t = new Thread (() -> {\n        try {\n            Thread.sleep (5000L);\n        } catch (InterruptedException e) {\n            e.printStackTrace ();\n        }\n    });","status":"core-diff","id":1617,"createdAt":"2023-05-30T07:15:49.848Z"},{"fileName":"Clone895.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":31,"character":14},"text":"core-diff2","codeSnippet":"t.start ();\n    t.join ();","status":"core-diff","id":1618,"createdAt":"2023-05-30T07:16:01.457Z"},{"fileName":"Clone895.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":29,"character":44},"text":"noncore-sim1","codeSnippet":"System.out.println (\"Starting Server!\");","status":"noncore-sim","id":1619,"createdAt":"2023-05-30T07:16:14.555Z"},{"fileName":"Clone895.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":50},"text":"noncore-diff3","codeSnippet":"CountDownLatch latch = new CountDownLatch (1);","status":"noncore-diff","id":1623,"createdAt":"2023-05-30T07:16:41.726Z"},{"fileName":"Clone895.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":32,"character":43},"text":"noncore-sim2","codeSnippet":"System.out.println (\"Server is done!\");","status":"noncore-sim","id":1624,"createdAt":"2023-05-30T07:17:00.823Z"},{"fileName":"Clone895.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":40},"text":"noncore-sim1","codeSnippet":"System.out.println (\"Start server\");","status":"noncore-sim","id":1625,"createdAt":"2023-05-30T07:17:12.617Z"},{"fileName":"Clone895.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":18,"character":42},"text":"noncore-sim2","codeSnippet":"System.out.println (\"Server is done\");","status":"noncore-sim","id":1626,"createdAt":"2023-05-30T07:17:30.720Z"},{"fileName":"Clone898.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":24,"character":21},"text":"core-sim1","codeSnippet":"while (start <= end) {\n        int mid = start + (end - start) / 2;\n        if (mid == x / mid) {\n            return mid;\n        }\n        if (mid < x / mid) {\n            start = mid + 1;\n        } else {\n            end = mid - 1;\n        }\n    }\n    return start - 1;","status":"core-sim","id":1627,"createdAt":"2023-05-30T07:26:23.491Z"},{"fileName":"Clone898.java","fileLine":31,"positionStart":{"line":31,"character":4},"positionEnd":{"line":40,"character":15},"text":"core-sim1","codeSnippet":"while (Math.abs ((mid * mid) - n) > 0.000000000001) {\n        if ((mid * mid) > n) {\n            high = mid;\n            mid = (high - low) / 2;\n        } else {\n            low = mid;\n            mid = mid + ((high - low) / 2);\n        }\n    }\n    return mid;","status":"core-sim","id":1628,"createdAt":"2023-05-30T07:26:34.582Z"},{"fileName":"Clone898.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":30,"character":34},"text":"noncore-diff1","codeSnippet":"double low = 0;\n    double high = n;\n    double mid = (high - low) / 2;","status":"noncore-diff","id":1629,"createdAt":"2023-05-30T07:26:46.979Z"},{"fileName":"Clone898.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":31},"text":"noncore-diff1","codeSnippet":"int start = 1, end = x / 2;","status":"noncore-diff","id":1630,"createdAt":"2023-05-30T07:27:08.651Z"},{"fileName":"Clone898.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":5},"text":"core-diff1","codeSnippet":"if (x == 0 || x == 1) {\n        return x;\n    }","status":"core-diff","id":1631,"createdAt":"2023-05-30T07:27:23.848Z"},{"fileName":"Clone20.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":60},"text":"noncore-diff1","codeSnippet":"jgen.writeObjectField (\"extra_field\", \"whatever_value\");","status":"noncore-diff","id":1632,"createdAt":"2023-05-30T07:41:03.182Z"},{"fileName":"Clone911.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":18,"character":73},"text":"core-diff1","codeSnippet":"for (@SuppressWarnings (\"rawtypes\")\n    Enumeration names = ECNamedCurveTable.getNames ();\n    names.hasMoreElements ();) {\n        final String name = (String) names.nextElement ();\n        final X9ECParameters params = ECNamedCurveTable.getByName (name);\n        if (params.getN ().equals (ecParameterSpec.getN ()) && params.getH ().equals (ecParameterSpec.getH ()) && params.getCurve ().equals (ecParameterSpec.getCurve ()) && params.getG ().equals (ecParameterSpec.getG ())) {\n            return name;\n        }\n    }\n    throw new GeneralSecurityException (\"Could not find name for curve\");","status":"core-diff","id":1633,"createdAt":"2023-06-01T03:27:52.326Z"},{"fileName":"Clone911.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":30,"character":0},"text":"core-diff2","codeSnippet":"if (publicKey instanceof java.security.interfaces.ECPublicKey) {\n        final java.security.interfaces.ECPublicKey pk = (java.security.interfaces.ECPublicKey) publicKey;\n        final ECParameterSpec params = pk.getParams ();\n        return deriveCurveName (EC5Util.convertSpec (params, false));\n    } else if (publicKey instanceof org.bouncycastle.jce.interfaces.ECPublicKey) {\n        final org.bouncycastle.jce.interfaces.ECPublicKey pk = (org.bouncycastle.jce.interfaces.ECPublicKey) publicKey;\n        return deriveCurveName (pk.getParameters ());\n    } else throw new IllegalArgumentException (\"Can only be used with instances of ECPublicKey (either jce or bc implementation)\");\n","status":"core-diff","id":1634,"createdAt":"2023-06-01T03:28:00.697Z"},{"fileName":"Clone913.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":20,"character":39},"text":"core-sim1","codeSnippet":"for (j = 0; j < bytes.length; j ++) {\n        v = bytes [j] & 0xFF;\n        hexChars [c] = hexArray [v / 16];\n        c ++;\n        hexChars [c] = hexArray [v % 16];\n        c ++;\n    }\n    return new String (hexChars, 0, c);","status":"core-sim","id":1635,"createdAt":"2023-06-01T03:35:34.966Z"},{"fileName":"Clone913.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":35,"character":26},"text":"core-sim1","codeSnippet":"for (int iter = 0;\n    iter < bytes.length; iter ++) {\n        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);\n        byte low = (byte) (bytes [iter] & 0x0f);\n        sb.append (nibble2char (high));\n        sb.append (nibble2char (low));\n    }\n    return sb.toString ();","status":"core-sim","id":1636,"createdAt":"2023-06-01T03:36:13.710Z"},{"fileName":"Clone913.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":12,"character":10},"text":"noncore-diff1","codeSnippet":"char [] hexArray = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};\n    char [] hexChars = new char [10000000];\n    int c = 0;\n    int v;","status":"noncore-diff","id":1637,"createdAt":"2023-06-01T03:36:23.024Z"},{"fileName":"Clone913.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":26,"character":5},"text":"core-diff1","codeSnippet":"if (bytes == null) {\n        return null;\n    }","status":"core-diff","id":1638,"createdAt":"2023-06-01T03:36:34.747Z"},{"fileName":"Clone913.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":42},"text":"noncore-diff2","codeSnippet":"StringBuffer sb = new StringBuffer ();","status":"noncore-diff","id":1639,"createdAt":"2023-06-01T03:36:43.461Z"},{"fileName":"Clone915.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":33,"character":26},"text":"core-sim1","codeSnippet":"for (int iter = 0;\n    iter < bytes.length; iter ++) {\n        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);\n        byte low = (byte) (bytes [iter] & 0x0f);\n        sb.append (nibble2char (high));\n        sb.append (nibble2char (low));\n    }\n    return sb.toString ();","status":"core-sim","id":1640,"createdAt":"2023-06-01T03:43:15.240Z"},{"fileName":"Clone915.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":18,"character":33},"text":"core-sim1","codeSnippet":"for (int j = 0;\n    j < bytes.length; j ++) {\n        v = bytes [j] & 0xFF;\n        hexChars [j * 2] = hexArray [v / 16];\n        hexChars [j * 2 + 1] = hexArray [v % 16];\n    }\n    return new String (hexChars);","status":"core-sim","id":1641,"createdAt":"2023-06-01T03:43:22.750Z"},{"fileName":"Clone915.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":24,"character":5},"text":"core-diff1","codeSnippet":"if (bytes == null) {\n        return null;\n    }","status":"core-diff","id":1642,"createdAt":"2023-06-01T03:43:36.264Z"},{"fileName":"Clone915.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":10},"text":"noncore-diff1","codeSnippet":"char [] hexArray = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};\n    char [] hexChars = new char [bytes.length * 2];\n    int v;","status":"noncore-diff","id":1643,"createdAt":"2023-06-01T03:43:44.142Z"},{"fileName":"Clone915.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":25,"character":42},"text":"noncore-diff2","codeSnippet":"StringBuffer sb = new StringBuffer ();","status":"noncore-diff","id":1644,"createdAt":"2023-06-01T03:43:51.388Z"},{"fileName":"Clone917.java","fileLine":27,"positionStart":{"line":27,"character":8},"positionEnd":{"line":31,"character":31},"text":"core-diff1","codeSnippet":"String hex = Integer.toHexString (0xFF & bytes [i]);\n        if (hex.length () == 1) {\n            hexString.append ('0');\n        }\n        hexString.append (hex);","status":"core-diff","id":1645,"createdAt":"2023-06-01T03:58:05.272Z"},{"fileName":"Clone917.java","fileLine":15,"positionStart":{"line":15,"character":8},"positionEnd":{"line":18,"character":38},"text":"core-diff2","codeSnippet":"byte high = (byte) ((bytes [iter] & 0xf0)>> 4);\n        byte low = (byte) (bytes [iter] & 0x0f);\n        sb.append (nibble2char (high));\n        sb.append (nibble2char (low));","status":"core-diff","id":1646,"createdAt":"2023-06-01T03:58:17.966Z"},{"fileName":"Clone917.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":14,"character":35},"text":"noncore-sim1","codeSnippet":"StringBuffer sb = new StringBuffer ();\n    for (int iter = 0;\n    iter < bytes.length; iter ++) {","status":"noncore-sim","id":1647,"createdAt":"2023-06-01T03:58:27.682Z"},{"fileName":"Clone917.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":20,"character":26},"text":"noncore-sim1","codeSnippet":"}\n    return sb.toString ();","status":"noncore-sim","id":1648,"createdAt":"2023-06-01T03:58:34.586Z"},{"fileName":"Clone917.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":26,"character":29},"text":"noncore-sim1","codeSnippet":"StringBuilder hexString = new StringBuilder ();\n    for (int i = 0;\n    i < bytes.length; i ++) {","status":"noncore-sim","id":1649,"createdAt":"2023-06-01T03:58:43.543Z"},{"fileName":"Clone917.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":33,"character":33},"text":"noncore-sim1","codeSnippet":"}\n    return hexString.toString ();","status":"noncore-sim","id":1650,"createdAt":"2023-06-01T03:58:50.105Z"},{"fileName":"Clone917.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":5},"text":"core-diff3","codeSnippet":"if (bytes == null) {\n        return null;\n    }","status":"core-diff","id":1651,"createdAt":"2023-06-01T03:59:06.392Z"},{"fileName":"Clone612.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":13,"character":21},"text":"core-diff1","codeSnippet":"Process p = Runtime.getRuntime ().exec (XVFB_COMMAND);\n    FirefoxBinary firefox = new FirefoxBinary ();\n    firefox.setEnvironmentProperty (\"DISPLAY\", \":\" + DISPLAY_NUMBER);\n    WebDriver driver = new FirefoxDriver (firefox, null);\n    driver.get (URL);","status":"core-diff","id":1652,"createdAt":"2023-06-01T05:11:42.259Z"},{"fileName":"Clone612.java","fileLine":23,"positionStart":{"line":23,"character":8},"positionEnd":{"line":24,"character":65},"text":"core-sim1","codeSnippet":"BufferedImage bi = robot.createScreenCapture (new Rectangle (Toolkit.getDefaultToolkit ().getScreenSize ()));\n        ImageIO.write (bi, \"jpg\", new File (\"C:/imageTest.jpg\"));","status":"core-sim","id":1654,"createdAt":"2023-06-01T05:11:59.516Z"},{"fileName":"Clone612.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":15,"character":61},"text":"core-sim1","codeSnippet":"File scrFile = ((TakesScreenshot) driver).getScreenshotAs (OutputType.FILE);\n    FileUtils.copyFile (scrFile, new File (RESULT_FILENAME));","status":"core-sim","id":1655,"createdAt":"2023-06-01T05:12:06.768Z"},{"fileName":"Clone537.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":27,"character":16},"text":"core-sim2","codeSnippet":"if (histogram.findInLine (name) != null) {\n        System.out.println (\"This name exist\");\n    } else {\n        System.out.println (\"Name not found\");\n        user = validName (input, histogram);\n    }\n    return user;","status":"core-sim","id":1656,"createdAt":"2023-06-01T14:52:39.175Z"},{"fileName":"Clone537.java","fileLine":13,"positionStart":{"line":13,"character":8},"positionEnd":{"line":15,"character":5},"text":"core-sim2","codeSnippet":"if (validInputs.contains (userInput)) return userInput;\n        System.out.println (\"invalid input\");\n    }","status":"core-sim","id":1658,"createdAt":"2023-06-01T14:53:02.890Z"},{"fileName":"Clone537.java","fileLine":10,"positionStart":{"line":10,"character":3},"positionEnd":{"line":10,"character":69},"text":"core-diff1","codeSnippet":" while (histogram.hasNext ()) validInputs.add (histogram.next ());","status":"core-diff","id":1659,"createdAt":"2023-06-01T14:53:14.254Z"},{"fileName":"Clone537.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":18},"text":"core-sim2","codeSnippet":"while (true) {","status":"core-sim","id":1660,"createdAt":"2023-06-01T14:53:22.394Z"},{"fileName":"Clone689.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":68},"text":"core-sim1","codeSnippet":"int [] results = randNums (total - minVal * numRands, numRands);","status":"core-sim","id":1661,"createdAt":"2023-06-01T14:54:28.477Z"},{"fileName":"Clone689.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":45,"character":5},"text":"core-sim1","codeSnippet":"final int [] results = new int [n];\n    if (total == 0) {\n        Arrays.fill (results, 0);\n        return results;\n    }\n    final BigInteger [] rs = new BigInteger [n];\n    final BigInteger totalPlus1 = BigInteger.valueOf (total + 1L);\n    while (true) {\n        for (int i = 0;\n        i < n; ++ i) {\n            rs [i] = new BigInteger (256, rand);\n        }\n        BigInteger sum = BigInteger.ZERO;\n        for (BigInteger r : rs) {\n            sum = sum.add (r);\n        }\n        if (sum.compareTo (BigInteger.ZERO) == 0) {\n            continue;\n        }\n        for (int i = 0;\n        i < n; ++ i) {\n            results [i] = sum.mod (rs [i]).mod (totalPlus1).intValue ();\n        }\n        return results;\n    }","status":"core-sim","id":1662,"createdAt":"2023-06-01T14:54:42.038Z"},{"fileName":"Clone689.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":17,"character":19},"text":"core-diff1","codeSnippet":"for (int i = 0;\n    i < numRands; ++ i) {\n        results [i] += minVal;\n    }\n    return results;","status":"core-diff","id":1663,"createdAt":"2023-06-01T14:54:50.196Z"},{"fileName":"Clone689.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":5},"text":"core-diff2","codeSnippet":"if (minVal * numRands > total) {\n        throw new IllegalArgumentException ();\n    }","status":"core-diff","id":1664,"createdAt":"2023-06-01T14:54:56.667Z"},{"fileName":"Clone760.java","fileLine":18,"positionStart":{"line":18,"character":4},"positionEnd":{"line":49,"character":31},"text":"core-sim1","codeSnippet":"final Class < ? > c = (Class < ? >) p.getRawType ();\n    final StringBuilder b = new StringBuilder (c.getName ());\n    b.append ('<');\n    Type [] localArgs = p.getActualTypeArguments ();\n    if (typeArgs != null && typeArgs.length > 0) {\n        int i = 0, nextTypeArg = 0;\n        for (Type local : localArgs) {\n            if (local instanceof ParameterizedType) {\n                ParameterizedType localP = (ParameterizedType) local;\n                b.append (localP.getRawType ()).append ('<');\n                b.append (typeArgs [nextTypeArg ++]);\n                b.append ('>');\n            } else if (local instanceof TypeVariable) {\n                localArgs [nextTypeArg] = typeArgs [nextTypeArg];\n                b.append (localArgs [nextTypeArg]);\n                nextTypeArg ++;\n            } else {\n                b.append (local.toString ());\n            }\n            b.append (\", \");\n            i ++;\n        }\n        if (typeArgs.length > 0) {\n            b.delete (b.length () - 2, b.length ());\n        }\n        b.append ('>');\n    } else {\n        String args = Arrays.toString (localArgs);\n        b.append (args.substring (1, args.length () - 1)).append ('>');\n    }\n    System.out.println (b);\n    investigate (c, localArgs);","status":"core-sim","id":1665,"createdAt":"2023-06-01T14:56:24.852Z"},{"fileName":"Clone760.java","fileLine":11,"positionStart":{"line":11,"character":8},"positionEnd":{"line":11,"character":48},"text":"core-sim1","codeSnippet":"investigate ((Class < ? >) t, typeArgs);","status":"core-sim","id":1666,"createdAt":"2023-06-01T14:56:32.385Z"},{"fileName":"Clone760.java","fileLine":13,"positionStart":{"line":13,"character":8},"positionEnd":{"line":13,"character":54},"text":"core-sim1","codeSnippet":"investigate ((ParameterizedType) t, typeArgs);","status":"core-sim","id":1667,"createdAt":"2023-06-01T14:56:40.522Z"},{"fileName":"Clone760.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":35},"text":"core-diff1","codeSnippet":"if (t == null) return;\n    if (t instanceof Class < ? >) {","status":"core-diff","id":1668,"createdAt":"2023-06-01T14:56:46.299Z"},{"fileName":"Clone760.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":48},"text":"core-diff1","codeSnippet":"} else if (t instanceof ParameterizedType) {","status":"core-diff","id":1669,"createdAt":"2023-06-01T14:56:52.343Z"},{"fileName":"Clone760.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":14,"character":5},"text":"core-diff1","codeSnippet":"}","status":"core-diff","id":1670,"createdAt":"2023-06-01T14:56:58.766Z"},{"fileName":"Clone922.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":51,"character":20},"text":"core-sim1","codeSnippet":"if (A.length == 2) return Math.abs (A [0] - A [1]);\n    int [] s1 = new int [A.length - 1];\n    s1 [0] = A [0];\n    for (int i = 1;\n    i < A.length - 1; i ++) {\n        s1 [i] = s1 [i - 1] + A [i];\n    }\n    int [] s2 = new int [A.length - 1];\n    s2 [A.length - 2] = A [A.length - 1];\n    for (int i = A.length - 3;\n    i >= 0; i --) {\n        s2 [i] = s2 [i + 1] + A [i + 1];\n    }\n    int finalSum = Integer.MAX_VALUE;\n    for (int j = 0;\n    j < s1.length; j ++) {\n        int sum = Math.abs (s1 [j] - s2 [j]);\n        if (sum < finalSum) finalSum = sum;\n    }\n    return finalSum;","status":"core-sim","id":1671,"createdAt":"2023-06-01T15:12:08.596Z"},{"fileName":"Clone922.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":28,"character":24},"text":"core-sim1","codeSnippet":"while (i < N) {\n        rightSum += A [i];\n        i ++;\n    }\n    last_minimum = abs (leftSum - rightSum);\n    if (last_minimum == 0) return last_minimum;\n    i = 2;\n    while (i < N) {\n        leftSum += A [i - 1];\n        rightSum -= A [i - 1];\n        current_min = abs (leftSum - rightSum);\n        if (current_min == 0) return current_min;\n        if (last_minimum > current_min) last_minimum = current_min;\n        i ++;\n    }\n    return last_minimum;","status":"core-sim","id":1672,"createdAt":"2023-06-01T15:12:17.889Z"},{"fileName":"Clone922.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":12,"character":10},"text":"noncore-diff1","codeSnippet":"int i, leftSum, rightSum, last_minimum, current_min;\n    leftSum = A [0];\n    rightSum = 0;\n    i = 1;","status":"noncore-diff","id":1674,"createdAt":"2023-06-01T15:12:45.121Z"},{"fileName":"Clone924.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":19,"character":52},"text":"core-diff2","codeSnippet":"scottishPerson.salute ();\n    scottishPerson.warcry ();\n    System.out.println (scottishPerson.name);\n    System.out.println (scottishPerson.clanName);\n    britishPerson.salute ();\n    System.out.println (britishPerson.name);\n    britishPersonUpcasted.salute ();\n    System.out.println (britishPersonUpcasted.name);","status":"core-diff","id":1676,"createdAt":"2023-06-01T15:13:53.433Z"},{"fileName":"Clone924.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":87},"text":"noncore-diff1","codeSnippet":"ScottishPerson scottishPerson = new ScottishPerson ();\n    BritishPerson britishPerson = new BritishPerson ();\n    BritishPerson britishPersonUpcasted = new ScottishPerson (\"Another scottish name\");","status":"noncore-diff","id":1677,"createdAt":"2023-06-01T15:14:02.869Z"},{"fileName":"Clone924.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":38,"character":5},"text":"core-diff1","codeSnippet":"Dog upcastedAnimal = upcastToDog (animal);\n    dog.saySomething ();\n    dog.getTheBall ();\n    upcastedAnimal.saySomething ();\n    upcastedAnimal.getTheBall ();\n    horse.saySomething ();\n    horse.getTheBall ();\n    try {\n        Dog upcastedDog = upcastToDog (horseAnimal);\n    } catch (Exception ex) {\n        System.out.println (ex.getClass ().getSimpleName () + \": Obviously a horse is not a dog!\");\n    }","status":"core-diff","id":1678,"createdAt":"2023-06-01T15:14:23.517Z"},{"fileName":"Clone924.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":26,"character":38},"text":"noncore-diff1","codeSnippet":"Dog dog = new Dog ();\n    Horse horse = new Horse ();\n    Animal animal = dog;\n    Animal horseAnimal = new Horse ();","status":"noncore-diff","id":1679,"createdAt":"2023-06-01T15:14:31.429Z"},{"fileName":"Clone925.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":25,"character":105},"text":"core-diff1","codeSnippet":"if ((n & 1) == 0) {\n        return n == 2;\n    }\n    if (n < 9) {\n        return n > 1;\n    }\n    return isStrongProbablePrime (n, 2) && isStrongProbablePrime (n, 7) && isStrongProbablePrime (n, 61);","status":"core-diff","id":1680,"createdAt":"2023-06-01T15:18:10.532Z"},{"fileName":"Clone925.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":15,"character":19},"text":"core-diff2","codeSnippet":"for (int i = 2;\n    i <= num / i; i ++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return num > 1;","status":"core-diff","id":1681,"createdAt":"2023-06-01T15:18:29.415Z"},{"fileName":"Clone926.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":61},"text":"noncore-sim1","codeSnippet":"Scanner sc = new Scanner (System.in);\n    ArrayList < Integer > al2 = new ArrayList < Integer > ();","status":"noncore-sim","id":1683,"createdAt":"2023-06-01T15:22:38.916Z"},{"fileName":"Clone926.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":23,"character":62},"text":"noncore-sim1","codeSnippet":"Scanner scan = new Scanner (System.in);\n    ArrayList < Integer > list = new ArrayList < Integer > ();","status":"noncore-sim","id":1684,"createdAt":"2023-06-01T15:22:51.650Z"},{"fileName":"Clone926.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":14,"character":5},"text":"core-sim1","codeSnippet":"while (sc.hasNextInt ()) {\n        al2.add (sc.nextInt ());\n    }","status":"core-sim","id":1685,"createdAt":"2023-06-01T15:23:09.293Z"},{"fileName":"Clone926.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":28,"character":5},"text":"core-sim1","codeSnippet":"while (scan.hasNextInt ()) {\n        list.add (scan.nextInt ());\n    }","status":"core-sim","id":1686,"createdAt":"2023-06-01T15:24:49.360Z"},{"fileName":"Clone926.java","fileLine":29,"positionStart":{"line":29,"character":4},"positionEnd":{"line":33,"character":5},"text":"core-sim2","codeSnippet":"Integer [] nums = list.toArray (new Integer [0]);\n    for (int i = 0;\n    i < nums.length; i ++) {\n        System.out.println (nums [i]);\n    }","status":"core-sim","id":1687,"createdAt":"2023-06-01T15:25:08.619Z"},{"fileName":"Clone926.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":18,"character":5},"text":"core-sim2","codeSnippet":"Iterator it1 = al2.iterator ();\n    while (it1.hasNext ()) {\n        System.out.println (it1.next ());\n    }","status":"core-sim","id":1688,"createdAt":"2023-06-01T15:25:15.277Z"},{"fileName":"Clone926.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":50},"text":"noncore-diff1","codeSnippet":"System.out.println (\"enter the item in list\");","status":"noncore-diff","id":1689,"createdAt":"2023-06-01T15:26:21.083Z"},{"fileName":"Clone926.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":25,"character":63},"text":"noncore-diff1","codeSnippet":"System.out.print (\"Enter integers please \");\n    System.out.println (\"(EOF or non-integer to terminate): \");","status":"noncore-diff","id":1690,"createdAt":"2023-06-01T15:26:29.622Z"},{"fileName":"Clone937.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":95},"text":"noncore-sim1","codeSnippet":"List < Object > myArray = new ArrayList < Object > ();\n    myArray.add (MyJsonObject.parse (\"{\\\"lon\\\": 0.001, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test\\\"}\"));\n    myArray.add (MyJsonObject.parse (\"{\\\"lon\\\": 0.001, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test2\\\"}\"));","status":"noncore-sim","id":1691,"createdAt":"2023-06-01T15:29:56.457Z"},{"fileName":"Clone937.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":31,"character":46},"text":"noncore-sim1","codeSnippet":"String s = \"[\" + \" {\\\"lon\\\": 0.001, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test\\\"},\" + \" {\\\"lon\\\": 0.002, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test3\\\"},\" + \" {\\\"lon\\\": 0.002, \\\"lat\\\": 0.005, \\\"desc\\\": \\\"test4\\\"},\" + \" {\\\"lon\\\": 0.002, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test5\\\"},\" + \" {\\\"lon\\\": 0.001, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test2\\\"}]\";\n    Gson gson = new Gson ();\n    Location [] al = gson.fromJson (s, Location [].class);\n    List < Location > tl = Arrays.asList (al);","status":"noncore-sim","id":1692,"createdAt":"2023-06-01T15:30:03.642Z"},{"fileName":"Clone937.java","fileLine":33,"positionStart":{"line":33,"character":4},"positionEnd":{"line":33,"character":57},"text":"noncore-sim2","codeSnippet":"List < Location > fl = new ArrayList < Location > ();","status":"noncore-sim","id":1693,"createdAt":"2023-06-01T15:30:38.710Z"},{"fileName":"Clone937.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":51},"text":"noncore-sim2","codeSnippet":"List seenObjects = new ArrayList < Object > ();","status":"noncore-sim","id":1694,"createdAt":"2023-06-01T15:30:44.701Z"},{"fileName":"Clone937.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":24,"character":5},"text":"core-sim1","codeSnippet":"for (Object obj : myArray) {\n        if (! seenObjects.contains (obj)) {\n            seenObjects.add (obj);\n        } else {\n            MyJsonObject original = (MyJsonObject) seenObjects.get (seenObjects.indexOf (obj));\n            MyJsonObject update = (MyJsonObject) obj;\n            original.put (\"desc\", original.get (\"desc\") + \", \" + update.get (\"desc\"));\n        }\n    }\n    for (MyJsonObject obj : (List < MyJsonObject >) seenObjects) {\n        System.out.println (obj.toJSONString ());\n    }","status":"core-sim","id":1695,"createdAt":"2023-06-01T15:30:52.835Z"},{"fileName":"Clone937.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":32,"character":26},"text":"noncore-diff1","codeSnippet":"Collections.sort (tl);","status":"noncore-diff","id":1697,"createdAt":"2023-06-01T15:31:07.698Z"},{"fileName":"Clone937.java","fileLine":34,"positionStart":{"line":34,"character":4},"positionEnd":{"line":43,"character":42},"text":"core-sim1","codeSnippet":"Location current = null;\n    for (Iterator < Location > it = tl.iterator ();\n    it.hasNext ();) {\n        current = current == null ? it.next () : current;\n        Location ltmp = null;\n        while (it.hasNext () && (ltmp = it.next ()).equals (current)) current.desc = current.desc + \",\" + ltmp.desc;\n        fl.add (current);\n        current = ltmp;\n    }\n    System.out.println (gson.toJson (fl));","status":"core-sim","id":1698,"createdAt":"2023-06-01T15:31:20.665Z"},{"fileName":"Clone938.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":18,"character":14},"text":"core-sim1","codeSnippet":"if (! isEmpty (a) && ! isEmpty (b)) {\n        return a + separator + b;\n    }\n    if (! isEmpty (a)) {\n        return a;\n    }\n    if (! isEmpty (b)) {\n        return b;\n    }\n    return \"\";","status":"core-sim","id":1699,"createdAt":"2023-06-01T15:32:41.053Z"},{"fileName":"Clone938.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":31,"character":31},"text":"core-sim1","codeSnippet":"for (String part : parts) {\n        if (! isEmpty (part)) {\n            if (builder.length () > 0) {\n                builder.append (delimiter);\n            }\n            builder.append (part);\n        }\n    }\n    return builder.toString ();","status":"core-sim","id":1700,"createdAt":"2023-06-01T15:32:47.799Z"},{"fileName":"Clone938.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":49},"text":"noncore-diff1","codeSnippet":"StringBuilder builder = new StringBuilder ();","status":"noncore-diff","id":1701,"createdAt":"2023-06-01T15:32:55.440Z"},{"fileName":"Clone939.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":12,"character":41},"text":"core-sim1","codeSnippet":"LocalDateTime from = LocalDateTime.parse (\"2015-07-24T09:39:14.000Z\", ISODateTimeFormat.dateTime ());\n    LocalDateTime to = LocalDateTime.parse (\"2015-07-24T09:45:44.000Z\", ISODateTimeFormat.dateTime ());\n    LocalTime fromTime = from.toLocalTime ();\n    LocalTime toTime = to.toLocalTime ();","status":"core-sim","id":1705,"createdAt":"2023-06-01T15:36:28.686Z"},{"fileName":"Clone939.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":26,"character":76},"text":"core-sim1","codeSnippet":"String st1 = \"2015-07-24T09:39:14.000Z\";\n    String st2 = \"2015-07-24T09:45:44.000Z\";\n    String time1 = st1.substring (st1.indexOf (\"T\") + 1, st1.indexOf (\".0\"));\n    String time2 = st2.substring (st2.indexOf (\"T\") + 1, st2.indexOf (\".0\"));\n    Date dateTime1 = new java.text.SimpleDateFormat (\"HH:mm\").parse (time1);\n    Date dateTime2 = new java.text.SimpleDateFormat (\"HH:mm\").parse (time2);","status":"core-sim","id":1706,"createdAt":"2023-06-01T15:36:36.550Z"},{"fileName":"Clone939.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":15,"character":91},"text":"core-sim2","codeSnippet":"System.out.println (fromTime + \" after \" + toTime + \" = \" + fromTime.isAfter (toTime));","status":"core-sim","id":1707,"createdAt":"2023-06-01T15:36:45.661Z"},{"fileName":"Clone939.java","fileLine":27,"positionStart":{"line":27,"character":4},"positionEnd":{"line":27,"character":53},"text":"core-sim2","codeSnippet":"System.out.println (dateTime1.after (dateTime2));","status":"core-sim","id":1708,"createdAt":"2023-06-01T15:36:55.361Z"},{"fileName":"Clone939.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":14,"character":93},"text":"core-diff1","codeSnippet":"System.out.println (fromTime + \" - \" + toTime);\n    System.out.println (fromTime + \" before \" + toTime + \" = \" + fromTime.isBefore (toTime));","status":"core-diff","id":1709,"createdAt":"2023-06-01T15:37:09.260Z"},{"fileName":"Clone939.java","fileLine":16,"positionStart":{"line":16,"character":4},"positionEnd":{"line":17,"character":97},"text":"core-diff1","codeSnippet":"System.out.println (fromTime + \" equals \" + toTime + \" = \" + fromTime.equals (toTime));\n    System.out.println (fromTime + \" compareTo \" + toTime + \" = \" + fromTime.compareTo (toTime));","status":"core-diff","id":1710,"createdAt":"2023-06-01T15:37:17.180Z"},{"fileName":"Clone940.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":17,"character":18},"text":"core-sim1","codeSnippet":"while (true) {\n        String message = inputGenerator.getMessage ();\n        result += message;\n        if (! message.startsWith (\"hi\")) {\n            break;\n        }\n    }\n    return result;","status":"core-sim","id":1711,"createdAt":"2023-06-01T15:37:56.218Z"},{"fileName":"Clone940.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":27,"character":27},"text":"core-sim1","codeSnippet":"do {\n        read = inputGenerator.getMessage ();\n        msg.append (read);\n    } while (read.toLowerCase ().startsWith (\"hi\"));\n    return msg.toString ();","status":"core-sim","id":1712,"createdAt":"2023-06-01T15:38:03.620Z"},{"fileName":"Clone940.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":22,"character":16},"text":"noncore-diff1","codeSnippet":"StringBuilder msg = new StringBuilder ();\n    String read;","status":"noncore-diff","id":1714,"createdAt":"2023-06-01T15:40:23.016Z"},{"fileName":"Clone940.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":23},"text":"noncore-diff1","codeSnippet":"String result = \"\";","status":"noncore-diff","id":1715,"createdAt":"2023-06-01T15:40:31.579Z"},{"fileName":"Clone941.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":22,"character":42},"text":"core-sim1","codeSnippet":"if (str.length () > keyword.length ()) {\n        int keywordIndex = 0;\n        for (int i = 0;\n        i < str.length (); i ++) {\n            if (str.charAt (i) != ' ') {\n                equalStringBuilder.append (keyword.charAt (keywordIndex ++));\n                keywordIndex %= keyword.length ();\n            } else {\n                equalStringBuilder.append (' ');\n            }\n        }\n    }\n    return equalStringBuilder.toString ();","status":"core-sim","id":1717,"createdAt":"2023-06-01T15:42:33.960Z"},{"fileName":"Clone941.java","fileLine":26,"positionStart":{"line":26,"character":4},"positionEnd":{"line":35,"character":18},"text":"core-sim1","codeSnippet":"if (str.length () > keyword.length ()) {\n        string result = \"\";\n        for (int i = 0;\n        i < str.length (); i ++) {\n            if (str.charAt (i) != ' ') {\n                result += keyword.charAt (i % keyword.length ());\n            } else result += \" \";\n        }\n    }\n    return result;","status":"core-sim","id":1718,"createdAt":"2023-06-01T15:42:40.256Z"},{"fileName":"Clone941.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":60},"text":"noncore-diff1","codeSnippet":"StringBuilder equalStringBuilder = new StringBuilder ();","status":"noncore-diff","id":1719,"createdAt":"2023-06-01T15:42:46.905Z"},{"fileName":"Clone944.java","fileLine":14,"positionStart":{"line":14,"character":3},"positionEnd":{"line":14,"character":38},"text":"core-sim1","codeSnippet":" String line = console.readLine ();","status":"core-sim","id":1720,"createdAt":"2023-06-01T15:43:14.692Z"},{"fileName":"Clone944.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":30},"text":"core-sim1","codeSnippet":"String s = br.readLine ();","status":"core-sim","id":1721,"createdAt":"2023-06-01T15:43:21.647Z"},{"fileName":"Clone944.java","fileLine":24,"positionStart":{"line":24,"character":8},"positionEnd":{"line":24,"character":50},"text":"core-diff1","codeSnippet":"int i = Integer.parseInt (br.readLine ());","status":"core-diff","id":1722,"createdAt":"2023-06-01T15:43:28.163Z"},{"fileName":"Clone944.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":13,"character":5},"text":"noncore-diff1","codeSnippet":"Console console = System.console ();\n    if (console == null) {\n        System.out.println (\"Unable to fetch console\");\n        return;\n    }","status":"noncore-diff","id":1723,"createdAt":"2023-06-01T15:43:40.683Z"},{"fileName":"Clone944.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":15,"character":49},"text":"noncore-diff1","codeSnippet":"console.printf (\"I saw this line: %s\", line);","status":"noncore-diff","id":1724,"createdAt":"2023-06-01T15:45:10.584Z"},{"fileName":"Clone944.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":20,"character":38},"text":"noncore-diff2","codeSnippet":"BufferedReader br = new BufferedReader (new InputStreamReader (System.in));\n    System.out.print (\"Enter String\");","status":"noncore-diff","id":1725,"createdAt":"2023-06-01T15:45:21.628Z"},{"fileName":"Clone944.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":23,"character":9},"text":"noncore-diff2","codeSnippet":"System.out.print (\"Enter Integer:\");\n    try {","status":"noncore-diff","id":1726,"createdAt":"2023-06-01T15:45:28.787Z"},{"fileName":"Clone944.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":27,"character":5},"text":"noncore-diff2","codeSnippet":"} catch (NumberFormatException nfe) {\n        System.err.println (\"Invalid Format!\");\n    }","status":"noncore-diff","id":1727,"createdAt":"2023-06-01T15:45:34.871Z"},{"fileName":"Clone948.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":79},"text":"noncore-sim1","codeSnippet":"BufferedReader br = new BufferedReader (new InputStreamReader (System.in));","status":"noncore-sim","id":1728,"createdAt":"2023-06-01T15:46:26.398Z"},{"fileName":"Clone948.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":79},"text":"noncore-sim1","codeSnippet":"BufferedReader br = new BufferedReader (new InputStreamReader (System.in));","status":"noncore-sim","id":1729,"createdAt":"2023-06-01T15:46:33.021Z"},{"fileName":"Clone948.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":30},"text":"core-sim1","codeSnippet":"String s = br.readLine ();","status":"core-sim","id":1730,"createdAt":"2023-06-01T15:49:01.597Z"},{"fileName":"Clone948.java","fileLine":25,"positionStart":{"line":25,"character":8},"positionEnd":{"line":25,"character":38},"text":"core-sim1","codeSnippet":"String input = br.readLine ();","status":"core-sim","id":1731,"createdAt":"2023-06-01T15:49:14.730Z"},{"fileName":"Clone948.java","fileLine":27,"positionStart":{"line":27,"character":7},"positionEnd":{"line":30,"character":9},"text":"core-diff1","codeSnippet":" if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {\n            System.out.println (\"Exiting.\");\n            return;\n        }","status":"core-diff","id":1732,"createdAt":"2023-06-01T15:49:51.333Z"},{"fileName":"Clone948.java","fileLine":14,"positionStart":{"line":14,"character":8},"positionEnd":{"line":14,"character":50},"text":"core-diff2","codeSnippet":"int i = Integer.parseInt (br.readLine ());","status":"core-diff","id":1733,"createdAt":"2023-06-01T15:49:57.794Z"},{"fileName":"Clone948.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":38},"text":"noncore-diff1","codeSnippet":"System.out.print (\"Enter String\");","status":"noncore-diff","id":1734,"createdAt":"2023-06-01T15:50:16.624Z"},{"fileName":"Clone948.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":13,"character":9},"text":"noncore-diff1","codeSnippet":"System.out.print (\"Enter Integer:\");\n    try {","status":"noncore-diff","id":1735,"createdAt":"2023-06-01T15:50:30.020Z"},{"fileName":"Clone948.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":17,"character":5},"text":"noncore-diff1","codeSnippet":"} catch (NumberFormatException nfe) {\n        System.err.println (\"Invalid Format!\");\n    }","status":"noncore-diff","id":1736,"createdAt":"2023-06-01T15:50:38.409Z"},{"fileName":"Clone948.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":24,"character":41},"text":"noncore-diff2","codeSnippet":"System.out.println (\"Enter some text, or '\" + EXIT_COMMAND + \"' to quit\");\n    while (true) {\n        System.out.print (\"><![CDATA[ \");","status":"noncore-diff","id":1737,"createdAt":"2023-06-01T15:50:52.023Z"},{"fileName":"Clone948.java","fileLine":26,"positionStart":{"line":26,"character":8},"positionEnd":{"line":26,"character":35},"text":"noncore-diff2","codeSnippet":"System.out.println (input);","status":"noncore-diff","id":1738,"createdAt":"2023-06-01T15:51:00.438Z"},{"fileName":"Clone948.java","fileLine":31,"positionStart":{"line":31,"character":8},"positionEnd":{"line":32,"character":5},"text":"noncore-diff2","codeSnippet":"System.out.println (\"...response goes here...\");\n    }","status":"noncore-diff","id":1739,"createdAt":"2023-06-01T15:51:09.888Z"},{"fileName":"Clone949.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":58},"text":"core-sim1","codeSnippet":"CompletableFuture < String > contentsCF = readPage ();","status":"core-sim","id":1741,"createdAt":"2023-06-01T15:52:24.993Z"},{"fileName":"Clone949.java","fileLine":36,"positionStart":{"line":36,"character":3},"positionEnd":{"line":36,"character":54},"text":"core-sim1","codeSnippet":" CompletableFuture < String > future = readPage ();","status":"core-sim","id":1742,"createdAt":"2023-06-01T15:52:31.659Z"},{"fileName":"Clone949.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":14,"character":7},"text":"core-sim2","codeSnippet":"CompletableFuture < Void > completionStage = linksCF.thenAccept (list -> {\n        String a = null;\n        System.out.println (a.toString ());\n    });","status":"core-sim","id":1743,"createdAt":"2023-06-01T15:52:47.083Z"},{"fileName":"Clone949.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":40,"character":7},"text":"core-sim2","codeSnippet":"CompletableFuture < Void > future2 = future.thenAccept (page -> {\n        System.out.println (page);\n        throw new IllegalArgumentException (\"unexpected exception\");\n    });","status":"core-sim","id":1744,"createdAt":"2023-06-01T15:52:52.895Z"},{"fileName":"Clone949.java","fileLine":41,"positionStart":{"line":41,"character":4},"positionEnd":{"line":44,"character":7},"text":"core-sim3","codeSnippet":"future2.exceptionally (e -> {\n        e.printStackTrace (System.err);\n        return null;\n    });","status":"core-sim","id":1745,"createdAt":"2023-06-01T15:52:58.731Z"},{"fileName":"Clone949.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":27,"character":7},"text":"core-sim3","codeSnippet":"completionStage.exceptionally (e -> {\n        System.out.println (\"Future exceptionally finished: \" + e);\n        return null;\n    });","status":"core-sim","id":1746,"createdAt":"2023-06-01T15:53:05.326Z"},{"fileName":"Clone949.java","fileLine":18,"positionStart":{"line":18,"character":8},"positionEnd":{"line":18,"character":31},"text":"core-diff1","codeSnippet":"completionStage.get ();","status":"core-diff","id":1747,"createdAt":"2023-06-01T15:53:18.833Z"},{"fileName":"Clone949.java","fileLine":29,"positionStart":{"line":29,"character":8},"positionEnd":{"line":29,"character":31},"text":"core-diff1","codeSnippet":"completionStage.get ();","status":"core-diff","id":1748,"createdAt":"2023-06-01T15:53:27.742Z"},{"fileName":"Clone949.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":109},"text":"noncore-diff1","codeSnippet":"CompletableFuture < List < String > > linksCF = contentsCF.thenApply (CompletableFutureTest :: getLinks);","status":"noncore-diff","id":1749,"createdAt":"2023-06-01T15:53:34.998Z"},{"fileName":"Clone949.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":16,"character":41},"text":"noncore-diff1","codeSnippet":"List < String > result = linksCF.get ();\n    System.out.println (\"Got \" + result);","status":"noncore-diff","id":1750,"createdAt":"2023-06-01T15:53:47.584Z"},{"fileName":"Clone949.java","fileLine":17,"positionStart":{"line":17,"character":4},"positionEnd":{"line":17,"character":9},"text":"noncore-diff2","codeSnippet":"try {","status":"noncore-diff","id":1751,"createdAt":"2023-06-01T15:53:55.193Z"},{"fileName":"Clone949.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":23,"character":5},"text":"noncore-diff2","codeSnippet":"} catch (ExecutionException e) {\n        System.out.println (\"Caught \" + e);\n        Throwable cause = e.getCause ();\n        System.out.println (\"cause: \" + cause);\n    }","status":"noncore-diff","id":1752,"createdAt":"2023-06-01T15:54:02.043Z"},{"fileName":"Clone949.java","fileLine":28,"positionStart":{"line":28,"character":4},"positionEnd":{"line":28,"character":9},"text":"noncore-diff2","codeSnippet":"try {","status":"noncore-diff","id":1753,"createdAt":"2023-06-01T15:54:07.924Z"},{"fileName":"Clone949.java","fileLine":30,"positionStart":{"line":30,"character":4},"positionEnd":{"line":32,"character":5},"text":"noncore-diff2","codeSnippet":"} catch (Throwable t) {\n        System.out.println (\"Already handled by the future \" + t);\n    }","status":"noncore-diff","id":1754,"createdAt":"2023-06-01T15:54:13.280Z"},{"fileName":"Clone951.java","fileLine":52,"positionStart":{"line":52,"character":4},"positionEnd":{"line":54,"character":38},"text":"noncore-sim1","codeSnippet":"button.setOnClickListener (new View.OnClickListener () {\n        @Override\n        public void onClick (View v) {","status":"noncore-sim","id":1755,"createdAt":"2023-06-01T15:56:42.404Z"},{"fileName":"Clone951.java","fileLine":56,"positionStart":{"line":56,"character":8},"positionEnd":{"line":57,"character":6},"text":"noncore-sim1","codeSnippet":"}}\n    );","status":"noncore-sim","id":1756,"createdAt":"2023-06-01T15:56:53.181Z"},{"fileName":"Clone951.java","fileLine":15,"positionStart":{"line":15,"character":12},"positionEnd":{"line":19,"character":14},"text":"noncore-sim1","codeSnippet":"tvLabel.setOnClickListener (new View.OnClickListener () {\n                @Override\n                public void onClick (View v) {\n                }}\n            );","status":"noncore-sim","id":1757,"createdAt":"2023-06-01T15:57:03.416Z"},{"fileName":"Clone951.java","fileLine":23,"positionStart":{"line":23,"character":12},"positionEnd":{"line":27,"character":14},"text":"noncore-sim1","codeSnippet":"tvLabel.setOnClickListener (new View.OnClickListener () {\n                @Override\n                public void onClick (View v) {\n                }}\n            );","status":"noncore-sim","id":1758,"createdAt":"2023-06-01T15:57:21.618Z"},{"fileName":"Clone951.java","fileLine":31,"positionStart":{"line":31,"character":12},"positionEnd":{"line":35,"character":14},"text":"noncore-sim1","codeSnippet":"tvLabel.setOnClickListener (new View.OnClickListener () {\n                @Override\n                public void onClick (View v) {\n                }}\n            );","status":"noncore-sim","id":1759,"createdAt":"2023-06-01T15:57:31.016Z"},{"fileName":"Clone951.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":39,"character":18},"text":"noncore-sim2","codeSnippet":"collection.addView (layout);\n    return layout;","status":"noncore-sim","id":1760,"createdAt":"2023-06-01T15:57:40.514Z"},{"fileName":"Clone951.java","fileLine":58,"positionStart":{"line":58,"character":4},"positionEnd":{"line":59,"character":18},"text":"noncore-sim2","codeSnippet":"container.addView (layout);\n    return layout;","status":"noncore-sim","id":1761,"createdAt":"2023-06-01T15:57:48.868Z"},{"fileName":"Clone951.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":70},"text":"core-diff1","codeSnippet":"LayoutInflater inflater = LayoutInflater.from (mContext);\n    ViewGroup layout = (ViewGroup) inflater.inflate (R.layout.account_dialog_signin_viewpagers, collection, false);\n    TextView tvLabel = (TextView) layout.findViewById (R.id.textView);","status":"core-diff","id":1762,"createdAt":"2023-06-01T15:58:55.459Z"},{"fileName":"Clone951.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":14,"character":39},"text":"noncore-diff1","codeSnippet":"switch (position) {\n        case 0 :\n            tvLabel.setText (\"Log In\");","status":"noncore-diff","id":1763,"createdAt":"2023-06-01T15:59:04.182Z"},{"fileName":"Clone951.java","fileLine":20,"positionStart":{"line":20,"character":12},"positionEnd":{"line":22,"character":40},"text":"noncore-diff1","codeSnippet":"break;\n        case 1 :\n            tvLabel.setText (\"Sign Up\");","status":"noncore-diff","id":1764,"createdAt":"2023-06-01T15:59:13.421Z"},{"fileName":"Clone951.java","fileLine":28,"positionStart":{"line":28,"character":12},"positionEnd":{"line":30,"character":48},"text":"noncore-diff1","codeSnippet":"break;\n        case 2 :\n            tvLabel.setText (\"Send Reset Link\");","status":"noncore-diff","id":1765,"createdAt":"2023-06-01T15:59:23.283Z"},{"fileName":"Clone951.java","fileLine":36,"positionStart":{"line":36,"character":12},"positionEnd":{"line":37,"character":5},"text":"noncore-diff1","codeSnippet":"break;\n    }","status":"noncore-diff","id":1766,"createdAt":"2023-06-01T15:59:31.723Z"},{"fileName":"Clone951.java","fileLine":43,"positionStart":{"line":43,"character":4},"positionEnd":{"line":50,"character":28},"text":"core-diff2","codeSnippet":"Button button = new Button (container.getContext ());\n    ViewGroup.LayoutParams params = new ViewGroup.LayoutParams (ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);\n    button.setLayoutParams (params);\n    button.setText (String.valueOf (position));\n    LinearLayout layout = new LinearLayout (container.getContext ());\n    layout.setOrientation (LinearLayout.VERTICAL);\n    ViewGroup.LayoutParams layoutParams = new ViewGroup.LayoutParams (ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\n    layout.addView (button);","status":"core-diff","id":1767,"createdAt":"2023-06-01T15:59:40.895Z"},{"fileName":"Clone951.java","fileLine":51,"positionStart":{"line":51,"character":4},"positionEnd":{"line":51,"character":30},"text":"noncore-diff2","codeSnippet":"final int page = position;","status":"noncore-diff","id":1768,"createdAt":"2023-06-01T15:59:56.102Z"},{"fileName":"Clone960.java","fileLine":11,"positionStart":{"line":11,"character":8},"positionEnd":{"line":19,"character":9},"text":"core-sim1","codeSnippet":"boolean oTest = arr.length >= 1 && arr [0] == 'o';\n        boolean zTest = arr.length >= 2 && arr [1] == 'z';\n        if (oTest && zTest) {\n            return \"oz\";\n        } else if (oTest) {\n            return \"o\";\n        } else if (zTest) {\n            return \"z\";\n        }","status":"core-sim","id":1769,"createdAt":"2023-06-01T16:02:27.699Z"},{"fileName":"Clone960.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":31,"character":5},"text":"core-sim1","codeSnippet":"if (str.length () >= 2 && str.substring (0, 2).equals (\"oz\")) {\n        return \"oz\";\n    } else if (str.length () >= 2 && str.substring (1, 2).equals (\"z\")) {\n        return \"z\";\n    } else if (str.length () >= 2 && str.substring (0, 1).equals (\"o\")) {\n        return \"o\";\n    }","status":"core-sim","id":1770,"createdAt":"2023-06-01T16:02:34.969Z"},{"fileName":"Clone960.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":32,"character":14},"text":"core-sim2","codeSnippet":"return \"\";","status":"core-sim","id":1771,"createdAt":"2023-06-01T16:02:45.423Z"},{"fileName":"Clone960.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":14},"text":"core-sim2","codeSnippet":"return \"\";","status":"core-sim","id":1772,"createdAt":"2023-06-01T16:02:51.350Z"},{"fileName":"Clone960.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":10,"character":56},"text":"noncore-diff1","codeSnippet":"if (str != null) {\n        char [] arr = str.toLowerCase ().toCharArray ();","status":"noncore-diff","id":1773,"createdAt":"2023-06-01T16:02:58.824Z"},{"fileName":"Clone960.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":5},"text":"noncore-diff1","codeSnippet":"}","status":"noncore-diff","id":1774,"createdAt":"2023-06-01T16:03:08.502Z"},{"fileName":"Clone963.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":41},"text":"noncore-sim1","codeSnippet":"Scanner in = new Scanner (System.in);","status":"noncore-sim","id":1776,"createdAt":"2023-06-01T16:04:37.758Z"},{"fileName":"Clone963.java","fileLine":22,"positionStart":{"line":22,"character":4},"positionEnd":{"line":22,"character":41},"text":"noncore-sim1","codeSnippet":"Scanner sc = new Scanner (System.in);","status":"noncore-sim","id":1777,"createdAt":"2023-06-01T16:04:43.824Z"},{"fileName":"Clone963.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":27},"text":"core-sim1","codeSnippet":"number = in.nextInt ();","status":"core-sim","id":1778,"createdAt":"2023-06-01T16:05:18.023Z"},{"fileName":"Clone963.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":23,"character":32},"text":"core-sim1","codeSnippet":"int decimal = sc.nextInt ();","status":"core-sim","id":1779,"createdAt":"2023-06-01T16:05:24.372Z"},{"fileName":"Clone963.java","fileLine":25,"positionStart":{"line":25,"character":4},"positionEnd":{"line":33,"character":5},"text":"core-sim2","codeSnippet":"if (decimal <= 0) {\n        System.out.println (\"Please Enter more than 0\");\n    } else {\n        while (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal = decimal / 2;\n        }\n        System.out.println (\"binary is:\" + binary);\n    }","status":"core-sim","id":1780,"createdAt":"2023-06-01T16:05:30.114Z"},{"fileName":"Clone963.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":18,"character":5},"text":"core-sim2","codeSnippet":"if (number < 0) {\n        System.out.println (\"Error: Not a positive integer\");\n    } else {\n        System.out.print (\"Convert to binary is:\");\n        printBinaryform (number);\n    }","status":"core-sim","id":1781,"createdAt":"2023-06-01T16:05:36.070Z"},{"fileName":"Clone963.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":15},"text":"noncore-diff1","codeSnippet":"int number;","status":"noncore-diff","id":1782,"createdAt":"2023-06-01T16:05:42.967Z"},{"fileName":"Clone963.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":11,"character":52},"text":"noncore-diff2","codeSnippet":"System.out.println (\"Enter a positive integer\");","status":"noncore-diff","id":1783,"createdAt":"2023-06-01T16:05:49.389Z"},{"fileName":"Clone963.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":24,"character":23},"text":"noncore-diff1","codeSnippet":"String binary = \"\";","status":"noncore-diff","id":1784,"createdAt":"2023-06-01T16:05:54.740Z"},{"fileName":"Clone964.java","fileLine":56,"positionStart":{"line":56,"character":4},"positionEnd":{"line":56,"character":35},"text":"core-sim1","codeSnippet":"String [] s1 = str.split (\" \");","status":"core-sim","id":1785,"createdAt":"2023-06-01T16:06:29.440Z"},{"fileName":"Clone964.java","fileLine":25,"positionStart":{"line":25,"character":8},"positionEnd":{"line":25,"character":45},"text":"core-sim1","codeSnippet":"stringArray = stringLine.split (\" \");","status":"core-sim","id":1786,"createdAt":"2023-06-01T16:06:41.730Z"},{"fileName":"Clone964.java","fileLine":57,"positionStart":{"line":57,"character":4},"positionEnd":{"line":62,"character":5},"text":"core-diff1","codeSnippet":"for (int i = 0;\n    i <= s1.length - 1; i ++) {\n        if (s1 [i].equals (\"is\")) {\n            count ++;\n        }\n    }","status":"core-diff","id":1787,"createdAt":"2023-06-01T16:06:56.749Z"},{"fileName":"Clone964.java","fileLine":54,"positionStart":{"line":54,"character":4},"positionEnd":{"line":54,"character":18},"text":"noncore-sim1","codeSnippet":"int count = 0;","status":"noncore-sim","id":1788,"createdAt":"2023-06-01T16:19:15.386Z"},{"fileName":"Clone964.java","fileLine":12,"positionStart":{"line":12,"character":4},"positionEnd":{"line":12,"character":21},"text":"noncore-sim1","codeSnippet":"int counLine = 0;","status":"noncore-sim","id":1789,"createdAt":"2023-06-01T16:19:24.307Z"},{"fileName":"Clone964.java","fileLine":28,"positionStart":{"line":28,"character":8},"positionEnd":{"line":43,"character":9},"text":"core-diff2","codeSnippet":"for (int i = 0;\n        i < arrayLength; i ++) {\n            int c = 1;\n            for (int j = i + 1;\n            j < arrayLength; j ++) {\n                if (stringArray [i].equalsIgnoreCase (stringArray [j])) {\n                    c ++;\n                    for (int j2 = j;\n                    j2 < arrayLength; j2 ++) {\n                        stringArray [j2] = stringArray [j2 + 1];\n                        arrayLength = arrayLength - 1;\n                    }\n                }\n            }\n            System.out.println (\"The \" + stringArray [i] + \" present \" + c + \" times .\");\n        }","status":"core-diff","id":1790,"createdAt":"2023-06-01T16:19:37.584Z"},{"fileName":"Clone964.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":11,"character":26},"text":"noncore-diff1","codeSnippet":"FileReader fr = null;\n    BufferedReader br = null;\n    String [] stringArray;","status":"noncore-diff","id":1791,"createdAt":"2023-06-01T16:19:44.744Z"},{"fileName":"Clone964.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":24,"character":40},"text":"noncore-diff1","codeSnippet":"int arrayLength;\n    String s = \"\";\n    String stringLine = \"\";\n    try {\n        fr = new FileReader (\"F:/Line.txt\");\n        br = new BufferedReader (fr);\n        while ((s = br.readLine ()) != null) {\n            stringLine = stringLine + s;\n            stringLine = stringLine + \" \";\n            counLine ++;\n        }\n        System.out.println (stringLine);","status":"noncore-diff","id":1793,"createdAt":"2023-06-01T16:20:10.041Z"},{"fileName":"Clone964.java","fileLine":26,"positionStart":{"line":26,"character":8},"positionEnd":{"line":27,"character":69},"text":"noncore-diff1","codeSnippet":"arrayLength = stringArray.length;\n        System.out.println (\"The number of Words is \" + arrayLength);","status":"noncore-diff","id":1794,"createdAt":"2023-06-01T16:20:17.154Z"},{"fileName":"Clone964.java","fileLine":44,"positionStart":{"line":44,"character":8},"positionEnd":{"line":50,"character":5},"text":"noncore-diff1","codeSnippet":"System.out.println (\"The number of Line is \" + counLine);\n        System.out.println ();\n        fr.close ();\n        br.close ();\n    } catch (Exception e) {\n        e.printStackTrace ();\n    }","status":"noncore-diff","id":1795,"createdAt":"2023-06-01T16:21:01.581Z"},{"fileName":"Clone964.java","fileLine":55,"positionStart":{"line":55,"character":4},"positionEnd":{"line":55,"character":41},"text":"noncore-diff2","codeSnippet":"String str = \"hi this is is is line\";","status":"noncore-diff","id":1796,"createdAt":"2023-06-01T16:21:08.620Z"},{"fileName":"Clone964.java","fileLine":63,"positionStart":{"line":63,"character":4},"positionEnd":{"line":63,"character":31},"text":"noncore-diff2","codeSnippet":"System.out.println (count);","status":"noncore-diff","id":1797,"createdAt":"2023-06-01T16:21:17.879Z"},{"fileName":"Clone966.java","fileLine":46,"positionStart":{"line":46,"character":4},"positionEnd":{"line":72,"character":5},"text":"core-diff1","codeSnippet":"cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }","status":"core-diff","id":1798,"createdAt":"2023-06-01T16:22:10.662Z"},{"fileName":"Clone966.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":42,"character":5},"text":"core-diff2","codeSnippet":"sheetNew.setDisplayFormulas (sheetOld.isDisplayFormulas ());\n    sheetNew.setDisplayGridlines (sheetOld.isDisplayGridlines ());\n    sheetNew.setDisplayGuts (sheetOld.getDisplayGuts ());\n    sheetNew.setDisplayRowColHeadings (sheetOld.isDisplayRowColHeadings ());\n    sheetNew.setDisplayZeros (sheetOld.isDisplayZeros ());\n    sheetNew.setFitToPage (sheetOld.getFitToPage ());\n    sheetNew.setHorizontallyCenter (sheetOld.getHorizontallyCenter ());\n    sheetNew.setMargin (Sheet.BottomMargin, sheetOld.getMargin (Sheet.BottomMargin));\n    sheetNew.setMargin (Sheet.FooterMargin, sheetOld.getMargin (Sheet.FooterMargin));\n    sheetNew.setMargin (Sheet.HeaderMargin, sheetOld.getMargin (Sheet.HeaderMargin));\n    sheetNew.setMargin (Sheet.LeftMargin, sheetOld.getMargin (Sheet.LeftMargin));\n    sheetNew.setMargin (Sheet.RightMargin, sheetOld.getMargin (Sheet.RightMargin));\n    sheetNew.setMargin (Sheet.TopMargin, sheetOld.getMargin (Sheet.TopMargin));\n    sheetNew.setPrintGridlines (sheetNew.isPrintGridlines ());\n    sheetNew.setRightToLeft (sheetNew.isRightToLeft ());\n    sheetNew.setRowSumsBelow (sheetNew.getRowSumsBelow ());\n    sheetNew.setRowSumsRight (sheetNew.getRowSumsRight ());\n    sheetNew.setVerticallyCenter (sheetOld.getVerticallyCenter ());\n    HSSFRow rowNew;\n    for (Row row : sheetOld) {\n        rowNew = sheetNew.createRow (row.getRowNum ());\n        if (rowNew != null) this.transform (workbookOld, workbookNew, (XSSFRow) row, rowNew);\n    }\n    for (int i = 0;\n    i < this.lastColumn; i ++) {\n        sheetNew.setColumnWidth (i, sheetOld.getColumnWidth (i));\n        sheetNew.setColumnHidden (i, sheetOld.isColumnHidden (i));\n    }\n    for (int i = 0;\n    i < sheetOld.getNumMergedRegions (); i ++) {\n        CellRangeAddress merged = sheetOld.getMergedRegion (i);\n        sheetNew.addMergedRegion (merged);\n    }","status":"core-diff","id":1799,"createdAt":"2023-06-01T16:25:33.123Z"},{"fileName":"Clone966.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":43},"text":"noncore-diff1","codeSnippet":"System.out.println (\"transform Sheet\");","status":"noncore-diff","id":1800,"createdAt":"2023-06-01T16:25:44.500Z"},{"fileName":"Clone973.java","fileLine":46,"positionStart":{"line":46,"character":4},"positionEnd":{"line":56,"character":19},"text":"core-diff1","codeSnippet":"XSSFFont fontNew = this.workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;","status":"core-diff","id":1801,"createdAt":"2023-06-01T16:26:11.280Z"},{"fileName":"Clone973.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":42,"character":5},"text":"core-diff2","codeSnippet":"sheetNew.setDisplayFormulas (sheetOld.isDisplayFormulas ());\n    sheetNew.setDisplayGridlines (sheetOld.isDisplayGridlines ());\n    sheetNew.setDisplayGuts (sheetOld.getDisplayGuts ());\n    sheetNew.setDisplayRowColHeadings (sheetOld.isDisplayRowColHeadings ());\n    sheetNew.setDisplayZeros (sheetOld.isDisplayZeros ());\n    sheetNew.setFitToPage (sheetOld.getFitToPage ());\n    sheetNew.setHorizontallyCenter (sheetOld.getHorizontallyCenter ());\n    sheetNew.setMargin (Sheet.BottomMargin, sheetOld.getMargin (Sheet.BottomMargin));\n    sheetNew.setMargin (Sheet.FooterMargin, sheetOld.getMargin (Sheet.FooterMargin));\n    sheetNew.setMargin (Sheet.HeaderMargin, sheetOld.getMargin (Sheet.HeaderMargin));\n    sheetNew.setMargin (Sheet.LeftMargin, sheetOld.getMargin (Sheet.LeftMargin));\n    sheetNew.setMargin (Sheet.RightMargin, sheetOld.getMargin (Sheet.RightMargin));\n    sheetNew.setMargin (Sheet.TopMargin, sheetOld.getMargin (Sheet.TopMargin));\n    sheetNew.setPrintGridlines (sheetNew.isPrintGridlines ());\n    sheetNew.setRightToLeft (sheetNew.isRightToLeft ());\n    sheetNew.setRowSumsBelow (sheetNew.getRowSumsBelow ());\n    sheetNew.setRowSumsRight (sheetNew.getRowSumsRight ());\n    sheetNew.setVerticallyCenter (sheetOld.getVerticallyCenter ());\n    HSSFRow rowNew;\n    for (Row row : sheetOld) {\n        rowNew = sheetNew.createRow (row.getRowNum ());\n        if (rowNew != null) this.transform (workbookOld, workbookNew, (XSSFRow) row, rowNew);\n    }\n    for (int i = 0;\n    i < this.lastColumn; i ++) {\n        sheetNew.setColumnWidth (i, sheetOld.getColumnWidth (i));\n        sheetNew.setColumnHidden (i, sheetOld.isColumnHidden (i));\n    }\n    for (int i = 0;\n    i < sheetOld.getNumMergedRegions (); i ++) {\n        CellRangeAddress merged = sheetOld.getMergedRegion (i);\n        sheetNew.addMergedRegion (merged);\n    }","status":"core-diff","id":1802,"createdAt":"2023-06-01T16:26:20.884Z"},{"fileName":"Clone973.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":43},"text":"noncore-diff1","codeSnippet":"System.out.println (\"transform Sheet\");","status":"noncore-diff","id":1803,"createdAt":"2023-06-01T16:26:27.678Z"},{"fileName":"Clone974.java","fileLine":50,"positionStart":{"line":50,"character":8},"positionEnd":{"line":50,"character":97},"text":"core-sim1","codeSnippet":"if (cellNew != null) this.transform (workbookOld, workbookNew, (HSSFCell) cell, cellNew);","status":"core-sim","id":1804,"createdAt":"2023-06-01T16:28:29.729Z"},{"fileName":"Clone974.java","fileLine":31,"positionStart":{"line":31,"character":8},"positionEnd":{"line":31,"character":93},"text":"core-sim1","codeSnippet":"if (rowNew != null) this.transform (workbookOld, workbookNew, (XSSFRow) row, rowNew);","status":"core-sim","id":1805,"createdAt":"2023-06-01T16:28:35.530Z"},{"fileName":"Clone974.java","fileLine":46,"positionStart":{"line":46,"character":4},"positionEnd":{"line":46,"character":21},"text":"noncore-diff1","codeSnippet":"XSSFCell cellNew;","status":"noncore-diff","id":1806,"createdAt":"2023-06-01T16:28:47.138Z"},{"fileName":"Clone974.java","fileLine":47,"positionStart":{"line":47,"character":4},"positionEnd":{"line":49,"character":82},"text":"core-diff1","codeSnippet":"rowNew.setHeight (rowOld.getHeight ());\n    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());","status":"core-diff","id":1807,"createdAt":"2023-06-01T16:29:01.342Z"},{"fileName":"Clone974.java","fileLine":51,"positionStart":{"line":51,"character":4},"positionEnd":{"line":52,"character":75},"text":"core-diff1","codeSnippet":"}\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());","status":"core-diff","id":1808,"createdAt":"2023-06-01T16:29:08.490Z"},{"fileName":"Clone974.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":30,"character":55},"text":"core-diff2","codeSnippet":"sheetNew.setDisplayFormulas (sheetOld.isDisplayFormulas ());\n    sheetNew.setDisplayGridlines (sheetOld.isDisplayGridlines ());\n    sheetNew.setDisplayGuts (sheetOld.getDisplayGuts ());\n    sheetNew.setDisplayRowColHeadings (sheetOld.isDisplayRowColHeadings ());\n    sheetNew.setDisplayZeros (sheetOld.isDisplayZeros ());\n    sheetNew.setFitToPage (sheetOld.getFitToPage ());\n    sheetNew.setHorizontallyCenter (sheetOld.getHorizontallyCenter ());\n    sheetNew.setMargin (Sheet.BottomMargin, sheetOld.getMargin (Sheet.BottomMargin));\n    sheetNew.setMargin (Sheet.FooterMargin, sheetOld.getMargin (Sheet.FooterMargin));\n    sheetNew.setMargin (Sheet.HeaderMargin, sheetOld.getMargin (Sheet.HeaderMargin));\n    sheetNew.setMargin (Sheet.LeftMargin, sheetOld.getMargin (Sheet.LeftMargin));\n    sheetNew.setMargin (Sheet.RightMargin, sheetOld.getMargin (Sheet.RightMargin));\n    sheetNew.setMargin (Sheet.TopMargin, sheetOld.getMargin (Sheet.TopMargin));\n    sheetNew.setPrintGridlines (sheetNew.isPrintGridlines ());\n    sheetNew.setRightToLeft (sheetNew.isRightToLeft ());\n    sheetNew.setRowSumsBelow (sheetNew.getRowSumsBelow ());\n    sheetNew.setRowSumsRight (sheetNew.getRowSumsRight ());\n    sheetNew.setVerticallyCenter (sheetOld.getVerticallyCenter ());\n    HSSFRow rowNew;\n    for (Row row : sheetOld) {\n        rowNew = sheetNew.createRow (row.getRowNum ());","status":"core-diff","id":1809,"createdAt":"2023-06-01T16:29:17.869Z"},{"fileName":"Clone974.java","fileLine":32,"positionStart":{"line":32,"character":4},"positionEnd":{"line":42,"character":5},"text":"core-diff2","codeSnippet":"}\n    for (int i = 0;\n    i < this.lastColumn; i ++) {\n        sheetNew.setColumnWidth (i, sheetOld.getColumnWidth (i));\n        sheetNew.setColumnHidden (i, sheetOld.isColumnHidden (i));\n    }\n    for (int i = 0;\n    i < sheetOld.getNumMergedRegions (); i ++) {\n        CellRangeAddress merged = sheetOld.getMergedRegion (i);\n        sheetNew.addMergedRegion (merged);\n    }","status":"core-diff","id":1810,"createdAt":"2023-06-01T16:29:24.367Z"},{"fileName":"Clone974.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":43},"text":"noncore-diff1","codeSnippet":"System.out.println (\"transform Sheet\");","status":"noncore-diff","id":1811,"createdAt":"2023-06-01T16:29:30.020Z"},{"fileName":"Clone975.java","fileLine":46,"positionStart":{"line":46,"character":4},"positionEnd":{"line":72,"character":5},"text":"core-diff1","codeSnippet":"cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (XSSFCellStyle) workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }","status":"core-diff","id":1812,"createdAt":"2023-06-01T16:34:50.976Z"},{"fileName":"Clone975.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":42,"character":5},"text":"core-diff2","codeSnippet":"sheetNew.setDisplayFormulas (sheetOld.isDisplayFormulas ());\n    sheetNew.setDisplayGridlines (sheetOld.isDisplayGridlines ());\n    sheetNew.setDisplayGuts (sheetOld.getDisplayGuts ());\n    sheetNew.setDisplayRowColHeadings (sheetOld.isDisplayRowColHeadings ());\n    sheetNew.setDisplayZeros (sheetOld.isDisplayZeros ());\n    sheetNew.setFitToPage (sheetOld.getFitToPage ());\n    sheetNew.setHorizontallyCenter (sheetOld.getHorizontallyCenter ());\n    sheetNew.setMargin (Sheet.BottomMargin, sheetOld.getMargin (Sheet.BottomMargin));\n    sheetNew.setMargin (Sheet.FooterMargin, sheetOld.getMargin (Sheet.FooterMargin));\n    sheetNew.setMargin (Sheet.HeaderMargin, sheetOld.getMargin (Sheet.HeaderMargin));\n    sheetNew.setMargin (Sheet.LeftMargin, sheetOld.getMargin (Sheet.LeftMargin));\n    sheetNew.setMargin (Sheet.RightMargin, sheetOld.getMargin (Sheet.RightMargin));\n    sheetNew.setMargin (Sheet.TopMargin, sheetOld.getMargin (Sheet.TopMargin));\n    sheetNew.setPrintGridlines (sheetNew.isPrintGridlines ());\n    sheetNew.setRightToLeft (sheetNew.isRightToLeft ());\n    sheetNew.setRowSumsBelow (sheetNew.getRowSumsBelow ());\n    sheetNew.setRowSumsRight (sheetNew.getRowSumsRight ());\n    sheetNew.setVerticallyCenter (sheetOld.getVerticallyCenter ());\n    HSSFRow rowNew;\n    for (Row row : sheetOld) {\n        rowNew = sheetNew.createRow (row.getRowNum ());\n        if (rowNew != null) this.transform (workbookOld, workbookNew, (XSSFRow) row, rowNew);\n    }\n    for (int i = 0;\n    i < this.lastColumn; i ++) {\n        sheetNew.setColumnWidth (i, sheetOld.getColumnWidth (i));\n        sheetNew.setColumnHidden (i, sheetOld.isColumnHidden (i));\n    }\n    for (int i = 0;\n    i < sheetOld.getNumMergedRegions (); i ++) {\n        CellRangeAddress merged = sheetOld.getMergedRegion (i);\n        sheetNew.addMergedRegion (merged);\n    }","status":"core-diff","id":1813,"createdAt":"2023-06-01T16:35:00.326Z"},{"fileName":"Clone975.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":43},"text":"noncore-diff1","codeSnippet":"System.out.println (\"transform Sheet\");","status":"noncore-diff","id":1814,"createdAt":"2023-06-01T16:35:08.180Z"},{"fileName":"Clone976.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":42,"character":5},"text":"core-diff1","codeSnippet":"sheetNew.setDisplayFormulas (sheetOld.isDisplayFormulas ());\n    sheetNew.setDisplayGridlines (sheetOld.isDisplayGridlines ());\n    sheetNew.setDisplayGuts (sheetOld.getDisplayGuts ());\n    sheetNew.setDisplayRowColHeadings (sheetOld.isDisplayRowColHeadings ());\n    sheetNew.setDisplayZeros (sheetOld.isDisplayZeros ());\n    sheetNew.setFitToPage (sheetOld.getFitToPage ());\n    sheetNew.setHorizontallyCenter (sheetOld.getHorizontallyCenter ());\n    sheetNew.setMargin (Sheet.BottomMargin, sheetOld.getMargin (Sheet.BottomMargin));\n    sheetNew.setMargin (Sheet.FooterMargin, sheetOld.getMargin (Sheet.FooterMargin));\n    sheetNew.setMargin (Sheet.HeaderMargin, sheetOld.getMargin (Sheet.HeaderMargin));\n    sheetNew.setMargin (Sheet.LeftMargin, sheetOld.getMargin (Sheet.LeftMargin));\n    sheetNew.setMargin (Sheet.RightMargin, sheetOld.getMargin (Sheet.RightMargin));\n    sheetNew.setMargin (Sheet.TopMargin, sheetOld.getMargin (Sheet.TopMargin));\n    sheetNew.setPrintGridlines (sheetNew.isPrintGridlines ());\n    sheetNew.setRightToLeft (sheetNew.isRightToLeft ());\n    sheetNew.setRowSumsBelow (sheetNew.getRowSumsBelow ());\n    sheetNew.setRowSumsRight (sheetNew.getRowSumsRight ());\n    sheetNew.setVerticallyCenter (sheetOld.getVerticallyCenter ());\n    HSSFRow rowNew;\n    for (Row row : sheetOld) {\n        rowNew = sheetNew.createRow (row.getRowNum ());\n        if (rowNew != null) this.transform (workbookOld, workbookNew, (XSSFRow) row, rowNew);\n    }\n    for (int i = 0;\n    i < this.lastColumn; i ++) {\n        sheetNew.setColumnWidth (i, sheetOld.getColumnWidth (i));\n        sheetNew.setColumnHidden (i, sheetOld.isColumnHidden (i));\n    }\n    for (int i = 0;\n    i < sheetOld.getNumMergedRegions (); i ++) {\n        CellRangeAddress merged = sheetOld.getMergedRegion (i);\n        sheetNew.addMergedRegion (merged);\n    }","status":"core-diff","id":1815,"createdAt":"2023-06-01T16:38:21.081Z"},{"fileName":"Clone976.java","fileLine":46,"positionStart":{"line":46,"character":4},"positionEnd":{"line":61,"character":39},"text":"core-diff2","codeSnippet":"styleNew.setAlignment (styleOld.getAlignment ());\n    styleNew.setBorderBottom (styleOld.getBorderBottom ());\n    styleNew.setBorderLeft (styleOld.getBorderLeft ());\n    styleNew.setBorderRight (styleOld.getBorderRight ());\n    styleNew.setBorderTop (styleOld.getBorderTop ());\n    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));\n    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());\n    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());\n    styleNew.setFillPattern (styleOld.getFillPattern ());\n    styleNew.setFont (this.transform (workbookNew, styleOld.getFont (workbookOld)));\n    styleNew.setHidden (styleOld.getHidden ());\n    styleNew.setIndention (styleOld.getIndention ());\n    styleNew.setLocked (styleOld.getLocked ());\n    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());\n    styleNew.setWrapText (styleOld.getWrapText ());\n    this.styleMap.put (hash, styleNew);","status":"core-diff","id":1816,"createdAt":"2023-06-01T16:38:40.041Z"},{"fileName":"Clone976.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":43},"text":"noncore-diff1","codeSnippet":"System.out.println (\"transform Sheet\");","status":"noncore-diff","id":1817,"createdAt":"2023-06-01T16:38:52.708Z"},{"fileName":"Clone977.java","fileLine":46,"positionStart":{"line":46,"character":4},"positionEnd":{"line":56,"character":19},"text":"core-diff1","codeSnippet":"XSSFFont fontNew = workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;","status":"core-diff","id":1818,"createdAt":"2023-06-01T16:39:08.126Z"},{"fileName":"Clone977.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":42,"character":5},"text":"core-diff2","codeSnippet":"sheetNew.setDisplayFormulas (sheetOld.isDisplayFormulas ());\n    sheetNew.setDisplayGridlines (sheetOld.isDisplayGridlines ());\n    sheetNew.setDisplayGuts (sheetOld.getDisplayGuts ());\n    sheetNew.setDisplayRowColHeadings (sheetOld.isDisplayRowColHeadings ());\n    sheetNew.setDisplayZeros (sheetOld.isDisplayZeros ());\n    sheetNew.setFitToPage (sheetOld.getFitToPage ());\n    sheetNew.setHorizontallyCenter (sheetOld.getHorizontallyCenter ());\n    sheetNew.setMargin (Sheet.BottomMargin, sheetOld.getMargin (Sheet.BottomMargin));\n    sheetNew.setMargin (Sheet.FooterMargin, sheetOld.getMargin (Sheet.FooterMargin));\n    sheetNew.setMargin (Sheet.HeaderMargin, sheetOld.getMargin (Sheet.HeaderMargin));\n    sheetNew.setMargin (Sheet.LeftMargin, sheetOld.getMargin (Sheet.LeftMargin));\n    sheetNew.setMargin (Sheet.RightMargin, sheetOld.getMargin (Sheet.RightMargin));\n    sheetNew.setMargin (Sheet.TopMargin, sheetOld.getMargin (Sheet.TopMargin));\n    sheetNew.setPrintGridlines (sheetNew.isPrintGridlines ());\n    sheetNew.setRightToLeft (sheetNew.isRightToLeft ());\n    sheetNew.setRowSumsBelow (sheetNew.getRowSumsBelow ());\n    sheetNew.setRowSumsRight (sheetNew.getRowSumsRight ());\n    sheetNew.setVerticallyCenter (sheetOld.getVerticallyCenter ());\n    HSSFRow rowNew;\n    for (Row row : sheetOld) {\n        rowNew = sheetNew.createRow (row.getRowNum ());\n        if (rowNew != null) this.transform (workbookOld, workbookNew, (XSSFRow) row, rowNew);\n    }\n    for (int i = 0;\n    i < this.lastColumn; i ++) {\n        sheetNew.setColumnWidth (i, sheetOld.getColumnWidth (i));\n        sheetNew.setColumnHidden (i, sheetOld.isColumnHidden (i));\n    }\n    for (int i = 0;\n    i < sheetOld.getNumMergedRegions (); i ++) {\n        CellRangeAddress merged = sheetOld.getMergedRegion (i);\n        sheetNew.addMergedRegion (merged);\n    }","status":"core-diff","id":1819,"createdAt":"2023-06-01T16:39:16.642Z"},{"fileName":"Clone977.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":43},"text":"noncore-diff1","codeSnippet":"System.out.println (\"transform Sheet\");","status":"noncore-diff","id":1820,"createdAt":"2023-06-01T16:39:23.844Z"},{"fileName":"Clone978.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":21},"text":"noncore-diff1","codeSnippet":"HSSFCell cellNew;","status":"noncore-diff","id":1822,"createdAt":"2023-06-01T16:40:11.878Z"},{"fileName":"Clone978.java","fileLine":13,"positionStart":{"line":13,"character":8},"positionEnd":{"line":13,"character":97},"text":"core-sim1","codeSnippet":"if (cellNew != null) this.transform (workbookOld, workbookNew, (XSSFCell) cell, cellNew);","status":"core-sim","id":1823,"createdAt":"2023-06-01T16:40:48.052Z"},{"fileName":"Clone978.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":21,"character":29},"text":"core-sim1","codeSnippet":"if (this.styleMap != null","status":"core-sim","id":1824,"createdAt":"2023-06-01T16:41:00.356Z"},{"fileName":"Clone978.java","fileLine":21,"positionStart":{"line":21,"character":67},"positionEnd":{"line":23,"character":5},"text":"core-sim1","codeSnippet":") {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());\n    }","status":"core-sim","id":1825,"createdAt":"2023-06-01T16:41:07.315Z"},{"fileName":"Clone978.java","fileLine":12,"positionStart":{"line":12,"character":61},"positionEnd":{"line":12,"character":80},"text":"core-sim2","codeSnippet":"cell.getCellType ()","status":"core-sim","id":1826,"createdAt":"2023-06-01T16:41:24.371Z"},{"fileName":"Clone978.java","fileLine":25,"positionStart":{"line":25,"character":12},"positionEnd":{"line":25,"character":34},"text":"core-sim2","codeSnippet":"cellOld.getCellType ()","status":"core-sim","id":1827,"createdAt":"2023-06-01T16:41:31.550Z"},{"fileName":"Clone978.java","fileLine":44,"positionStart":{"line":44,"character":70},"positionEnd":{"line":44,"character":92},"text":"core-sim2","codeSnippet":"cellOld.getCellType ()","status":"core-sim","id":1828,"createdAt":"2023-06-01T16:41:38.261Z"},{"fileName":"Clone978.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":12,"character":60},"text":"core-diff1","codeSnippet":"rowNew.setHeight (rowOld.getHeight ());\n    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (),","status":"core-diff","id":1829,"createdAt":"2023-06-01T16:42:41.557Z"},{"fileName":"Clone978.java","fileLine":12,"positionStart":{"line":12,"character":80},"positionEnd":{"line":12,"character":82},"text":"core-diff1","codeSnippet":");","status":"core-diff","id":1830,"createdAt":"2023-06-01T16:42:59.478Z"},{"fileName":"Clone978.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":15,"character":75},"text":"core-diff1","codeSnippet":"}\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());","status":"core-diff","id":1831,"createdAt":"2023-06-01T16:43:06.770Z"},{"fileName":"Clone978.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":20,"character":55},"text":"core-diff2","codeSnippet":"cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();","status":"core-diff","id":1832,"createdAt":"2023-06-01T16:44:07.398Z"},{"fileName":"Clone978.java","fileLine":21,"positionStart":{"line":21,"character":30},"positionEnd":{"line":21,"character":67},"text":"core-diff3","codeSnippet":"&& ! this.styleMap.containsKey (hash)","status":"core-diff","id":1833,"createdAt":"2023-06-01T16:44:12.949Z"},{"fileName":"Clone978.java","fileLine":24,"positionStart":{"line":24,"character":4},"positionEnd":{"line":44,"character":70},"text":"core-diff2","codeSnippet":"cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + ","status":"core-diff","id":1834,"createdAt":"2023-06-01T16:44:20.331Z"},{"fileName":"Clone978.java","fileLine":44,"positionStart":{"line":44,"character":92},"positionEnd":{"line":45,"character":5},"text":"core-diff2","codeSnippet":");\n    }","status":"core-diff","id":1835,"createdAt":"2023-06-01T16:44:27.342Z"},{"fileName":"Clone983.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":21},"text":"noncore-sim1","codeSnippet":"HSSFCell cellNew;","status":"noncore-sim","id":1836,"createdAt":"2023-06-01T16:47:41.233Z"},{"fileName":"Clone983.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":21},"text":"noncore-sim1","codeSnippet":"XSSFCell cellNew;","status":"noncore-sim","id":1837,"createdAt":"2023-06-01T16:47:57.276Z"},{"fileName":"Clone983.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":43},"text":"core-sim1","codeSnippet":"rowNew.setHeight (rowOld.getHeight ());","status":"core-sim","id":1838,"createdAt":"2023-06-01T16:48:06.017Z"},{"fileName":"Clone983.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":20,"character":43},"text":"core-sim1","codeSnippet":"rowNew.setHeight (rowOld.getHeight ());","status":"core-sim","id":1839,"createdAt":"2023-06-01T16:48:14.231Z"},{"fileName":"Clone983.java","fileLine":26,"positionStart":{"line":26,"character":3},"positionEnd":{"line":30,"character":75},"text":"core-sim2","codeSnippet":" for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());\n        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);\n    }\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());","status":"core-sim","id":1840,"createdAt":"2023-06-01T16:48:22.057Z"},{"fileName":"Clone983.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":16,"character":1},"text":"core-sim2","codeSnippet":"for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());\n        if (cellNew != null) this.transform (workbookOld, workbookNew, (XSSFCell) cell, cellNew);\n    }\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());\n}","status":"core-sim","id":1841,"createdAt":"2023-06-01T16:48:28.966Z"},{"fileName":"Clone983.java","fileLine":21,"positionStart":{"line":21,"character":4},"positionEnd":{"line":25,"character":5},"text":"core-diff1","codeSnippet":"if (rowOld.getRowStyle () != null) {\n        Integer hash = rowOld.getRowStyle ().hashCode ();\n        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());\n        rowNew.setRowStyle (this.styleMap.get (hash));\n    }","status":"core-diff","id":1842,"createdAt":"2023-06-01T16:48:39.308Z"},{"fileName":"Clone987.java","fileLine":38,"positionStart":{"line":38,"character":4},"positionEnd":{"line":41,"character":5},"text":"core-sim1","codeSnippet":"for (Row row : sheetOld) {\n        rowNew = sheetNew.createRow (row.getRowNum ());\n        if (rowNew != null) this.transform (workbookOld, workbookNew, (HSSFRow) row, rowNew);\n    }","status":"core-sim","id":1843,"createdAt":"2023-06-01T16:48:58.618Z"},{"fileName":"Clone987.java","fileLine":11,"positionStart":{"line":11,"character":4},"positionEnd":{"line":14,"character":5},"text":"core-sim1","codeSnippet":"for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());\n        if (cellNew != null) this.transform (workbookOld, workbookNew, (XSSFCell) cell, cellNew);\n    }","status":"core-sim","id":1844,"createdAt":"2023-06-01T16:49:07.370Z"},{"fileName":"Clone987.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":9,"character":21},"text":"noncore-diff1","codeSnippet":"HSSFCell cellNew;","status":"noncore-diff","id":1845,"createdAt":"2023-06-01T16:49:19.660Z"},{"fileName":"Clone987.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":10,"character":43},"text":"core-diff1","codeSnippet":"rowNew.setHeight (rowOld.getHeight ());","status":"core-diff","id":1846,"createdAt":"2023-06-01T16:49:26.741Z"},{"fileName":"Clone987.java","fileLine":15,"positionStart":{"line":15,"character":4},"positionEnd":{"line":15,"character":75},"text":"core-diff1","codeSnippet":"this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());","status":"core-diff","id":1847,"createdAt":"2023-06-01T16:50:23.730Z"},{"fileName":"Clone987.java","fileLine":20,"positionStart":{"line":20,"character":4},"positionEnd":{"line":36,"character":67},"text":"core-diff3","codeSnippet":"sheetNew.setDisplayFormulas (sheetOld.isDisplayFormulas ());\n    sheetNew.setDisplayGridlines (sheetOld.isDisplayGridlines ());\n    sheetNew.setDisplayGuts (sheetOld.getDisplayGuts ());\n    sheetNew.setDisplayRowColHeadings (sheetOld.isDisplayRowColHeadings ());\n    sheetNew.setDisplayZeros (sheetOld.isDisplayZeros ());\n    sheetNew.setFitToPage (sheetOld.getFitToPage ());\n    sheetNew.setHorizontallyCenter (sheetOld.getHorizontallyCenter ());\n    sheetNew.setMargin (Sheet.BottomMargin, sheetOld.getMargin (Sheet.BottomMargin));\n    sheetNew.setMargin (Sheet.FooterMargin, sheetOld.getMargin (Sheet.FooterMargin));\n    sheetNew.setMargin (Sheet.HeaderMargin, sheetOld.getMargin (Sheet.HeaderMargin));\n    sheetNew.setMargin (Sheet.LeftMargin, sheetOld.getMargin (Sheet.LeftMargin));\n    sheetNew.setMargin (Sheet.RightMargin, sheetOld.getMargin (Sheet.RightMargin));\n    sheetNew.setMargin (Sheet.TopMargin, sheetOld.getMargin (Sheet.TopMargin));\n    sheetNew.setPrintGridlines (sheetNew.isPrintGridlines ());\n    sheetNew.setRowSumsBelow (sheetNew.getRowSumsBelow ());\n    sheetNew.setRowSumsRight (sheetNew.getRowSumsRight ());\n    sheetNew.setVerticallyCenter (sheetOld.getVerticallyCenter ());","status":"core-diff","id":1848,"createdAt":"2023-06-01T16:50:35.555Z"},{"fileName":"Clone987.java","fileLine":42,"positionStart":{"line":42,"character":4},"positionEnd":{"line":51,"character":5},"text":"core-diff2","codeSnippet":"for (int i = 0;\n    i < this.lastColumn; i ++) {\n        sheetNew.setColumnWidth (i, sheetOld.getColumnWidth (i));\n        sheetNew.setColumnHidden (i, sheetOld.isColumnHidden (i));\n    }\n    for (int i = 0;\n    i < sheetOld.getNumMergedRegions (); i ++) {\n        CellRangeAddress merged = sheetOld.getMergedRegion (i);\n        sheetNew.addMergedRegion (merged);\n    }","status":"core-diff","id":1849,"createdAt":"2023-06-01T16:51:05.204Z"},{"fileName":"Clone987.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":19,"character":43},"text":"noncore-diff1","codeSnippet":"System.out.println (\"transform Sheet\");","status":"noncore-diff","id":1850,"createdAt":"2023-06-01T16:51:14.691Z"},{"fileName":"Clone987.java","fileLine":37,"positionStart":{"line":37,"character":4},"positionEnd":{"line":37,"character":19},"text":"noncore-diff2","codeSnippet":"XSSFRow rowNew;","status":"noncore-diff","id":1851,"createdAt":"2023-06-01T16:51:19.259Z"},{"fileName":"Clone988.java","fileLine":12,"positionStart":{"line":12,"character":61},"positionEnd":{"line":12,"character":80},"text":"core-sim1","codeSnippet":"cell.getCellType ()","status":"core-sim","id":1852,"createdAt":"2023-06-01T16:52:16.481Z"},{"fileName":"Clone988.java","fileLine":25,"positionStart":{"line":25,"character":12},"positionEnd":{"line":25,"character":34},"text":"core-sim1","codeSnippet":"cellOld.getCellType ()","status":"core-sim","id":1853,"createdAt":"2023-06-01T16:52:43.837Z"},{"fileName":"Clone988.java","fileLine":44,"positionStart":{"line":44,"character":70},"positionEnd":{"line":44,"character":92},"text":"core-sim1","codeSnippet":"cellOld.getCellType ()","status":"core-sim","id":1854,"createdAt":"2023-06-01T16:52:51.467Z"},{"fileName":"Clone988.java","fileLine":22,"positionStart":{"line":22,"character":8},"positionEnd":{"line":22,"character":48},"text":"core-sim2","codeSnippet":"this.transform (workbookOld, workbookNew","status":"core-sim","id":1855,"createdAt":"2023-06-01T16:53:09.986Z"},{"fileName":"Clone988.java","fileLine":22,"positionStart":{"line":22,"character":127},"positionEnd":{"line":22,"character":129},"text":"core-sim2","codeSnippet":");","status":"core-sim","id":1856,"createdAt":"2023-06-01T16:53:16.230Z"},{"fileName":"Clone988.java","fileLine":13,"positionStart":{"line":13,"character":29},"positionEnd":{"line":13,"character":69},"text":"core-sim2","codeSnippet":"this.transform (workbookOld, workbookNew","status":"core-sim","id":1858,"createdAt":"2023-06-01T16:53:36.210Z"},{"fileName":"Clone988.java","fileLine":13,"positionStart":{"line":13,"character":95},"positionEnd":{"line":13,"character":97},"text":"core-sim2","codeSnippet":");","status":"core-sim","id":1859,"createdAt":"2023-06-01T16:53:43.901Z"},{"fileName":"Clone988.java","fileLine":10,"positionStart":{"line":10,"character":4},"positionEnd":{"line":12,"character":60},"text":"core-diff1","codeSnippet":"rowNew.setHeight (rowOld.getHeight ());\n    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (),","status":"core-diff","id":1860,"createdAt":"2023-06-01T16:56:58.543Z"},{"fileName":"Clone988.java","fileLine":12,"positionStart":{"line":12,"character":80},"positionEnd":{"line":13,"character":28},"text":"core-diff1","codeSnippet":");\n        if (cellNew != null)","status":"core-diff","id":1861,"createdAt":"2023-06-01T16:57:07.345Z"},{"fileName":"Clone988.java","fileLine":13,"positionStart":{"line":13,"character":69},"positionEnd":{"line":13,"character":95},"text":"core-diff3","codeSnippet":", (XSSFCell) cell, cellNew","status":"core-diff","id":1862,"createdAt":"2023-06-01T16:57:20.162Z"},{"fileName":"Clone988.java","fileLine":14,"positionStart":{"line":14,"character":4},"positionEnd":{"line":15,"character":75},"text":"core-diff1","codeSnippet":"}\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());","status":"core-diff","id":1863,"createdAt":"2023-06-01T16:58:41.061Z"},{"fileName":"Clone988.java","fileLine":19,"positionStart":{"line":19,"character":4},"positionEnd":{"line":21,"character":70},"text":"core-diff2","codeSnippet":"cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {","status":"core-diff","id":1864,"createdAt":"2023-06-01T16:58:48.992Z"},{"fileName":"Clone988.java","fileLine":22,"positionStart":{"line":22,"character":48},"positionEnd":{"line":22,"character":127},"text":"core-diff3","codeSnippet":", hash, cellOld.getCellStyle (), (XSSFCellStyle) workbookNew.createCellStyle ()","status":"core-diff","id":1865,"createdAt":"2023-06-01T16:58:58.019Z"},{"fileName":"Clone988.java","fileLine":23,"positionStart":{"line":23,"character":4},"positionEnd":{"line":25,"character":12},"text":"core-diff2","codeSnippet":"}\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (","status":"core-diff","id":1866,"createdAt":"2023-06-01T16:59:13.899Z"},{"fileName":"Clone988.java","fileLine":25,"positionStart":{"line":25,"character":34},"positionEnd":{"line":44,"character":70},"text":"core-diff2","codeSnippet":") {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + ","status":"core-diff","id":1867,"createdAt":"2023-06-01T16:59:20.676Z"},{"fileName":"Clone988.java","fileLine":44,"positionStart":{"line":44,"character":92},"positionEnd":{"line":45,"character":5},"text":"core-diff2","codeSnippet":");\n    }","status":"core-diff","id":1868,"createdAt":"2023-06-01T16:59:27.855Z"},{"fileName":"Clone992.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":35,"character":5},"text":"core-diff1","codeSnippet":"cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }","status":"core-diff","id":1869,"createdAt":"2023-06-01T17:00:42.031Z"},{"fileName":"Clone992.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":49,"character":19},"text":"core-diff2","codeSnippet":"HSSFFont fontNew = workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;","status":"core-diff","id":1870,"createdAt":"2023-06-01T17:00:49.013Z"},{"fileName":"Clone995.java","fileLine":48,"positionStart":{"line":48,"character":29},"positionEnd":{"line":48,"character":45},"text":"core-sim1","codeSnippet":"this.transform (","status":"core-sim","id":1874,"createdAt":"2023-06-01T17:02:15.958Z"},{"fileName":"Clone995.java","fileLine":48,"positionStart":{"line":48,"character":69},"positionEnd":{"line":48,"character":71},"text":"core-sim1","codeSnippet":");","status":"core-sim","id":1875,"createdAt":"2023-06-01T17:02:21.258Z"},{"fileName":"Clone995.java","fileLine":12,"positionStart":{"line":12,"character":8},"positionEnd":{"line":12,"character":24},"text":"core-sim1","codeSnippet":"this.transform (","status":"core-sim","id":1876,"createdAt":"2023-06-01T17:02:29.509Z"},{"fileName":"Clone995.java","fileLine":12,"positionStart":{"line":12,"character":127},"positionEnd":{"line":12,"character":129},"text":"core-sim1","codeSnippet":");","status":"core-sim","id":1877,"createdAt":"2023-06-01T17:02:36.656Z"},{"fileName":"Clone995.java","fileLine":12,"positionStart":{"line":12,"character":24},"positionEnd":{"line":12,"character":127},"text":"core-diff1","codeSnippet":"workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ()","status":"core-diff","id":1878,"createdAt":"2023-06-01T17:02:48.414Z"},{"fileName":"Clone995.java","fileLine":9,"positionStart":{"line":9,"character":3},"positionEnd":{"line":11,"character":70},"text":"core-diff2","codeSnippet":" cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {","status":"core-diff","id":1879,"createdAt":"2023-06-01T17:06:01.039Z"},{"fileName":"Clone995.java","fileLine":13,"positionStart":{"line":13,"character":4},"positionEnd":{"line":35,"character":5},"text":"core-diff2","codeSnippet":"}\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }","status":"core-diff","id":1880,"createdAt":"2023-06-01T17:06:07.659Z"},{"fileName":"Clone995.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":48,"character":29},"text":"core-diff3","codeSnippet":"XSSFCell cellNew;\n    rowNew.setHeight (rowOld.getHeight ());\n    if (rowOld.getRowStyle () != null) {\n        Integer hash = rowOld.getRowStyle ().hashCode ();\n        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());\n        rowNew.setRowStyle (this.styleMap.get (hash));\n    }\n    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());\n        if (cellNew != null) ","status":"core-diff","id":1881,"createdAt":"2023-06-01T17:06:57.151Z"},{"fileName":"Clone995.java","fileLine":49,"positionStart":{"line":49,"character":4},"positionEnd":{"line":50,"character":75},"text":"core-diff3","codeSnippet":"}\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());","status":"core-diff","id":1882,"createdAt":"2023-06-01T17:07:03.600Z"},{"fileName":"Clone995.java","fileLine":48,"positionStart":{"line":48,"character":45},"positionEnd":{"line":48,"character":69},"text":"core-diff1","codeSnippet":"(HSSFCell) cell, cellNew","status":"core-diff","id":1883,"createdAt":"2023-06-01T17:07:10.085Z"},{"fileName":"Clone996.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":35,"character":5},"text":"core-diff1","codeSnippet":"cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }","status":"core-diff","id":1884,"createdAt":"2023-06-01T17:07:33.022Z"},{"fileName":"Clone996.java","fileLine":39,"positionStart":{"line":39,"character":3},"positionEnd":{"line":55,"character":1},"text":"core-diff2","codeSnippet":" styleNew.setAlignment (styleOld.getAlignment ());\n    styleNew.setBorderBottom (styleOld.getBorderBottom ());\n    styleNew.setBorderLeft (styleOld.getBorderLeft ());\n    styleNew.setBorderRight (styleOld.getBorderRight ());\n    styleNew.setBorderTop (styleOld.getBorderTop ());\n    styleNew.setDataFormat (this.transform (styleOld.getDataFormat ()));\n    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());\n    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());\n    styleNew.setFillPattern (styleOld.getFillPattern ());\n    styleNew.setFont (this.transform (styleOld.getFont (this.workbookOld)));\n    styleNew.setHidden (styleOld.getHidden ());\n    styleNew.setIndention (styleOld.getIndention ());\n    styleNew.setLocked (styleOld.getLocked ());\n    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());\n    styleNew.setWrapText (styleOld.getWrapText ());\n    this.styleMap.put (hash, styleNew);\n}","status":"core-diff","id":1885,"createdAt":"2023-06-01T17:07:40.437Z"},{"fileName":"Clone997.java","fileLine":9,"positionStart":{"line":9,"character":4},"positionEnd":{"line":35,"character":5},"text":"core-diff1","codeSnippet":"cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }","status":"core-diff","id":1886,"createdAt":"2023-06-01T17:08:06.652Z"},{"fileName":"Clone997.java","fileLine":39,"positionStart":{"line":39,"character":4},"positionEnd":{"line":49,"character":19},"text":"core-diff2","codeSnippet":"XSSFFont fontNew = this.workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;","status":"core-diff","id":1887,"createdAt":"2023-06-01T17:08:13.912Z"}],"nextId":1888}