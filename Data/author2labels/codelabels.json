[{"fileName":"Clone0.java","labeltext":"noncore1","codeSnippet":"BufferedImage scaledImage = null;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":37,"status":"noncore"},{"fileName":"Clone0.java","labeltext":"noncore1","codeSnippet":"BufferedImage dbi = null;","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":29,"status":"noncore"},{"fileName":"Clone0.java","labeltext":"core1","codeSnippet":"    if (sbi != null) {\n        dbi = new BufferedImage (dWidth, dHeight, imageType);\n        Graphics2D g = dbi.createGraphics ();","LineStart":21,"CharStart":4,"LineEnd":23,"CharEnd":45,"status":"core"},{"fileName":"Clone0.java","labeltext":"core1","codeSnippet":"    if (imageToScale != null) {\n        scaledImage = new BufferedImage (dWidth, dHeight, imageToScale.getType ());\n        Graphics2D graphics2D = scaledImage.createGraphics ();","LineStart":10,"CharStart":4,"LineEnd":12,"CharEnd":62,"status":"core"},{"fileName":"Clone0.java","labeltext":"core2","codeSnippet":"graphics2D.drawImage (imageToScale, 0, 0, dWidth, dHeight, null);","LineStart":13,"CharStart":8,"LineEnd":13,"CharEnd":73,"status":"core"},{"fileName":"Clone0.java","labeltext":"core2","codeSnippet":"        AffineTransform at = AffineTransform.getScaleInstance (fWidth, fHeight);\n        g.drawRenderedImage (sbi, at);","LineStart":24,"CharStart":8,"LineEnd":25,"CharEnd":38,"status":"core"},{"fileName":"Clone0.java","labeltext":"noncorediff","codeSnippet":"graphics2D.dispose ();","LineStart":14,"CharStart":8,"LineEnd":14,"CharEnd":30,"status":"noncorediff"},{"fileName":"Clone0.java","labeltext":"noncore2","codeSnippet":"return dbi;","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":15,"status":"noncore"},{"fileName":"Clone0.java","labeltext":"noncore2","codeSnippet":"return scaledImage;","LineStart":16,"CharStart":4,"LineEnd":16,"CharEnd":23,"status":"noncore"},{"fileName":"Clone12.java","labeltext":"noncore1","codeSnippet":"LineNumberReader reader = new LineNumberReader (new FileReader (filename));","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":79,"status":"noncore"},{"fileName":"Clone12.java","labeltext":"noncore1","codeSnippet":"LineNumberReader lnr = new LineNumberReader (new InputStreamReader (is))","LineStart":20,"CharStart":9,"LineEnd":20,"CharEnd":81,"status":"noncore"},{"fileName":"Clone12.java","labeltext":"core1","codeSnippet":"    while ((lineRead = reader.readLine ()) != null) {\n    }\n    cnt = reader.getLineNumber ();","LineStart":12,"CharStart":4,"LineEnd":14,"CharEnd":34,"status":"core"},{"fileName":"Clone12.java","labeltext":"core1","codeSnippet":"        while ((n = lnr.read (buf)) != - 1) {\n            previousN = n;\n        }\n        int ln = lnr.getLineNumber ();\n        if (previousN == - 1) {\n            return 0;\n        } else {\n            char lastChar = buf [previousN - 1];\n            if (lastChar == '\\n' || lastChar == '\\r') {\n                return ln;\n            }\n        }","LineStart":23,"CharStart":8,"LineEnd":34,"CharEnd":9,"status":"core"},{"fileName":"Clone12.java","labeltext":"noncorediff","codeSnippet":"    int cnt = 0;\n    String lineRead = \"\";","LineStart":10,"CharStart":4,"LineEnd":11,"CharEnd":25,"status":"noncorediff"},{"fileName":"Clone12.java","labeltext":"noncorediff","codeSnippet":"        char [] buf = new char [8192];\n        int n, previousN = - 1;","LineStart":21,"CharStart":8,"LineEnd":22,"CharEnd":31,"status":"noncorediff"},{"fileName":"Clone12.java","labeltext":"noncorediff","codeSnippet":"reader.close ();","LineStart":15,"CharStart":4,"LineEnd":15,"CharEnd":20,"status":"noncorediff"},{"fileName":"Clone13.java","labeltext":"noncore1","codeSnippet":"LineNumberReader reader = new LineNumberReader (new FileReader (filename));","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":79,"status":"noncore"},{"fileName":"Clone13.java","labeltext":"core1","codeSnippet":"    while ((lineRead = reader.readLine ()) != null) {\n    }\n    cnt = reader.getLineNumber ();","LineStart":12,"CharStart":4,"LineEnd":14,"CharEnd":34,"status":"core"},{"fileName":"Clone13.java","labeltext":"core1","codeSnippet":"        for (int aChar = 0;\n        aChar != - 1; aChar = is.read ()) count += aChar == '\\n' ? 1 : 0;","LineStart":22,"CharStart":8,"LineEnd":23,"CharEnd":73,"status":"core"},{"fileName":"Clone13.java","labeltext":"noncorediff","codeSnippet":"    int cnt = 0;\n    String lineRead = \"\";","LineStart":10,"CharStart":4,"LineEnd":11,"CharEnd":25,"status":"noncorediff"},{"fileName":"Clone13.java","labeltext":"noncorediff","codeSnippet":"int count = 1;","LineStart":21,"CharStart":8,"LineEnd":21,"CharEnd":22,"status":"noncorediff"},{"fileName":"Clone13.java","labeltext":"noncorediff","codeSnippet":"reader.close ();","LineStart":15,"CharStart":4,"LineEnd":15,"CharEnd":20,"status":"noncorediff"},{"fileName":"Clone16.java","labeltext":"noncore1","codeSnippet":"    ObjectMapper mapper = new ObjectMapper ();\n    try {\n        File json = new File (\"test.json\");","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":43,"status":"noncore"},{"fileName":"Clone16.java","labeltext":"noncore1","codeSnippet":"    Tweet [] tweets;\n    ObjectMapper mapper = new ObjectMapper ();\n    try {\n        File json = new File (\"test.json\");","LineStart":22,"CharStart":4,"LineEnd":25,"CharEnd":43,"status":"noncore"},{"fileName":"Clone16.java","labeltext":"noncore2","codeSnippet":"        System.out.println (\"Java object created from JSON String :\");\n        Arrays.asList (tweets).forEach (System.out :: println);\n    } catch (IOException ex) {\n        ex.printStackTrace ();\n    }","LineStart":27,"CharStart":8,"LineEnd":31,"CharEnd":5,"status":"noncore"},{"fileName":"Clone16.java","labeltext":"noncore2","codeSnippet":"        System.out.println (\"Java objects created from JSON String:\");\n        tweets.forEach (System.out :: println);\n    } catch (IOException ex) {\n        ex.printStackTrace ();\n    }","LineStart":14,"CharStart":8,"LineEnd":18,"CharEnd":5,"status":"noncore"},{"fileName":"Clone16.java","labeltext":"noncorediff","codeSnippet":"CollectionType tweetListType = mapper.getTypeFactory ().constructCollectionType (ArrayList.class, Tweet.class);","LineStart":12,"CharStart":8,"LineEnd":12,"CharEnd":119,"status":"noncorediff"},{"fileName":"Clone16.java","labeltext":"core1","codeSnippet":"List < Tweet > tweets = mapper.readValue (json, tweetListType);","LineStart":13,"CharStart":8,"LineEnd":13,"CharEnd":71,"status":"core"},{"fileName":"Clone16.java","labeltext":"core1","codeSnippet":"tweets = mapper.readValue (json, Tweet [].class);","LineStart":26,"CharStart":8,"LineEnd":26,"CharEnd":57,"status":"core"},{"fileName":"Clone13.java","labeltext":"core2","codeSnippet":"return count;","LineStart":24,"CharStart":8,"LineEnd":24,"CharEnd":21,"status":"core"},{"fileName":"Clone13.java","labeltext":"core2","codeSnippet":"return cnt;","LineStart":16,"CharStart":4,"LineEnd":16,"CharEnd":15,"status":"core"},{"fileName":"Clone12.java","labeltext":"core2","codeSnippet":"return cnt;","LineStart":16,"CharStart":4,"LineEnd":16,"CharEnd":15,"status":"core"},{"fileName":"Clone12.java","labeltext":"core2","codeSnippet":"return ln + 1;","LineStart":35,"CharStart":8,"LineEnd":35,"CharEnd":22,"status":"core"},{"fileName":"Clone12.java","labeltext":"noncorediff","codeSnippet":"try","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":7,"status":"noncorediff"},{"fileName":"Clone13.java","labeltext":"noncore1","codeSnippet":"(InputStream is = new FileInputStream (input))","LineStart":20,"CharStart":8,"LineEnd":20,"CharEnd":54,"status":"noncore"},{"fileName":"Clone13.java","labeltext":"noncorediff","codeSnippet":"try","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":7,"status":"noncorediff"},{"fileName":"Clone13.java","labeltext":"noncorediff","codeSnippet":"{","LineStart":20,"CharStart":55,"LineEnd":20,"CharEnd":56,"status":"noncorediff"},{"fileName":"Clone13.java","labeltext":"noncorediff","codeSnippet":"}","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":5,"status":"noncorediff"},{"fileName":"Clone18.java","labeltext":"core-diff1","codeSnippet":"    JavaType javaType = provider.constructType (CustomClass.class);\n    BeanDescription beanDesc = provider.getConfig ().introspect (javaType);\n    JsonSerializer < Object > serializer = BeanSerializerFactory.instance.findBeanSerializer (provider, javaType, beanDesc);\n    serializer.unwrappingSerializer (null).serialize (value, jgen, provider);","LineStart":10,"CharStart":4,"LineEnd":13,"CharEnd":77,"status":"core-diff"},{"fileName":"Clone18.java","labeltext":"core-diff2","codeSnippet":"    Field [] fields = value.getClass ().getDeclaredFields ();\n    for (Field field : fields) {\n        try {\n            jgen.writeObjectField (field.getName (), field.get (value));\n        } catch (IllegalArgumentException | IllegalAccessException e) {\n            e.printStackTrace ();\n        }\n    }","LineStart":21,"CharStart":4,"LineEnd":28,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone18.java","labeltext":"noncore-sim2","codeSnippet":"    jgen.writeObjectField (\"extra_field\", \"whatever_value\");\n    jgen.writeEndObject ();","LineStart":29,"CharStart":4,"LineEnd":30,"CharEnd":27,"status":"noncore-sim"},{"fileName":"Clone18.java","labeltext":"noncore-sim2","codeSnippet":"    jgen.writeObjectField (\"my_extra_field\", \"some data\");\n    jgen.writeEndObject ();","LineStart":14,"CharStart":4,"LineEnd":15,"CharEnd":27,"status":"noncore-sim"},{"fileName":"Clone18.java","labeltext":"noncore-sim1","codeSnippet":"jgen.writeStartObject ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":29,"status":"noncore-sim"},{"fileName":"Clone18.java","labeltext":"noncore-sim1","codeSnippet":"jgen.writeStartObject ();","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":29,"status":"noncore-sim"},{"fileName":"Clone19.java","labeltext":"noncore-sim1","codeSnippet":"jgen.writeStartObject ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":29,"status":"noncore-sim"},{"fileName":"Clone19.java","labeltext":"noncore-sim1","codeSnippet":"jgen.writeStartObject ();","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":29,"status":"noncore-sim"},{"fileName":"Clone19.java","labeltext":"core-sim1","codeSnippet":"    JavaType javaType = provider.constructType (CustomClass.class);\n    BeanDescription beanDesc = provider.getConfig ().introspect (javaType);\n    JsonSerializer < Object > serializer = BeanSerializerFactory.instance.findBeanSerializer (provider, javaType, beanDesc);\n    serializer.unwrappingSerializer (null).serialize (value, jgen, provider);","LineStart":10,"CharStart":4,"LineEnd":13,"CharEnd":77,"status":"core-sim"},{"fileName":"Clone19.java","labeltext":"core-sim1","codeSnippet":"    if (_propertyFilterId != null) {\n        serializeFieldsFiltered (bean, jgen, provider);\n    } else {\n        serializeFields (bean, jgen, provider);\n    }","LineStart":20,"CharStart":4,"LineEnd":24,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone19.java","labeltext":"noncore-diff1","codeSnippet":"jgen.writeObjectField (\"my_extra_field\", \"some data\");","LineStart":14,"CharStart":4,"LineEnd":14,"CharEnd":58,"status":"noncore-diff"},{"fileName":"Clone19.java","labeltext":"noncore-diff2","codeSnippet":"serializerListener.postSerialization (bean, jgen);","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":54,"status":"noncore-diff"},{"fileName":"Clone19.java","labeltext":"noncore-sim2","codeSnippet":"jgen.writeEndObject ();","LineStart":15,"CharStart":4,"LineEnd":15,"CharEnd":27,"status":"noncore-sim"},{"fileName":"Clone19.java","labeltext":"noncore-sim2","codeSnippet":"jgen.writeEndObject ();","LineStart":26,"CharStart":4,"LineEnd":26,"CharEnd":27,"status":"noncore-sim"},{"fileName":"Clone20.java","labeltext":"noncore-sim1","codeSnippet":"jgen.writeStartObject ();","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":29,"status":"noncore-sim"},{"fileName":"Clone20.java","labeltext":"noncore-sim1","codeSnippet":"jgen.writeStartObject ();","LineStart":24,"CharStart":4,"LineEnd":24,"CharEnd":29,"status":"noncore-sim"},{"fileName":"Clone20.java","labeltext":"noncore-sim2","codeSnippet":"jgen.writeEndObject ();","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":27,"status":"noncore-sim"},{"fileName":"Clone20.java","labeltext":"noncore-sim2","codeSnippet":"jgen.writeEndObject ();","LineStart":31,"CharStart":4,"LineEnd":31,"CharEnd":27,"status":"noncore-sim"},{"fileName":"Clone20.java","labeltext":"core-diff1","codeSnippet":"    Field [] fields = value.getClass ().getDeclaredFields ();\n    for (Field field : fields) {\n        try {\n            jgen.writeObjectField (field.getName (), field.get (value));\n        } catch (IllegalArgumentException | IllegalAccessException e) {\n            e.printStackTrace ();\n        }\n    }","LineStart":11,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone20.java","labeltext":"core-diff2","codeSnippet":"    if (_propertyFilterId != null) {\n        serializeFieldsFiltered (bean, jgen, provider);\n    } else {\n        serializeFields (bean, jgen, provider);\n    }\n    serializerListener.postSerialization (bean, jgen);","LineStart":25,"CharStart":4,"LineEnd":30,"CharEnd":54,"status":"core-diff"},{"fileName":"Clone21.java","labeltext":"noncore-sim1","codeSnippet":"    double numIterations = 10;\n    long exceptionPlusCatchTime = 0, excepTime = 0, strTime = 0, throwTime = 0;","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":79,"status":"noncore-sim"},{"fileName":"Clone21.java","labeltext":"noncore-sim1","codeSnippet":"long throwCatchTime = 0, newExceptionTime = 0, newObjectTime = 0, noStackExceptionTime = 0;","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":95,"status":"noncore-sim"},{"fileName":"Clone21.java","labeltext":"noncore-sim2","codeSnippet":"    for (int i = 0;\n    i < numIterations; i ++) {","LineStart":11,"CharStart":4,"LineEnd":12,"CharEnd":30,"status":"noncore-sim"},{"fileName":"Clone21.java","labeltext":"noncore-sim2","codeSnippet":"    for (int i = 0;\n    i < 30; i ++) {","LineStart":26,"CharStart":4,"LineEnd":27,"CharEnd":19,"status":"noncore-sim"},{"fileName":"Clone21.java","labeltext":"core-diff2","codeSnippet":"        throwCatchTime += throwCatchLoop ();\n        newExceptionTime += newExceptionLoop ();\n        newObjectTime += newObjectLoop ();\n        noStackExceptionTime += newNoStackExceptionLoop ();","LineStart":28,"CharStart":8,"LineEnd":31,"CharEnd":59,"status":"core-diff"},{"fileName":"Clone21.java","labeltext":"noncore-sim2","codeSnippet":"}","LineStart":17,"CharStart":4,"LineEnd":17,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone21.java","labeltext":"noncore-sim2","codeSnippet":"}","LineStart":32,"CharStart":4,"LineEnd":32,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone21.java","labeltext":"noncore-sim3","codeSnippet":"    System.out.println (\"new Exception + throw/catch = \" + exceptionPlusCatchTime / numIterations);\n    System.out.println (\"new Exception only          = \" + excepTime / numIterations);\n    System.out.println (\"throw/catch only            = \" + throwTime / numIterations);\n    System.out.println (\"new String (benchmark)      = \" + strTime / numIterations);\n","LineStart":18,"CharStart":4,"LineEnd":22,"CharEnd":0,"status":"noncore-sim"},{"fileName":"Clone21.java","labeltext":"noncore-sim3","codeSnippet":"    System.out.println (\"throwCatchTime = \" + throwCatchTime / 30);\n    System.out.println (\"newExceptionTime = \" + newExceptionTime / 30);\n    System.out.println (\"newStringTime = \" + newObjectTime / 30);\n    System.out.println (\"noStackExceptionTime = \" + noStackExceptionTime / 30);\n","LineStart":33,"CharStart":4,"LineEnd":37,"CharEnd":0,"status":"noncore-sim"},{"fileName":"Clone21.java","labeltext":"core-diff1","codeSnippet":"        exceptionPlusCatchTime += exceptionPlusCatchBlock ();\n        excepTime += createException ();\n        throwTime += catchBlock ();\n        strTime += createString ();","LineStart":13,"CharStart":8,"LineEnd":16,"CharEnd":35,"status":"core-diff"},{"fileName":"Clone23.java","labeltext":"core-sim1","codeSnippet":"    if (this.subAccounts != null) {\n        for (Balance subAccount : this.subAccounts) {\n            result = result + subAccount.getSum ();\n        }\n    }\n    return result;","LineStart":23,"CharStart":4,"LineEnd":28,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone23.java","labeltext":"core-sim1","codeSnippet":"    if (subAccounts != null) {\n        Double sum = 0.0;\n        for (int i = 0;\n        i < subAccounts.size (); i ++) {\n            sum += subAccounts.get (i).getSum ();\n        }\n        return amount + sum;\n    } else {\n        return amount;\n    }","LineStart":9,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone23.java","labeltext":"noncore-diff2","codeSnippet":"double result = this.amount;","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":32,"status":"noncore-diff"},{"fileName":"Clone29.java","labeltext":"noncore-sim1","codeSnippet":"    Scanner input = new Scanner (System.in);\n    System.out.println (\"What is your choice? (x/o)\");","LineStart":20,"CharStart":0,"LineEnd":21,"CharEnd":54,"status":"noncore-sim"},{"fileName":"Clone29.java","labeltext":"noncore-sim1","codeSnippet":"    Scanner input = new Scanner (System.in);\n    System.out.println (\"What is your choice? (x/o)\");","LineStart":9,"CharStart":0,"LineEnd":10,"CharEnd":54,"status":"noncore-sim"},{"fileName":"Clone29.java","labeltext":"core-sim1","codeSnippet":"    char choice = input.findInLine (\".\").charAt (0);\n    while (choice != 'x' && choice != 'o') {\n        System.out.println (\"You must enter x or o!\");\n        choice = input.next ().charAt (0);\n    }\n    return choice;","LineStart":11,"CharStart":0,"LineEnd":16,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone29.java","labeltext":"core-sim1","codeSnippet":"    if (input.findInLine (\".\") != null) {\n        choice = input.findInLine (\".\").charAt (0);\n        while (choice != 'x' && choice != 'o') {\n            System.out.println (\"You must enter x or o!\");\n            choice = input.findInLine (\".\").charAt (0);\n        }\n    }\n    return choice;","LineStart":22,"CharStart":0,"LineEnd":29,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone30.java","labeltext":"noncore-sim1","codeSnippet":"    byte [] dataToCompress = \"This is the test data.\".getBytes (StandardCharsets.ISO_8859_1);\n","LineStart":20,"CharStart":3,"LineEnd":21,"CharEnd":0,"status":"noncore-sim"},{"fileName":"Clone30.java","labeltext":"noncore-sim1","codeSnippet":"    String sr = new String (\"fsdfesfsfdddddddsfdsfssdfdsfdsfdsfdsfdsdfggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggghghghghggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggfsdfesfsfdddddddsfdsfssdfdsfdsfdsfdsfdsdfggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggghghghghggggggggggggggggggggggggggggggggggggggggg\");\n","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":0,"status":"noncore-sim"},{"fileName":"Clone30.java","labeltext":"noncore-diff1","codeSnippet":"    byte [] data = sr.getBytes ();\n    System.out.println (\"src size \" + data.length);","LineStart":10,"CharStart":3,"LineEnd":11,"CharEnd":51,"status":"noncore-diff"},{"fileName":"Clone30.java","labeltext":"noncore-diff1","codeSnippet":"    byte [] data = sr.getBytes ();\n    System.out.println (\"src size \" + data.length);","LineStart":10,"CharStart":3,"LineEnd":11,"CharEnd":51,"status":"noncore-diff"},{"fileName":"Clone30.java","labeltext":"core-sim1","codeSnippet":"    try {\n        compress (data);\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }","LineStart":12,"CharStart":4,"LineEnd":16,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone30.java","labeltext":"core-sim1","codeSnippet":"    try {\n        ByteArrayOutputStream byteStream = new ByteArrayOutputStream (dataToCompress.length);\n        try {\n            GZIPOutputStream zipStream = new GZIPOutputStream (byteStream);\n            try {\n                zipStream.write (dataToCompress);\n            } finally {\n                zipStream.close ();\n            }\n        } finally {\n            byteStream.close ();\n        }\n        byte [] compressedData = byteStream.toByteArray ();\n        FileOutputStream fileStream = new FileOutputStream (\"C:/Users/UserName/Desktop/zip_file.gz\");\n        try {\n            fileStream.write (compressedData);\n        } finally {\n            try {\n                fileStream.close ();\n            } catch (Exception e) {\n            }\n        }\n    } catch (Exception e) {\n        e.printStackTrace ();\n    }","LineStart":21,"CharStart":4,"LineEnd":45,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone39.java","labeltext":"core-sim1","codeSnippet":"    for (int i = ar.length - 1;\n    i > 0; i --) {\n        int index = rnd.nextInt (i + 1);\n        T a = ar [index];\n        ar [index] = ar [i];\n        ar [i] = a;\n    }","LineStart":9,"CharStart":4,"LineEnd":15,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone39.java","labeltext":"core-sim1","codeSnippet":"    int count = array.length;\n    for (int i = count;\n    i > 1; i --) {\n        swap (array, i - 1, random.nextInt (i));\n    }","LineStart":20,"CharStart":4,"LineEnd":24,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone39.java","labeltext":"noncore-diff1","codeSnippet":"if (random == null) random = new Random ();","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":47,"status":"noncore-diff"},{"fileName":"Clone46.java","labeltext":"core-sim1","codeSnippet":"    if (first == null) return false;\n    Node turtle = first;\n    Node hare = first;\n    while (hare.next != null && hare.next.next != null) {\n        turtle = turtle.next;\n        hare = hare.next.next;\n        if (turtle == hare) return true;\n    }\n    return false;","LineStart":9,"CharStart":4,"LineEnd":17,"CharEnd":17,"status":"core-sim"},{"fileName":"Clone46.java","labeltext":"core-sim1","codeSnippet":"    if (root == null) return false;\n    Node slow = root, fast = root;\n    int taken = 0, limit = 2;\n    while (fast.next != null) {\n        fast = fast.next;\n        taken ++;\n        if (slow == fast) return true;\n        if (taken == limit) {\n            taken = 0;\n            limit <<= 1;\n            slow = fast;\n        }\n    }\n    return false;","LineStart":21,"CharStart":4,"LineEnd":34,"CharEnd":17,"status":"core-sim"},{"fileName":"Clone51.java","labeltext":"noncore-diff1","codeSnippet":"Scanner scan = new Scanner (System.in);","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":43,"status":"noncore-diff"},{"fileName":"Clone51.java","labeltext":"noncore-diff2","codeSnippet":"    FileReader file = new FileReader (\"D:\\\\Test.txt\");\n    BufferedReader br = new BufferedReader (file);\n    String str;","LineStart":22,"CharStart":4,"LineEnd":24,"CharEnd":15,"status":"noncore-diff"},{"fileName":"Clone51.java","labeltext":"noncore-sim1","codeSnippet":"    int exes = 0;\n    int whys = 0;","LineStart":10,"CharStart":4,"LineEnd":11,"CharEnd":17,"status":"noncore-sim"},{"fileName":"Clone51.java","labeltext":"noncore-sim1","codeSnippet":"    int xSum = 0;\n    int ySum = 0;","LineStart":25,"CharStart":4,"LineEnd":26,"CharEnd":17,"status":"noncore-sim"},{"fileName":"Clone51.java","labeltext":"core-diff1","codeSnippet":"    while (scan.hasNext ()) {\n        String line = scan.next ();\n        if (line.equals (\"x=\")) exes += scan.nextInt ();\n        else whys += scan.nextInt ();\n    }","LineStart":12,"CharStart":4,"LineEnd":16,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone51.java","labeltext":"core-diff2","codeSnippet":"    while ((str = br.readLine ()) != null) {\n        if (str.contains (\"x=\")) {\n            xSum += Integer.parseInt (str.split (\"=\") [1].trim ());\n        }\n        if (str.contains (\"y=\")) {\n            ySum += Integer.parseInt (str.split (\"=\") [1].trim ());\n        }\n    }","LineStart":27,"CharStart":4,"LineEnd":34,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone51.java","labeltext":"noncore-sim2","codeSnippet":"    System.out.println (\"X: \" + exes);\n    System.out.println (\"Y: \" + whys);","LineStart":17,"CharStart":4,"LineEnd":18,"CharEnd":38,"status":"noncore-sim"},{"fileName":"Clone51.java","labeltext":"noncore-sim2","codeSnippet":"System.out.println (\"Sum x is: \" + xSum + \" Sum y is: \" + ySum);","LineStart":35,"CharStart":4,"LineEnd":35,"CharEnd":68,"status":"noncore-sim"},{"fileName":"Clone52.java","labeltext":"core-sim1","codeSnippet":"    Throwable firstException = exceptionThrownBy (new Statement () {\n        public void evaluate () throws Throwable {\n            foo ();\n        }}\n    );\n    assertEquals (Exception.class, firstException.getClass ());\n    Throwable secondException = exceptionThrownBy (new Statement () {\n        public void evaluate () throws Throwable {\n            foo ();\n        }}\n    );\n    assertEquals (Exception.class, secondException.getClass ());\n    foo ()","LineStart":10,"CharStart":4,"LineEnd":22,"CharEnd":10,"status":"core-sim"},{"fileName":"Clone52.java","labeltext":"core-sim1","codeSnippet":"    try {\n        foo ();\n        fail (\"foo did not throw an exception\");\n    } catch (Exception ex) {\n    }\n    try {\n        foo ();\n        fail (\"foo did not throw an exception\");\n    } catch (Exception ex) {\n    }\n    foo ();","LineStart":27,"CharStart":4,"LineEnd":37,"CharEnd":11,"status":"core-sim"},{"fileName":"Clone54.java","labeltext":"core-sim1","codeSnippet":"    if (brackets.length () % 2 != 0) {\n        return false;\n    }\n    Stack < Character > halfBraces = new Stack ();\n    for (char ch : brackets.toCharArray ()) {\n        if (braces.containsKey (ch)) {\n            halfBraces.push (braces.get (ch));\n        } else if (halfBraces.isEmpty () || ch != halfBraces.pop ()) {\n            return false;\n        }\n    }\n    return halfBraces.isEmpty ();","LineStart":37,"CharStart":4,"LineEnd":48,"CharEnd":33,"status":"core-sim"},{"fileName":"Clone54.java","labeltext":"core-sim1","codeSnippet":"    if ((expression.length () % 2) == 1) return false;\n    else {\n        Stack < Character > s = new Stack < > ();\n        for (char bracket : expression.toCharArray ()) switch (bracket) {\n            case '{' :\n                s.push ('}');\n                break;\n            case '(' :\n                s.push (')');\n                break;\n            case '[' :\n                s.push (']');\n                break;\n            default :\n                if (s.isEmpty () || bracket != s.peek ()) {\n                    return false;\n                }\n                s.pop ();\n        }\n        return s.isEmpty ();\n    }","LineStart":9,"CharStart":4,"LineEnd":29,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone54.java","labeltext":"noncore-diff1","codeSnippet":"    Map < Character, Character > braces = new HashMap < > ();\n    braces.put ('(', ')');\n    braces.put ('[', ']');\n    braces.put ('{', '}');","LineStart":33,"CharStart":4,"LineEnd":36,"CharEnd":26,"status":"noncore-diff"},{"fileName":"Clone58.java","labeltext":"core-sim1","codeSnippet":"    PrintWriter out = new PrintWriter (\"e:\\\\2.txt\");\n    for (int i = 0;\n    i < ls.size (); i ++) {\n        String [] temp = ls.get (i).split (\":\");\n        if (temp.length > 1) {\n            out.println (ls.get (i));\n        }\n    }\n    out.close ();","LineStart":12,"CharStart":4,"LineEnd":20,"CharEnd":17,"status":"core-sim"},{"fileName":"Clone58.java","labeltext":"core-sim1","codeSnippet":"    PrintWriter out = new PrintWriter (\"newline.srt\");\n    int i = 0;\n    String line = reader.readLine ();\n    while (line != null) {\n        if (! line.trim ().equals (\"\")) {\n            out.println (line);\n        }\n        line = reader.readLine ();\n    }\n    out.close ();","LineStart":26,"CharStart":4,"LineEnd":35,"CharEnd":17,"status":"core-sim"},{"fileName":"Clone58.java","labeltext":"noncore-diff1","codeSnippet":"    Path myPath = Paths.get (\"e:\\\\\", \"1.txt\");\n    List < String > ls;\n    ls = Files.readAllLines (myPath, StandardCharsets.US_ASCII);","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":64,"status":"noncore-diff"},{"fileName":"Clone58.java","labeltext":"noncore-diff2","codeSnippet":"    FileInputStream fin = new FileInputStream (\"line.srt\");\n    BufferedReader reader = new BufferedReader (new InputStreamReader (fin));","LineStart":24,"CharStart":4,"LineEnd":25,"CharEnd":77,"status":"noncore-diff"},{"fileName":"Clone64.java","labeltext":"noncore-diff1","codeSnippet":"Container parent = getParent ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":36,"status":"noncore-diff"},{"fileName":"Clone64.java","labeltext":"core-sim1","codeSnippet":"    switch (direction) {\n        case UP :\n            draw.incrementY (false);\n            break;\n        case DOWN :\n            draw.incrementY (true);\n            break;\n        case LEFT :\n            draw.incrementX (false);\n            break;\n        case RIGHT :\n            draw.incrementX (true);\n            break;\n        default :\n            break;\n    }","LineStart":32,"CharStart":4,"LineEnd":47,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone64.java","labeltext":"core-sim1","codeSnippet":"    int nextX = getLocation ().x + (deltaX * directionX);\n    if (nextX < 0) {\n        nextX = 0;\n        directionX *= - 1;\n    }\n    if (nextX + getSize ().width > parent.getSize ().width) {\n        nextX = parent.getSize ().width - getSize ().width;\n        directionX *= - 1;\n    }\n    int nextY = getLocation ().y + (deltaY * directionY);\n    if (nextY < 0) {\n        nextY = 0;\n        directionY *= - 1;\n    }\n    if (nextY + getSize ().height > parent.getSize ().height) {\n        nextY = parent.getSize ().height - getSize ().height;\n        directionY *= - 1;\n    }","LineStart":10,"CharStart":4,"LineEnd":27,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone64.java","labeltext":"noncore-diff2","codeSnippet":" setLocation (nextX, nextY);","LineStart":28,"CharStart":3,"LineEnd":28,"CharEnd":31,"status":"noncore-diff"},{"fileName":"Clone68.java","labeltext":"noncore-sim1","codeSnippet":"Object array = createArray (String.class, node6);","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":53,"status":"noncore-sim"},{"fileName":"Clone68.java","labeltext":"noncore-sim1","codeSnippet":"Object multiDimArray = Array.newInstance (String.class, sizes);","LineStart":35,"CharStart":4,"LineEnd":35,"CharEnd":67,"status":"noncore-sim"},{"fileName":"Clone68.java","labeltext":"core-diff1","codeSnippet":"    Node node1 = new Node ();\n    node1.length = 1;\n    Node node2 = new Node ();\n    node2.length = 2;\n    Node node3 = new Node ();\n    node3.length = 3;\n    Node node4 = new Node ();\n    node4.children.add (node1);\n    node4.children.add (node2);\n    Node node5 = new Node ();\n    node5.children.add (node3);\n    Node node6 = new Node ();\n    node6.children.add (node4);\n    node6.children.add (node5);","LineStart":9,"CharStart":4,"LineEnd":22,"CharEnd":31,"status":"core-diff"},{"fileName":"Clone68.java","labeltext":"noncore-diff1","codeSnippet":"    outputArray (array);\n    System.out.println ();","LineStart":24,"CharStart":4,"LineEnd":25,"CharEnd":26,"status":"noncore-diff"},{"fileName":"Clone68.java","labeltext":"noncore-diff2","codeSnippet":"Random r = new Random ();","LineStart":29,"CharStart":4,"LineEnd":29,"CharEnd":29,"status":"noncore-diff"},{"fileName":"Clone68.java","labeltext":"core-diff2","codeSnippet":"    int dims = 1 + r.nextInt (3);\n    int [] sizes = new int [dims];\n    for (int i = 0;\n    i < sizes.length; i ++) sizes [i] = 1 + r.nextInt (3);\n    System.out.println (\"Creating array with dimensions / sizes: \" + Arrays.toString (sizes).replaceAll (\", \", \"][\"));","LineStart":30,"CharStart":4,"LineEnd":34,"CharEnd":118,"status":"core-diff"},{"fileName":"Clone68.java","labeltext":"noncore-diff3","codeSnippet":"    System.out.println (Arrays.deepToString ((Object []) multiDimArray));\n","LineStart":37,"CharStart":4,"LineEnd":38,"CharEnd":0,"status":"noncore-diff"},{"fileName":"Clone68.java","labeltext":"core-diff3","codeSnippet":"fillWithSomeValues (multiDimArray, \"pos \", sizes);","LineStart":36,"CharStart":4,"LineEnd":36,"CharEnd":54,"status":"core-diff"},{"fileName":"Clone75.java","labeltext":"core-sim1","codeSnippet":"    String formatedSource = source.subSequence (start, end).toString ();\n    String destPrefix = dest.subSequence (0, dstart).toString ();\n    String destSuffix = dest.subSequence (dend, dest.length ()).toString ();\n    String result = destPrefix + formatedSource + destSuffix;\n    result = result.replace (\",\", \".\");\n    Matcher matcher = mPattern.matcher (result);\n    if (matcher.matches ()) {\n        return null;\n    }\n    return \"\";","LineStart":9,"CharStart":4,"LineEnd":18,"CharEnd":14,"status":"core-sim"},{"fileName":"Clone75.java","labeltext":"core-sim1","codeSnippet":"    int dotPos = - 1;\n    int len = dest.length ();\n    for (int i = 0;\n    i < len; i ++) {\n        char c = dest.charAt (i);\n        if (c == '.' || c == ',') {\n            dotPos = i;\n            break;\n        }\n    }\n    if (dotPos >= 0) {\n        if (source.equals (\".\") || source.equals (\",\")) {\n            return \"\";\n        }\n        if (dend <= dotPos) {\n            return null;\n        }\n        if (len - dotPos > decimalDigits) {\n            return \"\";\n        }\n    }\n    return null;","LineStart":22,"CharStart":4,"LineEnd":43,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone77.java","labeltext":"core-sim1","codeSnippet":"    CharSequence out = super.filter (source, start, end, dest, dstart, dend);\n    if (out != null) {\n        source = out;\n        start = 0;\n        end = out.length ();\n    }\n    int len = end - start;\n    if (len == 0) {\n        return source;\n    }\n    int dlen = dest.length ();\n    for (int i = 0;\n    i < dstart; i ++) {\n        if (dest.charAt (i) == '.') {\n            return (dlen - (i + 1) + len > digits) ? \"\" : new SpannableStringBuilder (source, start, end);\n        }\n    }\n    for (int i = start;\n    i < end; ++ i) {\n        if (source.charAt (i) == '.') {\n            if ((dlen - dend) + (end - (i + 1)) > digits) return \"\";\n            else break;\n        }\n    }\n    return new SpannableStringBuilder (source, start, end);","LineStart":9,"CharStart":4,"LineEnd":33,"CharEnd":59,"status":"core-sim"},{"fileName":"Clone77.java","labeltext":"noncore-diff1","codeSnippet":"    Log.d (\"debug\", moPattern.toString ());\n    Log.d (\"debug\", \"source: \" + source + \", start: \" + start + \", end:\" + end + \", dest: \" + dest + \", dstart: \" + dstart + \", dend: \" + dend);\n","LineStart":41,"CharStart":4,"LineEnd":43,"CharEnd":0,"status":"noncore-diff"},{"fileName":"Clone77.java","labeltext":"noncore-sim1","codeSnippet":"    String lsStart = \"\";\n    String lsInsert = \"\";\n    String lsEnd = \"\";\n    String lsText = \"\";","LineStart":37,"CharStart":4,"LineEnd":40,"CharEnd":23,"status":"noncore-sim"},{"fileName":"Clone80.java","labeltext":"core-sim1","codeSnippet":"    String replacement = source.subSequence (start, end).toString ();\n    String newVal = dest.subSequence (0, dstart).toString () + replacement + dest.subSequence (dend, dest.length ()).toString ();\n    Matcher matcher = mPattern.matcher (newVal);\n    if (matcher.matches ()) return null;\n    if (TextUtils.isEmpty (source)) return dest.subSequence (dstart, dend);\n    else return \"\";","LineStart":9,"CharStart":3,"LineEnd":14,"CharEnd":19,"status":"core-sim"},{"fileName":"Clone77.java","labeltext":"core-sim1","codeSnippet":"    lsText = dest.toString ();\n    if (lsText.length () > 0) {\n        lsStart = lsText.substring (0, dstart);\n        Log.d (\"debug\", \"lsStart : \" + lsStart);\n        if (source != \"\") {\n            lsInsert = source.toString ();\n            Log.d (\"debug\", \"lsInsert: \" + lsInsert);\n        }\n        lsEnd = lsText.substring (dend);\n        Log.d (\"debug\", \"lsEnd   : \" + lsEnd);\n        lsText = lsStart + lsInsert + lsEnd;\n        Log.d (\"debug\", \"lsText  : \" + lsText);\n    }\n    Matcher loMatcher = moPattern.matcher (lsText);","LineStart":43,"CharStart":4,"LineEnd":56,"CharEnd":51,"status":"core-sim"},{"fileName":"Clone77.java","labeltext":"noncore-diff2","codeSnippet":" Log.d (\"debug\", \"loMatcher.matches(): \" + loMatcher.matches () + \", lsText: \" + lsText);","LineStart":57,"CharStart":3,"LineEnd":57,"CharEnd":92,"status":"noncore-diff"},{"fileName":"Clone77.java","labeltext":"core-sim1","codeSnippet":"    if (! loMatcher.matches ()) {\n        return \"\";\n    }\n    return null;","LineStart":58,"CharStart":3,"LineEnd":61,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone80.java","labeltext":"core-sim1","codeSnippet":"    lsText = dest.toString ();\n    if (lsText.length () > 0) {\n        lsStart = lsText.substring (0, dstart);\n        Log.d (\"debug\", \"lsStart : \" + lsStart);\n        if (source != \"\") {\n            lsInsert = source.toString ();\n            Log.d (\"debug\", \"lsInsert: \" + lsInsert);\n        }\n        lsEnd = lsText.substring (dend);\n        Log.d (\"debug\", \"lsEnd   : \" + lsEnd);\n        lsText = lsStart + lsInsert + lsEnd;\n        Log.d (\"debug\", \"lsText  : \" + lsText);\n    }\n    Matcher loMatcher = moPattern.matcher (lsText);","LineStart":24,"CharStart":0,"LineEnd":37,"CharEnd":51,"status":"core-sim"},{"fileName":"Clone80.java","labeltext":"core-sim1","codeSnippet":"    if (! loMatcher.matches ()) {\n        return \"\";\n    }\n    return null;","LineStart":39,"CharStart":4,"LineEnd":42,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone80.java","labeltext":"noncore-diff1","codeSnippet":"    Log.d (\"debug\", moPattern.toString ());\n    Log.d (\"debug\", \"source: \" + source + \", start: \" + start + \", end:\" + end + \", dest: \" + dest + \", dstart: \" + dstart + \", dend: \" + dend);\n","LineStart":22,"CharStart":4,"LineEnd":24,"CharEnd":0,"status":"noncore-diff"},{"fileName":"Clone80.java","labeltext":"noncore-diff2","codeSnippet":"    Log.d (\"debug\", \"loMatcher.matches(): \" + loMatcher.matches () + \", lsText: \" + lsText);\n","LineStart":38,"CharStart":4,"LineEnd":39,"CharEnd":0,"status":"noncore-diff"},{"fileName":"Clone80.java","labeltext":"noncore-sim1","codeSnippet":"    String lsStart = \"\";\n    String lsInsert = \"\";\n    String lsEnd = \"\";\n    String lsText = \"\";","LineStart":18,"CharStart":4,"LineEnd":21,"CharEnd":23,"status":"noncore-sim"},{"fileName":"Clone82.java","labeltext":"core-diff1","codeSnippet":"    lsText = dest.toString ();\n    if (lsText.length () > 0) {\n        lsStart = lsText.substring (0, dstart);\n        Log.d (\"debug\", \"lsStart : \" + lsStart);\n        if (source != \"\") {\n            lsInsert = source.toString ();\n            Log.d (\"debug\", \"lsInsert: \" + lsInsert);\n        }\n        lsEnd = lsText.substring (dend);\n        Log.d (\"debug\", \"lsEnd   : \" + lsEnd);\n        lsText = lsStart + lsInsert + lsEnd;\n        Log.d (\"debug\", \"lsText  : \" + lsText);\n    }\n    Matcher loMatcher = moPattern.matcher (lsText);","LineStart":15,"CharStart":4,"LineEnd":28,"CharEnd":51,"status":"core-diff"},{"fileName":"Clone82.java","labeltext":"core-diff1","codeSnippet":"    int dotPos = - 1;\n    int len = dest.length ();\n    for (int i = 0;\n    i < len; i ++) {\n        char c = dest.charAt (i);\n        if (c == '.' || c == ',') {\n            dotPos = i;\n            break;\n        }\n    }\n    if (dotPos >= 0) {\n        if (source.equals (\".\") || source.equals (\",\")) {\n            return \"\";\n        }\n        if (dend <= dotPos) {\n            return null;\n        }\n        if (len - dotPos > decimalDigits) {\n            return \"\";\n        }\n    }\n    return null;","LineStart":37,"CharStart":4,"LineEnd":58,"CharEnd":16,"status":"core-diff"},{"fileName":"Clone82.java","labeltext":"core-diff1","codeSnippet":"    if (! loMatcher.matches ()) {\n        return \"\";\n    }\n    return null;","LineStart":30,"CharStart":4,"LineEnd":33,"CharEnd":16,"status":"core-diff"},{"fileName":"Clone82.java","labeltext":"noncore-diff1","codeSnippet":"    String lsStart = \"\";\n    String lsInsert = \"\";\n    String lsEnd = \"\";\n    String lsText = \"\";\n    Log.d (\"debug\", moPattern.toString ());\n    Log.d (\"debug\", \"source: \" + source + \", start: \" + start + \", end:\" + end + \", dest: \" + dest + \", dstart: \" + dstart + \", dend: \" + dend);\n","LineStart":9,"CharStart":4,"LineEnd":15,"CharEnd":0,"status":"noncore-diff"},{"fileName":"Clone82.java","labeltext":"noncore-diff2","codeSnippet":"Log.d (\"debug\", \"loMatcher.matches(): \" + loMatcher.matches () + \", lsText: \" + lsText);","LineStart":29,"CharStart":4,"LineEnd":29,"CharEnd":92,"status":"noncore-diff"},{"fileName":"Clone83.java","labeltext":"noncore-sim1","codeSnippet":"    int width = this.getWidth ();\n    int height = this.getHeight ();","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":35,"status":"noncore-sim"},{"fileName":"Clone83.java","labeltext":"noncore-sim1","codeSnippet":"    int w = this.getWidth ();\n    int h = this.getHeight ();","LineStart":34,"CharStart":4,"LineEnd":35,"CharEnd":30,"status":"noncore-sim"},{"fileName":"Clone83.java","labeltext":"core-sim2","codeSnippet":"    if (frameCount == FRAMES) {\n        averageTime = totalTime / FRAMES;\n        totalTime = 0;\n        frameCount = 0;\n    } else {\n        totalTime += System.nanoTime () - start;\n        frameCount ++;\n    }\n    String s = String.format (\"%1$5.3f\", averageTime / 1000000d);","LineStart":42,"CharStart":0,"LineEnd":50,"CharEnd":65,"status":"core-sim"},{"fileName":"Clone83.java","labeltext":"core-sim2","codeSnippet":"long start = System.nanoTime ();","LineStart":32,"CharStart":4,"LineEnd":32,"CharEnd":36,"status":"core-sim"},{"fileName":"Clone83.java","labeltext":"noncore-diff1","codeSnippet":"super.paintComponent (g);","LineStart":33,"CharStart":4,"LineEnd":33,"CharEnd":29,"status":"noncore-diff"},{"fileName":"Clone83.java","labeltext":"core-sim2","codeSnippet":"double time = 2 * Math.PI * (System.currentTimeMillis () % 5000) / 5000.;","LineStart":20,"CharStart":8,"LineEnd":20,"CharEnd":81,"status":"core-sim"},{"fileName":"Clone83.java","labeltext":"core-sim1","codeSnippet":"    if (activeRedraw) {\n        if (repaintBuffer1) {\n            Graphics g1 = buffer1.getGraphics ();\n            g1.clearRect (0, 0, width, height);\n            g1.setColor (Color.green);\n            g1.drawRect (0, 0, width - 1, height - 1);\n            g.drawImage (buffer1, 0, 0, null);\n            repaintBuffer1 = false;\n        }","LineStart":11,"CharStart":4,"LineEnd":19,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone83.java","labeltext":"core-sim1","codeSnippet":"        g.setColor (Color.RED);\n        if (rect != null) {\n            g.drawImage (buffer1, rect.x, rect.y, rect.x + rect.width, rect.y + rect.height, rect.x, rect.y, rect.x + rect.width, rect.y + rect.height, this);\n        }\n        rect = new Rectangle ((int) (Math.sin (time) * width / 3 + width / 2 - 20), (int) (Math.cos (time) * height / 3 + height / 2) - 20, 40, 40);\n        g.fillRect (rect.x, rect.y, rect.width, rect.height);\n        activeRedraw = false;\n    }","LineStart":21,"CharStart":8,"LineEnd":28,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone83.java","labeltext":"core-sim1","codeSnippet":"    g.drawImage (background, 0, 0, this);\n    double theta = 2 * Math.PI * index ++ / 64;\n    g.setColor (Color.blue);\n    rect.setRect ((int) (Math.sin (theta) * w / 3 + w / 2 - RADIUS), (int) (Math.cos (theta) * h / 3 + h / 2 - RADIUS), 2 * RADIUS, 2 * RADIUS);\n    g.fillOval (rect.x, rect.y, rect.width, rect.height);\n    g.setColor (Color.white);\n","LineStart":36,"CharStart":4,"LineEnd":42,"CharEnd":0,"status":"core-sim"},{"fileName":"Clone83.java","labeltext":"core-sim1","codeSnippet":" g.drawString (s, 5, 16);","LineStart":51,"CharStart":3,"LineEnd":51,"CharEnd":28,"status":"core-sim"},{"fileName":"Clone84.java","labeltext":"core-sim1","codeSnippet":"    if (a == 0 || b == 0) return 0;\n    if (a == b) return a;\n    if (a > b) return gcd (a - b, b);\n    return gcd (a, b - a);","LineStart":9,"CharStart":4,"LineEnd":12,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone84.java","labeltext":"core-sim1","codeSnippet":"    if (a == Integer.MIN_VALUE) {\n        if (b == Integer.MIN_VALUE) throw new IllegalArgumentException (\"gcd() is greater than Integer.MAX_VALUE\");\n        return 1 << Integer.numberOfTrailingZeros (Math.abs (b));\n    }\n    if (b == Integer.MIN_VALUE) return 1 << Integer.numberOfTrailingZeros (Math.abs (a));\n    a = Math.abs (a);\n    b = Math.abs (b);\n    if (a == 0) return b;\n    if (b == 0) return a;\n    int factorsOfTwoInA = Integer.numberOfTrailingZeros (a), factorsOfTwoInB = Integer.numberOfTrailingZeros (b), commonFactorsOfTwo = Math.min (factorsOfTwoInA, factorsOfTwoInB);\n    a>>= factorsOfTwoInA;\n    b>>= factorsOfTwoInB;\n    while (a != b) {\n        if (a > b) {\n            a = (a - b);\n            a>>= Integer.numberOfTrailingZeros (a);\n        } else {\n            b = (b - a);\n            b>>= Integer.numberOfTrailingZeros (b);\n        }\n    }\n    return a << commonFactorsOfTwo;","LineStart":16,"CharStart":4,"LineEnd":37,"CharEnd":35,"status":"core-sim"},{"fileName":"Clone85.java","labeltext":"core-diff1","codeSnippet":"    for (Node toolBar = htmlEditor.lookup (\".tool-bar\");\n    toolBar != null; toolBar = htmlEditor.lookup (\".tool-bar\")) {\n        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);\n    }","LineStart":32,"CharStart":0,"LineEnd":35,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone85.java","labeltext":"core-diff1","codeSnippet":"    addCustomToolBarTo (htmlEditor);\n    printChildren (htmlEditor, 20);\n    moveFromTo (htmlEditor, \"PopupButton\", 0, \"ToolBar\", 2);\n    moveFromTo (htmlEditor, \"PopupButton\", 1, \"ToolBar\", 2);\n    moveFromTo (htmlEditor, \"Separator\", 4, \"ToolBar\", 2);\n    moveFromTo (htmlEditor, \"ComboBox\", 2, \"ToolBar\", 2);\n    moveFromTo (htmlEditor, \"Separator\", 5, \"ToolBar\", 2);\n    moveFromTo (htmlEditor, \"ToggleButton\", 6, \"ToolBar\", 2);\n    moveFromTo (htmlEditor, \"ToggleButton\", 7, \"ToolBar\", 2);\n    moveFromTo (htmlEditor, \"ToggleButton\", 8, \"ToolBar\", 2);\n    removeFrom (htmlEditor, \"ToolBar\", 1);\n    removeFrom (htmlEditor, \"ToolBar\", 0);","LineStart":14,"CharStart":0,"LineEnd":25,"CharEnd":42,"status":"core-diff"},{"fileName":"Clone85.java","labeltext":"noncore-sim1","codeSnippet":"    final HTMLEditor htmlEditor = new HTMLEditor ();\n    stage.setScene (new Scene (htmlEditor));","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone85.java","labeltext":"noncore-sim1","codeSnippet":"    final HTMLEditor htmlEditor = new HTMLEditor ();\n    primaryStage.setScene (new Scene (htmlEditor));\n    primaryStage.show ();","LineStart":29,"CharStart":4,"LineEnd":31,"CharEnd":25,"status":"noncore-sim"},{"fileName":"Clone85.java","labeltext":"noncore-sim1","codeSnippet":"stage.show ();","LineStart":13,"CharStart":4,"LineEnd":13,"CharEnd":18,"status":"noncore-sim"},{"fileName":"Clone85.java","labeltext":"noncore-diff1","codeSnippet":"    stage.setWidth (300);\n    stage.setHeight (200);","LineStart":11,"CharStart":4,"LineEnd":12,"CharEnd":26,"status":"noncore-diff"},{"fileName":"Clone86.java","labeltext":"core-diff1","codeSnippet":"    hideImageNodesMatching (htmlEditor, Pattern.compile (\".*(Cut|Copy|Paste).*\"), 0);\n    Node seperator = htmlEditor.lookup (\".separator\");\n    seperator.setVisible (false);\n    seperator.setManaged (false);","LineStart":12,"CharStart":4,"LineEnd":15,"CharEnd":33,"status":"core-diff"},{"fileName":"Clone86.java","labeltext":"core-diff1","codeSnippet":"    for (Node toolBar = htmlEditor.lookup (\".tool-bar\");\n    toolBar != null; toolBar = htmlEditor.lookup (\".tool-bar\")) {\n        ((Pane) toolBar.getParent ()).getChildren ().remove (toolBar);\n    }","LineStart":22,"CharStart":4,"LineEnd":25,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone86.java","labeltext":"noncore-sim1","codeSnippet":"    final HTMLEditor htmlEditor = new HTMLEditor ();\n    stage.setScene (new Scene (htmlEditor));\n    stage.show ();","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":18,"status":"noncore-sim"},{"fileName":"Clone86.java","labeltext":"noncore-sim1","codeSnippet":"    final HTMLEditor htmlEditor = new HTMLEditor ();\n    primaryStage.setScene (new Scene (htmlEditor));\n    primaryStage.show ();","LineStart":19,"CharStart":4,"LineEnd":21,"CharEnd":25,"status":"noncore-sim"},{"fileName":"Clone87.java","labeltext":"core-diff2","codeSnippet":"    keyPress (VK_ALT);\n    keyPress (VK_NUMPAD0);\n    keyRelease (VK_NUMPAD0);\n    String altCode = Integer.toString (c);\n    for (int i = 0;\n    i < altCode.length (); i ++) {\n        c = (char) (altCode.charAt (i) + '0');\n        keyPress (c);\n        keyRelease (c);\n    }\n    keyRelease (VK_ALT);","LineStart":9,"CharStart":4,"LineEnd":19,"CharEnd":24,"status":"core-diff"},{"fileName":"Clone87.java","labeltext":"core-diff1","codeSnippet":"    Clipboard clipboard = Toolkit.getDefaultToolkit ().getSystemClipboard ();\n    StringSelection stringSelection = new StringSelection (characters);\n    clipboard.setContents (stringSelection, clipboardOwner);\n    robot.keyPress (KeyEvent.VK_CONTROL);\n    robot.keyPress (KeyEvent.VK_V);\n    robot.keyRelease (KeyEvent.VK_V);\n    robot.keyRelease (KeyEvent.VK_CONTROL);","LineStart":23,"CharStart":4,"LineEnd":29,"CharEnd":43,"status":"core-diff"},{"fileName":"Clone89.java","labeltext":"core-sim1","codeSnippet":"    keyPress (VK_ALT);\n    keyPress (VK_NUMPAD0);\n    keyRelease (VK_NUMPAD0);\n    String altCode = Integer.toString (c);\n    for (int i = 0;\n    i < altCode.length (); i ++) {\n        c = (char) (altCode.charAt (i) + '0');\n        keyPress (c);\n        keyRelease (c);\n    }\n    keyRelease (VK_ALT);","LineStart":9,"CharStart":3,"LineEnd":19,"CharEnd":24,"status":"core-sim"},{"fileName":"Clone89.java","labeltext":"core-sim1","codeSnippet":"    switch (character) {\n        case 'a' :\n            doType (VK_A);\n            break;\n        case 'b' :\n            doType (VK_B);\n            break;\n        case 'c' :\n            doType (VK_C);\n            break;\n        case 'd' :\n            doType (VK_D);\n            break;\n        case 'e' :\n            doType (VK_E);\n            break;\n        case 'f' :\n            doType (VK_F);\n            break;\n        case 'g' :\n            doType (VK_G);\n            break;\n        case 'h' :\n            doType (VK_H);\n            break;\n        case 'i' :\n            doType (VK_I);\n            break;\n        case 'j' :\n            doType (VK_J);\n            break;\n        case 'k' :\n            doType (VK_K);\n            break;\n        case 'l' :\n            doType (VK_L);\n            break;\n        case 'm' :\n            doType (VK_M);\n            break;\n        case 'n' :\n            doType (VK_N);\n            break;\n        case 'o' :\n            doType (VK_O);\n            break;\n        case 'p' :\n            doType (VK_P);\n            break;\n        case 'q' :\n            doType (VK_Q);\n            break;\n        case 'r' :\n            doType (VK_R);\n            break;\n        case 's' :\n            doType (VK_S);\n            break;\n        case 't' :\n            doType (VK_T);\n            break;\n        case 'u' :\n            doType (VK_U);\n            break;\n        case 'v' :\n            doType (VK_V);\n            break;\n        case 'w' :\n            doType (VK_W);\n            break;\n        case 'x' :\n            doType (VK_X);\n            break;\n        case 'y' :\n            doType (VK_Y);\n            break;\n        case 'z' :\n            doType (VK_Z);\n            break;\n        case 'A' :\n            doType (VK_SHIFT, VK_A);\n            break;\n        case 'B' :\n            doType (VK_SHIFT, VK_B);\n            break;\n        case 'C' :\n            doType (VK_SHIFT, VK_C);\n            break;\n        case 'D' :\n            doType (VK_SHIFT, VK_D);\n            break;\n        case 'E' :\n            doType (VK_SHIFT, VK_E);\n            break;\n        case 'F' :\n            doType (VK_SHIFT, VK_F);\n            break;\n        case 'G' :\n            doType (VK_SHIFT, VK_G);\n            break;\n        case 'H' :\n            doType (VK_SHIFT, VK_H);\n            break;\n        case 'I' :\n            doType (VK_SHIFT, VK_I);\n            break;\n        case 'J' :\n            doType (VK_SHIFT, VK_J);\n            break;\n        case 'K' :\n            doType (VK_SHIFT, VK_K);\n            break;\n        case 'L' :\n            doType (VK_SHIFT, VK_L);\n            break;\n        case 'M' :\n            doType (VK_SHIFT, VK_M);\n            break;\n        case 'N' :\n            doType (VK_SHIFT, VK_N);\n            break;\n        case 'O' :\n            doType (VK_SHIFT, VK_O);\n            break;\n        case 'P' :\n            doType (VK_SHIFT, VK_P);\n            break;\n        case 'Q' :\n            doType (VK_SHIFT, VK_Q);\n            break;\n        case 'R' :\n            doType (VK_SHIFT, VK_R);\n            break;\n        case 'S' :\n            doType (VK_SHIFT, VK_S);\n            break;\n        case 'T' :\n            doType (VK_SHIFT, VK_T);\n            break;\n        case 'U' :\n            doType (VK_SHIFT, VK_U);\n            break;\n        case 'V' :\n            doType (VK_SHIFT, VK_V);\n            break;\n        case 'W' :\n            doType (VK_SHIFT, VK_W);\n            break;\n        case 'X' :\n            doType (VK_SHIFT, VK_X);\n            break;\n        case 'Y' :\n            doType (VK_SHIFT, VK_Y);\n            break;\n        case 'Z' :\n            doType (VK_SHIFT, VK_Z);\n            break;\n        case '`' :\n            doType (VK_BACK_QUOTE);\n            break;\n        case '0' :\n            doType (VK_0);\n            break;\n        case '1' :\n            doType (VK_1);\n            break;\n        case '2' :\n            doType (VK_2);\n            break;\n        case '3' :\n            doType (VK_3);\n            break;\n        case '4' :\n            doType (VK_4);\n            break;\n        case '5' :\n            doType (VK_5);\n            break;\n        case '6' :\n            doType (VK_6);\n            break;\n        case '7' :\n            doType (VK_7);\n            break;\n        case '8' :\n            doType (VK_8);\n            break;\n        case '9' :\n            doType (VK_9);\n            break;\n        case '-' :\n            doType (VK_MINUS);\n            break;\n        case '=' :\n            doType (VK_EQUALS);\n            break;\n        case '~' :\n            doType (VK_SHIFT, VK_BACK_QUOTE);\n            break;\n        case '!' :\n            doType (VK_EXCLAMATION_MARK);\n            break;\n        case '@' :\n            doType (VK_AT);\n            break;\n        case '#' :\n            doType (VK_NUMBER_SIGN);\n            break;\n        case '$' :\n            doType (VK_DOLLAR);\n            break;\n        case '%' :\n            doType (VK_SHIFT, VK_5);\n            break;\n        case '^' :\n            doType (VK_CIRCUMFLEX);\n            break;\n        case '&' :\n            doType (VK_AMPERSAND);\n            break;\n        case '*' :\n            doType (VK_ASTERISK);\n            break;\n        case '(' :\n            doType (VK_LEFT_PARENTHESIS);\n            break;\n        case ')' :\n            doType (VK_RIGHT_PARENTHESIS);\n            break;\n        case '_' :\n            doType (VK_UNDERSCORE);\n            break;\n        case '+' :\n            doType (VK_PLUS);\n            break;\n        case '\\t' :\n            doType (VK_TAB);\n            break;\n        case '\\n' :\n            doType (VK_ENTER);\n            break;\n        case '[' :\n            doType (VK_OPEN_BRACKET);\n            break;\n        case ']' :\n            doType (VK_CLOSE_BRACKET);\n            break;\n        case '\\\\' :\n            doType (VK_BACK_SLASH);\n            break;\n        case '{' :\n            doType (VK_SHIFT, VK_OPEN_BRACKET);\n            break;\n        case '}' :\n            doType (VK_SHIFT, VK_CLOSE_BRACKET);\n            break;\n        case '|' :\n            doType (VK_SHIFT, VK_BACK_SLASH);\n            break;\n        case ';' :\n            doType (VK_SEMICOLON);\n            break;\n        case ':' :\n            doType (VK_COLON);\n            break;\n        case '\\'' :\n            doType (VK_QUOTE);\n            break;\n        case '\"' :\n            doType (VK_QUOTEDBL);\n            break;\n        case ',' :\n            doType (VK_COMMA);\n            break;\n        case '<' :\n            doType (VK_SHIFT, VK_COMMA);\n            break;\n        case '.' :\n            doType (VK_PERIOD);\n            break;\n        case '>' :\n            doType (VK_SHIFT, VK_PERIOD);\n            break;\n        case '/' :\n            doType (VK_SLASH);\n            break;\n        case '?' :\n            doType (VK_SHIFT, VK_SLASH);\n            break;\n        case ' ' :\n            doType (VK_SPACE);\n            break;\n        default :\n            throw new IllegalArgumentException (\"Cannot type character \" + character);\n    }","LineStart":23,"CharStart":4,"LineEnd":317,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone91.java","labeltext":"core-sim1","codeSnippet":"    keyPress (VK_ALT);\n    keyPress (VK_NUMPAD0);\n    keyRelease (VK_NUMPAD0);\n    String altCode = Integer.toString (c);\n    for (int i = 0;\n    i < altCode.length (); i ++) {\n        c = (char) (altCode.charAt (i) + '0');\n        keyPress (c);\n        keyRelease (c);\n    }\n    keyRelease (VK_ALT);","LineStart":9,"CharStart":4,"LineEnd":19,"CharEnd":24,"status":"core-sim"},{"fileName":"Clone91.java","labeltext":"core-sim1","codeSnippet":"    switch (character) {\n        case 'a' :\n            doType (VK_A);\n            break;\n        case 'b' :\n            doType (VK_B);\n            break;\n        case 'c' :\n            doType (VK_C);\n            break;\n        case 'd' :\n            doType (VK_D);\n            break;\n        case 'e' :\n            doType (VK_E);\n            break;\n        case 'f' :\n            doType (VK_F);\n            break;\n        case 'g' :\n            doType (VK_G);\n            break;\n        case 'h' :\n            doType (VK_H);\n            break;\n        case 'i' :\n            doType (VK_I);\n            break;\n        case 'j' :\n            doType (VK_J);\n            break;\n        case 'k' :\n            doType (VK_K);\n            break;\n        case 'l' :\n            doType (VK_L);\n            break;\n        case 'm' :\n            doType (VK_M);\n            break;\n        case 'n' :\n            doType (VK_N);\n            break;\n        case 'o' :\n            doType (VK_O);\n            break;\n        case 'p' :\n            doType (VK_P);\n            break;\n        case 'q' :\n            doType (VK_Q);\n            break;\n        case 'r' :\n            doType (VK_R);\n            break;\n        case 's' :\n            doType (VK_S);\n            break;\n        case 't' :\n            doType (VK_T);\n            break;\n        case 'u' :\n            doType (VK_U);\n            break;\n        case 'v' :\n            doType (VK_V);\n            break;\n        case 'w' :\n            doType (VK_W);\n            break;\n        case 'x' :\n            doType (VK_X);\n            break;\n        case 'y' :\n            doType (VK_Y);\n            break;\n        case 'z' :\n            doType (VK_Z);\n            break;\n        case 'A' :\n            doType (VK_SHIFT, VK_A);\n            break;\n        case 'B' :\n            doType (VK_SHIFT, VK_B);\n            break;\n        case 'C' :\n            doType (VK_SHIFT, VK_C);\n            break;\n        case 'D' :\n            doType (VK_SHIFT, VK_D);\n            break;\n        case 'E' :\n            doType (VK_SHIFT, VK_E);\n            break;\n        case 'F' :\n            doType (VK_SHIFT, VK_F);\n            break;\n        case 'G' :\n            doType (VK_SHIFT, VK_G);\n            break;\n        case 'H' :\n            doType (VK_SHIFT, VK_H);\n            break;\n        case 'I' :\n            doType (VK_SHIFT, VK_I);\n            break;\n        case 'J' :\n            doType (VK_SHIFT, VK_J);\n            break;\n        case 'K' :\n            doType (VK_SHIFT, VK_K);\n            break;\n        case 'L' :\n            doType (VK_SHIFT, VK_L);\n            break;\n        case 'M' :\n            doType (VK_SHIFT, VK_M);\n            break;\n        case 'N' :\n            doType (VK_SHIFT, VK_N);\n            break;\n        case 'O' :\n            doType (VK_SHIFT, VK_O);\n            break;\n        case 'P' :\n            doType (VK_SHIFT, VK_P);\n            break;\n        case 'Q' :\n            doType (VK_SHIFT, VK_Q);\n            break;\n        case 'R' :\n            doType (VK_SHIFT, VK_R);\n            break;\n        case 'S' :\n            doType (VK_SHIFT, VK_S);\n            break;\n        case 'T' :\n            doType (VK_SHIFT, VK_T);\n            break;\n        case 'U' :\n            doType (VK_SHIFT, VK_U);\n            break;\n        case 'V' :\n            doType (VK_SHIFT, VK_V);\n            break;\n        case 'W' :\n            doType (VK_SHIFT, VK_W);\n            break;\n        case 'X' :\n            doType (VK_SHIFT, VK_X);\n            break;\n        case 'Y' :\n            doType (VK_SHIFT, VK_Y);\n            break;\n        case 'Z' :\n            doType (VK_SHIFT, VK_Z);\n            break;\n        case '`' :\n            doType (VK_BACK_QUOTE);\n            break;\n        case '0' :\n            doType (VK_0);\n            break;\n        case '1' :\n            doType (VK_1);\n            break;\n        case '2' :\n            doType (VK_2);\n            break;\n        case '3' :\n            doType (VK_3);\n            break;\n        case '4' :\n            doType (VK_4);\n            break;\n        case '5' :\n            doType (VK_5);\n            break;\n        case '6' :\n            doType (VK_6);\n            break;\n        case '7' :\n            doType (VK_7);\n            break;\n        case '8' :\n            doType (VK_8);\n            break;\n        case '9' :\n            doType (VK_9);\n            break;\n        case '-' :\n            doType (VK_MINUS);\n            break;\n        case '=' :\n            doType (VK_EQUALS);\n            break;\n        case '~' :\n            doType (VK_BACK_QUOTE);\n            break;\n        case '!' :\n            doType (VK_SHIFT, VK_EXCLAMATION_MARK);\n            break;\n        case '@' :\n            doType (VK_SHIFT, VK_AT);\n            break;\n        case '#' :\n            doType (VK_SHIFT, VK_NUMBER_SIGN);\n            break;\n        case '$' :\n            doType (VK_SHIFT, VK_DOLLAR);\n            break;\n        case '%' :\n            doType (VK_SHIFT, VK_5);\n            break;\n        case '^' :\n            doType (VK_SHIFT, VK_CIRCUMFLEX);\n            break;\n        case '&' :\n            doType (VK_SHIFT, VK_AMPERSAND);\n            break;\n        case '*' :\n            doType (VK_SHIFT, VK_ASTERISK);\n            break;\n        case '(' :\n            doType (VK_LEFT_PARENTHESIS);\n            break;\n        case ')' :\n            doType (VK_RIGHT_PARENTHESIS);\n            break;\n        case '_' :\n            doType (VK_SHIFT, VK_UNDERSCORE);\n            break;\n        case '+' :\n            doType (VK_SHIFT, VK_PLUS);\n            break;\n        case '\\t' :\n            doType (VK_TAB);\n            break;\n        case '\\n' :\n            doType (VK_ENTER);\n            break;\n        case '[' :\n            doType (VK_OPEN_BRACKET);\n            break;\n        case ']' :\n            doType (VK_CLOSE_BRACKET);\n            break;\n        case '\\\\' :\n            doType (VK_BACK_SLASH);\n            break;\n        case '{' :\n            doType (VK_SHIFT, VK_OPEN_BRACKET);\n            break;\n        case '}' :\n            doType (VK_SHIFT, VK_CLOSE_BRACKET);\n            break;\n        case '|' :\n            doType (VK_SHIFT, VK_BACK_SLASH);\n            break;\n        case ';' :\n            doType (VK_SEMICOLON);\n            break;\n        case ':' :\n            doType (VK_SHIFT, VK_COLON);\n            break;\n        case '\\'' :\n            doType (VK_QUOTE);\n            break;\n        case '\"' :\n            doType (VK_SHIFT, VK_QUOTEDBL);\n            break;\n        case ',' :\n            doType (VK_COMMA);\n            break;\n        case '<' :\n            doType (VK_SHIFT, VK_COMMA);\n            break;\n        case '.' :\n            doType (VK_PERIOD);\n            break;\n        case '>' :\n            doType (VK_SHIFT, VK_PERIOD);\n            break;\n        case '/' :\n            doType (VK_SLASH);\n            break;\n        case '?' :\n            doType (VK_SHIFT, VK_SLASH);\n            break;\n        case ' ' :\n            doType (VK_SPACE);\n            break;\n        case '\\b' :\n            doType (VK_BACK_SPACE);\n            break;\n        default :\n            throw new IllegalArgumentException (\"Cannot type character \" + character);\n    }","LineStart":23,"CharStart":4,"LineEnd":320,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone98.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0, len = chars.length ();\n    i < len; i ++) {\n        char c = chars.charAt (i);\n        AWTKeyStroke keyStroke = getKeyStroke (c);\n        int keyCode = keyStroke.getKeyCode ();\n        boolean shift = Character.isUpperCase (c) || keyStroke.getModifiers () == (SHIFT_DOWN_MASK + 1);\n        if (shift) {\n            robot.keyPress (KeyEvent.VK_SHIFT);\n        }\n        robot.keyPress (keyCode);\n        robot.keyRelease (keyCode);\n        if (shift) {\n            robot.keyRelease (KeyEvent.VK_SHIFT);\n        }","LineStart":10,"CharStart":4,"LineEnd":23,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone98.java","labeltext":"core-sim1","codeSnippet":"}","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone98.java","labeltext":"noncore-diff1","codeSnippet":"ms = ms > 0 ? ms : 0;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":25,"status":"noncore-diff"},{"fileName":"Clone98.java","labeltext":"noncore-diff1","codeSnippet":"        if (ms > 0) {\n            robot.delay (ms);\n        }","LineStart":24,"CharStart":8,"LineEnd":26,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone98.java","labeltext":"core-sim1","codeSnippet":"    switch (character) {\n        case 'a' :\n            doType (VK_A);\n            break;\n        case 'b' :\n            doType (VK_B);\n            break;\n        case 'c' :\n            doType (VK_C);\n            break;\n        case 'd' :\n            doType (VK_D);\n            break;\n        case 'e' :\n            doType (VK_E);\n            break;\n        case 'f' :\n            doType (VK_F);\n            break;\n        case 'g' :\n            doType (VK_G);\n            break;\n        case 'h' :\n            doType (VK_H);\n            break;\n        case 'i' :\n            doType (VK_I);\n            break;\n        case 'j' :\n            doType (VK_J);\n            break;\n        case 'k' :\n            doType (VK_K);\n            break;\n        case 'l' :\n            doType (VK_L);\n            break;\n        case 'm' :\n            doType (VK_M);\n            break;\n        case 'n' :\n            doType (VK_N);\n            break;\n        case 'o' :\n            doType (VK_O);\n            break;\n        case 'p' :\n            doType (VK_P);\n            break;\n        case 'q' :\n            doType (VK_Q);\n            break;\n        case 'r' :\n            doType (VK_R);\n            break;\n        case 's' :\n            doType (VK_S);\n            break;\n        case 't' :\n            doType (VK_T);\n            break;\n        case 'u' :\n            doType (VK_U);\n            break;\n        case 'v' :\n            doType (VK_V);\n            break;\n        case 'w' :\n            doType (VK_W);\n            break;\n        case 'x' :\n            doType (VK_X);\n            break;\n        case 'y' :\n            doType (VK_Y);\n            break;\n        case 'z' :\n            doType (VK_Z);\n            break;\n        case 'A' :\n            doType (VK_SHIFT, VK_A);\n            break;\n        case 'B' :\n            doType (VK_SHIFT, VK_B);\n            break;\n        case 'C' :\n            doType (VK_SHIFT, VK_C);\n            break;\n        case 'D' :\n            doType (VK_SHIFT, VK_D);\n            break;\n        case 'E' :\n            doType (VK_SHIFT, VK_E);\n            break;\n        case 'F' :\n            doType (VK_SHIFT, VK_F);\n            break;\n        case 'G' :\n            doType (VK_SHIFT, VK_G);\n            break;\n        case 'H' :\n            doType (VK_SHIFT, VK_H);\n            break;\n        case 'I' :\n            doType (VK_SHIFT, VK_I);\n            break;\n        case 'J' :\n            doType (VK_SHIFT, VK_J);\n            break;\n        case 'K' :\n            doType (VK_SHIFT, VK_K);\n            break;\n        case 'L' :\n            doType (VK_SHIFT, VK_L);\n            break;\n        case 'M' :\n            doType (VK_SHIFT, VK_M);\n            break;\n        case 'N' :\n            doType (VK_SHIFT, VK_N);\n            break;\n        case 'O' :\n            doType (VK_SHIFT, VK_O);\n            break;\n        case 'P' :\n            doType (VK_SHIFT, VK_P);\n            break;\n        case 'Q' :\n            doType (VK_SHIFT, VK_Q);\n            break;\n        case 'R' :\n            doType (VK_SHIFT, VK_R);\n            break;\n        case 'S' :\n            doType (VK_SHIFT, VK_S);\n            break;\n        case 'T' :\n            doType (VK_SHIFT, VK_T);\n            break;\n        case 'U' :\n            doType (VK_SHIFT, VK_U);\n            break;\n        case 'V' :\n            doType (VK_SHIFT, VK_V);\n            break;\n        case 'W' :\n            doType (VK_SHIFT, VK_W);\n            break;\n        case 'X' :\n            doType (VK_SHIFT, VK_X);\n            break;\n        case 'Y' :\n            doType (VK_SHIFT, VK_Y);\n            break;\n        case 'Z' :\n            doType (VK_SHIFT, VK_Z);\n            break;\n        case '`' :\n            doType (VK_BACK_QUOTE);\n            break;\n        case '0' :\n            doType (VK_0);\n            break;\n        case '1' :\n            doType (VK_1);\n            break;\n        case '2' :\n            doType (VK_2);\n            break;\n        case '3' :\n            doType (VK_3);\n            break;\n        case '4' :\n            doType (VK_4);\n            break;\n        case '5' :\n            doType (VK_5);\n            break;\n        case '6' :\n            doType (VK_6);\n            break;\n        case '7' :\n            doType (VK_7);\n            break;\n        case '8' :\n            doType (VK_8);\n            break;\n        case '9' :\n            doType (VK_9);\n            break;\n        case '-' :\n            doType (VK_MINUS);\n            break;\n        case '=' :\n            doType (VK_EQUALS);\n            break;\n        case '~' :\n            doType (VK_SHIFT, VK_BACK_QUOTE);\n            break;\n        case '!' :\n            doType (VK_EXCLAMATION_MARK);\n            break;\n        case '@' :\n            doType (VK_AT);\n            break;\n        case '#' :\n            doType (VK_NUMBER_SIGN);\n            break;\n        case '$' :\n            doType (VK_DOLLAR);\n            break;\n        case '%' :\n            doType (VK_SHIFT, VK_5);\n            break;\n        case '^' :\n            doType (VK_CIRCUMFLEX);\n            break;\n        case '&' :\n            doType (VK_AMPERSAND);\n            break;\n        case '*' :\n            doType (VK_ASTERISK);\n            break;\n        case '(' :\n            doType (VK_LEFT_PARENTHESIS);\n            break;\n        case ')' :\n            doType (VK_RIGHT_PARENTHESIS);\n            break;\n        case '_' :\n            doType (VK_UNDERSCORE);\n            break;\n        case '+' :\n            doType (VK_PLUS);\n            break;\n        case '\\t' :\n            doType (VK_TAB);\n            break;\n        case '\\n' :\n            doType (VK_ENTER);\n            break;\n        case '[' :\n            doType (VK_OPEN_BRACKET);\n            break;\n        case ']' :\n            doType (VK_CLOSE_BRACKET);\n            break;\n        case '\\\\' :\n            doType (VK_BACK_SLASH);\n            break;\n        case '{' :\n            doType (VK_SHIFT, VK_OPEN_BRACKET);\n            break;\n        case '}' :\n            doType (VK_SHIFT, VK_CLOSE_BRACKET);\n            break;\n        case '|' :\n            doType (VK_SHIFT, VK_BACK_SLASH);\n            break;\n        case ';' :\n            doType (VK_SEMICOLON);\n            break;\n        case ':' :\n            doType (VK_COLON);\n            break;\n        case '\\'' :\n            doType (VK_QUOTE);\n            break;\n        case '\"' :\n            doType (VK_QUOTEDBL);\n            break;\n        case ',' :\n            doType (VK_COMMA);\n            break;\n        case '<' :\n            doType (VK_SHIFT, VK_COMMA);\n            break;\n        case '.' :\n            doType (VK_PERIOD);\n            break;\n        case '>' :\n            doType (VK_SHIFT, VK_PERIOD);\n            break;\n        case '/' :\n            doType (VK_SLASH);\n            break;\n        case '?' :\n            doType (VK_SHIFT, VK_SLASH);\n            break;\n        case ' ' :\n            doType (VK_SPACE);\n            break;\n        default :\n            throw new IllegalArgumentException (\"Cannot type character \" + character);\n    }","LineStart":31,"CharStart":4,"LineEnd":325,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone107.java","labeltext":"core-diff1","codeSnippet":"    try {\n        UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());\n    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {\n    }\n    JFrame frame = new JFrame ();\n    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    frame.setLayout (new BorderLayout ());\n    frame.add (new BlinkPane ());\n    frame.pack ();\n    frame.setLocationRelativeTo (null);\n    frame.setVisible (true);","LineStart":9,"CharStart":4,"LineEnd":19,"CharEnd":28,"status":"core-diff"},{"fileName":"Clone107.java","labeltext":"core-diff2","codeSnippet":"    for (int index = 0;\n    index < 10; index ++) {\n        if (index % 2 == 0) {\n            SwingUtilities.invokeLater (blinkOn);\n        } else {\n            SwingUtilities.invokeLater (blinkOff);\n        }\n        try {\n            Thread.sleep (125);\n        } catch (InterruptedException ex) {\n        }\n    }\n    SwingUtilities.invokeLater (new Runnable () {\n        @Override\n        public void run () {\n            blinkPane.reset ();\n        }}\n    );","LineStart":25,"CharStart":4,"LineEnd":42,"CharEnd":6,"status":"core-diff"},{"fileName":"Clone107.java","labeltext":"noncore-diff1","codeSnippet":"    Blink blinkOn = new Blink (blinkPane, true);\n    Blink blinkOff = new Blink (blinkPane, false);","LineStart":23,"CharStart":4,"LineEnd":24,"CharEnd":50,"status":"noncore-diff"},{"fileName":"Clone109.java","labeltext":"noncore-sim1","codeSnippet":"final File sysTempDir =","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":27,"status":"noncore-sim"},{"fileName":"Clone109.java","labeltext":"noncore-sim1","codeSnippet":"System.getProperty (\"java.io.tmpdir\")","LineStart":9,"CharStart":38,"LineEnd":9,"CharEnd":75,"status":"noncore-sim"},{"fileName":"Clone109.java","labeltext":"noncore-sim1","codeSnippet":"final String baseTempPath = System.getProperty (\"java.io.tmpdir\");","LineStart":29,"CharStart":4,"LineEnd":29,"CharEnd":70,"status":"noncore-sim"},{"fileName":"Clone109.java","labeltext":"noncore-diff1","codeSnippet":"new File (","LineStart":9,"CharStart":28,"LineEnd":9,"CharEnd":38,"status":"noncore-diff"},{"fileName":"Clone109.java","labeltext":"noncore-diff1","codeSnippet":")","LineStart":9,"CharStart":75,"LineEnd":9,"CharEnd":76,"status":"noncore-diff"},{"fileName":"Clone109.java","labeltext":"noncore-sim2","codeSnippet":"File tempDir = new File (baseTempPath + File.separator + \"tempDir\" + randomInt);","LineStart":32,"CharStart":4,"LineEnd":32,"CharEnd":84,"status":"noncore-sim"},{"fileName":"Clone109.java","labeltext":"noncore-sim2","codeSnippet":"newTempDir = new File (sysTempDir, dirName);","LineStart":19,"CharStart":8,"LineEnd":19,"CharEnd":52,"status":"noncore-sim"},{"fileName":"Clone109.java","labeltext":"noncore-sim3","codeSnippet":"      while (newTempDir.exists ());\n    if (newTempDir.mkdirs ()) {\n        return newTempDir;\n    }","LineStart":20,"CharStart":6,"LineEnd":23,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone109.java","labeltext":"noncore-sim3","codeSnippet":"    if (tempDir.exists () == false) {\n        tempDir.mkdir ();\n    }","LineStart":33,"CharStart":4,"LineEnd":35,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone109.java","labeltext":"noncore-diff1","codeSnippet":"    File newTempDir;\n    final int maxAttempts = 9;\n    int attemptCount = 0;","LineStart":10,"CharStart":4,"LineEnd":12,"CharEnd":25,"status":"noncore-diff"},{"fileName":"Clone109.java","labeltext":"core-diff1","codeSnippet":"    do {\n        attemptCount ++;\n        if (attemptCount > maxAttempts) {\n            throw new IOException (\"The highly improbable has occurred! Failed to \" + \"create a unique temporary directory after \" + maxAttempts + \" attempts.\");\n        }\n        String dirName = UUID.randomUUID ().toString ();","LineStart":13,"CharStart":4,"LineEnd":18,"CharEnd":56,"status":"core-diff"},{"fileName":"Clone109.java","labeltext":"core-diff1","codeSnippet":"}","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone109.java","labeltext":"noncore-diff2","codeSnippet":"      else {\n        throw new IOException (\"Failed to create temp dir named \" + newTempDir.getAbsolutePath ());\n    }","LineStart":23,"CharStart":6,"LineEnd":25,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone109.java","labeltext":"core-diff2","codeSnippet":"    Random rand = new Random ();\n    int randomInt = 1 + rand.nextInt ();","LineStart":30,"CharStart":4,"LineEnd":31,"CharEnd":40,"status":"core-diff"},{"fileName":"Clone109.java","labeltext":"core-diff3","codeSnippet":"    tempDir.deleteOnExit ();\n    return tempDir;","LineStart":36,"CharStart":4,"LineEnd":37,"CharEnd":19,"status":"core-diff"},{"fileName":"Clone125.java","labeltext":"core-sim1","codeSnippet":"if (len <= text.length ())","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":30,"status":"core-sim"},{"fileName":"Clone125.java","labeltext":"core-sim1","codeSnippet":"if (","LineStart":17,"CharStart":4,"LineEnd":17,"CharEnd":8,"status":"core-sim"},{"fileName":"Clone125.java","labeltext":"core-sim1","codeSnippet":"size <= s.length ())","LineStart":17,"CharStart":21,"LineEnd":17,"CharEnd":41,"status":"core-sim"},{"fileName":"Clone125.java","labeltext":"noncore-diff1","codeSnippet":"s == null ||","LineStart":17,"CharStart":8,"LineEnd":17,"CharEnd":20,"status":"noncore-diff"},{"fileName":"Clone125.java","labeltext":"core-diff1","codeSnippet":"return text.substring (0, len);","LineStart":9,"CharStart":31,"LineEnd":9,"CharEnd":62,"status":"core-diff"},{"fileName":"Clone125.java","labeltext":"core-diff1","codeSnippet":"return s;","LineStart":17,"CharStart":42,"LineEnd":17,"CharEnd":51,"status":"core-diff"},{"fileName":"Clone125.java","labeltext":"noncore-diff2","codeSnippet":"StringBuilder sb = new StringBuilder (size);","LineStart":18,"CharStart":4,"LineEnd":18,"CharEnd":48,"status":"noncore-diff"},{"fileName":"Clone125.java","labeltext":"core-sim2","codeSnippet":"    for (int i = 0;\n    i < (size - s.length ()) / 2; i ++) {\n        sb.append (pad);\n    }\n    sb.append (s);\n    while (sb.length () < size) {\n        sb.append (pad);\n    }\n    return sb.toString ();","LineStart":19,"CharStart":4,"LineEnd":27,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone125.java","labeltext":"core-sim2","codeSnippet":"    int before = (len - text.length ()) / 2;\n    if (before == 0) return String.format (\"%-\" + len + \"s\", text);\n    int rest = len - before;\n    return String.format (\"%\" + before + \"s%-\" + rest + \"s\", \"\", text);","LineStart":10,"CharStart":4,"LineEnd":13,"CharEnd":71,"status":"core-sim"},{"fileName":"Clone127.java","labeltext":"core-sim1","codeSnippet":"    if (b == 0) return 1;\n    if (b == 1) return a;\n    if (isEven (b)) return pow (a * a, b / 2);\n    else return a * pow (a * a, b / 2);","LineStart":20,"CharStart":4,"LineEnd":23,"CharEnd":39,"status":"core-sim"},{"fileName":"Clone127.java","labeltext":"core-sim1","codeSnippet":"    int i1 = 31 - Integer.numberOfLeadingZeros (p);\n    for (int i = i1;\n    i >= 0; -- i) {\n        res *= res;\n        if ((p & (1 << i)) > 0) res *= a;\n    }\n    return res;","LineStart":10,"CharStart":4,"LineEnd":16,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone127.java","labeltext":"noncore-sim1","codeSnippet":"int res = 1;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":16,"status":"noncore-sim"},{"fileName":"Clone131.java","labeltext":"core-diff1","codeSnippet":"    double mon = getExpensesForDay (myScanner, \"Monday\");\n    double tues = getExpensesForDay (myScanner, \"Tuesday\");\n    double wed = getExpensesForDay (myScanner, \"Wednesday\");\n    double thurs = getExpensesForDay (myScanner, \"Thursday\");\n    double fri = getExpensesForDay (myScanner, \"Friday\");\n    double sat = getExpensesForDay (myScanner, \"Saturday\");\n    double sun = getExpensesForDay (myScanner, \"Sunday\");","LineStart":26,"CharStart":4,"LineEnd":32,"CharEnd":57,"status":"core-diff"},{"fileName":"Clone131.java","labeltext":"core-diff1","codeSnippet":"    do {\n        try {\n            System.out.print (\"Expenses for Monday: \");\n            mon = myScanner.nextDouble ();\n        } catch (Exception e) {\n            mon = - 1;\n            myScanner.nextLine ();\n        }\n    } while (mon < 0);","LineStart":12,"CharStart":4,"LineEnd":20,"CharEnd":22,"status":"core-diff"},{"fileName":"Clone131.java","labeltext":"noncore-diff1","codeSnippet":" System.out.println (mon);","LineStart":21,"CharStart":3,"LineEnd":21,"CharEnd":29,"status":"noncore-diff"},{"fileName":"Clone131.java","labeltext":"noncore-sim1","codeSnippet":"    Scanner myScanner;\n    myScanner = new Scanner (System.in);","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":40,"status":"noncore-sim"},{"fileName":"Clone131.java","labeltext":"noncore-sim1","codeSnippet":"Scanner myScanner = new Scanner (System.in);","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":48,"status":"noncore-sim"},{"fileName":"Clone131.java","labeltext":"noncore-diff2","codeSnippet":"double mon, tues, wed, thurs, fri, sat, sun;","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":48,"status":"noncore-diff"},{"fileName":"Clone132.java","labeltext":"core-diff1","codeSnippet":"    String str1 = \"\";\n    String str2 = null;\n    String str3 = \"Starts with upper case\";\n    String str4 = \"starts with lower case\";\n    System.out.println (startWithUpperCase (str1));\n    System.out.println (startWithUpperCase (str2));\n    System.out.println (startWithUpperCase (str3));\n    System.out.println (startWithUpperCase (str4));","LineStart":20,"CharStart":4,"LineEnd":27,"CharEnd":51,"status":"core-diff"},{"fileName":"Clone132.java","labeltext":"core-diff2","codeSnippet":"    Scanner kb = new Scanner (System.in);\n    String text = kb.next ();\n    if (null == text || text.isEmpty ()) {\n        System.out.println (\"Text empty\");\n    } else if (text.charAt (0) == (text.toUpperCase ().charAt (0))) {\n        System.out.println (\"First letter in word \" + text + \" is upper case\");\n    }","LineStart":10,"CharStart":4,"LineEnd":16,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone132.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"Enter name\");","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":38,"status":"noncore-diff"},{"fileName":"Clone134.java","labeltext":"core-diff1","codeSnippet":"    SwingUtilities.invokeLater (new Runnable () {\n        public void run () {\n            JFrame frame = new FrameDemo ();\n            frame.setVisible (true);\n        }}\n    );","LineStart":9,"CharStart":4,"LineEnd":14,"CharEnd":6,"status":"core-diff"},{"fileName":"Clone134.java","labeltext":"core-diff2","codeSnippet":"    JFrame frame = new JFrame ();\n    frame.setDefaultCloseOperation (WindowConstants.EXIT_ON_CLOSE);\n    frame.getContentPane ().setLayout (new BorderLayout (0, 0));\n    JPanel centerPanel = new JPanel ();\n    centerPanel.setPreferredSize (new Dimension (300, 200));\n    centerPanel.setBackground (Color.green);\n    centerPanel.setCursor (new Cursor (java.awt.Cursor.HAND_CURSOR));\n    frame.getContentPane ().add (centerPanel);\n    JPanel northPanel = new JPanel ();\n    northPanel.setBackground (Color.RED);\n    northPanel.setForeground (Color.BLACK);\n    northPanel.setPreferredSize (new Dimension (0, 150));\n    frame.getContentPane ().add (northPanel, BorderLayout.NORTH);\n    JPanel westPanel = new JPanel ();\n    westPanel.setBackground (Color.MAGENTA);\n    westPanel.setPreferredSize (new Dimension (200, 0));\n    frame.getContentPane ().add (westPanel, BorderLayout.WEST);\n    JPanel southPanel = new JPanel ();\n    southPanel.setBackground (Color.YELLOW);\n    southPanel.setPreferredSize (new Dimension (0, 150));\n    frame.getContentPane ().add (southPanel, BorderLayout.SOUTH);\n    JPanel eastPanel = new JPanel ();\n    eastPanel.setBackground (Color.BLUE);\n    eastPanel.setPreferredSize (new Dimension (200, 0));\n    frame.getContentPane ().add (eastPanel, BorderLayout.EAST);\n    frame.pack ();\n    frame.setVisible (true);\n    frame.setLocationRelativeTo (null);","LineStart":18,"CharStart":4,"LineEnd":45,"CharEnd":39,"status":"core-diff"},{"fileName":"Clone136.java","labeltext":"noncore-sim1","codeSnippet":"    super.onActivityResult (requestCode, resultCode, data);\n    if (resultCode == RESULT_OK) {","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":34,"status":"noncore-sim"},{"fileName":"Clone136.java","labeltext":"noncore-sim1","codeSnippet":"}","LineStart":18,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone136.java","labeltext":"noncore-sim1","codeSnippet":"    super.onActivityResult (requestCode, resultCode, data);\n    if (","LineStart":23,"CharStart":4,"LineEnd":24,"CharEnd":8,"status":"noncore-sim"},{"fileName":"Clone136.java","labeltext":"noncore-sim1","codeSnippet":"resultCode == Activity.RESULT_OK) {","LineStart":24,"CharStart":40,"LineEnd":24,"CharEnd":75,"status":"noncore-sim"},{"fileName":"Clone136.java","labeltext":"noncore-sim1","codeSnippet":"}","LineStart":30,"CharStart":4,"LineEnd":30,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone136.java","labeltext":"noncore-diff1","codeSnippet":"requestCode == IMAGE_CAPTURE && ","LineStart":24,"CharStart":8,"LineEnd":24,"CharEnd":40,"status":"noncore-diff"},{"fileName":"Clone136.java","labeltext":"core-diff1","codeSnippet":"        switch (requestCode) {\n            case SELECT_IMAGE :\n                String imagePath = getPath (data.getData ());\n                Savingimagepath (imagePath);\n                img.setImageDrawable (Drawable.createFromPath (imagePath));\n                break;\n        }","LineStart":11,"CharStart":8,"LineEnd":17,"CharEnd":9,"status":"core-diff"},{"fileName":"Clone136.java","labeltext":"core-diff1","codeSnippet":"        DBHelper dbHelper = new DBHelper (this);\n        SQLiteDatabase sql = dbHelper.getWritableDatabase ();\n        sql.execSQL (\"insert statement for inserting path to database\");\n        sql.close ();\n        dbHelper.close ();","LineStart":25,"CharStart":8,"LineEnd":29,"CharEnd":26,"status":"core-diff"},{"fileName":"Clone138.java","labeltext":"core-diff1","codeSnippet":"    lock.lock ();\n    try {\n        if (! queues.containsKey (producer)) {\n            queues.put (producer, new PriorityBlockingQueue < > ());\n        }\n        added.signalAll ();\n        return queues.get (producer).add (item);\n    } finally {\n        lock.unlock ();\n    }","LineStart":20,"CharStart":4,"LineEnd":29,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone138.java","labeltext":"core-diff2","codeSnippet":"    Queue < M > queue = threadQueue.get ();\n    if (queue == null) {\n        queue = new LinkedList < > ();\n        queues.add (queue);\n        threadQueue.set (queue);\n    }\n    queue.add (msg);\n    notify ();","LineStart":9,"CharStart":4,"LineEnd":16,"CharEnd":14,"status":"core-diff"},{"fileName":"Clone142.java","labeltext":"core-sim1","codeSnippet":"            int maxX = scrn.width - dialog.getWidth ();\n            int maxY = scrn.height - dialog.getHeight ();\n            if (x < maxX && y < maxY) {\n                x ++;\n                y ++;\n                dialog.setLocation (x, y);\n            } else {\n                ((Timer) e.getSource ()).stop ();\n            }","LineStart":21,"CharStart":12,"LineEnd":29,"CharEnd":13,"status":"core-sim"},{"fileName":"Clone142.java","labeltext":"core-sim2","codeSnippet":"    int maxX = scrn.width - dialog.getWidth ();\n    int maxY = scrn.height - dialog.getHeight ();\n    if (x < maxX && y < maxY) {\n        x ++;\n        y ++;\n        dialog.setLocation (x, y);\n    } else {\n        ((Timer) e.getSource ()).stop ();\n    }","LineStart":36,"CharStart":4,"LineEnd":44,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone142.java","labeltext":"noncore-diff1","codeSnippet":"    JFrame owner = (JFrame) SwingUtilities.getWindowAncestor ((Component) e.getSource ());\n    final JDialog dialog = new JDialog (owner, \"Dialog\", ModalityType.APPLICATION_MODAL);\n    dialog.getContentPane ().add (panel);\n    dialog.pack ();\n    dialog.setLocation (0, 0);\n    int delay = 20;\n    new Timer (delay, new ActionListener () {\n        int x = 0;\n        int y = 0;\n        Dimension scrn = Toolkit.getDefaultToolkit ().getScreenSize ();\n        @Override\n        public void actionPerformed (ActionEvent e) {","LineStart":9,"CharStart":4,"LineEnd":20,"CharEnd":53,"status":"noncore-diff"},{"fileName":"Clone142.java","labeltext":"noncore-diff1","codeSnippet":"        }}\n    ).start ();\n    dialog.setVisible (true);","LineStart":30,"CharStart":8,"LineEnd":32,"CharEnd":29,"status":"noncore-diff"},{"fileName":"Clone154.java","labeltext":"core-sim1","codeSnippet":"    try {\n        clazz = Class.forName (exClassName);\n    } catch (ClassNotFoundException cnfe) {\n        throw new InternalError (exClassName, cnfe);\n    }","LineStart":28,"CharStart":4,"LineEnd":32,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone154.java","labeltext":"core-sim1","codeSnippet":"Class.forName (exceptionMapping.getClassName ())","LineStart":12,"CharStart":71,"LineEnd":12,"CharEnd":119,"status":"core-sim"},{"fileName":"Clone154.java","labeltext":"core-sim1","codeSnippet":" try {","LineStart":11,"CharStart":7,"LineEnd":11,"CharEnd":13,"status":"core-sim"},{"fileName":"Clone154.java","labeltext":"core-sim1","codeSnippet":"        } catch (ClassNotFoundException e) {\n            e.printStackTrace ();\n        }","LineStart":20,"CharStart":8,"LineEnd":22,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone154.java","labeltext":"noncore-diff1","codeSnippet":"Class < Throwable > exceptionClass = (Class < Throwable >)","LineStart":12,"CharStart":12,"LineEnd":12,"CharEnd":70,"status":"noncore-diff"},{"fileName":"Clone154.java","labeltext":"noncore-diff2","codeSnippet":"            try {\n                throw exceptionClass.cast (exceptionClass.newInstance ());\n            } catch (InstantiationException e) {\n                e.printStackTrace ();\n            } catch (IllegalAccessException e) {\n                e.printStackTrace ();\n            }","LineStart":13,"CharStart":12,"LineEnd":19,"CharEnd":13,"status":"noncore-diff"},{"fileName":"Clone154.java","labeltext":"noncore-diff3","codeSnippet":"    if (CheckedException.class.isAssignableFrom (clazz)) {\n        throw newException (clazz.asSubclass (CheckedException.class));\n    } else if (UncheckedException.class.isAssignableFrom (clazz)) {\n        throw newException (clazz.asSubclass (UncheckedException.class));\n    } else {\n        throw new InternalError (exClassName + \" is not a valid exception\");\n    }","LineStart":33,"CharStart":4,"LineEnd":39,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone154.java","labeltext":"noncore-diff4","codeSnippet":"    ExceptionMapping exceptionMapping = exceptionMappings.getExceptionMappings ().get (key);\n    if (exceptionMapping != null) {","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone154.java","labeltext":"noncore-diff4","codeSnippet":"}","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone154.java","labeltext":"noncore-diff5","codeSnippet":"Class < ? > clazz;","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":22,"status":"noncore-diff"},{"fileName":"Clone159.java","labeltext":"noncore-sim1","codeSnippet":"    String firstName = firstNameTextField.getText ();\n    String lastName = lastNameTextField.getText ();\n    String emailAddress = emailTextField.getText ();","LineStart":9,"CharStart":3,"LineEnd":11,"CharEnd":52,"status":"noncore-sim"},{"fileName":"Clone159.java","labeltext":"core-sim1","codeSnippet":"    String firstName = firstNameTextField.getText ();\n    String lastName = lastNameTextField.getText ();\n    String emailAddress = emailTextField.getText ();","LineStart":19,"CharStart":4,"LineEnd":21,"CharEnd":52,"status":"core-sim"},{"fileName":"Clone159.java","labeltext":"core-sim1","codeSnippet":"    if (isNameValid (firstName, \"First name\") && isNameValid (lastName, \"Last name\") && isEmailValid (emailAddress, \"Email address\")) {\n        personArrayList.add (new Person (firstName, lastName, emailAddress));\n        System.out.println (\"Person added!\");\n    }","LineStart":12,"CharStart":4,"LineEnd":15,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone159.java","labeltext":"core-sim1","codeSnippet":"    boolean valid = true;\n    if (firstName.equals (\"\")) {\n        System.out.println (\"First Name is missing\");\n        valid = false;\n    }\n    if (lastName.equals (\"\")) {\n        System.out.println (\"Last Name is missing\");\n        valid = false;\n    }\n    if (emailAddress.equals (\"\")) {\n        System.out.println (\"E-Mail address is missing\");\n        valid = false;\n    }\n    if (! Email.isValid (emailAddress)) {\n        System.out.println (\"E-Mail address is invalid\");\n        valid = false;\n    }\n    if (valid) {\n        personArrayList.add (new Person (firstName, lastName, emailAddress));\n        System.out.println (\"Person added!\");\n    }","LineStart":22,"CharStart":3,"LineEnd":42,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone162.java","labeltext":"core-diff1","codeSnippet":"    final Dimension screenSize = Toolkit.getDefaultToolkit ().getScreenSize ();\n    final BufferedImage screen = robot.createScreenCapture (new Rectangle (screenSize));\n    SwingUtilities.invokeLater (new Runnable () {\n        public void run () {\n            JLabel screenLabel = new JLabel (new ImageIcon (screen));\n            JScrollPane screenScroll = new JScrollPane (screenLabel);\n            screenScroll.setPreferredSize (new Dimension ((int) (screenSize.getWidth () / 2), (int) (screenSize.getHeight () / 2)));\n            final Point pointOfInterest = new Point ();\n            JPanel panel = new JPanel (new BorderLayout ());\n            panel.add (screenScroll, BorderLayout.CENTER);\n            final JLabel pointLabel = new JLabel (\"Click on any point in the screen shot!\");\n            panel.add (pointLabel, BorderLayout.SOUTH);\n            screenLabel.addMouseListener (new MouseAdapter () {\n                public void mouseClicked (MouseEvent me) {\n                    pointOfInterest.setLocation (me.getPoint ());\n                    pointLabel.setText (\"Point: \" + pointOfInterest.getX () + \"x\" + pointOfInterest.getY ());\n                }}\n            );\n            JOptionPane.showMessageDialog (null, panel);\n            System.out.println (\"Point of interest: \" + pointOfInterest);\n        }}\n    );","LineStart":10,"CharStart":4,"LineEnd":31,"CharEnd":6,"status":"core-diff"},{"fileName":"Clone162.java","labeltext":"core-diff2","codeSnippet":"    try {\n        rect = GetWindowRect.getRect (windowName);\n        System.out.printf (\"The corner locations for the window \\\"%s\\\" are %s\", windowName, Arrays.toString (rect));\n    } catch (GetWindowRect.WindowNotFoundException e) {\n        e.printStackTrace ();\n    } catch (GetWindowRect.GetWindowRectException e) {\n        e.printStackTrace ();\n    }","LineStart":37,"CharStart":4,"LineEnd":44,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone162.java","labeltext":"noncore-diff1","codeSnippet":"Robot robot = new Robot ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":31,"status":"noncore-diff"},{"fileName":"Clone162.java","labeltext":"noncore-diff2","codeSnippet":"    String windowName = \"Document - WordPad\";\n    int [] rect;","LineStart":35,"CharStart":4,"LineEnd":36,"CharEnd":16,"status":"noncore-diff"},{"fileName":"Clone165.java","labeltext":"core-sim1","codeSnippet":"        File in = new File (\"C:\\\\Users\\\\Public\\\\Music\\\\Sample Music\\\\Kalimba.wav\");\n        AudioInputStream audioInputStream = AudioSystem.getAudioInputStream (in);\n        play = AudioSystem.getClip ();\n        play.open (audioInputStream);\n        FloatControl volume = (FloatControl) play.getControl (FloatControl.Type.MASTER_GAIN);\n        volume.setValue (1.0f);\n        play.start ();\n        play.drain ();","LineStart":23,"CharStart":8,"LineEnd":30,"CharEnd":22,"status":"core-sim"},{"fileName":"Clone165.java","labeltext":"core-sim1","codeSnippet":"    File in = new File (\"C:\\\\Users\\\\Sandra\\\\Desktop\\\\music\\\\rags.wav\");\n    AudioInputStream audioInputStream = AudioSystem.getAudioInputStream (in);\n    Clip play = AudioSystem.getClip ();\n    play.open (audioInputStream);\n    FloatControl volume = (FloatControl) play.getControl (FloatControl.Type.MASTER_GAIN);\n    volume.setValue (1.0f);\n    play.start ();\n    play.drain ();","LineStart":9,"CharStart":4,"LineEnd":16,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone165.java","labeltext":"core-sim2","codeSnippet":"play.close ();","LineStart":17,"CharStart":4,"LineEnd":17,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone165.java","labeltext":"core-sim2","codeSnippet":"play.close ();","LineStart":35,"CharStart":12,"LineEnd":35,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone165.java","labeltext":"noncore-diff1","codeSnippet":"    Clip play = null;\n    try {","LineStart":21,"CharStart":4,"LineEnd":22,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone165.java","labeltext":"noncore-diff1","codeSnippet":"    } catch (UnsupportedAudioFileException | IOException | LineUnavailableException ex) {\n        ex.printStackTrace ();\n    } finally {\n        try {","LineStart":31,"CharStart":4,"LineEnd":34,"CharEnd":13,"status":"noncore-diff"},{"fileName":"Clone165.java","labeltext":"noncore-diff1","codeSnippet":"        } catch (Exception exp) {\n        }\n    }\n    System.out.println (\"...\");\n","LineStart":36,"CharStart":8,"LineEnd":40,"CharEnd":0,"status":"noncore-diff"},{"fileName":"Clone168.java","labeltext":"core-diff1","codeSnippet":"    timer.stop ();\n    if (SwingUtilities.isEventDispatchThread ()) {\n        Runnable doRun = new Runnable () {\n            @Override\n            public void run () {\n                remWins ();\n            }}\n        ;\n        SwingUtilities.invokeLater (doRun);\n    } else {\n        Runnable doRun = new Runnable () {\n            @Override\n            public void run () {\n                remWins ();\n            }}\n        ;\n        SwingUtilities.invokeLater (doRun);\n    }","LineStart":9,"CharStart":4,"LineEnd":26,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone168.java","labeltext":"core-diff2","codeSnippet":"    JDialog dialog = new JDialog ();\n    dialog.getContentPane ().setLayout (null);\n    for (int i = 0;\n    i < 200; i ++) {\n        dialog.add (new JTextField (\"some text\"));\n    }\n    dialog.setTitle (\"Dialog \" + count ++);\n    dialog.setLocation (count * 25, count * 25);\n    dialog.setVisible (true);","LineStart":32,"CharStart":3,"LineEnd":40,"CharEnd":29,"status":"core-diff"},{"fileName":"Clone168.java","labeltext":"noncore-diff1","codeSnippet":"    System.out.println ();\n    System.out.println (\"Create Dialog\");","LineStart":30,"CharStart":4,"LineEnd":31,"CharEnd":41,"status":"noncore-diff"},{"fileName":"Clone172.java","labeltext":"core-diff1","codeSnippet":"    timer.stop ();\n    timer.stop ();\n    if (SwingUtilities.isEventDispatchThread ()) {\n        Runnable doRun = new Runnable () {\n            @Override\n            public void run () {\n                pastRemWins ();\n            }}\n        ;\n        SwingUtilities.invokeLater (doRun);\n    } else {\n        Runnable doRun = new Runnable () {\n            @Override\n            public void run () {\n                pastRemWins ();\n            }}\n        ;\n        SwingUtilities.invokeLater (doRun);\n    }","LineStart":9,"CharStart":4,"LineEnd":27,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone172.java","labeltext":"core-diff2","codeSnippet":"    for (Window window : Window.getWindows ()) {\n        if (window instanceof JDialog) {\n            JDialog dialog = (JDialog) window;\n            System.out.println (\"\\t\" + dialog.getTitle () + \" \" + dialog.isDisplayable ());\n        }\n    }","LineStart":33,"CharStart":4,"LineEnd":38,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone172.java","labeltext":"noncore-diff1","codeSnippet":"    System.out.println ();\n    System.out.println (\"Display Dialogs\");","LineStart":31,"CharStart":4,"LineEnd":32,"CharEnd":43,"status":"noncore-diff"},{"fileName":"Clone168.java","labeltext":"noncore-diff2","codeSnippet":"    System.out.println (\"\\tCreated \" + dialog.getTitle ());\n}","LineStart":41,"CharStart":4,"LineEnd":42,"CharEnd":1,"status":"noncore-diff"},{"fileName":"Clone174.java","labeltext":"core-diff1","codeSnippet":"    timer.stop ();\n    timer.stop ();\n    if (SwingUtilities.isEventDispatchThread ()) {\n        Runnable doRun = new Runnable () {\n            @Override\n            public void run () {\n                pastRemWins ();\n            }}\n        ;\n        SwingUtilities.invokeLater (doRun);\n    } else {\n        Runnable doRun = new Runnable () {\n            @Override\n            public void run () {\n                pastRemWins ();\n            }}\n        ;\n        SwingUtilities.invokeLater (doRun);\n    }","LineStart":9,"CharStart":4,"LineEnd":27,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone174.java","labeltext":"core-diff2","codeSnippet":"    for (Window window : Window.getWindows ()) {\n        if (window instanceof JDialog) {\n            JDialog dialog = (JDialog) window;\n            System.out.println (\"\\tClosing \" + dialog.getTitle ());\n            dialog.dispose ();\n        }\n    }\n    Runtime.getRuntime ().gc ();","LineStart":33,"CharStart":4,"LineEnd":40,"CharEnd":32,"status":"core-diff"},{"fileName":"Clone174.java","labeltext":"noncore-diff1","codeSnippet":"    System.out.println ();\n    System.out.println (\"Close Dialogs\");","LineStart":31,"CharStart":4,"LineEnd":32,"CharEnd":41,"status":"noncore-diff"},{"fileName":"Clone178.java","labeltext":"core-diff1","codeSnippet":"    JDialog dialog = new JDialog ();\n    dialog.getContentPane ().setLayout (null);\n    for (int i = 0;\n    i < 200; i ++) {\n        dialog.add (new JTextField (\"some text\"));\n    }\n    dialog.setTitle (\"Dialog \" + count ++);\n    dialog.setLocation (count * 25, count * 25);\n    dialog.setVisible (true);","LineStart":11,"CharStart":4,"LineEnd":19,"CharEnd":29,"status":"core-diff"},{"fileName":"Clone178.java","labeltext":"noncore-diff1","codeSnippet":"    System.out.println ();\n    System.out.println (\"Create Dialog\");","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":41,"status":"noncore-diff"},{"fileName":"Clone178.java","labeltext":"noncore-diff2","codeSnippet":"System.out.println (\"\\tCreated \" + dialog.getTitle ());","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":59,"status":"noncore-diff"},{"fileName":"Clone178.java","labeltext":"core-diff2","codeSnippet":"    if (runProcess) {\n        for (Window win : Window.getWindows ()) {\n            if (win instanceof JDialog) {\n                System.out.println (\"    Trying to Remove JDialog\");\n                win.dispose ();\n            }\n        }\n        System.out.println (\"    Remove Cycle Done :-)\");\n        runProcess = false;\n        new Thread () {\n            @Override\n            public void run () {\n                try {\n                    Thread.sleep (100);\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n                Runtime.getRuntime ().gc ();\n            }}\n        .start ();\n    } else {\n        pastRemWins ();\n        runProcess = true;\n    }","LineStart":24,"CharStart":4,"LineEnd":47,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone179.java","labeltext":"core-sim1","codeSnippet":"    for (Window window : Window.getWindows ()) {\n        if (window instanceof JDialog) {\n            JDialog dialog = (JDialog) window;\n            System.out.println (\"\\tClosing \" + dialog.getTitle ());\n            dialog.dispose ();\n        }\n    }","LineStart":11,"CharStart":4,"LineEnd":17,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone179.java","labeltext":"core-sim1","codeSnippet":"        for (Window win : Window.getWindows ()) {\n            if (win instanceof JDialog) {\n                System.out.println (\"    Trying to Remove JDialog\");\n                win.dispose ();\n            }\n        }","LineStart":23,"CharStart":8,"LineEnd":28,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone179.java","labeltext":"noncore-diff1","codeSnippet":"    System.out.println ();\n    System.out.println (\"Close Dialogs\");","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":41,"status":"noncore-diff"},{"fileName":"Clone179.java","labeltext":"noncore-diff2","codeSnippet":"Runtime.getRuntime ().gc ();","LineStart":18,"CharStart":4,"LineEnd":18,"CharEnd":32,"status":"noncore-diff"},{"fileName":"Clone179.java","labeltext":"noncore-diff3","codeSnippet":"if (runProcess) {","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":21,"status":"noncore-diff"},{"fileName":"Clone179.java","labeltext":"noncore-diff3","codeSnippet":"        System.out.println (\"    Remove Cycle Done :-)\");\n        runProcess = false;\n        new Thread () {\n            @Override\n            public void run () {\n                try {\n                    Thread.sleep (100);\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n                Runtime.getRuntime ().gc ();\n            }}\n        .start ();\n    } else {\n        pastRemWins ();\n        runProcess = true;\n    }","LineStart":29,"CharStart":8,"LineEnd":45,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone182.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < num; i ++) {\n        System.out.println (\"number\" + i + \":\");\n        numbers [i] = input.nextInt ();\n    }\n    for (int temp : numbers) {\n        System.out.print (temp + \"\\t\");\n    }","LineStart":13,"CharStart":4,"LineEnd":20,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone182.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < 5; i ++) {\n        System.out.print (\"Enter number \" + (i + 1) + \": \");\n        arr [i] = scan.nextInt ();\n    }\n    for (int i = 0;\n    i < 5; i ++) System.out.println (\"Number \" + (i + 1) + \": \" + arr [i]);\n","LineStart":27,"CharStart":4,"LineEnd":34,"CharEnd":0,"status":"core-sim"},{"fileName":"Clone182.java","labeltext":"noncore-sim1","codeSnippet":"Scanner input = new Scanner (System.in);","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone182.java","labeltext":"noncore-sim1","codeSnippet":"Scanner scan = new Scanner (System.in);","LineStart":26,"CharStart":4,"LineEnd":26,"CharEnd":43,"status":"noncore-sim"},{"fileName":"Clone182.java","labeltext":"noncore-sim2","codeSnippet":"int numbers [] = new int [num];","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":35,"status":"noncore-sim"},{"fileName":"Clone182.java","labeltext":"noncore-sim2","codeSnippet":"int arr [];","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":15,"status":"noncore-sim"},{"fileName":"Clone182.java","labeltext":"noncore-diff1","codeSnippet":"    System.out.println (\"how many number you want to put in the pot?\");\n    int num = input.nextInt ();","LineStart":10,"CharStart":0,"LineEnd":11,"CharEnd":31,"status":"noncore-diff"},{"fileName":"Clone192.java","labeltext":"core-diff1","codeSnippet":"    float newAlpha = softButton1.getAlpha () + incrementer;\n    if (newAlpha < 0) {\n        newAlpha = 0;\n        incrementer = - incrementer;\n    } else if (newAlpha > 1f) {\n        newAlpha = 1f;\n        incrementer = - incrementer;\n    }\n    softButton1.setAlpha (newAlpha);\n    softButton2.setAlpha (newAlpha);","LineStart":9,"CharStart":4,"LineEnd":18,"CharEnd":36,"status":"core-diff"},{"fileName":"Clone192.java","labeltext":"core-diff2","codeSnippet":"    try {\n        UIManager.setLookAndFeel (laf [index].getClassName ());\n        SwingUtilities.updateComponentTreeUI (frame);\n    } catch (Exception exc) {\n        exc.printStackTrace ();\n    }\n    index = (index + 1) % laf.length;","LineStart":22,"CharStart":4,"LineEnd":28,"CharEnd":37,"status":"core-diff"},{"fileName":"Clone194.java","labeltext":"core-sim1","codeSnippet":"        char prevChar = str.charAt (0);\n        for (int i = 1;\n        i < str.length (); i ++) {\n            if (str.charAt (i) != prevChar) {\n                compressedString += String.valueOf (prevChar) + countConsecutive;\n                prevChar = str.charAt (i);\n                countConsecutive = 1;\n                continue;\n            }\n            countConsecutive ++;\n        }\n        compressedString += String.valueOf (prevChar) + countConsecutive;","LineStart":12,"CharStart":8,"LineEnd":23,"CharEnd":73,"status":"core-sim"},{"fileName":"Clone194.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < str.length (); i ++) {\n        countConsecutive ++;\n        if (str.length () == (i + 1)) {\n            compressedString += \"\" + str.charAt (i) + countConsecutive;\n            countConsecutive = 0;\n            break;\n        } else if (str.charAt (i) != str.charAt (i + 1)) {\n            compressedString += \"\" + str.charAt (i) + countConsecutive;\n            countConsecutive = 0;\n        }\n    }","LineStart":31,"CharStart":4,"LineEnd":42,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone194.java","labeltext":"noncore-diff1","codeSnippet":"if (str != null && str.length () > 0) {","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":43,"status":"noncore-diff"},{"fileName":"Clone194.java","labeltext":"noncore-diff1","codeSnippet":"}","LineStart":24,"CharStart":4,"LineEnd":24,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone194.java","labeltext":"noncore-sim1","codeSnippet":"    int countConsecutive = 0;\n    String compressedString = \"\";","LineStart":29,"CharStart":4,"LineEnd":30,"CharEnd":33,"status":"noncore-sim"},{"fileName":"Clone194.java","labeltext":"noncore-sim2","codeSnippet":"return compressedString;","LineStart":43,"CharStart":4,"LineEnd":43,"CharEnd":28,"status":"noncore-sim"},{"fileName":"Clone194.java","labeltext":"noncore-sim2","codeSnippet":"return compressedString;","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":28,"status":"noncore-sim"},{"fileName":"Clone194.java","labeltext":"noncore-sim1","codeSnippet":"String compressedString = \"\";","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":33,"status":"noncore-sim"},{"fileName":"Clone194.java","labeltext":"noncore-sim1","codeSnippet":"int countConsecutive = 1;","LineStart":11,"CharStart":8,"LineEnd":11,"CharEnd":33,"status":"noncore-sim"},{"fileName":"Clone196.java","labeltext":"noncore-sim1","codeSnippet":"byte [] b = new byte [1024];","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":32,"status":"noncore-sim"},{"fileName":"Clone196.java","labeltext":"noncore-sim1","codeSnippet":"byte [] buffer = new byte [32 * 1024];","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":42,"status":"noncore-sim"},{"fileName":"Clone196.java","labeltext":"core-sim1","codeSnippet":"    for (;;) {\n        int read = inputStream.read (buffer, bufferSize, buffer.length - bufferSize);\n        if (read == - 1) {\n            return Arrays.copyOf (buffer, bufferSize);\n        }\n        bufferSize += read;\n        if (bufferSize == buffer.length) {\n            buffer = Arrays.copyOf (buffer, bufferSize * 2);\n        }\n    }","LineStart":21,"CharStart":4,"LineEnd":30,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone196.java","labeltext":"core-sim1","codeSnippet":"    while ((c = inputStream.read (b)) != - 1) {\n        os.write (b, 0, c);\n    }","LineStart":12,"CharStart":4,"LineEnd":14,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone196.java","labeltext":"noncore-diff1","codeSnippet":"    ByteArrayOutputStream os = new ByteArrayOutputStream ();\n    int c;","LineStart":10,"CharStart":4,"LineEnd":11,"CharEnd":10,"status":"noncore-diff"},{"fileName":"Clone196.java","labeltext":"noncore-diff2","codeSnippet":"int bufferSize = 0;","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":23,"status":"noncore-diff"},{"fileName":"Clone196.java","labeltext":"noncore-diff3","codeSnippet":"return os.toByteArray ();","LineStart":15,"CharStart":4,"LineEnd":15,"CharEnd":29,"status":"noncore-diff"},{"fileName":"Clone198.java","labeltext":"noncore-sim1","codeSnippet":"        JsonObject commandObject = json.getAsJsonObject ();\n        JsonElement commandTypeElement = commandObject.get (commandElementName);","LineStart":10,"CharStart":8,"LineEnd":11,"CharEnd":80,"status":"noncore-sim"},{"fileName":"Clone198.java","labeltext":"noncore-sim1","codeSnippet":"    JsonObject jsonObject = json.getAsJsonObject ();\n    JsonPrimitive prim = (JsonPrimitive) jsonObject.get (CLASSNAME);","LineStart":21,"CharStart":4,"LineEnd":22,"CharEnd":68,"status":"noncore-sim"},{"fileName":"Clone198.java","labeltext":"noncore-sim2","codeSnippet":"commandTypeElement.getAsString ()","LineStart":12,"CharStart":80,"LineEnd":12,"CharEnd":113,"status":"noncore-sim"},{"fileName":"Clone198.java","labeltext":"noncore-sim2","codeSnippet":"String className = prim.getAsString ();","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":43,"status":"noncore-sim"},{"fileName":"Clone198.java","labeltext":"core-diff1","codeSnippet":"try {","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":9,"status":"core-diff"},{"fileName":"Clone198.java","labeltext":"core-diff1","codeSnippet":"Class < ? extends Command > commandInstanceClass = commandRegistry.get (","LineStart":12,"CharStart":8,"LineEnd":12,"CharEnd":80,"status":"core-diff"},{"fileName":"Clone198.java","labeltext":"core-diff1","codeSnippet":"                                                                                                                 );\n        Command command = gson.fromJson (json, commandInstanceClass);\n        return command;\n    } catch (Exception e) {\n        throw new RuntimeException (e);\n    }","LineStart":12,"CharStart":113,"LineEnd":17,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone198.java","labeltext":"core-diff2","codeSnippet":"    Class < ? > klass = null;\n    try {\n        klass = Class.forName (className);\n    } catch (ClassNotFoundException e) {\n        e.printStackTrace ();\n        throw new JsonParseException (e.getMessage ());\n    }\n    return context.deserialize (jsonObject.get (INSTANCE), klass);","LineStart":24,"CharStart":4,"LineEnd":31,"CharEnd":66,"status":"core-diff"},{"fileName":"Clone204.java","labeltext":"noncore-sim1","codeSnippet":"    a = a.toLowerCase ();\n    b = b.toLowerCase ();","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":25,"status":"noncore-sim"},{"fileName":"Clone204.java","labeltext":"noncore-sim1","codeSnippet":"    s1 = s1.toLowerCase ();\n    s2 = s2.toLowerCase ();","LineStart":30,"CharStart":4,"LineEnd":31,"CharEnd":27,"status":"noncore-sim"},{"fileName":"Clone204.java","labeltext":"core-sim1","codeSnippet":"    if (a.length () != b.length ()) {\n        return false;\n    }","LineStart":11,"CharStart":4,"LineEnd":13,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone204.java","labeltext":"core-sim1","codeSnippet":"    if (s1.length () != s2.length ()) {\n        return false;\n    }","LineStart":27,"CharStart":4,"LineEnd":29,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone204.java","labeltext":"noncore-sim2","codeSnippet":"    char [] c1 = s1.toCharArray ();\n    char [] c2 = s2.toCharArray ();","LineStart":32,"CharStart":4,"LineEnd":33,"CharEnd":35,"status":"noncore-sim"},{"fileName":"Clone204.java","labeltext":"noncore-sim2","codeSnippet":"char [] chars = a.toCharArray ();","LineStart":14,"CharStart":4,"LineEnd":14,"CharEnd":37,"status":"noncore-sim"},{"fileName":"Clone204.java","labeltext":"core-sim2","codeSnippet":"    for (char c : chars) {\n        int index = b.indexOf (c);\n        if (index != - 1) {\n            b = b.substring (0, index) + b.substring (index + 1, b.length ());\n        } else {\n            return false;\n        }\n    }\n    return b.isEmpty ();","LineStart":15,"CharStart":4,"LineEnd":23,"CharEnd":24,"status":"core-sim"},{"fileName":"Clone204.java","labeltext":"core-sim2","codeSnippet":"    Arrays.sort (c1);\n    Arrays.sort (c2);\n    String sc1 = new String (c1);\n    String sc2 = new String (c2);\n    return sc1.equals (sc2);","LineStart":34,"CharStart":4,"LineEnd":38,"CharEnd":28,"status":"core-sim"},{"fileName":"Clone205.java","labeltext":"core-sim1","codeSnippet":"    if (a.length () != b.length ()) {\n        return false;\n    }","LineStart":11,"CharStart":4,"LineEnd":13,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone205.java","labeltext":"core-sim1","codeSnippet":"if (s1.length () != s2.length ()) return false;","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":51,"status":"core-sim"},{"fileName":"Clone205.java","labeltext":"core-sim2","codeSnippet":"    for (char c : chars) {\n        int index = b.indexOf (c);\n        if (index != - 1) {\n            b = b.substring (0, index) + b.substring (index + 1, b.length ());\n        } else {\n            return false;\n        }\n    }\n    return b.isEmpty ();","LineStart":15,"CharStart":4,"LineEnd":23,"CharEnd":24,"status":"core-sim"},{"fileName":"Clone205.java","labeltext":"core-sim2","codeSnippet":"    for (int i = 0;\n    i < n; i ++) {\n        char c1 = s1.charAt (i);\n        charMap [c1] ++;\n        char c2 = s2.charAt (i);\n        charMap [c2] --;\n    }\n    for (int i = 0;\n    i < charMap.length; i ++) {\n        if (charMap [i] != 0) return false;\n    }\n    return true;","LineStart":30,"CharStart":4,"LineEnd":41,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone205.java","labeltext":"noncore-diff1","codeSnippet":"    a = a.toLowerCase ();\n    b = b.toLowerCase ();","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":25,"status":"noncore-diff"},{"fileName":"Clone205.java","labeltext":"noncore-diff2","codeSnippet":"char [] chars = a.toCharArray ();","LineStart":14,"CharStart":4,"LineEnd":14,"CharEnd":37,"status":"noncore-diff"},{"fileName":"Clone205.java","labeltext":"noncore-diff3","codeSnippet":"    int n = s1.length ();\n    int [] charMap = new int [256];","LineStart":28,"CharStart":4,"LineEnd":29,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone207.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < s2.length (); i ++) {\n        if (! s1.contains (\"\" + s2.charAt (i))) {\n            return false;\n        }\n        s1 = s1.replaceFirst (\"\" + s2.charAt (i), \"\");\n        s2 = s2.replaceFirst (\"\" + s2.charAt (i), \"\");\n    }\n    return true;","LineStart":12,"CharStart":4,"LineEnd":20,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone207.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < n; i ++) {\n        char c1 = s1.charAt (i);\n        charMap [c1] ++;\n        char c2 = s2.charAt (i);\n        charMap [c2] --;\n    }\n    for (int i = 0;\n    i < charMap.length; i ++) {\n        if (charMap [i] != 0) return false;\n    }\n    return true;","LineStart":27,"CharStart":4,"LineEnd":38,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone207.java","labeltext":"core-sim2","codeSnippet":"if (s1.length () != s2.length ()) return false;","LineStart":24,"CharStart":4,"LineEnd":24,"CharEnd":51,"status":"core-sim"},{"fileName":"Clone207.java","labeltext":"core-sim2","codeSnippet":"    if (s1.length () != s2.length ()) {\n        return false;\n    }","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone207.java","labeltext":"noncore-diff1","codeSnippet":"    int n = s1.length ();\n    int [] charMap = new int [256];","LineStart":25,"CharStart":4,"LineEnd":26,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone208.java","labeltext":"core-sim1","codeSnippet":"    if (s1.length () != s2.length ()) {\n        return false;\n    }","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone208.java","labeltext":"core-sim1","codeSnippet":"if (s1.length () != s2.length ()) return false;","LineStart":24,"CharStart":4,"LineEnd":24,"CharEnd":51,"status":"core-sim"},{"fileName":"Clone208.java","labeltext":"core-sim2","codeSnippet":"    for (int i = 0;\n    i < n; i ++) {\n        char c1 = s1.charAt (i);\n        charMap [c1] ++;\n        char c2 = s2.charAt (i);\n        charMap [c2] --;\n    }\n    for (int i = 0;\n    i < charMap.length; i ++) {\n        if (charMap [i] != 0) return false;\n    }\n    return true;","LineStart":27,"CharStart":4,"LineEnd":38,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone208.java","labeltext":"core-sim2","codeSnippet":"    Arrays.sort (c1);\n    Arrays.sort (c2);\n    String sc1 = new String (c1);\n    String sc2 = new String (c2);\n    return sc1.equals (sc2);","LineStart":16,"CharStart":4,"LineEnd":20,"CharEnd":28,"status":"core-sim"},{"fileName":"Clone208.java","labeltext":"noncore-diff1","codeSnippet":"    int n = s1.length ();\n    int [] charMap = new int [256];","LineStart":25,"CharStart":4,"LineEnd":26,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone208.java","labeltext":"noncore-diff2","codeSnippet":"    s1 = s1.toLowerCase ();\n    s2 = s2.toLowerCase ();\n    char [] c1 = s1.toCharArray ();\n    char [] c2 = s2.toCharArray ();","LineStart":12,"CharStart":3,"LineEnd":15,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone212.java","labeltext":"core-sim1","codeSnippet":"    boolean isNumber = true;\n    for (int i = 0;\n    i < s.length () && isNumber; i ++) {\n        char c = s.charAt (i);\n        isNumber = isNumber & ((c >= '0' && c <= '9') || (c == '.') || (c == 'e') || (c == 'E') || (c == ''));\n    }\n    return isInteger;","LineStart":9,"CharStart":4,"LineEnd":15,"CharEnd":21,"status":"core-sim"},{"fileName":"Clone212.java","labeltext":"core-sim1","codeSnippet":"    boolean a = false, b = false, c = false, d = false;\n    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-')) i ++;\n    while (i < len && isDigit (str.charAt (i))) {\n        i ++;\n        a = true;\n    }\n    if (i < len && (str.charAt (i) == '.')) i ++;\n    while (i < len && isDigit (str.charAt (i))) {\n        i ++;\n        b = true;\n    }\n    if (i < len && (str.charAt (i) == 'e' || str.charAt (i) == 'E') && (a || b)) {\n        i ++;\n        c = true;\n    }\n    if (i < len && (str.charAt (i) == '+' || str.charAt (i) == '-') && c) i ++;\n    while (i < len && isDigit (str.charAt (i))) {\n        i ++;\n        d = true;\n    }\n    return i == len && (a || b) && (! c || (c && d));","LineStart":20,"CharStart":4,"LineEnd":40,"CharEnd":53,"status":"core-sim"},{"fileName":"Clone212.java","labeltext":"noncore-diff1","codeSnippet":"int i = 0, len = str.length ();","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone219.java","labeltext":"core-diff1","codeSnippet":"    for (int i = 0;\n    i < A.length; i ++) {\n        if (A [i] <= X) hset.add (A [i]);\n        if (hset.size () == X) return i;\n    }\n    return - 1;","LineStart":33,"CharStart":4,"LineEnd":38,"CharEnd":15,"status":"core-diff"},{"fileName":"Clone219.java","labeltext":"core-diff1","codeSnippet":"    final int NUMBER_REAL_UPPER = min (NUMBER_UPPER, X);\n    for (int i = 0;\n    i < A.length; i ++) {\n        if ((ai = A [i]) < NUMBER_LOWER || ai > NUMBER_REAL_UPPER) {\n            throw new RuntimeException (\"Number out of bounds\");\n        } else if (ai <= X && ! set.contains (ai)) {\n            counter --;\n            if (counter == 0) {\n                return i;\n            }\n            set.put (ai);\n        }\n    }\n    return - 1;","LineStart":15,"CharStart":4,"LineEnd":28,"CharEnd":15,"status":"core-diff"},{"fileName":"Clone219.java","labeltext":"core-diff1","codeSnippet":"    if (A.length < ARRAY_SIZE_LOWER || A.length > ARRAY_SIZE_UPPER) {\n        throw new RuntimeException (\"Array size out of bounds\");\n    }","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone219.java","labeltext":"noncore-diff1","codeSnippet":"    Set set = new Set (X);\n    int ai;\n    int counter = X;","LineStart":12,"CharStart":4,"LineEnd":14,"CharEnd":20,"status":"noncore-diff"},{"fileName":"Clone219.java","labeltext":"noncore-diff1","codeSnippet":"HashSet < Integer > hset = new HashSet < Integer > ();","LineStart":32,"CharStart":4,"LineEnd":32,"CharEnd":58,"status":"noncore-diff"},{"fileName":"Clone223.java","labeltext":"core-diff1","codeSnippet":"    for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;","LineStart":34,"CharStart":4,"LineEnd":45,"CharEnd":15,"status":"core-diff"},{"fileName":"Clone223.java","labeltext":"core-diff1","codeSnippet":"    if (A.length < ARRAY_SIZE_LOWER || A.length > ARRAY_SIZE_UPPER) {\n        throw new RuntimeException (\"Array size out of bounds\");\n    }","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone223.java","labeltext":"core-diff1","codeSnippet":"    final int NUMBER_REAL_UPPER = min (NUMBER_UPPER, X);\n    for (int i = 0;\n    i < A.length; i ++) {\n        if ((ai = A [i]) < NUMBER_LOWER || ai > NUMBER_REAL_UPPER) {\n            throw new RuntimeException (\"Number out of bounds\");\n        } else if (ai <= X && ! set.contains (ai)) {\n            counter --;\n            if (counter == 0) {\n                return i;\n            }\n            set.put (ai);\n        }\n    }\n    return - 1;","LineStart":15,"CharStart":4,"LineEnd":28,"CharEnd":15,"status":"core-diff"},{"fileName":"Clone223.java","labeltext":"noncore-diff1","codeSnippet":"    Set set = new Set (X);\n    int ai;\n    int counter = X;","LineStart":12,"CharStart":4,"LineEnd":14,"CharEnd":20,"status":"noncore-diff"},{"fileName":"Clone223.java","labeltext":"noncore-diff1","codeSnippet":"    Set < Integer > set = new HashSet < Integer > ();\n    int sum1 = 0, sum2 = 0;","LineStart":32,"CharStart":4,"LineEnd":33,"CharEnd":27,"status":"noncore-diff"},{"fileName":"Clone231.java","labeltext":"noncore-sim1","codeSnippet":"Set < Integer > values = new HashSet < Integer > ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":56,"status":"noncore-sim"},{"fileName":"Clone231.java","labeltext":"noncore-sim1","codeSnippet":"int [] isFilled = new int [X];","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":34,"status":"noncore-sim"},{"fileName":"Clone231.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < A.length; i ++) {\n        if (values.add (A [i])) X --;\n        if (X == 0) return i;\n    }\n    return - 1;","LineStart":10,"CharStart":4,"LineEnd":15,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone231.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < len; i ++) {\n        int x = A [i];\n        if (x <= X) {\n            if (isFilled [x - 1] == 0) {\n                isFilled [x - 1] = 1;\n                jumped += 1;\n                if (jumped == X) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;","LineStart":26,"CharStart":4,"LineEnd":39,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone231.java","labeltext":"noncore-diff1","codeSnippet":"    int len = A.length;\n    if (X > len) {\n        return - 1;\n    }","LineStart":19,"CharStart":4,"LineEnd":22,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone231.java","labeltext":"noncore-diff1","codeSnippet":"    int jumped = 0;\n    Arrays.fill (isFilled, 0);","LineStart":24,"CharStart":4,"LineEnd":25,"CharEnd":30,"status":"noncore-diff"},{"fileName":"Clone240.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < A.length; i ++) {\n        try {\n            count [A [i] - 1] ++;\n        } catch (ArrayIndexOutOfBoundsException e) {\n        }\n        if (i >= X - 1) {\n            for (int j = 0;\n            j < count.length; j ++) {\n                if (count [j] == 0) {\n                    break;\n                }\n                if (j == count.length - 1) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;","LineStart":10,"CharStart":4,"LineEnd":28,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone240.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < A.length; i ++) {\n        leaves.add (A [i]);\n        if (leaves.contains (X) && leaves.size () == X) return i;\n    }\n    return - 1;","LineStart":33,"CharStart":4,"LineEnd":38,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone240.java","labeltext":"noncore-sim1","codeSnippet":"int [] count = new int [X];","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":31,"status":"noncore-sim"},{"fileName":"Clone240.java","labeltext":"noncore-sim1","codeSnippet":"Set < Integer > leaves = new HashSet < > ();","LineStart":32,"CharStart":4,"LineEnd":32,"CharEnd":48,"status":"noncore-sim"},{"fileName":"Clone241.java","labeltext":"core-sim1","codeSnippet":"    for (int iii = 0;\n    iii < list.length; iii ++) {\n        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {\n            sum += list [iii];\n            if (sum == sumV) {\n                return iii;\n            }\n            arrayList.add (list [iii]);\n        }\n    }\n    return - 1;","LineStart":31,"CharStart":4,"LineEnd":41,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone241.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < A.length; i ++) {\n        if (counter [A [i]] == 0) {\n            counter [A [i]] = A [i];\n            x += 1;\n            if (x == X) {\n                return i;\n            }\n        }\n    }\n    return ans;","LineStart":12,"CharStart":4,"LineEnd":22,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone241.java","labeltext":"noncore-diff1","codeSnippet":"    int [] counter = new int [X + 1];\n    int ans = - 1;\n    int x = 0;","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":14,"status":"noncore-diff"},{"fileName":"Clone241.java","labeltext":"noncore-diff2","codeSnippet":"    int list [] = A;\n    int sum = 0;\n    int searchedValue = X;\n    int sumV = searchedValue * (searchedValue + 1) / 2;\n    List < Integer > arrayList = new ArrayList < Integer > ();","LineStart":26,"CharStart":4,"LineEnd":30,"CharEnd":62,"status":"noncore-diff"},{"fileName":"Clone248.java","labeltext":"core-sim1","codeSnippet":"    for (int iii = 0;\n    iii < list.length; iii ++) {\n        if (list [iii] <= searchedValue && ! arrayList.contains (list [iii])) {\n            sum += list [iii];\n            if (sum == sumV) {\n                return iii;\n            }\n            arrayList.add (list [iii]);\n        }\n    }\n    return - 1;","LineStart":14,"CharStart":4,"LineEnd":24,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone248.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < A.length; i ++) {\n        if (A [i] <= X) hset.add (A [i]);\n        if (hset.size () == X) return i;\n    }\n    return - 1;","LineStart":29,"CharStart":4,"LineEnd":34,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone248.java","labeltext":"noncore-sim1","codeSnippet":"HashSet < Integer > hset = new HashSet < Integer > ();","LineStart":28,"CharStart":4,"LineEnd":28,"CharEnd":58,"status":"noncore-sim"},{"fileName":"Clone248.java","labeltext":"noncore-sim1","codeSnippet":"List < Integer > arrayList = new ArrayList < Integer > ();","LineStart":13,"CharStart":4,"LineEnd":13,"CharEnd":62,"status":"noncore-sim"},{"fileName":"Clone248.java","labeltext":"noncore-diff1","codeSnippet":"    int list [] = A;\n    int sum = 0;\n    int searchedValue = X;\n    int sumV = searchedValue * (searchedValue + 1) / 2;","LineStart":9,"CharStart":4,"LineEnd":12,"CharEnd":55,"status":"noncore-diff"},{"fileName":"Clone263.java","labeltext":"core-diff1","codeSnippet":"    for (int x = 0;\n    x < size; x ++) {\n        int temp = A [x];\n        if (temp <= X) {\n            if (check [temp - 1] > 0) {\n                continue;\n            }\n            check [temp - 1] ++;\n            cmp ++;\n        }\n        if (cmp == X) {\n            time = x;\n            break;\n        }\n    }\n    return time;","LineStart":13,"CharStart":4,"LineEnd":28,"CharEnd":16,"status":"core-diff"},{"fileName":"Clone263.java","labeltext":"core-diff1","codeSnippet":"    for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;","LineStart":34,"CharStart":4,"LineEnd":45,"CharEnd":15,"status":"core-diff"},{"fileName":"Clone263.java","labeltext":"noncore-diff1","codeSnippet":"    int size = A.length;\n    int [] check = new int [X];\n    int cmp = 0;\n    int time = - 1;","LineStart":9,"CharStart":4,"LineEnd":12,"CharEnd":19,"status":"noncore-diff"},{"fileName":"Clone263.java","labeltext":"noncore-diff2","codeSnippet":"    Set < Integer > set = new HashSet < Integer > ();\n    int sum1 = 0, sum2 = 0;","LineStart":32,"CharStart":4,"LineEnd":33,"CharEnd":27,"status":"noncore-diff"},{"fileName":"Clone264.java","labeltext":"core-sim1","codeSnippet":"    int time = - 1;\n    for (int x = 0;\n    x < size; x ++) {\n        int temp = A [x];\n        if (temp <= X) {\n            if (check [temp - 1] > 0) {\n                continue;\n            }\n            check [temp - 1] ++;\n            cmp ++;\n        }\n        if (cmp == X) {\n            time = x;\n            break;\n        }\n    }\n    return time;","LineStart":12,"CharStart":4,"LineEnd":28,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone264.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < A.length; i ++) {\n        leaves.add (A [i]);\n        if (leaves.contains (X) && leaves.size () == X) return i;\n    }\n    return - 1;","LineStart":33,"CharStart":4,"LineEnd":38,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone264.java","labeltext":"noncore-sim1","codeSnippet":"int [] check = new int [X];","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":31,"status":"noncore-sim"},{"fileName":"Clone264.java","labeltext":"noncore-sim1","codeSnippet":"Set < Integer > leaves = new HashSet < > ();","LineStart":32,"CharStart":4,"LineEnd":32,"CharEnd":48,"status":"noncore-sim"},{"fileName":"Clone264.java","labeltext":"noncore-diff1","codeSnippet":"int size = A.length;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":24,"status":"noncore-diff"},{"fileName":"Clone264.java","labeltext":"noncore-diff1","codeSnippet":"int cmp = 0;","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":16,"status":"noncore-diff"},{"fileName":"Clone265.java","labeltext":"core-sim1","codeSnippet":"    Arrays.fill (isFilled, 0);\n    for (int i = 0;\n    i < len; i ++) {\n        int x = A [i];\n        if (x <= X) {\n            if (isFilled [x - 1] == 0) {\n                isFilled [x - 1] = 1;\n                jumped += 1;\n                if (jumped == X) {\n                    return i;\n                }\n            }\n        }\n    }\n    return - 1;","LineStart":15,"CharStart":4,"LineEnd":29,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone265.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i <= X; i ++) {\n        sum1 += i;\n    }\n    for (int i = 0;\n    i < A.length; i ++) {\n        if (set.contains (A [i])) continue;\n        set.add (A [i]);\n        sum2 += A [i];\n        if (sum1 == sum2) return i;\n    }\n    return - 1;","LineStart":35,"CharStart":4,"LineEnd":46,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone265.java","labeltext":"core-sim1","codeSnippet":"    if (X > len) {\n        return - 1;\n    }","LineStart":10,"CharStart":4,"LineEnd":12,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone265.java","labeltext":"noncore-sim1","codeSnippet":"int [] isFilled = new int [X];","LineStart":13,"CharStart":4,"LineEnd":13,"CharEnd":34,"status":"noncore-sim"},{"fileName":"Clone265.java","labeltext":"noncore-sim1","codeSnippet":"Set < Integer > set = new HashSet < Integer > ();","LineStart":33,"CharStart":4,"LineEnd":33,"CharEnd":53,"status":"noncore-sim"},{"fileName":"Clone265.java","labeltext":"noncore-diff1","codeSnippet":"int sum1 = 0, sum2 = 0;","LineStart":34,"CharStart":4,"LineEnd":34,"CharEnd":27,"status":"noncore-diff"},{"fileName":"Clone265.java","labeltext":"noncore-diff1","codeSnippet":"int jumped = 0;","LineStart":14,"CharStart":4,"LineEnd":14,"CharEnd":19,"status":"noncore-diff"},{"fileName":"Clone265.java","labeltext":"noncore-diff2","codeSnippet":"int len = A.length;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":23,"status":"noncore-diff"},{"fileName":"Clone271.java","labeltext":"core-sim1","codeSnippet":"    if (savedDate != null && currentDate != null) {\n        if (savedDate.plus (days, ChronoUnit.DAYS).isBefore (currentDate)) {\n            hasExpired = true;\n        }\n    }\n    return hasExpired;","LineStart":10,"CharStart":4,"LineEnd":15,"CharEnd":22,"status":"core-sim"},{"fileName":"Clone271.java","labeltext":"core-sim1","codeSnippet":"dateFormatUtc.setTimeZone (TimeZone.getTimeZone (\"UTC\"));","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":61,"status":"core-sim"},{"fileName":"Clone271.java","labeltext":"core-sim1","codeSnippet":"    savedDate = dateFormatLocal.parse (dateFormatUtc.format (savedDate));\n    Date dateTimeNow = dateFormatLocal.parse (dateFormatUtc.format (new Date ()));\n    long expires = dateTimeNow.getTime () + (DAY_IN_MS * days);","LineStart":22,"CharStart":4,"LineEnd":24,"CharEnd":63,"status":"core-sim"},{"fileName":"Clone271.java","labeltext":"core-sim1","codeSnippet":"return savedDate.before (expiresDate);","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":42,"status":"core-sim"},{"fileName":"Clone271.java","labeltext":"noncore-diff1","codeSnippet":"SimpleDateFormat dateFormatUtc = new SimpleDateFormat (\"yyyy-MMM-dd HH:mm:ss\");","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":83,"status":"noncore-diff"},{"fileName":"Clone271.java","labeltext":"noncore-diff1","codeSnippet":"SimpleDateFormat dateFormatLocal = new SimpleDateFormat (\"yyyy-MMM-dd HH:mm:ss\");","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":85,"status":"noncore-diff"},{"fileName":"Clone271.java","labeltext":"noncore-diff1","codeSnippet":"    Date expiresDate = new Date (expires);\n    System.out.println (\"savedDate \\t\\t\" + savedDate + \"\\nexpiresDate \\t\" + expiresDate);","LineStart":25,"CharStart":4,"LineEnd":26,"CharEnd":89,"status":"noncore-diff"},{"fileName":"Clone271.java","labeltext":"noncore-diff2","codeSnippet":"boolean hasExpired = false;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":31,"status":"noncore-diff"},{"fileName":"Clone279.java","labeltext":"noncore-sim1","codeSnippet":"super.paintComponent (g);","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":29,"status":"noncore-sim"},{"fileName":"Clone279.java","labeltext":"noncore-sim1","codeSnippet":"super.paintComponent (g);","LineStart":32,"CharStart":4,"LineEnd":32,"CharEnd":29,"status":"noncore-sim"},{"fileName":"Clone279.java","labeltext":"core-diff1","codeSnippet":"    Graphics2D g2d = (Graphics2D) g.create ();\n    g2d.setColor (Color.RED);\n    g2d.drawLine (getWidth () / 2, 0, getWidth () / 2, getHeight ());\n    g2d.drawLine (0, getHeight () / 2, getWidth (), getHeight () / 2);\n    FontRenderContext context = g2d.getFontRenderContext ();\n    Font font = new Font (\"Arial\", Font.BOLD, 48);\n    TextLayout txt = new TextLayout (text, font, context);\n    Rectangle2D bounds = txt.getBounds ();\n    int x = (int) ((getWidth () - (int) bounds.getWidth ()) / 2);\n    int y = (int) ((getHeight () - (bounds.getHeight () - txt.getDescent ())) / 2);\n    y += txt.getAscent () - txt.getDescent ();\n    g2d.setFont (font);\n    g2d.setColor (Color.BLACK);\n    g2d.drawString (text, x, y);\n    g2d.setColor (Color.BLUE);\n    g2d.translate (x, y);\n    g2d.draw (bounds);\n    g2d.dispose ();","LineStart":10,"CharStart":4,"LineEnd":27,"CharEnd":19,"status":"core-diff"},{"fileName":"Clone279.java","labeltext":"core-diff1","codeSnippet":"    Font font = new Font (\"Arial\", Font.BOLD, 48);\n    String text = \"Along time ago, in a galaxy, far, far away\";\n    Shape outline = font.createGlyphVector (g.getFontMetrics ().getFontRenderContext (), text).getOutline ();\n    AffineTransform transform = AffineTransform.getTranslateInstance (- outline.getBounds ().getX () + getWidth () / 2 - outline.getBounds ().width / 2, - outline.getBounds ().getY () + getHeight () / 2 - outline.getBounds ().height / 2);\n    outline = transform.createTransformedShape (outline);\n    g2d.fill (outline);","LineStart":33,"CharStart":4,"LineEnd":38,"CharEnd":23,"status":"core-diff"},{"fileName":"Clone283.java","labeltext":"core-sim1","codeSnippet":"    while (m.find ()) {\n        String action = m.group (1);\n        String name = m.group (2);\n        double scoreVal = Double.valueOf (m.group (3));\n        Score score = new Score (name, scoreVal);\n        scores.add (score);\n        if (\"A\".equalsIgnoreCase (action)) {\n            topScores.add (score);\n        } else {\n            for (Score topScore : topScores) {\n                if (topScore.equals (score)) {\n                    topScores.remove (score);\n                }\n            }\n        }\n    }\n    for (Score finalScore : topScores) {\n        System.out.println (finalScore);\n    }","LineStart":14,"CharStart":3,"LineEnd":32,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone283.java","labeltext":"core-sim1","codeSnippet":"String [] scoreSets = input.split (\"\\\\),\");","LineStart":37,"CharStart":4,"LineEnd":37,"CharEnd":47,"status":"core-sim"},{"fileName":"Clone283.java","labeltext":"core-sim1","codeSnippet":"    for (String score : scoreSets) {\n        score = score.trim ().substring (1);\n        int closeBrace = score.indexOf (')');\n        if (closeBrace == score.length () - 1) {\n            score = score.substring (0, score.length () - 1);\n        }\n        String [] tokens = score.split (\",\");\n        scoreList.add (new Score (tokens [0], tokens [1], Double.valueOf (tokens [2])));\n    }","LineStart":39,"CharStart":4,"LineEnd":47,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone283.java","labeltext":"noncore-sim1","codeSnippet":"String input = \"(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)\";","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":95,"status":"noncore-sim"},{"fileName":"Clone283.java","labeltext":"noncore-sim1","codeSnippet":"String input = \"(A,Name1,200), (A,Name1,200), (R,Name1,200), (A,Name2,900), (A,Name2,500)\";","LineStart":36,"CharStart":4,"LineEnd":36,"CharEnd":95,"status":"noncore-sim"},{"fileName":"Clone283.java","labeltext":"noncore-sim2","codeSnippet":"List < Score > scoreList = new ArrayList < Score > ();","LineStart":38,"CharStart":4,"LineEnd":38,"CharEnd":58,"status":"noncore-sim"},{"fileName":"Clone283.java","labeltext":"noncore-sim2","codeSnippet":"    ArrayList < Score > scores = new ArrayList < Score > ();\n    ArrayList < Score > topScores = new ArrayList < Score > ();","LineStart":12,"CharStart":4,"LineEnd":13,"CharEnd":63,"status":"noncore-sim"},{"fileName":"Clone283.java","labeltext":"core-sim1","codeSnippet":"    Pattern p = Pattern.compile (\"\\\\(([A,R]?),(\\\\w+?),(\\\\d+?)\\\\)\");\n    Matcher m = p.matcher (input);","LineStart":10,"CharStart":4,"LineEnd":11,"CharEnd":34,"status":"core-sim"},{"fileName":"Clone284.java","labeltext":"core-diff1","codeSnippet":"    try {\n        int i = Integer.parseInt (cin.readLine ());\n    } catch (ArithmeticException e) {\n    } catch (Exception e) {\n        System.exit (0);\n    } finally {\n        System.out.println (\"Won't be executed\");\n        System.out.println (\"No error\");\n    }","LineStart":10,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone284.java","labeltext":"core-diff1","codeSnippet":"    Runnable runnable = new Runnable () {\n        @Override\n        public void run () {\n            try {\n                printThreads (\"Daemon Thread printing\");\n                Thread.sleep (10000);\n            } catch (Exception e) {\n            } finally {\n                System.out.println (\"finally\");\n            }\n        }}\n    ;\n    Thread daemonThread = new Thread (runnable);\n    daemonThread.setDaemon (Boolean.TRUE);\n    daemonThread.setName (\"My Daemon Thread\");\n    daemonThread.start ();\n    printThreads (\"main Thread Printing\");","LineStart":22,"CharStart":4,"LineEnd":38,"CharEnd":42,"status":"core-diff"},{"fileName":"Clone284.java","labeltext":"noncore-diff1","codeSnippet":"DataInputStream cin = new DataInputStream (System.in);","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":58,"status":"noncore-diff"},{"fileName":"Clone286.java","labeltext":"core-diff1","codeSnippet":"            JFrame main_frame = new JFrame ();\n            main_frame.setPreferredSize (new Dimension (1200, 300));\n            main_frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n            ArrayList < String > nonsense = new ArrayList < String > (Arrays.asList (\"Lorem ipsum dolor sit amet, sed dolore vivendum ut\", \"pri an soleat causae doctus.\", \"Alienum abhorreant mea ea\", \"cum malorum diceret ei. Pri oratio invidunt consequat ne.\", \"Ius tritani detraxit scribentur et\", \"has detraxit legendos intellegat at\", \"quo oporteat constituam ex\"));\n            JTable example_table = new JTable (10, 4);\n            example_table.setRowHeight (example_table.getRowHeight () * 2);\n            DefaultCellEditor cell_editor = new SelectableNonEditableCellEditor (new JTextField ());\n            cell_editor.setClickCountToStart (1);\n            example_table.setDefaultEditor (Object.class, cell_editor);\n            TableCellRenderer renderer = new SelectableNonEditableTableRenderer ();\n            example_table.setDefaultRenderer (Object.class, renderer);\n            for (int i = 0;\n            i < 10; i ++) {\n                example_table.setValueAt (nonsense.get (i % nonsense.size ()), i, i % 4);\n            }\n            main_frame.getContentPane ().add (new JScrollPane (example_table));\n            main_frame.pack ();\n            main_frame.setVisible (true);","LineStart":12,"CharStart":12,"LineEnd":29,"CharEnd":41,"status":"core-diff"},{"fileName":"Clone286.java","labeltext":"core-diff1","codeSnippet":"createAndShowGUI (new JTableTest ().panel, \"Test\");","LineStart":38,"CharStart":12,"LineEnd":38,"CharEnd":63,"status":"core-diff"},{"fileName":"Clone286.java","labeltext":"noncore-sim1","codeSnippet":"    SwingUtilities.invokeLater (new Runnable () {\n        @Override\n        public void run () {","LineStart":35,"CharStart":4,"LineEnd":37,"CharEnd":28,"status":"noncore-sim"},{"fileName":"Clone286.java","labeltext":"noncore-sim1","codeSnippet":"        }}\n    );","LineStart":39,"CharStart":8,"LineEnd":40,"CharEnd":6,"status":"noncore-sim"},{"fileName":"Clone286.java","labeltext":"noncore-sim1","codeSnippet":"    EventQueue.invokeLater (new Runnable () {\n        @Override\n        public void run () {","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":28,"status":"noncore-sim"},{"fileName":"Clone286.java","labeltext":"noncore-sim1","codeSnippet":"        }}\n    );","LineStart":30,"CharStart":8,"LineEnd":31,"CharEnd":6,"status":"noncore-sim"},{"fileName":"Clone291.java","labeltext":"core-diff1","codeSnippet":"    view.setOnClickListener ((v) -> {\n        int adapterPosition = getAdapterPosition ();\n        if (adapterPosition >= 0) {\n            clicks.onItemSelected (myObject, adapterPosition);\n        }\n    });","LineStart":10,"CharStart":4,"LineEnd":15,"CharEnd":7,"status":"core-diff"},{"fileName":"Clone291.java","labeltext":"core-diff1","codeSnippet":"    image = (ImageView) itemView.findViewById (R.id.horizontal_list_image);\n    title = (TextView) itemView.findViewById (R.id.horizontal_list_title);\n    price = (TextView) itemView.findViewById (R.id.horizontal_list_price);\n    image.setOnClickListener (this);\n    title.setOnClickListener (this);\n    price.setOnClickListener (this);","LineStart":20,"CharStart":4,"LineEnd":25,"CharEnd":36,"status":"core-diff"},{"fileName":"Clone291.java","labeltext":"noncore-sim1","codeSnippet":"super (itemView);","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":21,"status":"noncore-sim"},{"fileName":"Clone291.java","labeltext":"noncore-sim1","codeSnippet":"super (view);","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":17,"status":"noncore-sim"},{"fileName":"Clone292.java","labeltext":"core-diff1","codeSnippet":"    long threadId = Thread.currentThread ().getId ();\n    System.out.println (\"I am thread \" + threadId);\n    response = response + \"Thread Id = \" + threadId;\n    t.sendResponseHeaders (200, response.length ());\n    OutputStream os = t.getResponseBody ();\n    os.write (response.getBytes ());\n    os.close ();","LineStart":10,"CharStart":4,"LineEnd":16,"CharEnd":16,"status":"core-diff"},{"fileName":"Clone292.java","labeltext":"core-diff1","codeSnippet":"    byte [] inBytes = getBytes (ex.getRequestBody ());\n    ex.getRequestBody ().close ();\n    final ByteArrayInputStream newInput = new ByteArrayInputStream (inBytes);\n    final ServletInputStream is = new ServletInputStream () {\n        @Override\n        public int read () throws IOException {\n            return newInput.read ();\n        }}\n    ;\n    Map < String, String [] > parsePostData = new HashMap < > ();\n    try {\n        parsePostData.putAll (HttpUtils.parseQueryString (ex.getRequestURI ().getQuery ()));\n        parsePostData.putAll (HttpUtils.parsePostData (inBytes.length, is));\n    } catch (IllegalArgumentException e) {\n        newInput.reset ();\n    }\n    final Map < String, String [] > postData = parsePostData;\n    RequestWrapper req = new RequestWrapper (createUnimplementAdapter (HttpServletRequest.class), ex, postData, is);\n    ResponseWrapper resp = new ResponseWrapper (createUnimplementAdapter (HttpServletResponse.class), ex);\n    try {\n        servlet.service (req, resp);\n        resp.complete ();\n    } catch (ServletException e) {\n        throw new IOException (e);\n    }","LineStart":20,"CharStart":4,"LineEnd":44,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone292.java","labeltext":"noncore-diff1","codeSnippet":"String response = \"This is the response\";","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":45,"status":"noncore-diff"},{"fileName":"Clone304.java","labeltext":"core-diff1","codeSnippet":"    try {\n        test (bytes);\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }","LineStart":13,"CharStart":4,"LineEnd":17,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone304.java","labeltext":"core-diff2","codeSnippet":"    try {\n        for (int read = input.read (buffer, 0, buffer.length);\n        read != - 1; read = input.read (buffer, 0, buffer.length)) {\n            output.append (buffer, 0, read);\n        }\n    } catch (IOException ignore) {\n    }","LineStart":26,"CharStart":4,"LineEnd":32,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone304.java","labeltext":"noncore-sim1","codeSnippet":"byte [] bytes = new byte [1024 * 1024];","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":43,"status":"noncore-sim"},{"fileName":"Clone304.java","labeltext":"noncore-sim1","codeSnippet":"final char [] buffer = new char [CHARS_PER_PAGE];","LineStart":24,"CharStart":4,"LineEnd":24,"CharEnd":53,"status":"noncore-sim"},{"fileName":"Clone304.java","labeltext":"noncore-diff1","codeSnippet":"log (\"App started\");","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":24,"status":"noncore-diff"},{"fileName":"Clone304.java","labeltext":"noncore-diff1","codeSnippet":"    new Random ().nextBytes (bytes);\n    log (\"Stream is ready\\n\");","LineStart":11,"CharStart":4,"LineEnd":12,"CharEnd":30,"status":"noncore-diff"},{"fileName":"Clone304.java","labeltext":"noncore-diff2","codeSnippet":"    InputStream is = StringFromFileFast.class.getResourceAsStream (\"file.txt\");\n    InputStreamReader input = new InputStreamReader (is);\n    final int CHARS_PER_PAGE = 5000;","LineStart":21,"CharStart":4,"LineEnd":23,"CharEnd":36,"status":"noncore-diff"},{"fileName":"Clone304.java","labeltext":"noncore-diff2","codeSnippet":"StringBuilder output = new StringBuilder (CHARS_PER_PAGE);","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":62,"status":"noncore-diff"},{"fileName":"Clone304.java","labeltext":"noncore-diff3","codeSnippet":"    String text = output.toString ();\n    System.out.println (text);","LineStart":33,"CharStart":4,"LineEnd":34,"CharEnd":30,"status":"noncore-diff"},{"fileName":"Clone307.java","labeltext":"core-sim1","codeSnippet":"    while ((line = reader.readLine ()) != null) {\n        result.append (flag ? newLine : \"\").append (line);\n        flag = true;\n    }\n    return result.toString ();","LineStart":25,"CharStart":3,"LineEnd":29,"CharEnd":30,"status":"core-sim"},{"fileName":"Clone307.java","labeltext":"core-sim1","codeSnippet":"        while ((length = inputStream.read (buffer)) != - 1) {\n            result.write (buffer, 0, length);\n        }\n        return result.toString (UTF_8);","LineStart":12,"CharStart":8,"LineEnd":15,"CharEnd":39,"status":"core-sim"},{"fileName":"Clone307.java","labeltext":"noncore-diff1","codeSnippet":"    try (ByteArrayOutputStream result = new ByteArrayOutputStream ()) {\n        byte [] buffer = new byte [1024];\n        int length;","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":19,"status":"noncore-diff"},{"fileName":"Clone307.java","labeltext":"noncore-diff1","codeSnippet":"}","LineStart":16,"CharStart":4,"LineEnd":16,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone307.java","labeltext":"noncore-diff1","codeSnippet":"    String newLine = System.getProperty (\"line.separator\");\n    BufferedReader reader = new BufferedReader (new InputStreamReader (inputStream));\n    StringBuilder result = new StringBuilder (UTF_8);\n    String line;\n    boolean flag = false;","LineStart":20,"CharStart":4,"LineEnd":24,"CharEnd":25,"status":"noncore-diff"},{"fileName":"Clone310.java","labeltext":"core-sim1","codeSnippet":"    for (char c : s.toCharArray ()) {\n        if (c < 256) {\n            arr [c] ++;\n        }\n    }","LineStart":10,"CharStart":4,"LineEnd":14,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone310.java","labeltext":"core-sim1","codeSnippet":"    char [] c = s.toCharArray ();\n    for (int i = 0;\n    i < c.length; i ++) {\n        Integer count = 0;\n        if (letterCountMap.containsKey (c [i])) {\n            count = letterCountMap.get (c [i]) + 1;\n        } else {\n            count = 1;\n        }\n        letterCountMap.put (c [i], count);\n    }","LineStart":27,"CharStart":4,"LineEnd":37,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone310.java","labeltext":"core-sim2","codeSnippet":"    for (int i = 0;\n    i != 256; i ++) {\n        if (arr [i] != 0) {\n            System.out.print ((char) i);\n            System.out.print (\" : \");\n            System.out.println (arr [i]);\n        }\n    }","LineStart":15,"CharStart":4,"LineEnd":22,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone310.java","labeltext":"core-sim2","codeSnippet":"    for (Map.Entry < String, String > entry : letterCountMap.entrySet ()) {\n        System.out.println (entry.getValue () + \"( for\" + entry.getKey () + \" )\");\n    }","LineStart":38,"CharStart":4,"LineEnd":40,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone310.java","labeltext":"noncore-diff1","codeSnippet":" int [] arr = new int [256];","LineStart":9,"CharStart":3,"LineEnd":9,"CharEnd":31,"status":"noncore-diff"},{"fileName":"Clone310.java","labeltext":"noncore-diff2","codeSnippet":"HashMap < Character, Integer > letterCountMap = new HashMap < Character, Integer > ();","LineStart":26,"CharStart":4,"LineEnd":26,"CharEnd":90,"status":"noncore-diff"},{"fileName":"Clone322.java","labeltext":"core-sim1","codeSnippet":"    while (true) {\n        if (console.hasNextInt ()) {\n            System.out.print (\"**hours input accepted**\");\n            return console.nextInt ();\n        }\n        console.nextLine ();\n        System.out.print (\", please re-enter the hours again:\");\n    }","LineStart":9,"CharStart":4,"LineEnd":16,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone322.java","labeltext":"core-sim1","codeSnippet":"    boolean hoursNotOk = true;\n    do {\n        try {\n            System.out.println (\"Here\");\n            hours = console.nextInt ();\n            hoursNotOk = false;\n        } catch (Exception e) {\n            e.printStackTrace ();\n            console.nextLine ();\n        } finally {\n            if (hoursNotOk) {\n                System.out.println (\", please re-enter the hours again:\");\n            } else {\n                System.out.println (\"**hours input accepted**\");\n            }\n        }\n    } while (hoursNotOk);\n    return hours;","LineStart":21,"CharStart":4,"LineEnd":38,"CharEnd":17,"status":"core-sim"},{"fileName":"Clone322.java","labeltext":"noncore-diff1","codeSnippet":"int hours = 0;","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":18,"status":"noncore-diff"},{"fileName":"Clone337.java","labeltext":"core-diff1","codeSnippet":"    for (int i = 0;\n    i < test.length (); i ++) {\n        switch (test.charAt (i)) {\n            case 'a' :\n            case 'A' :\n                countA ++;\n                break;\n            case 'o' :\n            case 'O' :\n                countO ++;\n                break;\n            case ' ' :\n                countSpace ++;\n                break;\n            case '.' :\n                countDot ++;\n                break;\n        }\n    }","LineStart":32,"CharStart":4,"LineEnd":50,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone337.java","labeltext":"core-diff1","codeSnippet":"    for (int i = 0;\n    i < str.length (); i ++) {\n        int j = str.charAt (i) - 'a';\n        if (ar [j] == null) {\n            ar [j] = 1;\n        } else {\n            ar [j] += 1;\n        }\n    }\n    for (int i = 0;\n    i < ar.length; i ++) {\n        if (ar [i] != null && ar [i] > 1) {\n            char c = (char) (97 + i);\n            System.out.println (\"'\" + c + \"' comes \" + ar [i] + \" times.\");\n        }\n    }","LineStart":11,"CharStart":4,"LineEnd":26,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone337.java","labeltext":"noncore-diff1","codeSnippet":"    String str = \"abcdabghplhhnfl\".toLowerCase ();\n    Integer [] ar = new Integer [26];","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":37,"status":"noncore-diff"},{"fileName":"Clone337.java","labeltext":"noncore-diff1","codeSnippet":"    String test = \"The quick brown fox jumped over the lazy dog.\";\n    int countA = 0, countO = 0, countSpace = 0, countDot = 0;","LineStart":30,"CharStart":4,"LineEnd":31,"CharEnd":61,"status":"noncore-diff"},{"fileName":"Clone337.java","labeltext":"noncore-diff2","codeSnippet":"","LineStart":52,"CharStart":1,"LineEnd":52,"CharEnd":1,"status":"noncore-diff"},{"fileName":"Clone337.java","labeltext":"noncore-diff2","codeSnippet":"    System.out.printf (\"%s%d%n%s%d%n%s%d%n%s%d\", \"A: \", countA, \"O: \", countO, \"Space: \", countSpace, \"Dot: \", countDot);\n","LineStart":51,"CharStart":4,"LineEnd":52,"CharEnd":0,"status":"noncore-diff"},{"fileName":"Clone343.java","labeltext":"core-diff1","codeSnippet":"    for (int i = 0;\n    i < test.length (); i ++) {\n        switch (test.charAt (i)) {\n            case 'a' :\n            case 'A' :\n                countA ++;\n                break;\n            case 'o' :\n            case 'O' :\n                countO ++;\n                break;\n            case ' ' :\n                countSpace ++;\n                break;\n            case '.' :\n                countDot ++;\n                break;\n        }\n    }","LineStart":27,"CharStart":4,"LineEnd":45,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone343.java","labeltext":"noncore-diff1","codeSnippet":"    String test = \"The quick brown fox jumped over the lazy dog.\";\n    int countA = 0, countO = 0, countSpace = 0, countDot = 0;","LineStart":25,"CharStart":4,"LineEnd":26,"CharEnd":61,"status":"noncore-diff"},{"fileName":"Clone343.java","labeltext":"core-diff1","codeSnippet":"    String s1 = sc.nextLine ();\n    for (int i = 0;\n    i < s1.length (); i ++) {\n        if (! hm.containsKey (s1.charAt (i))) {\n            hm.put (s1.charAt (i), (Integer) 1);\n        } else {\n            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);\n        }\n    }","LineStart":12,"CharStart":4,"LineEnd":20,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone343.java","labeltext":"noncore-diff1","codeSnippet":"    HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();\n    System.out.println (\"Enter an String:\");\n    Scanner sc = new Scanner (System.in);","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":41,"status":"noncore-diff"},{"fileName":"Clone343.java","labeltext":"noncore-diff2","codeSnippet":"System.out.println (\"The Charecters are:\" + hm);","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":52,"status":"noncore-diff"},{"fileName":"Clone343.java","labeltext":"noncore-diff2","codeSnippet":"    System.out.printf (\"%s%d%n%s%d%n%s%d%n%s%d\", \"A: \", countA, \"O: \", countO, \"Space: \", countSpace, \"Dot: \", countDot);\n","LineStart":46,"CharStart":4,"LineEnd":47,"CharEnd":0,"status":"noncore-diff"},{"fileName":"Clone344.java","labeltext":"core-sim1","codeSnippet":"    Scanner sc = new Scanner (System.in);\n    String s1 = sc.nextLine ();","LineStart":11,"CharStart":4,"LineEnd":12,"CharEnd":31,"status":"core-sim"},{"fileName":"Clone344.java","labeltext":"core-sim1","codeSnippet":"    Scanner sc = new Scanner (System.in);\n    String st = sc.nextLine ();","LineStart":26,"CharStart":4,"LineEnd":27,"CharEnd":31,"status":"core-sim"},{"fileName":"Clone344.java","labeltext":"core-sim2","codeSnippet":"    for (int i = 0;\n    i < st.length (); i ++) {\n        ar [st.charAt (i)] = ar [st.charAt (i)] + 1;\n    }\n    for (int i = 0;\n    i < 256; i ++) {\n        char ch = (char) i;\n        if (ar [i] > 0) {\n            if (ar [i] == 1) {\n                System.out.print (ch);\n            } else {\n                System.out.print (ch + \"\" + ar [i]);\n            }\n        }\n    }","LineStart":29,"CharStart":4,"LineEnd":43,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone344.java","labeltext":"core-sim2","codeSnippet":"    for (int i = 0;\n    i < s1.length (); i ++) {\n        if (! hm.containsKey (s1.charAt (i))) {\n            hm.put (s1.charAt (i), (Integer) 1);\n        } else {\n            hm.put (s1.charAt (i), hm.get (s1.charAt (i)) + 1);\n        }\n    }","LineStart":13,"CharStart":3,"LineEnd":20,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone344.java","labeltext":"noncore-sim1","codeSnippet":"System.out.println (\"Enter an String:\");","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone344.java","labeltext":"noncore-diff1","codeSnippet":"HashMap < Character, Integer > hm = new HashMap < Character, Integer > ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":78,"status":"noncore-diff"},{"fileName":"Clone344.java","labeltext":"noncore-diff1","codeSnippet":"int [] ar = new int [256];","LineStart":28,"CharStart":4,"LineEnd":28,"CharEnd":30,"status":"noncore-diff"},{"fileName":"Clone344.java","labeltext":"noncore-sim1","codeSnippet":"System.out.print (\"Enter the String\");","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":42,"status":"noncore-sim"},{"fileName":"Clone344.java","labeltext":"noncore-diff2","codeSnippet":"System.out.println (\"The Charecters are:\" + hm);","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":52,"status":"noncore-diff"},{"fileName":"Clone345.java","labeltext":"core-diff1","codeSnippet":"    for (char val : arr) {\n        map.put (val, map.containsKey (val) ? map.get (val) + 1 : 1);\n    }\n    for (Entry < Character, Integer > entry : map.entrySet ()) {\n        if (entry.getValue () > 1) {\n            Character key = entry.getKey ();\n            Object value = entry.getValue ();\n            System.out.println (key + \":\" + value);\n        }\n    }","LineStart":12,"CharStart":4,"LineEnd":21,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone345.java","labeltext":"core-diff1","codeSnippet":"    for (int i = 0;\n    i < test.length (); i ++) {\n        switch (test.charAt (i)) {\n            case 'a' :\n            case 'A' :\n                countA ++;\n                break;\n            case 'o' :\n            case 'O' :\n                countO ++;\n                break;\n            case ' ' :\n                countSpace ++;\n                break;\n            case '.' :\n                countDot ++;\n                break;\n        }\n    }","LineStart":27,"CharStart":4,"LineEnd":45,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone345.java","labeltext":"noncore-diff1","codeSnippet":"    String name = \"AnuvratAnuvra\";\n    char [] arr = name.toCharArray ();\n    HashMap < Character, Integer > map = new HashMap < Character, Integer > ();","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":79,"status":"noncore-diff"},{"fileName":"Clone345.java","labeltext":"noncore-diff1","codeSnippet":"    String test = \"The quick brown fox jumped over the lazy dog.\";\n    int countA = 0, countO = 0, countSpace = 0, countDot = 0;","LineStart":25,"CharStart":4,"LineEnd":26,"CharEnd":61,"status":"noncore-diff"},{"fileName":"Clone345.java","labeltext":"noncore-diff2","codeSnippet":" System.out.printf (\"%s%d%n%s%d%n%s%d%n%s%d\", \"A: \", countA, \"O: \", countO, \"Space: \", countSpace, \"Dot: \", countDot);","LineStart":46,"CharStart":3,"LineEnd":46,"CharEnd":121,"status":"noncore-diff"},{"fileName":"Clone349.java","labeltext":"core-diff1","codeSnippet":"        xe.setPersistenceDelegate (DefaultTableModel.class, new DefaultTableModelPersistenceDelegate ());\n        xe.writeObject (model);\n        xe.close ();","LineStart":12,"CharStart":8,"LineEnd":14,"CharEnd":20,"status":"core-diff"},{"fileName":"Clone349.java","labeltext":"core-diff1","codeSnippet":"textArea.read (r, null);","LineStart":16,"CharStart":8,"LineEnd":16,"CharEnd":32,"status":"core-diff"},{"fileName":"Clone349.java","labeltext":"core-diff2","codeSnippet":"        model = (DefaultTableModel) xd.readObject ();\n        table.setModel (model);","LineStart":26,"CharStart":8,"LineEnd":27,"CharEnd":31,"status":"core-diff"},{"fileName":"Clone349.java","labeltext":"noncore-diff1","codeSnippet":"        InputStream is = new BufferedInputStream (new FileInputStream (file));\n        XMLDecoder xd = new XMLDecoder (is);","LineStart":24,"CharStart":8,"LineEnd":25,"CharEnd":44,"status":"noncore-diff"},{"fileName":"Clone349.java","labeltext":"noncore-diff1","codeSnippet":"        OutputStream os = new BufferedOutputStream (new FileOutputStream (file));\n        XMLEncoder xe = new XMLEncoder (os);","LineStart":10,"CharStart":8,"LineEnd":11,"CharEnd":44,"status":"noncore-diff"},{"fileName":"Clone349.java","labeltext":"noncore-diff2","codeSnippet":"Reader r = new BufferedReader (new InputStreamReader (new FileInputStream (file), \"UTF-8\"));","LineStart":15,"CharStart":8,"LineEnd":15,"CharEnd":100,"status":"noncore-diff"},{"fileName":"Clone349.java","labeltext":"noncore-sim1","codeSnippet":"try {","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone349.java","labeltext":"noncore-sim1","codeSnippet":"    } catch (IOException ex) {\n        ex.printStackTrace ();\n    }","LineStart":17,"CharStart":4,"LineEnd":19,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone349.java","labeltext":"noncore-sim1","codeSnippet":"try {","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone349.java","labeltext":"noncore-sim1","codeSnippet":"    } catch (IOException ex) {\n        ex.printStackTrace ();\n    }","LineStart":28,"CharStart":4,"LineEnd":30,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone351.java","labeltext":"core-diff1","codeSnippet":"    switch (requestCode) {\n        case Constants.PERMISSIONS_REQUEST_CALL_PHONE :\n            {\n                if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    checkPermissionsAndCall ();\n                }\n            }}","LineStart":10,"CharStart":4,"LineEnd":16,"CharEnd":14,"status":"core-diff"},{"fileName":"Clone351.java","labeltext":"noncore-diff1","codeSnippet":"int index = (requestCode>> 16) & 0xffff;","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":44,"status":"noncore-diff"},{"fileName":"Clone351.java","labeltext":"core-diff1","codeSnippet":"    if (index != 0) {\n        index --;\n        String who = mPendingFragmentActivityResults.get (index);\n        mPendingFragmentActivityResults.remove (index);\n        if (who == null) {\n            Log.w (TAG, \"Activity result delivered for unknown Fragment.\");\n            return;\n        }\n        Fragment frag = mFragments.findFragmentByWho (who);\n        if (frag == null) {\n            Log.w (TAG, \"Activity result no fragment exists for who: \" + who);\n        } else {\n            frag.onRequestPermissionsResult (requestCode & 0xffff, permissions, grantResults);\n        }\n    }","LineStart":23,"CharStart":4,"LineEnd":37,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone355.java","labeltext":"core-sim1","codeSnippet":"    int rightValue = i >= 0 && i < mat.length - 1 && mat [i] [j] < mat [i + 1] [j] ? mat [i + 1] [j] : mat [i] [j];\n    int belowValue = j >= 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j + 1] ? mat [i] [j + 1] : mat [i] [j];\n    int aboveValue = i > 0 && i < mat.length - 1 && mat [i] [j] < mat [i - 1] [j] ? mat [i - 1] [j] : mat [i] [j];\n    int leftValue = j > 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j - 1] ? mat [i] [j - 1] : mat [i] [j];\n    if (rightValue > leftValue) {\n        if (rightValue > belowValue) {\n            if (rightValue > aboveValue) {\n                printPath (mat, i + 1, j);\n            } else {\n                printPath (mat, i, j + 1);\n            }\n        } else {\n            if (belowValue > aboveValue) {\n                printPath (mat, i - 1, j);\n            } else {\n                printPath (mat, i, j + 1);\n            }\n        }\n    } else {\n        if (leftValue > belowValue) {\n            if (leftValue > aboveValue) {\n                printPath (mat, i - 1, j);\n            } else {\n                printPath (mat, i, j + 1);\n            }\n        } else {\n            if (belowValue > aboveValue) {\n                printPath (mat, i - 1, j);\n            } else {\n                printPath (mat, i, j + 1);\n            }\n        }\n    }","LineStart":27,"CharStart":4,"LineEnd":59,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone355.java","labeltext":"core-sim1","codeSnippet":"    if (i >= 0 && i < mat.length - 1 && mat [i] [j] < mat [i + 1] [j]) {\n        printPath (mat, i + 1, j);\n    } else if (j >= 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j + 1]) {\n        printPath (mat, i, j + 1);\n    } else if (i > 0 && i < mat.length - 1 && mat [i] [j] < mat [i - 1] [j]) {\n        printPath (mat, i - 1, j);\n    } else if (j > 0 && j < mat [0].length - 1 && mat [i] [j] < mat [i] [j - 1]) {\n        printPath (mat, i, j - 1);\n    }","LineStart":10,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone355.java","labeltext":"noncore-sim1","codeSnippet":"System.out.println (\"(\" + i + \",\" + j + \")\");","LineStart":26,"CharStart":4,"LineEnd":26,"CharEnd":49,"status":"noncore-sim"},{"fileName":"Clone355.java","labeltext":"noncore-sim1","codeSnippet":"System.out.println (\"(\" + i + \",\" + j + \")\");","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":49,"status":"noncore-sim"},{"fileName":"Clone355.java","labeltext":"noncore-diff1","codeSnippet":"    if (mat.length == 0 || mat [0].length == 0) {\n        System.out.println (\"Empty matrix\");\n        return;\n    }","LineStart":22,"CharStart":4,"LineEnd":25,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone363.java","labeltext":"noncore-sim1","codeSnippet":"CustomClassLoader loader = new CustomClassLoader ();","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":56,"status":"noncore-sim"},{"fileName":"Clone363.java","labeltext":"noncore-sim1","codeSnippet":"Class < Foo > fooClass = loadClass ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":42,"status":"noncore-sim"},{"fileName":"Clone363.java","labeltext":"core-diff1","codeSnippet":"        Class < ? > c = loader.findClass (\"sample.Sample\");\n        Object o = c.newInstance ();","LineStart":25,"CharStart":8,"LineEnd":26,"CharEnd":36,"status":"core-diff"},{"fileName":"Clone363.java","labeltext":"core-diff2","codeSnippet":"    initializeClass (fooClass);\n    URLClassLoader myClassLoader = ((URLClassLoader) InitializeClassMultipleTimes.class.getClassLoader ());\n    URL [] urls = myClassLoader.getURLs ();\n    for (int i = 0;\n    i < 2; i ++) {\n        URLClassLoader newClassLoader = new URLClassLoader (urls, null);\n        System.out.format (\"%nLoading class using another class loader%n\", Foo.class.getSimpleName ());\n        Class < ? > fooClassAgain = Class.forName (fooClass.getName (), false, newClassLoader);\n        initializeClass (fooClassAgain);\n    }","LineStart":10,"CharStart":3,"LineEnd":19,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone363.java","labeltext":"noncore-diff1","codeSnippet":"try {","LineStart":24,"CharStart":4,"LineEnd":24,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone363.java","labeltext":"noncore-diff1","codeSnippet":"    } catch (ClassNotFoundException e) {\n        e.printStackTrace ();\n    } catch (InstantiationException e) {\n        e.printStackTrace ();\n    } catch (IllegalAccessException e) {\n        e.printStackTrace ();\n    }","LineStart":27,"CharStart":4,"LineEnd":33,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone364.java","labeltext":"noncore-sim1","codeSnippet":"int i = 0;","LineStart":11,"CharStart":8,"LineEnd":11,"CharEnd":18,"status":"noncore-sim"},{"fileName":"Clone364.java","labeltext":"noncore-sim1","codeSnippet":"int i = 0;","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":14,"status":"noncore-sim"},{"fileName":"Clone364.java","labeltext":"core-sim1","codeSnippet":"    try {\n        i = 10;\n        return i;\n    } finally {\n        i = 40;\n        System.out.println (\"local: \" + i);\n    }","LineStart":24,"CharStart":4,"LineEnd":30,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone364.java","labeltext":"core-sim1","codeSnippet":"    int returnValue;\n    try {","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone364.java","labeltext":"core-sim1","codeSnippet":"        i = 10;\n        returnValue = i;\n        i = 40;\n        return returnValue;\n    } catch (RuntimeException e) {\n        i = 40;\n        throw e;\n    }","LineStart":12,"CharStart":8,"LineEnd":19,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone365.java","labeltext":"core-sim1","codeSnippet":"    if (s1.length () != s2.length ()) {\n        return false;\n    }","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone365.java","labeltext":"core-sim1","codeSnippet":"    if (a.length () != b.length ()) {\n        return false;\n    }","LineStart":30,"CharStart":4,"LineEnd":32,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone365.java","labeltext":"core-sim2","codeSnippet":"    for (int i = 0;\n    i < s1.length (); i ++) {\n        charCount [s1.charAt (i)] ++;\n        charCount [s2.charAt (i)] --;\n    }\n    for (int i = 0;\n    i < charCount.length; i ++) {\n        if (charCount [i] != 0) {\n            return false;\n        }\n    }\n    return true;","LineStart":13,"CharStart":4,"LineEnd":24,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone365.java","labeltext":"core-sim2","codeSnippet":"    int found = 0;\n    for (int i = 0;\n    i < aArray.length; i ++) {\n        char eachA = aArray [i];\n        for (int k = 0;\n        k < bArray.length; k ++) {\n            if (eachA == bArray [k]) {\n                found ++;\n                bArray [k] = '\\uFFFF';\n                break;\n            }\n        }\n    }\n    return found == a.length ();","LineStart":33,"CharStart":4,"LineEnd":46,"CharEnd":32,"status":"core-sim"},{"fileName":"Clone365.java","labeltext":"noncore-diff1","codeSnippet":"int [] charCount = new int [256];","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":37,"status":"noncore-diff"},{"fileName":"Clone365.java","labeltext":"noncore-diff2","codeSnippet":"    char [] aArray = a.toCharArray ();\n    char [] bArray = b.toCharArray ();","LineStart":28,"CharStart":4,"LineEnd":29,"CharEnd":38,"status":"noncore-diff"},{"fileName":"Clone368.java","labeltext":"core-sim1","codeSnippet":"    MyThread mt = new MyThread (sayThisManyTimes, saidHello);\n    mt.start ();\n    for (int i = 0;\n    i < sayThisManyTimes; i ++) {\n        while (saidHello.get ()) {\n        }\n        System.out.println (\"Hello \");\n        saidHello.set (true);\n    }","LineStart":35,"CharStart":4,"LineEnd":43,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone368.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < 6; i ++) {\n        Runnable helloTask = new Runnable () {\n            @Override\n            public void run () {\n                new ThreadSeq ().printHello ();\n            }}\n        ;","LineStart":9,"CharStart":4,"LineEnd":16,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone368.java","labeltext":"core-sim1","codeSnippet":"Thread t1 = new Thread (helloTask);","LineStart":23,"CharStart":8,"LineEnd":23,"CharEnd":43,"status":"core-sim"},{"fileName":"Clone368.java","labeltext":"core-sim1","codeSnippet":"t1.start ();","LineStart":25,"CharStart":8,"LineEnd":25,"CharEnd":20,"status":"core-sim"},{"fileName":"Clone368.java","labeltext":"core-sim1","codeSnippet":"}","LineStart":29,"CharStart":4,"LineEnd":29,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone368.java","labeltext":"noncore-diff3","codeSnippet":"        t1.join ();\n        t2.start ();\n        t2.join ();","LineStart":26,"CharStart":8,"LineEnd":28,"CharEnd":19,"status":"noncore-diff"},{"fileName":"Clone368.java","labeltext":"noncore-diff4","codeSnippet":"    int sayThisManyTimes = 5;\n    AtomicBoolean saidHello = new AtomicBoolean (false);","LineStart":33,"CharStart":4,"LineEnd":34,"CharEnd":56,"status":"noncore-diff"},{"fileName":"Clone370.java","labeltext":"core-sim1","codeSnippet":"        for (int i = 0;\n        i < 5; i ++) {\n            world.acquire ();\n            System.out.println (\"  World!\");\n            hello.release ();\n        }","LineStart":10,"CharStart":8,"LineEnd":15,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone370.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < sayThisManyTimes; i ++) {\n        while (! saidHello.get ()) {\n        }\n        System.out.println (\"World!\");\n        saidHello.set (false);\n    }","LineStart":22,"CharStart":4,"LineEnd":28,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone370.java","labeltext":"noncore-diff1","codeSnippet":"try {","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone370.java","labeltext":"noncore-diff1","codeSnippet":"    } catch (InterruptedException e) {\n        e.printStackTrace ();\n    }","LineStart":16,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone372.java","labeltext":"core-diff1","codeSnippet":"UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());","LineStart":10,"CharStart":8,"LineEnd":10,"CharEnd":78,"status":"core-diff"},{"fileName":"Clone372.java","labeltext":"core-diff2","codeSnippet":"            long startedAt = System.currentTimeMillis ();\n            SwingUtilities.invokeAndWait (new Runnable () {\n                @Override\n                public void run () {\n                    game.repaint ();\n                }}\n            );\n            long completedAt = System.currentTimeMillis ();\n            long sleepFor = 30 - (completedAt - startedAt);\n            if (sleepFor < 0) {\n                sleepFor = 30;\n            }\n            Thread.sleep (sleepFor);","LineStart":30,"CharStart":12,"LineEnd":42,"CharEnd":36,"status":"core-diff"},{"fileName":"Clone372.java","labeltext":"core-diff3","codeSnippet":"    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    frame.setLayout (new BorderLayout ());\n    frame.add (game);\n    frame.pack ();\n    frame.setLocationRelativeTo (null);\n    frame.setVisible (true);","LineStart":18,"CharStart":4,"LineEnd":23,"CharEnd":28,"status":"core-diff"},{"fileName":"Clone372.java","labeltext":"noncore-sim1","codeSnippet":"try {","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone372.java","labeltext":"noncore-sim1","codeSnippet":"    } catch (ClassNotFoundException ex) {\n    } catch (InstantiationException ex) {\n    } catch (IllegalAccessException ex) {\n    } catch (UnsupportedLookAndFeelException ex) {\n    }","LineStart":11,"CharStart":4,"LineEnd":15,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone372.java","labeltext":"noncore-simq","codeSnippet":"try {","LineStart":29,"CharStart":8,"LineEnd":29,"CharEnd":13,"status":"noncore-sim"},{"fileName":"Clone372.java","labeltext":"noncore-sim1","codeSnippet":"        } catch (Exception exp) {\n            exp.printStackTrace ();\n        }","LineStart":43,"CharStart":8,"LineEnd":45,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone372.java","labeltext":"noncore-diff1","codeSnippet":"    while (true) {\n        game.move ();","LineStart":27,"CharStart":4,"LineEnd":28,"CharEnd":21,"status":"noncore-diff"},{"fileName":"Clone372.java","labeltext":"noncore-diff1","codeSnippet":"}","LineStart":46,"CharStart":4,"LineEnd":46,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone372.java","labeltext":"noncore-diff1","codeSnippet":"    Game game = new Game ();\n    JFrame frame = new JFrame (\"Test\");","LineStart":16,"CharStart":4,"LineEnd":17,"CharEnd":39,"status":"noncore-diff"},{"fileName":"Clone375.java","labeltext":"core-diff1","codeSnippet":"            while ((inputLine = in.readLine ()) != null) {\n                System.out.println (\"Received: \" + inputLine);\n                try {\n                    long pauseCommand = Long.parseLong (inputLine);\n                    pause = pauseCommand;\n                    out.println (\"OK, pausing for \" + inputLine + \" ms\");\n                } catch (NumberFormatException e) {\n                }\n                if (inputLine.equals (\"BYE\")) {\n                    out.println (\"OK, bye!\");\n                    break;\n                }\n                if (inputLine.equals (\"STOP\")) {\n                    out.println (\"OK, stopping!\");\n                    System.exit (1);\n                }\n            }","LineStart":33,"CharStart":12,"LineEnd":49,"CharEnd":13,"status":"core-diff"},{"fileName":"Clone375.java","labeltext":"core-diff2","codeSnippet":"while (appRunning) {","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":24,"status":"core-diff"},{"fileName":"Clone375.java","labeltext":"core-diff2","codeSnippet":"        try {\n            Thread.sleep (1000);\n        } catch (InterruptedException e) {\n        }\n        if (pause > 0) {\n            System.out.println (\"App pausing for \" + pause + \" ms\");\n            try {\n                Thread.sleep (pause);\n            } catch (InterruptedException e) {\n            }\n            pause = 0;\n        }\n    }","LineStart":11,"CharStart":8,"LineEnd":23,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone375.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"App running...\");","LineStart":10,"CharStart":8,"LineEnd":10,"CharEnd":46,"status":"noncore-diff"},{"fileName":"Clone375.java","labeltext":"noncore-diff2","codeSnippet":"        System.out.println (\"New Communication Thread Started\");\n        try {\n            PrintWriter out = new PrintWriter (clientSocket.getOutputStream (), true);\n            BufferedReader in = new BufferedReader (new InputStreamReader (clientSocket.getInputStream ()));\n            String inputLine;","LineStart":28,"CharStart":8,"LineEnd":32,"CharEnd":29,"status":"noncore-diff"},{"fileName":"Clone375.java","labeltext":"noncore-diff2","codeSnippet":"            out.close ();\n            in.close ();\n            clientSocket.close ();\n        } catch (IOException e) {\n            System.err.println (\"Problem with Communication Server\");\n            System.exit (1);\n        }","LineStart":50,"CharStart":12,"LineEnd":56,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone376.java","labeltext":"core-sim1","codeSnippet":"        public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {\n            FileVisitResult result = super.visitFile (file, attrs);\n            Path relativize = one.relativize (file);\n            Path fileInOther = other.resolve (relativize);\n            log.debug (\"=== comparing: {} to {}\", file, fileInOther);\n            byte [] otherBytes = Files.readAllBytes (fileInOther);\n            byte [] thisBytes = Files.readAllBytes (file);\n            if (! Arrays.equals (otherBytes, thisTypes)) {\n                throw new AssertionFailedError (file + \" is not equal to \" + fileInOther);\n            }\n            return result;\n        }}","LineStart":11,"CharStart":8,"LineEnd":22,"CharEnd":10,"status":"core-sim"},{"fileName":"Clone376.java","labeltext":"core-sim1","codeSnippet":"        public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {\n            FileVisitResult result = super.visitFile (file, attrs);\n            Path relativize = expected.toPath ().relativize (file);\n            File fileInOther = generated.toPath ().resolve (relativize).toFile ();\n            log.debug (\"=== comparing: \" + file + \" to \" + fileInOther);\n            String expectedContents = FileUtils.readFileToString (file.toFile ());\n            String generatedContents = FileUtils.readFileToString (fileInOther);\n            assertEquals (\"(\" + fileInOther + \")  csv standard doesn't match expected (\" + file + \")!\", expectedContents, generatedContents);\n            return result;\n        }}","LineStart":41,"CharStart":8,"LineEnd":50,"CharEnd":10,"status":"core-sim"},{"fileName":"Clone376.java","labeltext":"noncore-sim1","codeSnippet":"@Override","LineStart":40,"CharStart":9,"LineEnd":40,"CharEnd":18,"status":"noncore-sim"},{"fileName":"Clone376.java","labeltext":"noncore-sim1+","codeSnippet":"@Override","LineStart":10,"CharStart":8,"LineEnd":10,"CharEnd":17,"status":"noncore-sim"},{"fileName":"Clone376.java","labeltext":"noncore-sim2","codeSnippet":"Files.walkFileTree (one, new SimpleFileVisitor < Path > () {","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":64,"status":"noncore-sim"},{"fileName":"Clone376.java","labeltext":"noncore-sim2","codeSnippet":");","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":6,"status":"noncore-sim"},{"fileName":"Clone376.java","labeltext":"noncore-sim2","codeSnippet":"Files.walkFileTree (expected.toPath (), new SimpleFileVisitor < Path > () {","LineStart":31,"CharStart":4,"LineEnd":31,"CharEnd":79,"status":"noncore-sim"},{"fileName":"Clone376.java","labeltext":"noncore-sim2","codeSnippet":");","LineStart":51,"CharStart":4,"LineEnd":51,"CharEnd":6,"status":"noncore-sim"},{"fileName":"Clone379.java","labeltext":"core-diff1","codeSnippet":"    while (true) {\n        int i = counter.get ();\n        if (i > MAX_COUNTER) {\n            break;\n        }\n        if (i % 2 == (odd ? 1 : 0)) {\n            System.out.println (i + (odd ? \" odd\" : \" even\"));\n            counter.incrementAndGet ();\n        } else {\n            emptyCycleCounter ++;\n            Thread.yield ();\n        }\n    }","LineStart":10,"CharStart":4,"LineEnd":22,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone379.java","labeltext":"core-diff2","codeSnippet":"    for (int i = 0;\n    i <= 10; i += 2) {\n        synchronized (o) {\n            try {\n                while (turn) {\n                    o.wait ();\n                }\n            } catch (InterruptedException ie) {\n                ie.printStackTrace ();\n            } finally {\n                System.out.println (i);\n                turn = ! turn;\n                o.notifyAll ();\n            }\n        }\n    }","LineStart":27,"CharStart":4,"LineEnd":42,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone379.java","labeltext":"noncore-diff1","codeSnippet":"int emptyCycleCounter = 0;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":30,"status":"noncore-diff"},{"fileName":"Clone379.java","labeltext":"noncore-diff2","codeSnippet":"System.out.println (\"Finished\" + (odd ? \" odd\" : \" even\") + \" with \" + emptyCycleCounter + \" empty cycles.\");","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":113,"status":"noncore-diff"},{"fileName":"Clone380.java","labeltext":"core-diff1","codeSnippet":"    while (true) {\n        int i = counter.get ();\n        if (i > MAX_COUNTER) {\n            break;\n        }\n        if (i % 2 == (odd ? 1 : 0)) {\n            System.out.println (i + (odd ? \" odd\" : \" even\"));\n            counter.incrementAndGet ();\n        } else {\n            emptyCycleCounter ++;\n            Thread.yield ();\n        }\n    }","LineStart":10,"CharStart":4,"LineEnd":22,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone380.java","labeltext":"core-diff2","codeSnippet":"    for (int i = 1;\n    i < 10; i += 2) {\n        synchronized (o) {\n            try {\n                while (! turn) {\n                    o.wait ();\n                }\n            } catch (InterruptedException ie) {\n                ie.printStackTrace ();\n            } finally {\n                System.out.println (i);\n                turn = ! turn;\n                o.notifyAll ();\n            }\n        }\n    }","LineStart":27,"CharStart":4,"LineEnd":42,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone380.java","labeltext":"noncore-diff2","codeSnippet":"int emptyCycleCounter = 0;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":30,"status":"noncore-diff"},{"fileName":"Clone380.java","labeltext":"noncore-diff2","codeSnippet":"System.out.println (\"Finished\" + (odd ? \" odd\" : \" even\") + \" with \" + emptyCycleCounter + \" empty cycles.\");","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":113,"status":"noncore-diff"},{"fileName":"Clone384.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < input.length; i ++) {\n        for (int j = i + 1;\n        j < input.length; j ++) {\n            if (input [i] > input [j]) {\n                int tmp = input [i];\n                input [i] = input [j];\n                input [j] = tmp;\n            }\n        }\n    }","LineStart":9,"CharStart":4,"LineEnd":19,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone384.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < input.length - 1; i ++) {\n        int k = i + 1;\n        int nxtVal = input [k];\n        while (input [k - 1] > nxtVal) {\n            input [k] = input [k - 1];\n            k --;\n            if (k == 0) break;\n        }\n        input [k] = nxtVal;\n    }","LineStart":27,"CharStart":4,"LineEnd":37,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone384.java","labeltext":"core-sim2","codeSnippet":"    System.out.println (\"Slow sorting is done and the result is :\");\n    for (int i : input) {\n        System.out.print (i + \",\");\n    }","LineStart":20,"CharStart":4,"LineEnd":23,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone384.java","labeltext":"core-sim2","codeSnippet":"    System.out.println (\"Medium sorting is done and the result is :\");\n    for (int i : input) {\n        System.out.print (i + \",\");\n    }","LineStart":38,"CharStart":4,"LineEnd":41,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone397.java","labeltext":"noncore-sim1","codeSnippet":"JFrame main = new JFrame ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":32,"status":"noncore-sim"},{"fileName":"Clone397.java","labeltext":"noncore-sim1","codeSnippet":"JFrame frame = new JFrame (\"GridBagLayout Demo\");","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":53,"status":"noncore-sim"},{"fileName":"Clone397.java","labeltext":"core-sim1","codeSnippet":"p.add (new JLabel (\"test\"), BorderLayout.WEST);","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":51,"status":"core-sim"},{"fileName":"Clone397.java","labeltext":"core-sim1","codeSnippet":"JLabel label = new JLabel (\"Demo Label\");","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone397.java","labeltext":"core-sim1","codeSnippet":"frame.add (label, cons);","LineStart":28,"CharStart":4,"LineEnd":28,"CharEnd":28,"status":"core-sim"},{"fileName":"Clone397.java","labeltext":"core-sim2","codeSnippet":"p.add (new JTextField (\"growable\"), BorderLayout.CENTER);","LineStart":13,"CharStart":4,"LineEnd":13,"CharEnd":61,"status":"core-sim"},{"fileName":"Clone397.java","labeltext":"core-sim2","codeSnippet":"JTextField textField = new JTextField (\"Demo Text\");","LineStart":24,"CharStart":4,"LineEnd":24,"CharEnd":56,"status":"core-sim"},{"fileName":"Clone397.java","labeltext":"core-sim2","codeSnippet":"frame.add (textField, cons);","LineStart":34,"CharStart":4,"LineEnd":34,"CharEnd":32,"status":"core-sim"},{"fileName":"Clone397.java","labeltext":"core-sim3","codeSnippet":"p.add (new JComboBox (), BorderLayout.EAST);","LineStart":14,"CharStart":4,"LineEnd":14,"CharEnd":48,"status":"core-sim"},{"fileName":"Clone397.java","labeltext":"core-sim3","codeSnippet":"JComboBox comboBox = new JComboBox (new String [] {\"hello\", \"goodbye\", \"foo\"});","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":83,"status":"core-sim"},{"fileName":"Clone397.java","labeltext":"core-sim3","codeSnippet":"frame.add (comboBox, cons);","LineStart":40,"CharStart":4,"LineEnd":40,"CharEnd":31,"status":"core-sim"},{"fileName":"Clone397.java","labeltext":"core-sim4","codeSnippet":"    main.pack ();\n    main.setVisible (true);","LineStart":16,"CharStart":4,"LineEnd":17,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone397.java","labeltext":"core-sim4","codeSnippet":"    frame.pack ();\n    frame.setVisible (true);","LineStart":41,"CharStart":4,"LineEnd":42,"CharEnd":28,"status":"core-sim"},{"fileName":"Clone397.java","labeltext":"noncore-diff1","codeSnippet":"p.setLayout (new BorderLayout ());","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":38,"status":"noncore-diff"},{"fileName":"Clone397.java","labeltext":"noncore-diff1","codeSnippet":"frame.setLayout (new GridBagLayout ());","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":43,"status":"noncore-diff"},{"fileName":"Clone397.java","labeltext":"noncore-diff3","codeSnippet":"main.add (p);","LineStart":15,"CharStart":4,"LineEnd":15,"CharEnd":17,"status":"noncore-diff"},{"fileName":"Clone397.java","labeltext":"noncore-diff2","codeSnippet":"JPanel p = new JPanel ();","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":29,"status":"noncore-diff"},{"fileName":"Clone397.java","labeltext":"noncore-diff4","codeSnippet":"    GridBagConstraints cons = new GridBagConstraints ();\n    cons.insets = new Insets (10, 10, 10, 10);","LineStart":26,"CharStart":4,"LineEnd":27,"CharEnd":46,"status":"noncore-diff"},{"fileName":"Clone397.java","labeltext":"noncore-diff5","codeSnippet":"    cons.gridx = 1;\n    cons.weightx = 1;\n    cons.weighty = 1;\n    cons.insets = new Insets (10, 0, 10, 10);\n    cons.fill = GridBagConstraints.HORIZONTAL;","LineStart":29,"CharStart":4,"LineEnd":33,"CharEnd":46,"status":"noncore-diff"},{"fileName":"Clone397.java","labeltext":"noncore-diff5","codeSnippet":"    cons.gridx = 2;\n    cons.weightx = 0;\n    cons.weighty = 0;\n    cons.insets = new Insets (10, 0, 10, 10);\n    cons.fill = GridBagConstraints.NONE;","LineStart":35,"CharStart":4,"LineEnd":39,"CharEnd":40,"status":"noncore-diff"},{"fileName":"Clone399.java","labeltext":"core-sim1","codeSnippet":"    try {\n        java.sql.Driver mySqlDriver = DriverManager.getDriver (\"jdbc:mysql://localhost:3306/\");\n        DriverManager.deregisterDriver (mySqlDriver);\n    } catch (SQLException ex) {\n        logger.info (\"Could not deregister driver:\".concat (ex.getMessage ()));\n    }\n    dataSource = null;","LineStart":26,"CharStart":4,"LineEnd":32,"CharEnd":22,"status":"core-sim"},{"fileName":"Clone399.java","labeltext":"core-sim1","codeSnippet":"        try {\n            DriverManager.deregisterDriver (driver);\n            LOG.info (String.format (\"deregistering jdbc driver: %s\", driver));\n        } catch (SQLException e) {\n            LOG.warn (String.format (\"Error deregistering driver %s\", driver), e);\n        }\n        this.driver = null;","LineStart":10,"CharStart":8,"LineEnd":16,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone399.java","labeltext":"noncore-diff1","codeSnippet":"if (this.driver != null) {","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":30,"status":"noncore-diff"},{"fileName":"Clone399.java","labeltext":"noncore-diff1","codeSnippet":"    } else {\n        LOG.warn (\"No driver to deregister\");\n    }","LineStart":17,"CharStart":4,"LineEnd":19,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone399.java","labeltext":"noncore-diff1","codeSnippet":"    Context initContext = new InitialContext ();\n    Context envContext = (Context) initContext.lookup (\"java:/comp/env\");\n    DataSource datasource = (DataSource) envContext.lookup (\"jdbc/database\");","LineStart":23,"CharStart":4,"LineEnd":25,"CharEnd":77,"status":"noncore-diff"},{"fileName":"Clone105.java","labeltext":"core-sim1","codeSnippet":"    handleSpecialCharacter (character);\n    if (Character.isLowerCase (character)) {\n        typeCharacter (Character.toUpperCase (character));\n    }\n    if (Character.isUpperCase (character)) {\n        typeShiftCharacter (character);\n    }\n    if (Character.isDigit (character)) {\n        typeCharacter (character);\n    }","LineStart":9,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone105.java","labeltext":"core-sim1","codeSnippet":"    for (int ii = 0;\n    ii < text.length (); ii ++) {\n        c = text.charAt (ii);\n        if (c <= 31 || c == 129) {\n            pressControlKey (c);\n        } else {\n            typeAsciiCode (c);\n        }\n    }","LineStart":23,"CharStart":4,"LineEnd":31,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone105.java","labeltext":"noncore-sim1","codeSnippet":"char c;","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":11,"status":"noncore-sim"},{"fileName":"Clone400.java","labeltext":"core-sim1","codeSnippet":"        try {\n            DriverManager.deregisterDriver (driver);\n            LOG.info (String.format (\"deregistering jdbc driver: %s\", driver));\n        } catch (SQLException e) {\n            LOG.warn (String.format (\"Error deregistering driver %s\", driver), e);\n        }","LineStart":10,"CharStart":8,"LineEnd":15,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone400.java","labeltext":"core-sim1","codeSnippet":"            try {\n                log.info (\"Deregistering JDBC driver {}\", driver);\n                DriverManager.deregisterDriver (driver);\n            } catch (SQLException ex) {\n                log.error (\"Error deregistering JDBC driver {}\", driver, ex);\n            }","LineStart":28,"CharStart":12,"LineEnd":33,"CharEnd":13,"status":"core-sim"},{"fileName":"Clone400.java","labeltext":"noncore-sim1","codeSnippet":"    } else {\n        LOG.warn (\"No driver to deregister\");\n    }","LineStart":17,"CharStart":4,"LineEnd":19,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone400.java","labeltext":"noncore-sim1","codeSnippet":"if (","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":8,"status":"noncore-sim"},{"fileName":"Clone400.java","labeltext":"noncore-sim1","codeSnippet":") {","LineStart":9,"CharStart":27,"LineEnd":9,"CharEnd":30,"status":"noncore-sim"},{"fileName":"Clone400.java","labeltext":"noncore-sim1","codeSnippet":"if (","LineStart":27,"CharStart":8,"LineEnd":27,"CharEnd":12,"status":"noncore-sim"},{"fileName":"Clone400.java","labeltext":"noncore-sim1","codeSnippet":") {","LineStart":27,"CharStart":54,"LineEnd":27,"CharEnd":57,"status":"noncore-sim"},{"fileName":"Clone400.java","labeltext":"noncore-sim1","codeSnippet":"        } else {\n            log.trace (\"Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader\", driver);\n        }","LineStart":34,"CharStart":8,"LineEnd":36,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone400.java","labeltext":"noncore-diff1","codeSnippet":"this.driver != null","LineStart":9,"CharStart":8,"LineEnd":9,"CharEnd":27,"status":"noncore-diff"},{"fileName":"Clone400.java","labeltext":"noncore-diff1","codeSnippet":"driver.getClass ().getClassLoader () == cl","LineStart":27,"CharStart":12,"LineEnd":27,"CharEnd":54,"status":"noncore-diff"},{"fileName":"Clone400.java","labeltext":"noncore-diff2","codeSnippet":"    ClassLoader cl = Thread.currentThread ().getContextClassLoader ();\n    Enumeration < Driver > drivers = DriverManager.getDrivers ();\n    while (drivers.hasMoreElements ()) {\n        Driver driver = drivers.nextElement ();","LineStart":23,"CharStart":4,"LineEnd":26,"CharEnd":47,"status":"noncore-diff"},{"fileName":"Clone400.java","labeltext":"noncore-diff2","codeSnippet":"}","LineStart":37,"CharStart":4,"LineEnd":37,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone401.java","labeltext":"core-sim1","codeSnippet":"Enumeration < Driver > drivers = DriverManager.getDrivers ();","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":65,"status":"core-sim"},{"fileName":"Clone401.java","labeltext":"core-sim1","codeSnippet":"java.sql.Driver mySqlDriver = DriverManager.getDriver (\"jdbc:mysql://localhost:3306/\");","LineStart":13,"CharStart":8,"LineEnd":13,"CharEnd":95,"status":"core-sim"},{"fileName":"Clone401.java","labeltext":"core-sim2","codeSnippet":"try {","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone401.java","labeltext":"core-sim2","codeSnippet":"        DriverManager.deregisterDriver (mySqlDriver);\n    } catch (SQLException ex) {\n        logger.info (\"Could not deregister driver:\".concat (ex.getMessage ()));\n    }","LineStart":14,"CharStart":8,"LineEnd":17,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone401.java","labeltext":"core-sim2","codeSnippet":"            try {\n                log.info (\"Deregistering JDBC driver {}\", driver);\n                DriverManager.deregisterDriver (driver);\n            } catch (SQLException ex) {\n                log.error (\"Error deregistering JDBC driver {}\", driver, ex);\n            }","LineStart":27,"CharStart":12,"LineEnd":32,"CharEnd":13,"status":"core-sim"},{"fileName":"Clone401.java","labeltext":"core-diff1","codeSnippet":"ClassLoader cl = Thread.currentThread ().getContextClassLoader ();","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":70,"status":"core-diff"},{"fileName":"Clone401.java","labeltext":"core-diff2","codeSnippet":"    while (drivers.hasMoreElements ()) {\n        Driver driver = drivers.nextElement ();","LineStart":24,"CharStart":4,"LineEnd":25,"CharEnd":47,"status":"core-diff"},{"fileName":"Clone401.java","labeltext":"noncore-diff1","codeSnippet":"if (driver.getClass ().getClassLoader () == cl) {","LineStart":26,"CharStart":8,"LineEnd":26,"CharEnd":57,"status":"noncore-diff"},{"fileName":"Clone401.java","labeltext":"noncore-diff2","codeSnippet":"        } else {\n            log.trace (\"Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader\", driver);\n        }","LineStart":33,"CharStart":8,"LineEnd":35,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone401.java","labeltext":"core-diff2","codeSnippet":"}","LineStart":36,"CharStart":4,"LineEnd":36,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone401.java","labeltext":"core-diff3","codeSnippet":"    Context initContext = new InitialContext ();\n    Context envContext = (Context) initContext.lookup (\"java:/comp/env\");\n    DataSource datasource = (DataSource) envContext.lookup (\"jdbc/database\");","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":77,"status":"core-diff"},{"fileName":"Clone401.java","labeltext":"core-diff4","codeSnippet":"dataSource = null;","LineStart":18,"CharStart":4,"LineEnd":18,"CharEnd":22,"status":"core-diff"},{"fileName":"Clone404.java","labeltext":"core-diff1","codeSnippet":"    frame.add (iconPanel);\n    iconPanel.add (firewallButton);\n    iconPanel.add (networkButton);\n    iconPanel.add (printerButton);\n    grid.setBackground (Color.GREEN);\n    frame.setLayout (new GridLayout (1, 2, 3, 3));\n    frame.add (grid);\n    frame.add (iconPanel);\n    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    frame.pack ();\n    frame.setLocationRelativeTo (null);\n    frame.setVisible (true);","LineStart":24,"CharStart":4,"LineEnd":35,"CharEnd":28,"status":"core-diff"},{"fileName":"Clone404.java","labeltext":"noncore-diff1","codeSnippet":"    JFrame frame = new JFrame (\"Application Name\");\n    JPanel iconPanel = new JPanel ();\n    JPanel grid = new JPanel (new FlowLayout ());\n    JButton firewallButton = new JButton (\"Firewall\");\n    JButton networkButton = new JButton (\"Network\");\n    JButton printerButton = new JButton (\"Printer\");","LineStart":18,"CharStart":4,"LineEnd":23,"CharEnd":52,"status":"noncore-diff"},{"fileName":"Clone404.java","labeltext":"core-diff1","codeSnippet":"    EventQueue.invokeLater (new Runnable () {\n        @Override\n        public void run () {\n            display ();\n        }}\n    );","LineStart":9,"CharStart":4,"LineEnd":14,"CharEnd":6,"status":"core-diff"},{"fileName":"Clone406.java","labeltext":"noncore-sim1","codeSnippet":"    Scanner scan = new Scanner (System.in);\n    System.out.print (\"Enter a String : \");\n    str = scan.nextLine ();","LineStart":32,"CharStart":4,"LineEnd":34,"CharEnd":27,"status":"noncore-sim"},{"fileName":"Clone406.java","labeltext":"noncore-sim1","codeSnippet":"    Scanner scan = new Scanner (System.in);\n    System.out.print (\"Enter a String : \");\n    String str = scan.nextLine ();","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":34,"status":"noncore-sim"},{"fileName":"Clone406.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < str.length () - 1; i ++) {\n        digram = str.substring (i, i + 2);\n        if (repetition.contains (digram) || digram.contains (\" \") || digram.length () < 2) continue;\n        int occurances = (str.length () - str.replace (digram, \"\").length ()) / 2;\n        occurances += (str.replaceFirst (\".*?(\" + digram.charAt (0) + \"+).*\", \"$1\").length () - 1) / 2;\n        digrams.add (digram + \":\" + occurances);\n        repetition.add (digram);\n    }\n    Collections.sort (digrams, (s1, s2) -> s1.substring (3, 4).compareTo (s2.substring (3, 4)));","LineStart":15,"CharStart":4,"LineEnd":24,"CharEnd":96,"status":"core-sim"},{"fileName":"Clone406.java","labeltext":"core-sim1","codeSnippet":"    i = str.length ();\n    for (c1 = 'A'; c1 <= 'z'; c1 ++) {\n        for (c2 = 'A'; c2 <= 'z'; c2 ++) {\n            result = new String (new char [] {c1, c2});\n            k = 0;\n            for (j = 0; j < i - 1; j ++) {\n                subString = str.substring (j, j + 2);\n                if (result.equals (subString)) {\n                    k ++;\n                }\n            }\n            if (k > 0) {\n                System.out.println (\"\" + result + \": \" + k);\n            }\n        }\n    }","LineStart":35,"CharStart":4,"LineEnd":50,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone406.java","labeltext":"noncore-diff1","codeSnippet":"    int ci, i, j, k, l = 0;\n    String str, str1, result, subString;\n    char c1, c2, ch;","LineStart":29,"CharStart":4,"LineEnd":31,"CharEnd":20,"status":"noncore-diff"},{"fileName":"Clone406.java","labeltext":"noncore-diff1","codeSnippet":"    ArrayList < String > repetition = new ArrayList < String > ();\n    ArrayList < String > digrams = new ArrayList < String > ();\n    String digram;","LineStart":12,"CharStart":4,"LineEnd":14,"CharEnd":18,"status":"noncore-diff"},{"fileName":"Clone406.java","labeltext":"noncore-diff2","codeSnippet":"System.out.println (digrams);","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":33,"status":"noncore-diff"},{"fileName":"Clone410.java","labeltext":"core-diff1","codeSnippet":"    if (value.length () > 3) {\n        number = Integer.valueOf (value.substring (value.length () - 3), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 100;\n    if (number < 10) {\n        offset = (number % 10) - 1;\n    } else if (number < 20) {\n        offset = (number % 20) - 1;\n    }\n    if (offset != NO_VALUE && offset < TOKENS.length) {\n        buffer.append (TOKENS [offset]);\n    }\n    return buffer.toString ();","LineStart":12,"CharStart":4,"LineEnd":26,"CharEnd":30,"status":"core-diff"},{"fileName":"Clone410.java","labeltext":"core-diff2","codeSnippet":"    if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! highName.isEmpty ()) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! lowName.isEmpty ()) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! lowName.isEmpty ()) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();","LineStart":32,"CharStart":4,"LineEnd":53,"CharEnd":30,"status":"core-diff"},{"fileName":"Clone410.java","labeltext":"noncore-sim1","codeSnippet":"StringBuilder buffer = new StringBuilder ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":48,"status":"noncore-sim"},{"fileName":"Clone410.java","labeltext":"noncore-sim1","codeSnippet":"StringBuilder buffer = new StringBuilder ();","LineStart":30,"CharStart":4,"LineEnd":30,"CharEnd":48,"status":"noncore-sim"},{"fileName":"Clone410.java","labeltext":"noncore-diff1","codeSnippet":"    int offset = NO_VALUE;\n    int number;","LineStart":10,"CharStart":4,"LineEnd":11,"CharEnd":15,"status":"noncore-diff"},{"fileName":"Clone410.java","labeltext":"noncore-diff2","codeSnippet":"String high, low;","LineStart":31,"CharStart":4,"LineEnd":31,"CharEnd":21,"status":"noncore-diff"},{"fileName":"Clone413.java","labeltext":"core-diff1","codeSnippet":"    if (value.length () > 3) {\n        number = Integer.valueOf (value.substring (value.length () - 3), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 100;\n    if (number < 10) {\n        offset = (number % 10) - 1;\n    } else if (number < 20) {\n        offset = (number % 20) - 1;\n    }\n    if (offset != NO_VALUE && offset < TOKENS.length) {\n        buffer.append (TOKENS [offset]);\n    }\n    return buffer.toString ();","LineStart":12,"CharStart":4,"LineEnd":26,"CharEnd":30,"status":"core-diff"},{"fileName":"Clone413.java","labeltext":"core-diff2.","codeSnippet":"    if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (\"\".equals (name)) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || \"\".equals (decimalValue))) {\n        String zeroDecimalValue = \"\";\n        for (int i = 0;\n        i < decimalValue.length (); i ++) {\n            zeroDecimalValue = zeroDecimalValue + \"0\";\n        }\n        if (decimalValue.equals (zeroDecimalValue)) {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (\"zero\").concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        } else {\n            name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n        }\n    }\n    return name;","LineStart":31,"CharStart":4,"LineEnd":59,"CharEnd":16,"status":"core-diff"},{"fileName":"Clone413.java","labeltext":"noncore-diff1","codeSnippet":"    StringBuilder buffer = new StringBuilder ();\n    int offset = NO_VALUE;\n    int number;","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":15,"status":"noncore-diff"},{"fileName":"Clone413.java","labeltext":"noncore-diff2","codeSnippet":"boolean negative = false;","LineStart":30,"CharStart":4,"LineEnd":30,"CharEnd":29,"status":"noncore-diff"},{"fileName":"Clone418.java","labeltext":"noncore-sim1","codeSnippet":"StringBuilder buffer = new StringBuilder ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":48,"status":"noncore-sim"},{"fileName":"Clone418.java","labeltext":"noncore-sim1","codeSnippet":"StringBuilder buffer = new StringBuilder ();","LineStart":33,"CharStart":4,"LineEnd":33,"CharEnd":48,"status":"noncore-sim"},{"fileName":"Clone418.java","labeltext":"core-diff1","codeSnippet":"    if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! highName.isEmpty ()) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! lowName.isEmpty ()) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! lowName.isEmpty ()) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();","LineStart":35,"CharStart":4,"LineEnd":56,"CharEnd":30,"status":"core-diff"},{"fileName":"Clone418.java","labeltext":"core-diff2","codeSnippet":"    if (value.isEmpty ()) {\n        number = 0;\n    } else if (value.length () > 4) {\n        number = Integer.valueOf (value.substring (value.length () - 4), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 1000;\n    if (number >= 100) {\n        buffer.append (unitProcessor.getName (number / 100));\n        buffer.append (SEPARATOR);\n        buffer.append (SCALE.getName (EXPONENT));\n    }\n    String tensName = tensProcessor.getName (number % 100);\n    if (! tensName.isEmpty () && (number >= 100)) {\n        buffer.append (SEPARATOR);\n    }\n    buffer.append (tensName);\n    return buffer.toString ();","LineStart":11,"CharStart":4,"LineEnd":29,"CharEnd":30,"status":"core-diff"},{"fileName":"Clone418.java","labeltext":"noncore-diff1","codeSnippet":"String high, low;","LineStart":34,"CharStart":4,"LineEnd":34,"CharEnd":21,"status":"noncore-diff"},{"fileName":"Clone418.java","labeltext":"noncore-diff2","codeSnippet":"int number;","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":15,"status":"noncore-diff"},{"fileName":"Clone424.java","labeltext":"core-diff1","codeSnippet":"    if (value.startsWith (\"-\")) {\n        negative = true;\n        value = value.substring (1);\n    }\n    int decimals = value.indexOf (\".\");\n    String decimalValue = null;\n    if (0 <= decimals) {\n        decimalValue = value.substring (decimals + 1);\n        value = value.substring (0, decimals);\n    }\n    String name = processor.getName (value);\n    if (name.isEmpty ()) {\n        name = ZERO_TOKEN;\n    } else if (negative) {\n        name = MINUS.concat (SEPARATOR).concat (name);\n    }\n    if (! (null == decimalValue || decimalValue.isEmpty ())) {\n        name = name.concat (SEPARATOR).concat (UNION_AND).concat (SEPARATOR).concat (processor.getName (decimalValue)).concat (SEPARATOR).concat (SCALE.getName (- decimalValue.length ()));\n    }\n    return name;","LineStart":37,"CharStart":4,"LineEnd":56,"CharEnd":16,"status":"core-diff"},{"fileName":"Clone424.java","labeltext":"core-diff2","codeSnippet":"    if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! highName.isEmpty ()) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! lowName.isEmpty ()) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! lowName.isEmpty ()) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();","LineStart":11,"CharStart":4,"LineEnd":32,"CharEnd":30,"status":"core-diff"},{"fileName":"Clone424.java","labeltext":"noncore-diff1","codeSnippet":"    StringBuilder buffer = new StringBuilder ();\n    String high, low;","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":21,"status":"noncore-diff"},{"fileName":"Clone424.java","labeltext":"noncore-diff2","codeSnippet":"boolean negative = false;","LineStart":36,"CharStart":4,"LineEnd":36,"CharEnd":29,"status":"noncore-diff"},{"fileName":"Clone434.java","labeltext":"core-diff1","codeSnippet":"    for (long val : values) {\n        System.out.println (val + \" = \" + processor.getName (val));\n    }\n    for (String strVal : strValues) {\n        System.out.println (strVal + \" = \" + processor.getName (strVal));\n    }\n    StringBuilder bigNumber = new StringBuilder ();\n    for (int d = 0;\n    d < 66; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    bigNumber.append (\".\");\n    for (int d = 0;\n    d < 26; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    System.out.println (bigNumber.toString () + \" = \" + processor.getName (bigNumber.toString ()));","LineStart":12,"CharStart":3,"LineEnd":28,"CharEnd":99,"status":"core-diff"},{"fileName":"Clone434.java","labeltext":"core-diff2","codeSnippet":"    while (num > 0) {\n        if (i == 0) {\n            rem = (int) (num % 1000);\n            printText (rem);\n            num = num / 1000;\n            i ++;\n        } else if (num > 0) {\n            rem = (int) (num % 100);\n            if (rem > 0) text = denom.values () [i - 1] + \" \" + text;\n            printText (rem);\n            num = num / 100;\n            i ++;\n        }\n    }\n    if (i > 0) System.out.println (text);\n    else System.out.println (\"Zero\");","LineStart":37,"CharStart":3,"LineEnd":52,"CharEnd":37,"status":"core-diff"},{"fileName":"Clone434.java","labeltext":"noncore-diff1","codeSnippet":"    processor = new DefaultProcessor ();\n    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};\n    String [] strValues = new String [] {\"0001.2\", \"3.141592\"};","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":63,"status":"noncore-diff"},{"fileName":"Clone434.java","labeltext":"noncore-diff2","codeSnippet":"    System.out.println (\"Enter Number to convert into words\");\n    Scanner sc = new Scanner (System.in);\n    long num = sc.nextInt ();\n    int rem = 0;\n    int i = 0;","LineStart":32,"CharStart":4,"LineEnd":36,"CharEnd":14,"status":"noncore-diff"},{"fileName":"Clone436.java","labeltext":"core-diff1","codeSnippet":"    System.out.println (\"*** \" + FrenchNumberToWords.convert (0));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (9));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (19));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (21));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (28));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (71));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (72));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (80));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (81));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (89));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (90));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (91));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (97));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (100));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (101));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (110));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (120));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (200));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (201));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (232));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (999));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (1000));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (1001));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (10000));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (10001));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (100000));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (2000000));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (3000000000L));\n    System.out.println (\"*** \" + FrenchNumberToWords.convert (2147483647));","LineStart":32,"CharStart":4,"LineEnd":60,"CharEnd":75,"status":"core-diff"},{"fileName":"Clone436.java","labeltext":"core-diff2","codeSnippet":"    for (long val : values) {\n        System.out.println (val + \" = \" + processor.getName (val));\n    }\n    for (String strVal : strValues) {\n        System.out.println (strVal + \" = \" + processor.getName (strVal));\n    }\n    StringBuilder bigNumber = new StringBuilder ();\n    for (int d = 0;\n    d < 66; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    bigNumber.append (\".\");\n    for (int d = 0;\n    d < 26; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    System.out.println (bigNumber.toString () + \" = \" + processor.getName (bigNumber.toString ()));","LineStart":12,"CharStart":4,"LineEnd":28,"CharEnd":99,"status":"core-diff"},{"fileName":"Clone436.java","labeltext":"noncore-diff1","codeSnippet":"    processor = new DefaultProcessor ();\n    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};\n    String [] strValues = new String [] {\"0001.2\", \"3.141592\"};","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":63,"status":"noncore-diff"},{"fileName":"Clone441.java","labeltext":"core-diff1","codeSnippet":"    for (long val : values) {\n        System.out.println (val + \" = \" + processor.getName (val));\n    }\n    for (String strVal : strValues) {\n        System.out.println (strVal + \" = \" + processor.getName (strVal));\n    }\n    StringBuilder bigNumber = new StringBuilder ();\n    for (int d = 0;\n    d < 66; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    bigNumber.append (\".\");\n    for (int d = 0;\n    d < 26; d ++) {\n        bigNumber.append ((char) ((Math.random () * 10) + '0'));\n    }\n    System.out.println (bigNumber.toString () + \" = \" + processor.getName (bigNumber.toString ()));","LineStart":30,"CharStart":4,"LineEnd":46,"CharEnd":99,"status":"core-diff"},{"fileName":"Clone441.java","labeltext":"core-diff1","codeSnippet":"    n = s.nextInt ();\n    if (n <= 0) System.out.print (\"Enter numbers greater than 0\");\n    else {\n        NumberToWord a = new NumberToWord ();\n        System.out.print (\"After conversion number in words is :\");\n        a.pw ((n / 1000000000), \" Hundred\");\n        a.pw ((n / 10000000) % 100, \" crore\");\n        a.pw (((n / 100000) % 100), \" lakh\");\n        a.pw (((n / 1000) % 100), \" thousand\");\n        a.pw (((n / 100) % 10), \" hundred\");\n        a.pw ((n % 100), \" \");\n    }","LineStart":12,"CharStart":4,"LineEnd":23,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone441.java","labeltext":"noncore-diff1","codeSnippet":"    processor = new DefaultProcessor ();\n    long [] values = new long [] {0, 4, 10, 12, 100, 108, 299, 1000, 1003, 2040, 45213, 100000, 100005, 100010, 202020, 202022, 999999, 1000000, 1000001, 10000000, 10000007, 99999999, Long.MAX_VALUE, Long.MIN_VALUE};\n    String [] strValues = new String [] {\"0\", \"1.30\", \"0001.00\", \"3.141592\"};","LineStart":27,"CharStart":4,"LineEnd":29,"CharEnd":77,"status":"noncore-diff"},{"fileName":"Clone441.java","labeltext":"noncore-diff2","codeSnippet":"    int n = 0;\n    Scanner s = new Scanner (System.in);\n    System.out.print (\"Enter an integer number: \");","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":51,"status":"noncore-diff"},{"fileName":"Clone447.java","labeltext":"core-diff1","codeSnippet":"    if (value.length () > 3) {\n        number = Integer.valueOf (value.substring (value.length () - 3), 10);\n    } else {\n        number = Integer.valueOf (value, 10);\n    }\n    number %= 100;\n    if (number >= 20) {\n        buffer.append (TOKENS [(number / 10) - 2]);\n        number %= 10;\n        tensFound = true;\n    } else {\n        number %= 20;\n    }\n    if (number != 0) {\n        if (tensFound) {\n            buffer.append (UNION_SEPARATOR);\n        }\n        buffer.append (unitProcessor.getName (number));\n    }\n    return buffer.toString ();","LineStart":12,"CharStart":4,"LineEnd":31,"CharEnd":30,"status":"core-diff"},{"fileName":"Clone447.java","labeltext":"core-diff1","codeSnippet":"    if (value.length () < getPartDivider ()) {\n        high = \"\";\n        low = value;\n    } else {\n        int index = value.length () - getPartDivider ();\n        high = value.substring (0, index);\n        low = value.substring (index);\n    }\n    String highName = getHighProcessor ().getName (high);\n    String lowName = getLowProcessor ().getName (low);\n    if (! \"\".equals (highName)) {\n        buffer.append (highName);\n        buffer.append (SEPARATOR);\n        buffer.append (getToken ());\n        if (! \"\".equals (lowName)) {\n            buffer.append (SEPARATOR);\n        }\n    }\n    if (! \"\".equals (lowName)) {\n        buffer.append (lowName);\n    }\n    return buffer.toString ();","LineStart":37,"CharStart":4,"LineEnd":58,"CharEnd":30,"status":"core-diff"},{"fileName":"Clone447.java","labeltext":"noncore-sim1","codeSnippet":"StringBuilder buffer = new StringBuilder ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":48,"status":"noncore-sim"},{"fileName":"Clone447.java","labeltext":"noncore-sim1","codeSnippet":"StringBuilder buffer = new StringBuilder ();","LineStart":35,"CharStart":4,"LineEnd":35,"CharEnd":48,"status":"noncore-sim"},{"fileName":"Clone447.java","labeltext":"noncore-diff1","codeSnippet":"    boolean tensFound = false;\n    int number;","LineStart":10,"CharStart":4,"LineEnd":11,"CharEnd":15,"status":"noncore-diff"},{"fileName":"Clone447.java","labeltext":"noncore-diff2","codeSnippet":"String high, low;","LineStart":36,"CharStart":4,"LineEnd":36,"CharEnd":21,"status":"noncore-diff"},{"fileName":"Clone452.java","labeltext":"noncore-sim1","codeSnippet":"int len = args.length;","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":26,"status":"noncore-sim"},{"fileName":"Clone452.java","labeltext":"noncore-sim1","codeSnippet":"int len = args.length;","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":26,"status":"noncore-sim"},{"fileName":"Clone452.java","labeltext":"core-sim1","codeSnippet":"    if (len == 0) {\n        sopl (\"\\n\\tUsage: java echo <args:String[]>\");\n        System.exit (0);\n    }","LineStart":26,"CharStart":4,"LineEnd":29,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone452.java","labeltext":"core-sim1","codeSnippet":"    if (len <= 0) {\n        System.out.println (\" ERROR: Please input a value of 1-5\");\n        System.exit (0);\n    }","LineStart":12,"CharStart":4,"LineEnd":15,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone452.java","labeltext":"core-diff1","codeSnippet":"    sop (\"\\n\\t\");\n    for (int i = 0;\n    i < len; i ++) {\n        sop (args [i] + \" \");\n    }\n    sop (\"\\n\\t\");\n    while (len > 0) sop (args [args.length - len --] + \" \");\n    sopl (\"\");","LineStart":30,"CharStart":4,"LineEnd":37,"CharEnd":14,"status":"core-diff"},{"fileName":"Clone452.java","labeltext":"core-diff2","codeSnippet":"    for (int i = 0;\n    i <= row; i ++) {\n        for (j = 0; j <= i; j ++) System.out.print (\"*\");\n        System.out.println (\"\");\n    }","LineStart":17,"CharStart":4,"LineEnd":21,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone452.java","labeltext":"noncore-diff1","codeSnippet":"    System.out.println (\"Enter no of rows to be printed\");\n    int row = Integer.parseInt (args [0]);","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":42,"status":"noncore-diff"},{"fileName":"Clone452.java","labeltext":"noncore-diff2","codeSnippet":"int j;","LineStart":16,"CharStart":4,"LineEnd":16,"CharEnd":10,"status":"noncore-diff"},{"fileName":"Clone455.java","labeltext":"noncore-sim1","codeSnippet":"    AtomicInteger counter = new AtomicInteger ();\n    ExecutorService pool = Executors.newFixedThreadPool (4);","LineStart":39,"CharStart":4,"LineEnd":40,"CharEnd":60,"status":"noncore-sim"},{"fileName":"Clone455.java","labeltext":"noncore-sim1","codeSnippet":"    final AtomicInteger outputCount = new AtomicInteger (0);\n    ExecutorService threadPool = Executors.newFixedThreadPool (THREADS);","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":72,"status":"noncore-sim"},{"fileName":"Clone455.java","labeltext":"noncore-sim2","codeSnippet":"threadPool.shutdownNow ();","LineStart":34,"CharStart":4,"LineEnd":34,"CharEnd":30,"status":"noncore-sim"},{"fileName":"Clone455.java","labeltext":"noncore-sim2","codeSnippet":"pool.shutdown ();","LineStart":45,"CharStart":4,"LineEnd":45,"CharEnd":21,"status":"noncore-sim"},{"fileName":"Clone455.java","labeltext":"core-diff1","codeSnippet":"    for (int i = 0;\n    i < 4; ++ i) {\n        pool.execute (new MyTask (counter));\n    }","LineStart":41,"CharStart":4,"LineEnd":44,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone455.java","labeltext":"core-diff2","codeSnippet":"pool.awaitTermination (1, TimeUnit.HOURS);","LineStart":46,"CharStart":4,"LineEnd":46,"CharEnd":46,"status":"core-diff"},{"fileName":"Clone455.java","labeltext":"core-diff3","codeSnippet":"    for (int i = 0;\n    i < THREADS; i ++) {\n        tasks.add (new Callable < Object > () {\n            private SecureRandom rand = new SecureRandom ();\n            private String task () {\n                return rand.nextDouble () > 0.5 ? Thread.currentThread ().getName () : null;\n            }@Override\n            public Object call () {\n                for (int i;\n                (i = outputCount.get ()) < TASKS;) {\n                    String output = task ();\n                    if (output != null) {\n                        if ((i = outputCount.incrementAndGet ()) < TASKS) {\n                            System.out.println (output + \": \" + i);\n                        }\n                    }\n                }\n                return null;\n            }}\n        );\n    }\n    threadPool.invokeAll (tasks);","LineStart":12,"CharStart":4,"LineEnd":33,"CharEnd":33,"status":"core-diff"},{"fileName":"Clone455.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"done\");","LineStart":35,"CharStart":4,"LineEnd":35,"CharEnd":32,"status":"noncore-diff"},{"fileName":"Clone455.java","labeltext":"noncore-diff2","codeSnippet":"Collection < Callable < Object > > tasks = new ArrayList < > (THREADS);","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":75,"status":"noncore-diff"},{"fileName":"Clone457.java","labeltext":"core-diff1","codeSnippet":"    ExecutorService pool = Executors.newFixedThreadPool (4);\n    for (int i = 0; i < 4; ++ i) {\n        pool.execute (new MyTask (counter));\n    }\n    pool.shutdown ();\n    pool.awaitTermination (1, TimeUnit.HOURS);","LineStart":23,"CharStart":4,"LineEnd":28,"CharEnd":46,"status":"core-diff"},{"fileName":"Clone457.java","labeltext":"noncore-diff1","codeSnippet":"AtomicInteger counter = new AtomicInteger ();","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":49,"status":"noncore-diff"},{"fileName":"Clone457.java","labeltext":"core-diff2","codeSnippet":"    ExecutorService service = Executors.newCachedThreadPool ();\n    for (int i = 0; i < 4; i ++) {\n        service.execute (new CountDownTask (theLatch, output, random));\n    }\n    theLatch.await (1, TimeUnit.MINUTES);\n    service.shutdown ();","LineStart":12,"CharStart":3,"LineEnd":17,"CharEnd":24,"status":"core-diff"},{"fileName":"Clone457.java","labeltext":"noncore-diff2","codeSnippet":"    CountDownLatch theLatch = new CountDownLatch (100);\n    List < String > output = Collections.synchronizedList (new ArrayList < String > ());\n    SecureRandom random = new SecureRandom ();","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":46,"status":"noncore-diff"},{"fileName":"Clone457.java","labeltext":"noncore-diff3","codeSnippet":"System.out.println (output.size ());","LineStart":18,"CharStart":4,"LineEnd":18,"CharEnd":40,"status":"noncore-diff"},{"fileName":"Clone459.java","labeltext":"core-sim1","codeSnippet":"String output = task ();","LineStart":25,"CharStart":12,"LineEnd":25,"CharEnd":36,"status":"core-sim"},{"fileName":"Clone459.java","labeltext":"core-sim1","codeSnippet":"String output = task ();","LineStart":10,"CharStart":8,"LineEnd":10,"CharEnd":32,"status":"core-sim"},{"fileName":"Clone459.java","labeltext":"core-sim2","codeSnippet":"        if (output != null) {\n            int count = counter.getAndIncrement ();\n            System.out.println (output);\n            if (count >= 100) {\n                break;\n            }\n        }","LineStart":11,"CharStart":8,"LineEnd":17,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone459.java","labeltext":"core-sim2","codeSnippet":"            if (output != null) {\n                int counter = outputCount.getAndIncrement ();\n                System.out.println (counter);\n                if (counter >= 100) {\n                    break;\n                }\n            }","LineStart":27,"CharStart":12,"LineEnd":33,"CharEnd":13,"status":"core-sim"},{"fileName":"Clone459.java","labeltext":"noncore-sim1","codeSnippet":"while (true) {","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":18,"status":"noncore-sim"},{"fileName":"Clone459.java","labeltext":"noncore-sim1","codeSnippet":"}","LineStart":37,"CharStart":4,"LineEnd":37,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone459.java","labeltext":"noncore-sim1","codeSnippet":"while (true) {","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":18,"status":"noncore-sim"},{"fileName":"Clone459.java","labeltext":"noncore-sim1","codeSnippet":"}","LineStart":18,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone459.java","labeltext":"noncore-diff1","codeSnippet":"        try {\n            Object expensiveObject = expensiveObjects.take ();","LineStart":23,"CharStart":8,"LineEnd":24,"CharEnd":62,"status":"noncore-diff"},{"fileName":"Clone459.java","labeltext":"noncore-diff1","codeSnippet":"        } catch (InterruptedException e) {\n            System.out.println (\"Error!\");\n        }","LineStart":34,"CharStart":8,"LineEnd":36,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone459.java","labeltext":"noncore-diff1","codeSnippet":"expensiveObjects.put (expensiveObject);","LineStart":26,"CharStart":12,"LineEnd":26,"CharEnd":51,"status":"noncore-diff"},{"fileName":"Clone463.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < length; i ++) {\n        int c = RANDOM.nextInt (62);\n        if (c <= 9) {\n            sb.append (String.valueOf (c));\n        } else if (c < 36) {\n            sb.append ((char) ('a' + c - 10));\n        } else {\n            sb.append ((char) ('A' + c - 36));\n        }\n    }\n    return sb.toString ();","LineStart":10,"CharStart":4,"LineEnd":21,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone463.java","labeltext":"core-diff1","codeSnippet":"    if (length < 1) {\n        throw new IllegalArgumentException (\"length must be greater than 0\");\n    }","LineStart":25,"CharStart":4,"LineEnd":27,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone463.java","labeltext":"core-sim1","codeSnippet":"    for (int idx = 0;\n    idx < buf.length; ++ idx) {\n        buf [idx] = symbols [RANDOM.nextInt (symbols.length)];\n    }\n    return shuffle (new String (buf));","LineStart":29,"CharStart":4,"LineEnd":33,"CharEnd":38,"status":"core-sim"},{"fileName":"Clone463.java","labeltext":"noncore-diff1","codeSnippet":"StringBuilder sb = new StringBuilder (length);","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":50,"status":"noncore-diff"},{"fileName":"Clone463.java","labeltext":"noncore-diff2","codeSnippet":"final char [] buf = new char [length];","LineStart":28,"CharStart":4,"LineEnd":28,"CharEnd":42,"status":"noncore-diff"},{"fileName":"Clone464.java","labeltext":"core-sim1","codeSnippet":"URI uri = ResourceWalker.class.getResource (\"/resources\").toURI ();","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":71,"status":"core-sim"},{"fileName":"Clone464.java","labeltext":"core-sim1","codeSnippet":"URI uri = ResourceWalker.class.getResource (\"/resources\").toURI ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":71,"status":"core-sim"},{"fileName":"Clone464.java","labeltext":"core-sim2","codeSnippet":"uri.getScheme ().equals (\"jar\")","LineStart":27,"CharStart":34,"LineEnd":27,"CharEnd":65,"status":"core-sim"},{"fileName":"Clone464.java","labeltext":"core-sim2","codeSnippet":"uri.getScheme ().equals (\"jar\")","LineStart":11,"CharStart":8,"LineEnd":11,"CharEnd":39,"status":"core-sim"},{"fileName":"Clone464.java","labeltext":"core-sim3","codeSnippet":"FileSystems.newFileSystem (uri, Collections.< String, Object > emptyMap ());","LineStart":12,"CharStart":32,"LineEnd":12,"CharEnd":108,"status":"core-sim"},{"fileName":"Clone464.java","labeltext":"core-sim3","codeSnippet":"FileSystems.newFileSystem (uri, Collections.< String, Object > emptyMap ())","LineStart":27,"CharStart":68,"LineEnd":27,"CharEnd":143,"status":"core-sim"},{"fileName":"Clone464.java","labeltext":"core-sim4","codeSnippet":"Path myPath = Paths.get (uri);","LineStart":28,"CharStart":8,"LineEnd":28,"CharEnd":38,"status":"core-sim"},{"fileName":"Clone464.java","labeltext":"core-sim4","codeSnippet":"myPath = Paths.get (uri);","LineStart":15,"CharStart":8,"LineEnd":15,"CharEnd":33,"status":"core-sim"},{"fileName":"Clone464.java","labeltext":"core-sim5","codeSnippet":"    Stream < Path > walk = Files.walk (myPath, 1);\n    for (Iterator < Path > it = walk.iterator ();\n    it.hasNext ();) {\n        System.out.println (it.next ());\n    }","LineStart":17,"CharStart":4,"LineEnd":21,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone464.java","labeltext":"core-sim5","codeSnippet":"        Files.walkFileTree (myPath, new SimpleFileVisitor < Path > () {\n            @Override\n            public FileVisitResult visitFile (Path file, BasicFileAttributes attrs) throws IOException {\n                System.out.println (file);\n                return FileVisitResult.CONTINUE;\n            }}\n        );","LineStart":29,"CharStart":8,"LineEnd":35,"CharEnd":10,"status":"core-sim"},{"fileName":"Clone464.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"Starting from: \" + uri);","LineStart":26,"CharStart":4,"LineEnd":26,"CharEnd":49,"status":"noncore-diff"},{"fileName":"Clone464.java","labeltext":"noncore-diff2","codeSnippet":"try (FileSystem fileSystem = (","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":34,"status":"noncore-diff"},{"fileName":"Clone464.java","labeltext":"noncore-diff2","codeSnippet":"?","LineStart":27,"CharStart":66,"LineEnd":27,"CharEnd":67,"status":"noncore-diff"},{"fileName":"Clone464.java","labeltext":"noncore-diff2","codeSnippet":": null)) {","LineStart":27,"CharStart":144,"LineEnd":27,"CharEnd":154,"status":"noncore-diff"},{"fileName":"Clone464.java","labeltext":"noncore-diff2","codeSnippet":"}","LineStart":36,"CharStart":4,"LineEnd":36,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone464.java","labeltext":"noncore-diff3","codeSnippet":"Path myPath;","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":16,"status":"noncore-diff"},{"fileName":"Clone464.java","labeltext":"noncore-diff3","codeSnippet":"if (","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":8,"status":"noncore-diff"},{"fileName":"Clone464.java","labeltext":"noncore-diff3","codeSnippet":") {","LineStart":11,"CharStart":39,"LineEnd":11,"CharEnd":42,"status":"noncore-diff"},{"fileName":"Clone464.java","labeltext":"noncore-diff3","codeSnippet":"} else {","LineStart":14,"CharStart":4,"LineEnd":14,"CharEnd":12,"status":"noncore-diff"},{"fileName":"Clone464.java","labeltext":"noncore-diff3","codeSnippet":"} else {","LineStart":14,"CharStart":4,"LineEnd":14,"CharEnd":12,"status":"noncore-diff"},{"fileName":"Clone464.java","labeltext":"noncore-diff3","codeSnippet":"}","LineStart":16,"CharStart":4,"LineEnd":16,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone464.java","labeltext":"noncore-diff4","codeSnippet":"FileSystem fileSystem = ","LineStart":12,"CharStart":8,"LineEnd":12,"CharEnd":32,"status":"noncore-diff"},{"fileName":"Clone464.java","labeltext":"noncore-diff5","codeSnippet":"myPath = fileSystem.getPath (\"/resources\");","LineStart":13,"CharStart":8,"LineEnd":13,"CharEnd":51,"status":"noncore-diff"},{"fileName":"Clone467.java","labeltext":"core-sim1","codeSnippet":"    commands.add (\"ping\");\n    commands.add (\"-c\");\n    commands.add (\"5\");\n    commands.add (\"74.125.236.73\");\n    ping.doCommand (commands);","LineStart":11,"CharStart":4,"LineEnd":15,"CharEnd":30,"status":"core-sim"},{"fileName":"Clone467.java","labeltext":"core-sim1","codeSnippet":"        InetAddress address = InetAddress.getByName (\"192.168.1.103\");\n        boolean reachable = address.isReachable (10000);","LineStart":20,"CharStart":8,"LineEnd":21,"CharEnd":56,"status":"core-sim"},{"fileName":"Clone467.java","labeltext":"noncore-diff1","codeSnippet":"try {","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone467.java","labeltext":"noncore-diff1","codeSnippet":"        System.out.println (\"Is host reachable? \" + reachable);\n    } catch (Exception e) {\n        e.printStackTrace ();\n    }","LineStart":22,"CharStart":8,"LineEnd":25,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone467.java","labeltext":"noncore-diff2","codeSnippet":"    JavaPingExampleProgram ping = new JavaPingExampleProgram ();\n    List < String > commands = new ArrayList < String > ();","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":59,"status":"noncore-diff"},{"fileName":"Clone468.java","labeltext":"core-sim1","codeSnippet":"    commands.add (\"ping\");\n    commands.add (\"-c\");\n    commands.add (\"5\");\n    commands.add (\"74.125.236.73\");\n    ping.doCommand (commands);","LineStart":11,"CharStart":4,"LineEnd":15,"CharEnd":30,"status":"core-sim"},{"fileName":"Clone468.java","labeltext":"core-sim1","codeSnippet":"inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":65,"status":"core-sim"},{"fileName":"Clone468.java","labeltext":"core-sim1","codeSnippet":"    System.out.println (inet.isReachable (5000) ? \"Host is reachable\" : \"Host is NOT reachable\");\n    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});","LineStart":22,"CharStart":4,"LineEnd":23,"CharEnd":83,"status":"core-sim"},{"fileName":"Clone468.java","labeltext":"core-sim2","codeSnippet":"    System.out.println (inet.isReachable (5000) ? \"Host is reachable\" : \"Host is NOT reachable\");\n}","LineStart":25,"CharStart":4,"LineEnd":26,"CharEnd":1,"status":"core-sim"},{"fileName":"Clone468.java","labeltext":"noncore-diff1","codeSnippet":"    JavaPingExampleProgram ping = new JavaPingExampleProgram ();\n    List < String > commands = new ArrayList < String > ();","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":59,"status":"noncore-diff"},{"fileName":"Clone468.java","labeltext":"noncore-diff2","codeSnippet":"InetAddress inet;","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":21,"status":"noncore-diff"},{"fileName":"Clone468.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"Sending Ping Request to \" + inet);","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":59,"status":"noncore-diff"},{"fileName":"Clone468.java","labeltext":"noncore-diff2","codeSnippet":"System.out.println (\"Sending Ping Request to \" + inet);","LineStart":24,"CharStart":4,"LineEnd":24,"CharEnd":59,"status":"noncore-diff"},{"fileName":"Clone469.java","labeltext":"core-sim1","codeSnippet":"        InetAddress address = InetAddress.getByName (\"192.168.1.103\");\n        boolean reachable = address.isReachable (10000);","LineStart":10,"CharStart":8,"LineEnd":11,"CharEnd":56,"status":"core-sim"},{"fileName":"Clone469.java","labeltext":"core-sim1","codeSnippet":"inet = InetAddress.getByAddress (new byte [] {127, 0, 0, 1});","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":65,"status":"core-sim"},{"fileName":"Clone469.java","labeltext":"core-sim2","codeSnippet":"    System.out.println (inet.isReachable (5000) ? \"Host is reachable\" : \"Host is NOT reachable\");\n    inet = InetAddress.getByAddress (new byte [] {(byte) 173, (byte) 194, 32, 38});","LineStart":22,"CharStart":4,"LineEnd":23,"CharEnd":83,"status":"core-sim"},{"fileName":"Clone469.java","labeltext":"core-sim1","codeSnippet":"System.out.println (inet.isReachable (5000) ? \"Host is reachable\" : \"Host is NOT reachable\");","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":97,"status":"core-sim"},{"fileName":"Clone469.java","labeltext":"noncore-diff1","codeSnippet":"try {","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone469.java","labeltext":"noncore-diff1","codeSnippet":"        System.out.println (\"Is host reachable? \" + reachable);\n    } catch (Exception e) {\n        e.printStackTrace ();\n    }","LineStart":12,"CharStart":8,"LineEnd":15,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone469.java","labeltext":"noncore-diff2","codeSnippet":"InetAddress inet;","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":21,"status":"noncore-diff"},{"fileName":"Clone469.java","labeltext":"noncore-diff3","codeSnippet":"System.out.println (\"Sending Ping Request to \" + inet);","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":59,"status":"noncore-diff"},{"fileName":"Clone469.java","labeltext":"noncore-diff3","codeSnippet":"System.out.println (\"Sending Ping Request to \" + inet);","LineStart":24,"CharStart":4,"LineEnd":24,"CharEnd":59,"status":"noncore-diff"},{"fileName":"Clone479.java","labeltext":"noncore-sim1","codeSnippet":"super.paintComponent (g);","LineStart":86,"CharStart":4,"LineEnd":86,"CharEnd":29,"status":"noncore-sim"},{"fileName":"Clone479.java","labeltext":"noncore-sim1","codeSnippet":"super.paintComponent (g);","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":29,"status":"noncore-sim"},{"fileName":"Clone479.java","labeltext":"noncore-sim2","codeSnippet":"Graphics2D gg = (Graphics2D) g;","LineStart":87,"CharStart":4,"LineEnd":87,"CharEnd":35,"status":"noncore-sim"},{"fileName":"Clone479.java","labeltext":"noncore-sim2","codeSnippet":"Graphics2D g2 = (Graphics2D) g;","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":35,"status":"noncore-sim"},{"fileName":"Clone479.java","labeltext":"core-sim1","codeSnippet":"gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","LineStart":88,"CharStart":4,"LineEnd":88,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone479.java","labeltext":"core-sim1","codeSnippet":"g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone479.java","labeltext":"core-sim2","codeSnippet":"FontMetrics metrics = g2.getFontMetrics ();","LineStart":35,"CharStart":12,"LineEnd":35,"CharEnd":55,"status":"core-sim"},{"fileName":"Clone479.java","labeltext":"core-sim2","codeSnippet":"FontMetrics metrics = g2.getFontMetrics ();","LineStart":53,"CharStart":16,"LineEnd":53,"CharEnd":59,"status":"core-sim"},{"fileName":"Clone479.java","labeltext":"core-sim2","codeSnippet":"FontMetrics metrics = g.getFontMetrics (font);","LineStart":91,"CharStart":4,"LineEnd":91,"CharEnd":50,"status":"core-sim"},{"fileName":"Clone479.java","labeltext":"core-sim3","codeSnippet":"int labelWidth = metrics.stringWidth (xLabel);","LineStart":54,"CharStart":16,"LineEnd":54,"CharEnd":62,"status":"core-sim"},{"fileName":"Clone479.java","labeltext":"core-sim3","codeSnippet":"int width = metrics.stringWidth (string);","LineStart":92,"CharStart":4,"LineEnd":92,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone479.java","labeltext":"core-sim3","codeSnippet":"int labelWidth = metrics.stringWidth (yLabel);","LineStart":36,"CharStart":12,"LineEnd":36,"CharEnd":58,"status":"core-sim"},{"fileName":"Clone479.java","labeltext":"core-sim4","codeSnippet":"gg.drawString (string, (getWidth () - width) / 2, 11);","LineStart":95,"CharStart":4,"LineEnd":95,"CharEnd":58,"status":"core-sim"},{"fileName":"Clone479.java","labeltext":"core-sim4","codeSnippet":"g2.drawString (xLabel, x0 - labelWidth / 2, y0 + metrics.getHeight () + 3);","LineStart":55,"CharStart":16,"LineEnd":55,"CharEnd":91,"status":"core-sim"},{"fileName":"Clone479.java","labeltext":"core-sim4","codeSnippet":"g2.drawString (yLabel, x0 - labelWidth - 5, y0 + (metrics.getHeight () / 2) - 3);","LineStart":37,"CharStart":12,"LineEnd":37,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone479.java","labeltext":"noncore-diff1","codeSnippet":"    Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Distance (m)\";","LineStart":89,"CharStart":4,"LineEnd":90,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone479.java","labeltext":"noncore-diff2","codeSnippet":"    int height = metrics.getHeight ();\n    gg.setFont (font);","LineStart":93,"CharStart":4,"LineEnd":94,"CharEnd":22,"status":"noncore-diff"},{"fileName":"Clone479.java","labeltext":"core-diff1","codeSnippet":"            }\n            g2.drawLine (x0, y0, x1, y1);\n        }\n    }\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, padding + labelPadding, padding);\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, getWidth () - padding, getHeight () - padding - labelPadding);\n    Stroke oldStroke = g2.getStroke ();\n    g2.setColor (lineColor);\n    g2.setStroke (GRAPH_STROKE);\n    for (int i = 0;\n    i < graphPoints.size () - 1; i ++) {\n        int x1 = graphPoints.get (i).x;\n        int y1 = graphPoints.get (i).y;\n        int x2 = graphPoints.get (i + 1).x;\n        int y2 = graphPoints.get (i + 1).y;\n        g2.drawLine (x1, y1, x2, y2);\n    }\n    g2.setStroke (oldStroke);\n    g2.setColor (pointColor);\n    for (int i = 0;\n    i < graphPoints.size (); i ++) {\n        int x = graphPoints.get (i).x - pointWidth / 2;\n        int y = graphPoints.get (i).y - pointWidth / 2;\n        int ovalW = pointWidth;\n        int ovalH = pointWidth;\n        g2.fillOval (x, y, ovalW, ovalH);\n    }","LineStart":56,"CharStart":12,"LineEnd":82,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone479.java","labeltext":"core-diff1","codeSnippet":"        }\n        g2.drawLine (x0, y0, x1, y1);\n    }\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        if (scores.size () > 1) {\n            int x0 = i * (getWidth () - padding * 2 - labelPadding) / (scores.size () - 1) + padding + labelPadding;\n            int x1 = x0;\n            int y0 = getHeight () - padding - labelPadding;\n            int y1 = y0 - pointWidth;\n            if ((i % ((int) ((scores.size () / 20.0)) + 1)) == 0) {\n                g2.setColor (gridColor);\n                g2.drawLine (x0, getHeight () - padding - labelPadding - 1 - pointWidth, x1, padding);\n                g2.setColor (Color.BLACK);\n                String xLabel = i + \"\";","LineStart":38,"CharStart":8,"LineEnd":52,"CharEnd":39,"status":"core-diff"},{"fileName":"Clone479.java","labeltext":"core-diff1","codeSnippet":"    double xScale = ((double) getWidth () - (2 * padding) - labelPadding) / (scores.size () - 1);\n    double yScale = ((double) getHeight () - 2 * padding - labelPadding) / (getMaxScore () - getMinScore ());\n    List < Point > graphPoints = new ArrayList < > ();\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        int x1 = (int) (i * xScale + padding + labelPadding);\n        int y1 = (int) ((getMaxScore () - scores.get (i)) * yScale + padding);\n        graphPoints.add (new Point (x1, y1));\n    }\n    g2.setColor (Color.WHITE);\n    g2.fillRect (padding + labelPadding, padding, getWidth () - (2 * padding) - labelPadding, getHeight () - 2 * padding - labelPadding);\n    g2.setColor (Color.BLACK);\n    for (int i = 0;\n    i < numberYDivisions + 1; i ++) {\n        int x0 = padding + labelPadding;\n        int x1 = pointWidth + padding + labelPadding;\n        int y0 = getHeight () - ((i * (getHeight () - padding * 2 - labelPadding)) / numberYDivisions + padding + labelPadding);\n        int y1 = y0;\n        if (scores.size () > 0) {\n            g2.setColor (gridColor);\n            g2.drawLine (padding + labelPadding + 1 + pointWidth, y0, getWidth () - padding, y1);\n            g2.setColor (Color.BLACK);\n            String yLabel = ((int) ((getMinScore () + (getMaxScore () - getMinScore ()) * ((i * 1.0) / numberYDivisions)) * 100)) / 100.0 + \"\";","LineStart":12,"CharStart":4,"LineEnd":34,"CharEnd":143,"status":"core-diff"},{"fileName":"Clone481.java","labeltext":"core-sim1","codeSnippet":"    super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","LineStart":86,"CharStart":4,"LineEnd":88,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone481.java","labeltext":"core-sim1","codeSnippet":"    super.paintComponent (g);\n    Graphics2D g2 = (Graphics2D) g;\n    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone481.java","labeltext":"core-sim2","codeSnippet":"    FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);","LineStart":91,"CharStart":4,"LineEnd":92,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone481.java","labeltext":"core-sim2","codeSnippet":"                FontMetrics metrics = g2.getFontMetrics ();\n                int labelWidth = metrics.stringWidth (xLabel);","LineStart":53,"CharStart":16,"LineEnd":54,"CharEnd":62,"status":"core-sim"},{"fileName":"Clone481.java","labeltext":"core-sim2","codeSnippet":"            FontMetrics metrics = g2.getFontMetrics ();\n            int labelWidth = metrics.stringWidth (yLabel);","LineStart":35,"CharStart":12,"LineEnd":36,"CharEnd":58,"status":"core-sim"},{"fileName":"Clone481.java","labeltext":"core-sim3","codeSnippet":"gg.drawString (string, (getWidth () - width) / 2, 11);","LineStart":95,"CharStart":4,"LineEnd":95,"CharEnd":58,"status":"core-sim"},{"fileName":"Clone481.java","labeltext":"core-sim3","codeSnippet":"g2.drawString (xLabel, x0 - labelWidth / 2, y0 + metrics.getHeight () + 3);","LineStart":55,"CharStart":16,"LineEnd":55,"CharEnd":91,"status":"core-sim"},{"fileName":"Clone481.java","labeltext":"core-sim3","codeSnippet":"g2.drawString (yLabel, x0 - labelWidth - 5, y0 + (metrics.getHeight () / 2) - 3);","LineStart":37,"CharStart":12,"LineEnd":37,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone481.java","labeltext":"core-diff1","codeSnippet":"    double xScale = ((double) getWidth () - (2 * padding) - labelPadding) / (scores.size () - 1);\n    double yScale = ((double) getHeight () - 2 * padding - labelPadding) / (getMaxScore () - getMinScore ());\n    List < Point > graphPoints = new ArrayList < > ();\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        int x1 = (int) (i * xScale + padding + labelPadding);\n        int y1 = (int) ((getMaxScore () - scores.get (i)) * yScale + padding);\n        graphPoints.add (new Point (x1, y1));\n    }\n    g2.setColor (Color.WHITE);\n    g2.fillRect (padding + labelPadding, padding, getWidth () - (2 * padding) - labelPadding, getHeight () - 2 * padding - labelPadding);\n    g2.setColor (Color.BLACK);\n    for (int i = 0;\n    i < numberYDivisions + 1; i ++) {\n        int x0 = padding + labelPadding;\n        int x1 = pointWidth + padding + labelPadding;\n        int y0 = getHeight () - ((i * (getHeight () - padding * 2 - labelPadding)) / numberYDivisions + padding + labelPadding);\n        int y1 = y0;\n        if (scores.size () > 0) {\n            g2.setColor (gridColor);\n            g2.drawLine (padding + labelPadding + 1 + pointWidth, y0, getWidth () - padding, y1);\n            g2.setColor (Color.BLACK);\n            String yLabel = ((int) ((getMinScore () + (getMaxScore () - getMinScore ()) * ((i * 1.0) / numberYDivisions)) * 100)) / 100.0 + \"\";","LineStart":12,"CharStart":4,"LineEnd":34,"CharEnd":143,"status":"core-diff"},{"fileName":"Clone481.java","labeltext":"core-diff1","codeSnippet":"        }\n        g2.drawLine (x0, y0, x1, y1);\n    }\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        if (scores.size () > 1) {\n            int x0 = i * (getWidth () - padding * 2 - labelPadding) / (scores.size () - 1) + padding + labelPadding;\n            int x1 = x0;\n            int y0 = getHeight () - padding - labelPadding;\n            int y1 = y0 - pointWidth;\n            if ((i % ((int) ((scores.size () / 20.0)) + 1)) == 0) {\n                g2.setColor (gridColor);\n                g2.drawLine (x0, getHeight () - padding - labelPadding - 1 - pointWidth, x1, padding);\n                g2.setColor (Color.BLACK);\n                String xLabel = i + \"\";","LineStart":38,"CharStart":8,"LineEnd":52,"CharEnd":39,"status":"core-diff"},{"fileName":"Clone481.java","labeltext":"core-diff1","codeSnippet":"            }\n            g2.drawLine (x0, y0, x1, y1);\n        }\n    }\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, padding + labelPadding, padding);\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, getWidth () - padding, getHeight () - padding - labelPadding);\n    Stroke oldStroke = g2.getStroke ();\n    g2.setColor (lineColor);\n    g2.setStroke (GRAPH_STROKE);\n    for (int i = 0;\n    i < graphPoints.size () - 1; i ++) {\n        int x1 = graphPoints.get (i).x;\n        int y1 = graphPoints.get (i).y;\n        int x2 = graphPoints.get (i + 1).x;\n        int y2 = graphPoints.get (i + 1).y;\n        g2.drawLine (x1, y1, x2, y2);\n    }\n    g2.setStroke (oldStroke);\n    g2.setColor (pointColor);\n    for (int i = 0;\n    i < graphPoints.size (); i ++) {\n        int x = graphPoints.get (i).x - pointWidth / 2;\n        int y = graphPoints.get (i).y - pointWidth / 2;\n        int ovalW = pointWidth;\n        int ovalH = pointWidth;\n        g2.fillOval (x, y, ovalW, ovalH);\n    }","LineStart":56,"CharStart":12,"LineEnd":82,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone481.java","labeltext":"noncore-diff1","codeSnippet":"    Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Distance (m)\";","LineStart":89,"CharStart":4,"LineEnd":90,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone481.java","labeltext":"noncore-diff2","codeSnippet":"    int height = metrics.getHeight ();\n    gg.setFont (font);","LineStart":93,"CharStart":4,"LineEnd":94,"CharEnd":22,"status":"noncore-diff"},{"fileName":"Clone482.java","labeltext":"core-sim1","codeSnippet":"    super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone482.java","labeltext":"core-sim1","codeSnippet":"    super.paintComponent (g);\n    Graphics2D g2 = (Graphics2D) g;\n    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","LineStart":22,"CharStart":4,"LineEnd":24,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone482.java","labeltext":"core-sim2","codeSnippet":"    FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);","LineStart":14,"CharStart":4,"LineEnd":15,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone482.java","labeltext":"core-sim2","codeSnippet":"            FontMetrics metrics = g2.getFontMetrics ();\n            int labelWidth = metrics.stringWidth (yLabel);","LineStart":48,"CharStart":12,"LineEnd":49,"CharEnd":58,"status":"core-sim"},{"fileName":"Clone482.java","labeltext":"core-sim2","codeSnippet":"                FontMetrics metrics = g2.getFontMetrics ();\n                int labelWidth = metrics.stringWidth (xLabel);","LineStart":66,"CharStart":16,"LineEnd":67,"CharEnd":62,"status":"core-sim"},{"fileName":"Clone482.java","labeltext":"core-diff1","codeSnippet":"drawRotate (gg, getWidth (), (getHeight () + width) / 2, 270, string);","LineStart":18,"CharStart":4,"LineEnd":18,"CharEnd":74,"status":"core-diff"},{"fileName":"Clone482.java","labeltext":"noncore-diff1","codeSnippet":"    Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Time (s)\";","LineStart":12,"CharStart":4,"LineEnd":13,"CharEnd":31,"status":"noncore-diff"},{"fileName":"Clone482.java","labeltext":"noncore-diff2","codeSnippet":"    int height = metrics.getHeight ();\n    gg.setFont (font);","LineStart":16,"CharStart":4,"LineEnd":17,"CharEnd":22,"status":"noncore-diff"},{"fileName":"Clone482.java","labeltext":"core-diff2","codeSnippet":"    double xScale = ((double) getWidth () - (2 * padding) - labelPadding) / (scores.size () - 1);\n    double yScale = ((double) getHeight () - 2 * padding - labelPadding) / (getMaxScore () - getMinScore ());\n    List < Point > graphPoints = new ArrayList < > ();\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        int x1 = (int) (i * xScale + padding + labelPadding);\n        int y1 = (int) ((getMaxScore () - scores.get (i)) * yScale + padding);\n        graphPoints.add (new Point (x1, y1));\n    }\n    g2.setColor (Color.WHITE);\n    g2.fillRect (padding + labelPadding, padding, getWidth () - (2 * padding) - labelPadding, getHeight () - 2 * padding - labelPadding);\n    g2.setColor (Color.BLACK);\n    for (int i = 0;\n    i < numberYDivisions + 1; i ++) {\n        int x0 = padding + labelPadding;\n        int x1 = pointWidth + padding + labelPadding;\n        int y0 = getHeight () - ((i * (getHeight () - padding * 2 - labelPadding)) / numberYDivisions + padding + labelPadding);\n        int y1 = y0;\n        if (scores.size () > 0) {\n            g2.setColor (gridColor);\n            g2.drawLine (padding + labelPadding + 1 + pointWidth, y0, getWidth () - padding, y1);\n            g2.setColor (Color.BLACK);\n            String yLabel = ((int) ((getMinScore () + (getMaxScore () - getMinScore ()) * ((i * 1.0) / numberYDivisions)) * 100)) / 100.0 + \"\";","LineStart":25,"CharStart":4,"LineEnd":47,"CharEnd":143,"status":"core-diff"},{"fileName":"Clone482.java","labeltext":"core-diff2","codeSnippet":"            g2.drawString (yLabel, x0 - labelWidth - 5, y0 + (metrics.getHeight () / 2) - 3);\n        }\n        g2.drawLine (x0, y0, x1, y1);\n    }\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        if (scores.size () > 1) {\n            int x0 = i * (getWidth () - padding * 2 - labelPadding) / (scores.size () - 1) + padding + labelPadding;\n            int x1 = x0;\n            int y0 = getHeight () - padding - labelPadding;\n            int y1 = y0 - pointWidth;\n            if ((i % ((int) ((scores.size () / 20.0)) + 1)) == 0) {\n                g2.setColor (gridColor);\n                g2.drawLine (x0, getHeight () - padding - labelPadding - 1 - pointWidth, x1, padding);\n                g2.setColor (Color.BLACK);\n                String xLabel = i + \"\";","LineStart":50,"CharStart":12,"LineEnd":65,"CharEnd":39,"status":"core-diff"},{"fileName":"Clone482.java","labeltext":"core-diff2","codeSnippet":"                g2.drawString (xLabel, x0 - labelWidth / 2, y0 + metrics.getHeight () + 3);\n            }\n            g2.drawLine (x0, y0, x1, y1);\n        }\n    }\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, padding + labelPadding, padding);\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, getWidth () - padding, getHeight () - padding - labelPadding);\n    Stroke oldStroke = g2.getStroke ();\n    g2.setColor (lineColor);\n    g2.setStroke (GRAPH_STROKE);\n    for (int i = 0;\n    i < graphPoints.size () - 1; i ++) {\n        int x1 = graphPoints.get (i).x;\n        int y1 = graphPoints.get (i).y;\n        int x2 = graphPoints.get (i + 1).x;\n        int y2 = graphPoints.get (i + 1).y;\n        g2.drawLine (x1, y1, x2, y2);\n    }\n    g2.setStroke (oldStroke);\n    g2.setColor (pointColor);\n    for (int i = 0;\n    i < graphPoints.size (); i ++) {\n        int x = graphPoints.get (i).x - pointWidth / 2;\n        int y = graphPoints.get (i).y - pointWidth / 2;\n        int ovalW = pointWidth;\n        int ovalH = pointWidth;\n        g2.fillOval (x, y, ovalW, ovalH);\n    }","LineStart":68,"CharStart":16,"LineEnd":95,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone485.java","labeltext":"core-sim1","codeSnippet":"    super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone485.java","labeltext":"core-sim1","codeSnippet":"    super.paintComponent (g);\n    Graphics2D g2 = (Graphics2D) g;\n    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","LineStart":22,"CharStart":4,"LineEnd":24,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone485.java","labeltext":"core-sim2","codeSnippet":"    FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);","LineStart":14,"CharStart":4,"LineEnd":15,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone485.java","labeltext":"core-sim2","codeSnippet":"            FontMetrics metrics = g2.getFontMetrics ();\n            int labelWidth = metrics.stringWidth (yLabel);","LineStart":48,"CharStart":12,"LineEnd":49,"CharEnd":58,"status":"core-sim"},{"fileName":"Clone485.java","labeltext":"core-sim2","codeSnippet":"                FontMetrics metrics = g2.getFontMetrics ();\n                int labelWidth = metrics.stringWidth (xLabel);","LineStart":66,"CharStart":16,"LineEnd":67,"CharEnd":62,"status":"core-sim"},{"fileName":"Clone485.java","labeltext":"core-sim3","codeSnippet":"gg.drawString (string, (getWidth () - width) / 2, 11);","LineStart":18,"CharStart":4,"LineEnd":18,"CharEnd":58,"status":"core-sim"},{"fileName":"Clone485.java","labeltext":"core-sim3","codeSnippet":"g2.drawString (yLabel, x0 - labelWidth - 5, y0 + (metrics.getHeight () / 2) - 3);","LineStart":50,"CharStart":12,"LineEnd":50,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone485.java","labeltext":"core-sim3","codeSnippet":"g2.drawString (xLabel, x0 - labelWidth / 2, y0 + metrics.getHeight () + 3);","LineStart":68,"CharStart":16,"LineEnd":68,"CharEnd":91,"status":"core-sim"},{"fileName":"Clone485.java","labeltext":"noncore-diff1","codeSnippet":"    Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Distance (m)\";","LineStart":12,"CharStart":4,"LineEnd":13,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone485.java","labeltext":"noncore-diff2","codeSnippet":"    int height = metrics.getHeight ();\n    gg.setFont (font);","LineStart":16,"CharStart":4,"LineEnd":17,"CharEnd":22,"status":"noncore-diff"},{"fileName":"Clone485.java","labeltext":"core-diff1","codeSnippet":"    double xScale = ((double) getWidth () - (2 * padding) - labelPadding) / (scores.size () - 1);\n    double yScale = ((double) getHeight () - 2 * padding - labelPadding) / (getMaxScore () - getMinScore ());\n    List < Point > graphPoints = new ArrayList < > ();\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        int x1 = (int) (i * xScale + padding + labelPadding);\n        int y1 = (int) ((getMaxScore () - scores.get (i)) * yScale + padding);\n        graphPoints.add (new Point (x1, y1));\n    }\n    g2.setColor (Color.WHITE);\n    g2.fillRect (padding + labelPadding, padding, getWidth () - (2 * padding) - labelPadding, getHeight () - 2 * padding - labelPadding);\n    g2.setColor (Color.BLACK);\n    for (int i = 0;\n    i < numberYDivisions + 1; i ++) {\n        int x0 = padding + labelPadding;\n        int x1 = pointWidth + padding + labelPadding;\n        int y0 = getHeight () - ((i * (getHeight () - padding * 2 - labelPadding)) / numberYDivisions + padding + labelPadding);\n        int y1 = y0;\n        if (scores.size () > 0) {\n            g2.setColor (gridColor);\n            g2.drawLine (padding + labelPadding + 1 + pointWidth, y0, getWidth () - padding, y1);\n            g2.setColor (Color.BLACK);\n            String yLabel = ((int) ((getMinScore () + (getMaxScore () - getMinScore ()) * ((i * 1.0) / numberYDivisions)) * 100)) / 100.0 + \"\";","LineStart":25,"CharStart":4,"LineEnd":47,"CharEnd":143,"status":"core-diff"},{"fileName":"Clone485.java","labeltext":"core-diff1","codeSnippet":"        }\n        g2.drawLine (x0, y0, x1, y1);\n    }\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        if (scores.size () > 1) {\n            int x0 = i * (getWidth () - padding * 2 - labelPadding) / (scores.size () - 1) + padding + labelPadding;\n            int x1 = x0;\n            int y0 = getHeight () - padding - labelPadding;\n            int y1 = y0 - pointWidth;\n            if ((i % ((int) ((scores.size () / 20.0)) + 1)) == 0) {\n                g2.setColor (gridColor);\n                g2.drawLine (x0, getHeight () - padding - labelPadding - 1 - pointWidth, x1, padding);\n                g2.setColor (Color.BLACK);\n                String xLabel = i + \"\";","LineStart":51,"CharStart":8,"LineEnd":65,"CharEnd":39,"status":"core-diff"},{"fileName":"Clone485.java","labeltext":"core-diff1","codeSnippet":"            }\n            g2.drawLine (x0, y0, x1, y1);\n        }\n    }\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, padding + labelPadding, padding);\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, getWidth () - padding, getHeight () - padding - labelPadding);\n    Stroke oldStroke = g2.getStroke ();\n    g2.setColor (lineColor);\n    g2.setStroke (GRAPH_STROKE);\n    for (int i = 0;\n    i < graphPoints.size () - 1; i ++) {\n        int x1 = graphPoints.get (i).x;\n        int y1 = graphPoints.get (i).y;\n        int x2 = graphPoints.get (i + 1).x;\n        int y2 = graphPoints.get (i + 1).y;\n        g2.drawLine (x1, y1, x2, y2);\n    }\n    g2.setStroke (oldStroke);\n    g2.setColor (pointColor);\n    for (int i = 0;\n    i < graphPoints.size (); i ++) {\n        int x = graphPoints.get (i).x - pointWidth / 2;\n        int y = graphPoints.get (i).y - pointWidth / 2;\n        int ovalW = pointWidth;\n        int ovalH = pointWidth;\n        g2.fillOval (x, y, ovalW, ovalH);\n    }","LineStart":69,"CharStart":12,"LineEnd":95,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone487.java","labeltext":"core-sim1","codeSnippet":"    super.paintComponent (g);\n    Graphics2D gg = (Graphics2D) g;\n    gg.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","LineStart":86,"CharStart":4,"LineEnd":88,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone487.java","labeltext":"core-sim1","codeSnippet":"    super.paintComponent (g);\n    Graphics2D g2 = (Graphics2D) g;\n    g2.setRenderingHint (RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone487.java","labeltext":"core-sim2","codeSnippet":"    FontMetrics metrics = g.getFontMetrics (font);\n    int width = metrics.stringWidth (string);","LineStart":91,"CharStart":4,"LineEnd":92,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone487.java","labeltext":"core-sim2","codeSnippet":"                FontMetrics metrics = g2.getFontMetrics ();\n                int labelWidth = metrics.stringWidth (xLabel);","LineStart":53,"CharStart":16,"LineEnd":54,"CharEnd":62,"status":"core-sim"},{"fileName":"Clone487.java","labeltext":"core-sim2","codeSnippet":"            FontMetrics metrics = g2.getFontMetrics ();\n            int labelWidth = metrics.stringWidth (yLabel);","LineStart":35,"CharStart":12,"LineEnd":36,"CharEnd":58,"status":"core-sim"},{"fileName":"Clone487.java","labeltext":"core-sim3","codeSnippet":"g2.drawString (yLabel, x0 - labelWidth - 5, y0 + (metrics.getHeight () / 2) - 3);","LineStart":37,"CharStart":12,"LineEnd":37,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone487.java","labeltext":"core-sim3","codeSnippet":"g2.drawString (xLabel, x0 - labelWidth / 2, y0 + metrics.getHeight () + 3);","LineStart":55,"CharStart":16,"LineEnd":55,"CharEnd":91,"status":"core-sim"},{"fileName":"Clone487.java","labeltext":"core-sim3","codeSnippet":"gg.drawString (string, (getWidth () - width) / 2, 11);","LineStart":95,"CharStart":4,"LineEnd":95,"CharEnd":58,"status":"core-sim"},{"fileName":"Clone487.java","labeltext":"core-diff1","codeSnippet":"            }\n            g2.drawLine (x0, y0, x1, y1);\n        }\n    }\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, padding + labelPadding, padding);\n    g2.drawLine (padding + labelPadding, getHeight () - padding - labelPadding, getWidth () - padding, getHeight () - padding - labelPadding);\n    Stroke oldStroke = g2.getStroke ();\n    g2.setColor (lineColor);\n    g2.setStroke (GRAPH_STROKE);\n    for (int i = 0;\n    i < graphPoints.size () - 1; i ++) {\n        int x1 = graphPoints.get (i).x;\n        int y1 = graphPoints.get (i).y;\n        int x2 = graphPoints.get (i + 1).x;\n        int y2 = graphPoints.get (i + 1).y;\n        g2.drawLine (x1, y1, x2, y2);\n    }\n    g2.setStroke (oldStroke);\n    g2.setColor (pointColor);\n    for (int i = 0;\n    i < graphPoints.size (); i ++) {\n        int x = graphPoints.get (i).x - pointWidth / 2;\n        int y = graphPoints.get (i).y - pointWidth / 2;\n        int ovalW = pointWidth;\n        int ovalH = pointWidth;\n        g2.fillOval (x, y, ovalW, ovalH);\n    }","LineStart":56,"CharStart":12,"LineEnd":82,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone487.java","labeltext":"core-diff1","codeSnippet":"        }\n        g2.drawLine (x0, y0, x1, y1);\n    }\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        if (scores.size () > 1) {\n            int x0 = i * (getWidth () - padding * 2 - labelPadding) / (scores.size () - 1) + padding + labelPadding;\n            int x1 = x0;\n            int y0 = getHeight () - padding - labelPadding;\n            int y1 = y0 - pointWidth;\n            if ((i % ((int) ((scores.size () / 20.0)) + 1)) == 0) {\n                g2.setColor (gridColor);\n                g2.drawLine (x0, getHeight () - padding - labelPadding - 1 - pointWidth, x1, padding);\n                g2.setColor (Color.BLACK);\n                String xLabel = i + \"\";","LineStart":38,"CharStart":8,"LineEnd":52,"CharEnd":39,"status":"core-diff"},{"fileName":"Clone487.java","labeltext":"core-diff1","codeSnippet":"    double xScale = ((double) getWidth () - (2 * padding) - labelPadding) / (scores.size () - 1);\n    double yScale = ((double) getHeight () - 2 * padding - labelPadding) / (getMaxScore () - getMinScore ());\n    List < Point > graphPoints = new ArrayList < > ();\n    for (int i = 0;\n    i < scores.size (); i ++) {\n        int x1 = (int) (i * xScale + padding + labelPadding);\n        int y1 = (int) ((getMaxScore () - scores.get (i)) * yScale + padding);\n        graphPoints.add (new Point (x1, y1));\n    }\n    g2.setColor (Color.WHITE);\n    g2.fillRect (padding + labelPadding, padding, getWidth () - (2 * padding) - labelPadding, getHeight () - 2 * padding - labelPadding);\n    g2.setColor (Color.BLACK);\n    for (int i = 0;\n    i < numberYDivisions + 1; i ++) {\n        int x0 = padding + labelPadding;\n        int x1 = pointWidth + padding + labelPadding;\n        int y0 = getHeight () - ((i * (getHeight () - padding * 2 - labelPadding)) / numberYDivisions + padding + labelPadding);\n        int y1 = y0;\n        if (scores.size () > 0) {\n            g2.setColor (gridColor);\n            g2.drawLine (padding + labelPadding + 1 + pointWidth, y0, getWidth () - padding, y1);\n            g2.setColor (Color.BLACK);\n            String yLabel = ((int) ((getMinScore () + (getMaxScore () - getMinScore ()) * ((i * 1.0) / numberYDivisions)) * 100)) / 100.0 + \"\";","LineStart":12,"CharStart":4,"LineEnd":34,"CharEnd":143,"status":"core-diff"},{"fileName":"Clone487.java","labeltext":"noncore-diff1","codeSnippet":"    Font font = new Font (\"Arial\", Font.PLAIN, 15);\n    String string = \"Distance (m)\";","LineStart":89,"CharStart":4,"LineEnd":90,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone487.java","labeltext":"noncore-diff2","codeSnippet":"    int height = metrics.getHeight ();\n    gg.setFont (font);","LineStart":93,"CharStart":4,"LineEnd":94,"CharEnd":22,"status":"noncore-diff"},{"fileName":"Clone495.java","labeltext":"core-sim1","codeSnippet":"    if (leftRight) {\n        x += deltaX;\n        if (x >= (Ball.this.getWidth () - canvasWidth / 2)) {\n            leftRight = false;\n            updateDelta ();\n        }\n    } else {\n        x += - deltaX;\n        if (x <= 0) {\n            leftRight = true;\n            updateDelta ();\n        }\n    }\n    if (upDown) {\n        y += deltaY;\n        upDown = ! (y >= (Ball.this.getHeight () - canvasHeight / 2));\n        if (y >= (Ball.this.getHeight () - canvasHeight / 2)) {\n            upDown = false;\n            updateDelta ();\n        }\n    } else {\n        y += - deltaY;\n        if (y <= 0) {\n            upDown = true;\n            updateDelta ();\n        }\n    }","LineStart":9,"CharStart":4,"LineEnd":35,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone495.java","labeltext":"core-sim1","codeSnippet":"    if (x >= canvasWidth || x <= 0) {\n        deltaX = - 1 * deltaX;\n    }\n    if (y >= canvasHeight || y <= 0) {\n        deltaY = - 1 * deltaY;\n    }\n    x += deltaX;\n    y += deltaY;","LineStart":39,"CharStart":4,"LineEnd":46,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone497.java","labeltext":"core-sim1","codeSnippet":"    Button buttonOne = (Button) findViewById (R.id.block1);\n    Button buttonTwo = (Button) findViewById (R.id.block2);\n    Button buttonThree = (Button) findViewById (R.id.block3);\n    Button buttonFour = (Button) findViewById (R.id.block4);\n    Button buttonFive = (Button) findViewById (R.id.block5);\n    Button buttonSix = (Button) findViewById (R.id.block6);\n    buttonOne.setOnClickListener (this);\n    buttonTwo.setOnClickListener (this);\n    buttonThree.setOnClickListener (this);\n    buttonFour.setOnClickListener (this);\n    buttonFive.setOnClickListener (this);\n    buttonSix.setOnClickListener (this);","LineStart":41,"CharStart":4,"LineEnd":52,"CharEnd":40,"status":"core-sim"},{"fileName":"Clone497.java","labeltext":"core-sim1","codeSnippet":"    mButton00 = (Button) findViewById (R.id.button_0_0);\n    mButton10 = (Button) findViewById (R.id.button_1_0);\n    mButton01 = (Button) findViewById (R.id.button_0_1);\n    mButton11 = (Button) findViewById (R.id.button_1_1);\n    mButton02 = (Button) findViewById (R.id.button_0_2);\n    mButton12 = (Button) findViewById (R.id.button_1_2);\n    mButton00.setOnClickListener (this);\n    mButton10.setOnClickListener (this);\n    mButton01.setOnClickListener (this);\n    mButton11.setOnClickListener (this);\n    mButton02.setOnClickListener (this);\n    mButton12.setOnClickListener (this);","LineStart":13,"CharStart":4,"LineEnd":24,"CharEnd":40,"status":"core-sim"},{"fileName":"Clone497.java","labeltext":"core-sim2","codeSnippet":"mEditText = (EditText) findViewById (R.id.edit_text);","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":57,"status":"core-sim"},{"fileName":"Clone497.java","labeltext":"core-sim2","codeSnippet":"txtMessage = (TextView) findViewById (R.id.txtMesssage);","LineStart":40,"CharStart":4,"LineEnd":40,"CharEnd":60,"status":"core-sim"},{"fileName":"Clone497.java","labeltext":"noncore-sim1","codeSnippet":"    super.onCreate (savedInstanceState);\n    setContentView (R.layout.activity_main);","LineStart":34,"CharStart":4,"LineEnd":35,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone497.java","labeltext":"noncore-sim1","codeSnippet":"    super.onCreate (savedInstanceState);\n    setContentView (R.layout.buttons);","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":38,"status":"noncore-sim"},{"fileName":"Clone497.java","labeltext":"noncore-diff1","codeSnippet":"initializeLookup ();","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":24,"status":"noncore-diff"},{"fileName":"Clone497.java","labeltext":"noncore-diff2","codeSnippet":"    mHandleInputRunnable = new Runnable () {\n        @Override\n        public void run () {\n            handleAlarmTrigger ();\n        }}\n    ;","LineStart":25,"CharStart":4,"LineEnd":30,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone497.java","labeltext":"noncore-diff3","codeSnippet":"    Window window = this.getWindow ();\n    window.addFlags (WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);\n    window.addFlags (WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);\n    window.addFlags (WindowManager.LayoutParams.FLAG_TURN_SCREEN_ON);","LineStart":36,"CharStart":4,"LineEnd":39,"CharEnd":69,"status":"noncore-diff"},{"fileName":"Clone500.java","labeltext":"noncore-sim1","codeSnippet":"Scanner s = new Scanner (System.in);","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":40,"status":"noncore-sim"},{"fileName":"Clone500.java","labeltext":"noncore-sim1","codeSnippet":"Scanner in = new Scanner (System.in);","LineStart":39,"CharStart":4,"LineEnd":39,"CharEnd":41,"status":"noncore-sim"},{"fileName":"Clone500.java","labeltext":"core-sim1","codeSnippet":"int n = Integer.parseInt (s.nextLine ());","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone500.java","labeltext":"core-sim1","codeSnippet":"int n = in.nextInt ();","LineStart":40,"CharStart":4,"LineEnd":40,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone500.java","labeltext":"noncore-sim2","codeSnippet":"int [] [] a = new int [n] [n];","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":34,"status":"noncore-sim"},{"fileName":"Clone500.java","labeltext":"noncore-sim2","codeSnippet":"int a [] [] = new int [n] [n];","LineStart":41,"CharStart":4,"LineEnd":41,"CharEnd":34,"status":"noncore-sim"},{"fileName":"Clone500.java","labeltext":"core-sim2","codeSnippet":"    for (int i = 0;\n    i < n; i ++) {\n        String str = s.nextLine ();\n        String [] tempArray = str.split (\" \");\n        for (int j = 0;\n        j < n; j ++) {\n            a [i] [j] = Integer.parseInt (tempArray [j]);\n        }\n    }","LineStart":12,"CharStart":4,"LineEnd":20,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone500.java","labeltext":"core-sim2","codeSnippet":"    for (int a_i = 0;\n    a_i < n; a_i ++) {\n        for (int a_j = 0;\n        a_j < n; a_j ++) {\n            a [a_i] [a_j] = in.nextInt ();\n        }\n    }","LineStart":42,"CharStart":4,"LineEnd":48,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone500.java","labeltext":"core-sim3","codeSnippet":"    int sum = 0;\n    for (int i = 0;\n    i < n; i ++) {\n        x += a [i] [i];\n    }\n    for (int p = 0;\n    p < n; p ++) {\n        int k = a.length - p - 1;\n        y += a [p] [a.length - p - 1];\n        k += - 1;\n    }\n    sum = x - y;\n    System.out.println (Math.abs (sum));","LineStart":23,"CharStart":4,"LineEnd":35,"CharEnd":40,"status":"core-sim"},{"fileName":"Clone500.java","labeltext":"noncore-diff1","codeSnippet":"    int x = 0;\n    int y = 0;","LineStart":21,"CharStart":4,"LineEnd":22,"CharEnd":14,"status":"noncore-diff"},{"fileName":"Clone500.java","labeltext":"core-sim3","codeSnippet":"    int l_sum = 0;\n    for (int i = 0;\n    i < n; i ++) {\n        l_sum += a [i] [i];\n    }\n    int r_sum = 0;\n    for (int j = 0;\n    j < n; j ++) {\n        r_sum += a [j] [n - 1 - j];\n    }\n    int sum = l_sum + r_sum;\n    System.out.println (sum);","LineStart":49,"CharStart":4,"LineEnd":60,"CharEnd":29,"status":"core-sim"},{"fileName":"Clone501.java","labeltext":"core-sim1","codeSnippet":"    Scanner in = new Scanner (System.in);\n    int n = in.nextInt ();","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone501.java","labeltext":"core-sim1","codeSnippet":"    Scanner in = new Scanner (System.in);\n    int n = in.nextInt ();","LineStart":46,"CharStart":3,"LineEnd":47,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone501.java","labeltext":"core-sim2","codeSnippet":"    int a [] [] = new int [n] [n];\n    for (int a_i = 0;\n    a_i < n; a_i ++) {\n        for (int a_j = 0;\n        a_j < n; a_j ++) {\n            a [a_i] [a_j] = in.nextInt ();\n        }\n    }","LineStart":15,"CharStart":4,"LineEnd":22,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone501.java","labeltext":"core-sim2","codeSnippet":"    int a [] [] = new int [n] [n];\n    for (int a_i = 0;\n    a_i < n; a_i ++) {\n        for (int a_j = 0;\n        a_j < n; a_j ++) {\n            a [a_i] [a_j] = in.nextInt ();\n        }\n    }","LineStart":48,"CharStart":4,"LineEnd":55,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone501.java","labeltext":"core-diff1","codeSnippet":"    for (int a_i = 0;\n    a_i < n; a_i ++) {\n        boolean leftNotFound = true;\n        boolean rightNotFound = true;\n        rightStartDiagnol = -- rightStartDiagnol;\n        for (int a_j = 0;\n        a_j < n; a_j ++) {\n            if (leftStartDiagnol == a_j && leftNotFound) {\n                leftTotal = leftTotal + a [a_i] [a_j];\n                leftNotFound = false;\n            }\n            if (rightStartDiagnol == a_j && rightNotFound) {\n                rightTotal = rightTotal + a [a_i] [a_j];\n                rightNotFound = false;\n            }\n        }\n        leftStartDiagnol = ++ leftStartDiagnol;\n    }\n    int data = leftTotal - rightTotal;\n    System.out.println (Math.abs (data));","LineStart":23,"CharStart":4,"LineEnd":42,"CharEnd":41,"status":"core-diff"},{"fileName":"Clone501.java","labeltext":"core-diff1","codeSnippet":"    int l_sum = 0;\n    for (int i = 0;\n    i < n; i ++) {\n        l_sum += a [i] [i];\n    }\n    int r_sum = 0;\n    for (int j = 0;\n    j < n; j ++) {\n        r_sum += a [j] [n - 1 - j];\n    }\n    int sum = l_sum + r_sum;\n    System.out.println (sum);","LineStart":56,"CharStart":4,"LineEnd":67,"CharEnd":29,"status":"core-diff"},{"fileName":"Clone501.java","labeltext":"noncore-diff1","codeSnippet":"    int leftStartDiagnol = 0;\n    int rightStartDiagnol = n;\n    int leftTotal = 0;\n    int rightTotal = 0;","LineStart":11,"CharStart":4,"LineEnd":14,"CharEnd":23,"status":"noncore-diff"},{"fileName":"Clone506.java","labeltext":"core-sim1","codeSnippet":"BufferedImage image = ImageIO.read (new File (strfilename + \".jpg\"));","LineStart":10,"CharStart":8,"LineEnd":10,"CharEnd":77,"status":"core-sim"},{"fileName":"Clone506.java","labeltext":"core-sim1","codeSnippet":"image = ImageIO.read (new File (strfilename + \".jpg\"));","LineStart":25,"CharStart":12,"LineEnd":25,"CharEnd":67,"status":"core-sim"},{"fileName":"Clone506.java","labeltext":"core-sim3","codeSnippet":"    ImageIcon icon = new ImageIcon (image);\n    JLlabel.setIcon (icon);","LineStart":30,"CharStart":4,"LineEnd":31,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone506.java","labeltext":"core-sim3","codeSnippet":"        ImageIcon icon = new ImageIcon (\"NOIMAGE.jpg\");\n        label.setIcon (icon);","LineStart":14,"CharStart":8,"LineEnd":15,"CharEnd":29,"status":"core-sim"},{"fileName":"Clone506.java","labeltext":"core-sim3","codeSnippet":"        ImageIcon icon = new ImageIcon (image);\n        label.setIcon (icon);","LineStart":11,"CharStart":8,"LineEnd":12,"CharEnd":29,"status":"core-sim"},{"fileName":"Clone506.java","labeltext":"core-sim1","codeSnippet":"","LineStart":10,"CharStart":30,"LineEnd":10,"CharEnd":30,"status":"core-sim"},{"fileName":"Clone506.java","labeltext":"core-sim1","codeSnippet":"image = ImageIO.read (new File (\"NOIMAGE.jpg\"));","LineStart":22,"CharStart":8,"LineEnd":22,"CharEnd":56,"status":"core-sim"},{"fileName":"Clone506.java","labeltext":"noncore-sim1","codeSnippet":"try {","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone506.java","labeltext":"noncore-sim1","codeSnippet":"} catch (IOException | NullPointerException ex) {","LineStart":13,"CharStart":4,"LineEnd":13,"CharEnd":53,"status":"noncore-sim"},{"fileName":"Clone506.java","labeltext":"noncore-sim1","codeSnippet":"}","LineStart":16,"CharStart":4,"LineEnd":16,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone506.java","labeltext":"noncore-sim1","codeSnippet":"try {","LineStart":24,"CharStart":8,"LineEnd":24,"CharEnd":13,"status":"noncore-sim"},{"fileName":"Clone506.java","labeltext":"core-sim1","codeSnippet":"        } catch (IOException ioe) {\n            ioe.printStackTrace ();\n        }","LineStart":26,"CharStart":7,"LineEnd":28,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone506.java","labeltext":"noncore-diff1","codeSnippet":"    BufferedImage image = null;\n    if (! isImageExist (strfilename)) {","LineStart":20,"CharStart":4,"LineEnd":21,"CharEnd":39,"status":"noncore-diff"},{"fileName":"Clone506.java","labeltext":"noncore-diff1","codeSnippet":"} else {","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":12,"status":"noncore-diff"},{"fileName":"Clone506.java","labeltext":"noncore-diff1","codeSnippet":"}","LineStart":29,"CharStart":4,"LineEnd":29,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone517.java","labeltext":"core-diff1","codeSnippet":"    o_tc.setInput (x);\n    o_tc.getOutput (x);","LineStart":36,"CharStart":4,"LineEnd":37,"CharEnd":23,"status":"core-diff"},{"fileName":"Clone517.java","labeltext":"core-diff1","codeSnippet":"    CodilityTest o_tc1 = new CodilityTest ();\n    o_tc1.getOutput (y);","LineStart":39,"CharStart":4,"LineEnd":40,"CharEnd":24,"status":"core-diff"},{"fileName":"Clone517.java","labeltext":"core-diff3","codeSnippet":"        int runs = len > 1000 * 1000 ? 10 : len >= 100 * 1000 ? 100 : 1000;\n        for (int i = 0;\n        i < runs; i ++) {\n            long time1 = System.nanoTime ();\n            int count = countDistinct (nums);\n            long time2 = System.nanoTime ();\n            int count2 = countDistinctUsingSet (nums);\n            long time3 = System.nanoTime ();\n            timeArray += time2 - time1;\n            timeSet += time3 - time2;\n            assert count == count2;\n        }","LineStart":16,"CharStart":8,"LineEnd":27,"CharEnd":9,"status":"core-diff"},{"fileName":"Clone517.java","labeltext":"core-diff4","codeSnippet":"        i < len; i ++) nums [i] = (int) (Math.random () * (Math.random () * 2001 - 1000));\n        Arrays.sort (nums);","LineStart":12,"CharStart":8,"LineEnd":13,"CharEnd":27,"status":"core-diff"},{"fileName":"Clone517.java","labeltext":"noncore-diff1","codeSnippet":"    for (int len : new int [] {100 * 1000 * 1000, 10 * 1000 * 1000, 1000 * 1000, 100 * 1000, 10 * 1000, 1000}) {\n        int [] nums = new int [len];\n        for (int i = 0;","LineStart":9,"CharStart":3,"LineEnd":11,"CharEnd":23,"status":"noncore-diff"},{"fileName":"Clone517.java","labeltext":"noncore-diff1","codeSnippet":"        long timeArray = 0;\n        long timeSet = 0;","LineStart":14,"CharStart":8,"LineEnd":15,"CharEnd":25,"status":"noncore-diff"},{"fileName":"Clone517.java","labeltext":"noncore-diff1","codeSnippet":"        System.out.printf (\"For %,d numbers, using an array took %,d us on average, using a Set took %,d us on average, ratio=%.1f%n\", len, timeArray / 1000 / runs, timeSet / 1000 / runs, 1.0 * timeSet / timeArray);\n    }","LineStart":28,"CharStart":8,"LineEnd":29,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone517.java","labeltext":"core-diff5","codeSnippet":" CodilityTest o_tc = new CodilityTest ();","LineStart":33,"CharStart":3,"LineEnd":33,"CharEnd":44,"status":"core-diff"},{"fileName":"Clone517.java","labeltext":"noncore-diff2","codeSnippet":"    int [] x = {1, 2, - 3, 4, - 5, - 11, - 2, 3, - 4, 5};\n    int [] y = new int [0];","LineStart":34,"CharStart":4,"LineEnd":35,"CharEnd":27,"status":"noncore-diff"},{"fileName":"Clone517.java","labeltext":"noncore-diff2","codeSnippet":"System.out.println (count);","LineStart":38,"CharStart":4,"LineEnd":38,"CharEnd":31,"status":"noncore-diff"},{"fileName":"Clone524.java","labeltext":"noncore-sim1","codeSnippet":"final StringBuffer result = new StringBuffer ();","LineStart":30,"CharStart":4,"LineEnd":30,"CharEnd":52,"status":"noncore-sim"},{"fileName":"Clone524.java","labeltext":"noncore-sim1","codeSnippet":"StringBuilder message = new StringBuilder ();","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":49,"status":"noncore-sim"},{"fileName":"Clone524.java","labeltext":"noncore-sim2","codeSnippet":"return result.toString ();","LineStart":40,"CharStart":4,"LineEnd":40,"CharEnd":30,"status":"noncore-sim"},{"fileName":"Clone524.java","labeltext":"noncore-sim2","codeSnippet":"return message.toString ();","LineStart":24,"CharStart":4,"LineEnd":24,"CharEnd":31,"status":"noncore-sim"},{"fileName":"Clone524.java","labeltext":"core-diff1","codeSnippet":"    while (regexMatcher.find ()) {\n        if (regexMatcher.group (2) == null) {\n            c = regexMatcher.group (1);\n        } else {\n            c = regexMatcher.group (2);\n        }\n        result.append ((char) ((Integer.parseInt (c) + 'a') - 1));\n    }","LineStart":32,"CharStart":4,"LineEnd":39,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone524.java","labeltext":"core-diff2","codeSnippet":"    for (String code : cipher_char_codes) {\n        int index = Integer.parseInt (code);\n        if (index > 26) {\n            char [] pair = code.toCharArray ();\n            for (int i = 0;\n            i < pair.length; i ++) {\n                int x = Integer.parseInt (\"\" + code.charAt (i));\n                message.append ((char) ('a' + ((x - 1) % 26)));\n            }\n        } else {\n            message.append ((char) ('a' + ((index - 1) % 26)));\n        }\n    }","LineStart":11,"CharStart":4,"LineEnd":23,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone524.java","labeltext":"core-diff3","codeSnippet":"String [] cipher_char_codes = cipher.split (\"#\");","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":53,"status":"core-diff"},{"fileName":"Clone524.java","labeltext":"core-diff4","codeSnippet":"    final Pattern regex = Pattern.compile (\"((\\\\d\\\\d)(#)|(\\\\d))\");\n    final Matcher regexMatcher = regex.matcher (msg);","LineStart":28,"CharStart":4,"LineEnd":29,"CharEnd":53,"status":"core-diff"},{"fileName":"Clone524.java","labeltext":"noncore-diff1","codeSnippet":"String c;","LineStart":31,"CharStart":4,"LineEnd":31,"CharEnd":13,"status":"noncore-diff"},{"fileName":"Clone528.java","labeltext":"core-diff1","codeSnippet":"    if (rowView == null) {\n        LayoutInflater inflater = context.getLayoutInflater ();\n        rowView = inflater.inflate (R.layout.test_row, null);\n        final TestViewHolder viewHolder = new TestViewHolder ();\n        viewHolder.tvCounter = (TextView) rowView.findViewById (R.id.tvCounter);\n        rowView.setTag (viewHolder);\n    }\n    TestViewHolder holder = (TestViewHolder) rowView.getTag ();\n    final TextView tv = holder.tvCounter;\n    CountDownTimer cdt = counters.get (holder.tvCounter);\n    if (cdt != null) {\n        cdt.cancel ();\n        cdt = null;\n    }\n    Date date = values.get (position);\n    long currentDate = Calendar.getInstance ().getTime ().getTime ();\n    long limitDate = date.getTime ();\n    long difference = limitDate - currentDate;\n    cdt = new CountDownTimer (difference, 1000) {\n        @Override\n        public void onTick (long millisUntilFinished) {\n            int days = 0;\n            int hours = 0;\n            int minutes = 0;\n            int seconds = 0;\n            String sDate = \"\";\n            if (millisUntilFinished > DateUtils.DAY_IN_MILLIS) {\n                days = (int) (millisUntilFinished / DateUtils.DAY_IN_MILLIS);\n                sDate += days + \"d\";\n            }\n            millisUntilFinished -= (days * DateUtils.DAY_IN_MILLIS);\n            if (millisUntilFinished > DateUtils.HOUR_IN_MILLIS) {\n                hours = (int) (millisUntilFinished / DateUtils.HOUR_IN_MILLIS);\n            }\n            millisUntilFinished -= (hours * DateUtils.HOUR_IN_MILLIS);\n            if (millisUntilFinished > DateUtils.MINUTE_IN_MILLIS) {\n                minutes = (int) (millisUntilFinished / DateUtils.MINUTE_IN_MILLIS);\n            }\n            millisUntilFinished -= (minutes * DateUtils.MINUTE_IN_MILLIS);\n            if (millisUntilFinished > DateUtils.SECOND_IN_MILLIS) {\n                seconds = (int) (millisUntilFinished / DateUtils.SECOND_IN_MILLIS);\n            }\n            sDate += \" \" + String.format (\"%02d\", hours) + \":\" + String.format (\"%02d\", minutes) + \":\" + String.format (\"%02d\", seconds);\n            tv.setText (sDate.trim ());\n        }@Override\n        public void onFinish () {\n            tv.setText (\"Finished\");\n        }}\n    ;\n    counters.put (tv, cdt);\n    cdt.start ();\n    return rowView;","LineStart":10,"CharStart":4,"LineEnd":61,"CharEnd":19,"status":"core-diff"},{"fileName":"Clone528.java","labeltext":"core-diff2","codeSnippet":"    convertView = mInflater.inflate (R.layout.listview_row, null);\n    TextView tvTimer = (TextView) convertView.findViewById (R.id.textview_timer);\n    TextView tvName = (TextView) convertView.findViewById (R.id.textview_name);\n    Item item = data.get (position);\n    tvName.setText (item.getName ());\n    myTimer.setTimer (tvTimer, item.getTime ());\n    return convertView;","LineStart":65,"CharStart":4,"LineEnd":71,"CharEnd":23,"status":"core-diff"},{"fileName":"Clone528.java","labeltext":"noncore-diff1","codeSnippet":"View rowView = convertView;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":31,"status":"noncore-diff"},{"fileName":"Clone529.java","labeltext":"noncore-sim1","codeSnippet":"try {","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone529.java","labeltext":"noncore-sim1","codeSnippet":"    } catch (InterruptedException e) {\n        e.printStackTrace ();\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }","LineStart":27,"CharStart":4,"LineEnd":31,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone529.java","labeltext":"noncore-sim1","codeSnippet":"try {","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone529.java","labeltext":"noncore-sim1","codeSnippet":"    } catch (Exception e) {\n        e.printStackTrace ();\n    }","LineStart":15,"CharStart":4,"LineEnd":17,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone529.java","labeltext":"core-diff1","codeSnippet":"        int retValue = pro.waitFor ();\n        println (\"Command exit with return value \" + retValue);\n        outStream.close ();\n        outStream = null;","LineStart":23,"CharStart":8,"LineEnd":26,"CharEnd":25,"status":"core-diff"},{"fileName":"Clone529.java","labeltext":"core-diff2","codeSnippet":"        String line = null;\n        BufferedReader in = new BufferedReader (new InputStreamReader (inStream));\n        while ((line = in.readLine ()) != null) {\n            println (line);\n        }","LineStart":10,"CharStart":8,"LineEnd":14,"CharEnd":9,"status":"core-diff"},{"fileName":"Clone529.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"Exit reading process output\");","LineStart":18,"CharStart":4,"LineEnd":18,"CharEnd":55,"status":"noncore-diff"},{"fileName":"Clone530.java","labeltext":"noncore-sim1","codeSnippet":"try {","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone530.java","labeltext":"noncore-sim2","codeSnippet":"    } catch (Exception e) {\n        e.printStackTrace ();\n    }","LineStart":15,"CharStart":4,"LineEnd":17,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone530.java","labeltext":"noncore-sim1","codeSnippet":"try {","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone530.java","labeltext":"noncore-sim1","codeSnippet":"    } catch (InterruptedException e) {\n        e.printStackTrace ();\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }","LineStart":27,"CharStart":4,"LineEnd":31,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone530.java","labeltext":"core-diff1","codeSnippet":"        String line = null;\n        BufferedReader inErr = new BufferedReader (new InputStreamReader (inErrStream));\n        while ((line = inErr.readLine ()) != null) {\n            println (line);\n        }","LineStart":10,"CharStart":8,"LineEnd":14,"CharEnd":9,"status":"core-diff"},{"fileName":"Clone530.java","labeltext":"core-diff2","codeSnippet":"        int retValue = pro.waitFor ();\n        println (\"Command exit with return value \" + retValue);\n        outStream.close ();\n        outStream = null;","LineStart":23,"CharStart":8,"LineEnd":26,"CharEnd":25,"status":"core-diff"},{"fileName":"Clone530.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"Exit reading error stream\");","LineStart":18,"CharStart":4,"LineEnd":18,"CharEnd":53,"status":"noncore-diff"},{"fileName":"Clone531.java","labeltext":"noncore-sim1","codeSnippet":"    Runnable doRun = new Runnable () {\n        @Override\n        public void run () {","LineStart":9,"CharStart":3,"LineEnd":11,"CharEnd":28,"status":"noncore-sim"},{"fileName":"Clone531.java","labeltext":"noncore-sim1","codeSnippet":"        }}\n    ;","LineStart":13,"CharStart":8,"LineEnd":14,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone531.java","labeltext":"core-diff1","codeSnippet":"System.exit (0);","LineStart":12,"CharStart":12,"LineEnd":12,"CharEnd":28,"status":"core-diff"},{"fileName":"Clone531.java","labeltext":"core-diff2","codeSnippet":"SwingUtilities.invokeLater (doRun);","LineStart":15,"CharStart":4,"LineEnd":15,"CharEnd":39,"status":"core-diff"},{"fileName":"Clone531.java","labeltext":"noncore-sim1","codeSnippet":"                    new Runnable () {\n            @Override\n            public void run () {","LineStart":21,"CharStart":20,"LineEnd":23,"CharEnd":32,"status":"noncore-sim"},{"fileName":"Clone531.java","labeltext":"noncore-sim1","codeSnippet":"}}","LineStart":33,"CharStart":12,"LineEnd":33,"CharEnd":14,"status":"noncore-sim"},{"fileName":"Clone531.java","labeltext":"core-diff2","codeSnippet":"    timer.start ();\n    if (count > 5) {\n        new Thread","LineStart":19,"CharStart":3,"LineEnd":21,"CharEnd":18,"status":"core-diff"},{"fileName":"Clone531.java","labeltext":"core-diff1","codeSnippet":"                try {\n                    Thread.sleep (500);\n                    changeBtnForegroung (Color.darkGray);\n                    Thread.sleep (500);\n                    count = 0;\n                    Thread.sleep (750);\n                } catch (Exception e) {\n                    System.out.println (e);\n                }\n            }}\n        ).start ();\n    } else {\n        new Thread (new Runnable () {\n            @Override\n            public void run () {\n                try {\n                    runs = true;\n                    if (noColor < 2) {\n                        noColor ++;\n                        changeBtnForegroung (clr [noColor]);\n                    } else {\n                        noColor = 0;\n                        changeBtnForegroung (clr [noColor]);\n                    }\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));\n                    border = new EmptyBorder (0, 5, 10, 5);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));\n                    border = new EmptyBorder (0, 0, 10, 10);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));\n                    border = new EmptyBorder (5, 10, 5, 0);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));\n                    border = new EmptyBorder (10, 10, 0, 0);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    changeBtnMargin (new Insets (initMargin.top, initMargin.left, initMargin.bottom, initMargin.right));\n                    border = new EmptyBorder (5, 5, 5, 5);\n                    changePnlBorder (border);\n                    Thread.sleep (100);\n                    count ++;\n                } catch (Exception e) {\n                    System.out.println (e);\n                }\n            }}\n        ).start ();\n    }","LineStart":24,"CharStart":16,"LineEnd":74,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone532.java","labeltext":"noncore-sim1","codeSnippet":"try {","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone532.java","labeltext":"noncore-sim1","codeSnippet":"    } catch (Exception e) {\n        System.out.println (e);\n    }","LineStart":15,"CharStart":4,"LineEnd":17,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone532.java","labeltext":"noncore-sim1","codeSnippet":"try {","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone532.java","labeltext":"noncore-sim1","codeSnippet":"    } catch (Exception e) {\n        System.out.println (e);\n    }","LineStart":51,"CharStart":4,"LineEnd":53,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone532.java","labeltext":"core-sim1","codeSnippet":"changeBtnForegroung","LineStart":11,"CharStart":8,"LineEnd":11,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim1","codeSnippet":"changeBtnForegroung","LineStart":25,"CharStart":12,"LineEnd":25,"CharEnd":31,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim1","codeSnippet":"changeBtnForegroung","LineStart":28,"CharStart":12,"LineEnd":28,"CharEnd":31,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim1","codeSnippet":"changeBtnMargin","LineStart":30,"CharStart":8,"LineEnd":30,"CharEnd":23,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim1","codeSnippet":"changeBtnMargin","LineStart":34,"CharStart":8,"LineEnd":34,"CharEnd":23,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim1","codeSnippet":"changeBtnMargin","LineStart":38,"CharStart":8,"LineEnd":38,"CharEnd":23,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim1","codeSnippet":"changeBtnMargin","LineStart":42,"CharStart":8,"LineEnd":42,"CharEnd":23,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim1","codeSnippet":"changeBtnMargin","LineStart":46,"CharStart":8,"LineEnd":46,"CharEnd":23,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim2","codeSnippet":"Thread.sleep (500);","LineStart":10,"CharStart":8,"LineEnd":10,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim2","codeSnippet":"Thread.sleep (500);","LineStart":12,"CharStart":8,"LineEnd":12,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim2","codeSnippet":"Thread.sleep (750);","LineStart":14,"CharStart":8,"LineEnd":14,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim2","codeSnippet":"Thread.sleep (100);","LineStart":33,"CharStart":8,"LineEnd":33,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim2","codeSnippet":"Thread.sleep (100);","LineStart":37,"CharStart":8,"LineEnd":37,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim2","codeSnippet":"Thread.sleep (100);","LineStart":41,"CharStart":8,"LineEnd":41,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim2","codeSnippet":"Thread.sleep (100);","LineStart":45,"CharStart":8,"LineEnd":45,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"core-sim2","codeSnippet":"Thread.sleep (100);","LineStart":49,"CharStart":8,"LineEnd":49,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone532.java","labeltext":"noncore-diff1","codeSnippet":"count = 0;","LineStart":13,"CharStart":8,"LineEnd":13,"CharEnd":18,"status":"noncore-diff"},{"fileName":"Clone532.java","labeltext":"noncore-diff2","codeSnippet":"(Color.darkGray);","LineStart":11,"CharStart":28,"LineEnd":11,"CharEnd":45,"status":"noncore-diff"},{"fileName":"Clone532.java","labeltext":"noncore-diff3","codeSnippet":"        runs = true;\n        if (noColor < 2) {\n            noColor ++;","LineStart":22,"CharStart":8,"LineEnd":24,"CharEnd":23,"status":"noncore-diff"},{"fileName":"Clone532.java","labeltext":"noncore-diff3","codeSnippet":"                                (clr [noColor]);\n        } else {\n            noColor = 0;","LineStart":25,"CharStart":32,"LineEnd":27,"CharEnd":24,"status":"noncore-diff"},{"fileName":"Clone532.java","labeltext":"noncore-diff3","codeSnippet":"                                (clr [noColor]);\n        }","LineStart":28,"CharStart":32,"LineEnd":29,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone532.java","labeltext":"noncore-diff4","codeSnippet":"                        (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));\n        border = new EmptyBorder (0, 5, 10, 5);\n        changePnlBorder (border);","LineStart":30,"CharStart":24,"LineEnd":32,"CharEnd":33,"status":"noncore-diff"},{"fileName":"Clone532.java","labeltext":"noncore-diff4","codeSnippet":"                        (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));\n        border = new EmptyBorder (0, 0, 10, 10);\n        changePnlBorder (border);","LineStart":34,"CharStart":24,"LineEnd":36,"CharEnd":33,"status":"noncore-diff"},{"fileName":"Clone532.java","labeltext":"noncore-diff4","codeSnippet":"                        (new Insets (initMargin.top, initMargin.left + 10, initMargin.bottom, initMargin.right - 10));\n        border = new EmptyBorder (5, 10, 5, 0);\n        changePnlBorder (border);","LineStart":38,"CharStart":24,"LineEnd":40,"CharEnd":33,"status":"noncore-diff"},{"fileName":"Clone532.java","labeltext":"noncore-diff4","codeSnippet":"                        (new Insets (initMargin.top, initMargin.left - 10, initMargin.bottom, initMargin.right + 10));\n        border = new EmptyBorder (10, 10, 0, 0);\n        changePnlBorder (border);","LineStart":42,"CharStart":24,"LineEnd":44,"CharEnd":33,"status":"noncore-diff"},{"fileName":"Clone532.java","labeltext":"noncore-diff4","codeSnippet":"                        (new Insets (initMargin.top, initMargin.left, initMargin.bottom, initMargin.right));\n        border = new EmptyBorder (5, 5, 5, 5);\n        changePnlBorder (border);","LineStart":46,"CharStart":24,"LineEnd":48,"CharEnd":33,"status":"noncore-diff"},{"fileName":"Clone532.java","labeltext":"noncore-diff4","codeSnippet":"count ++;","LineStart":50,"CharStart":8,"LineEnd":50,"CharEnd":17,"status":"noncore-diff"},{"fileName":"Clone534.java","labeltext":"core-diff1","codeSnippet":"    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance ();\n    factory.setNamespaceAware (true);\n    DocumentBuilder builder;\n    Document doc = null;\n    try {\n        builder = factory.newDocumentBuilder ();\n        doc = builder.parse (\"employees.xml\");\n        XPathFactory xpathFactory = XPathFactory.newInstance ();\n        XPath xpath = xpathFactory.newXPath ();\n        String name = getEmployeeNameById (doc, xpath, 4);\n        System.out.println (\"Employee Name with ID 4: \" + name);\n        List < String > names = getEmployeeNameWithAge (doc, xpath, 30);\n        System.out.println (\"Employees with 'age>30' are:\" + Arrays.toString (names.toArray ()));\n        List < String > femaleEmps = getFemaleEmployeesName (doc, xpath);\n        System.out.println (\"Female Employees names are:\" + Arrays.toString (femaleEmps.toArray ()));\n    } catch (ParserConfigurationException | SAXException | IOException e) {\n        e.printStackTrace ();\n    }","LineStart":9,"CharStart":4,"LineEnd":26,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone534.java","labeltext":"core-diff2","codeSnippet":"    VTDGen vg = new VTDGen ();\n    if (! vg.parseFile (\"input.xml\", false)) return;\n    VTDNav vn = vg.getNav ();\n    AutoPilot ap = new AutoPilot (vn);\n    XMLModifier xm = new XMLModifier (vn);\n    ap.selectXPath (\"/*/place[@id=\\\"p14\\\" and   @initialMarking=\\\"2\\\"]/@initialMarking\");\n    int i = 0;\n    while ((i = ap.evalXPath ()) != - 1) {\n        xm.updateToken (i + 1, \"499\");\n    }\n    xm.output (\"new.xml\");","LineStart":30,"CharStart":3,"LineEnd":40,"CharEnd":26,"status":"core-diff"},{"fileName":"Clone537.java","labeltext":"core-sim1","codeSnippet":"String userInput = input.next ();","LineStart":12,"CharStart":8,"LineEnd":12,"CharEnd":41,"status":"core-sim"},{"fileName":"Clone537.java","labeltext":"core-sim1","codeSnippet":"String name = input.next ();","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":32,"status":"core-sim"},{"fileName":"Clone537.java","labeltext":"noncore-diff1","codeSnippet":" HashSet < String > validInputs = new HashSet < > ();","LineStart":9,"CharStart":3,"LineEnd":9,"CharEnd":56,"status":"noncore-diff"},{"fileName":"Clone537.java","labeltext":"noncore-diff1","codeSnippet":" HashSet < String > validInputs = new HashSet < > ();","LineStart":9,"CharStart":3,"LineEnd":9,"CharEnd":56,"status":"noncore-diff"},{"fileName":"Clone537.java","labeltext":"noncore-diff2","codeSnippet":"String user = \"\";","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":21,"status":"noncore-diff"},{"fileName":"Clone543.java","labeltext":"core-sim1","codeSnippet":"if (s1.length () != s2.length ()) return false;","LineStart":37,"CharStart":4,"LineEnd":37,"CharEnd":51,"status":"core-sim"},{"fileName":"Clone543.java","labeltext":"core-sim1","codeSnippet":"      else if (leftString.length () != rightString.length ()) {\n        return false;\n    }","LineStart":11,"CharStart":6,"LineEnd":13,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone543.java","labeltext":"core-sim2","codeSnippet":"    for (char l : letters) {\n        occurrencesMap.put (l, 0);\n    }\n    for (int i = 0;\n    i < leftString.length (); i ++) {\n        char charFromLeft = leftString.charAt (i);\n        Integer nrOfCharsInLeft = occurrencesMap.get (charFromLeft);\n        occurrencesMap.put (charFromLeft, ++ nrOfCharsInLeft);\n        char charFromRight = rightString.charAt (i);\n        Integer nrOfCharsInRight = occurrencesMap.get (charFromRight);\n        occurrencesMap.put (charFromRight, -- nrOfCharsInRight);\n    }\n    for (Integer occurrencesNr : occurrencesMap.values ()) {\n        if (occurrencesNr != 0) {\n            return false;\n        }\n    }\n    return true;","LineStart":16,"CharStart":4,"LineEnd":33,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone543.java","labeltext":"core-sim2","codeSnippet":"    for (int i = 0;\n    i < s1.length (); i ++) {\n        seen [s1.charAt (i)] = seen [s1.charAt (i)] + 1;\n    }\n    for (int i = 0;\n    i < s2.length (); i ++) {\n        if (seen [s2.charAt (i)] == 0) return false;\n        seen [s2.charAt (i)] = seen [s2.charAt (i)] - 1;\n    }\n    for (int i = 0;\n    i < 256; i ++) {\n        if (seen [i] != 0) return false;\n    }\n    return true;","LineStart":42,"CharStart":4,"LineEnd":55,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone543.java","labeltext":"noncore-diff1","codeSnippet":"    if (leftString == null || rightString == null) {\n        return false;\n    }","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone543.java","labeltext":"noncore-diff2","codeSnippet":"    char letters [] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};\n    Map < Character, Integer > occurrencesMap = new HashMap < > ();","LineStart":14,"CharStart":4,"LineEnd":15,"CharEnd":67,"status":"noncore-diff"},{"fileName":"Clone543.java","labeltext":"noncore-diff3","codeSnippet":"    int [] seen = new int [256];\n    Arrays.fill (seen, 0);\n    s1 = s1.toLowerCase ();\n    s2 = s2.toLowerCase ();","LineStart":38,"CharStart":4,"LineEnd":41,"CharEnd":27,"status":"noncore-diff"},{"fileName":"Clone545.java","labeltext":"core-sim1","codeSnippet":"    if (positive.length () != negative.length ()) {\n        return false;\n    }","LineStart":39,"CharStart":4,"LineEnd":41,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone545.java","labeltext":"core-sim1","codeSnippet":"      else if (leftString.length () != rightString.length ()) {\n        return false;\n    }","LineStart":11,"CharStart":6,"LineEnd":13,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone545.java","labeltext":"core-sim2","codeSnippet":"    for (int i = 0;\n    i < positive.length (); i ++) {\n        int pos = (int) positive.charAt (i) - 97;\n        if (counts [pos] >= 0) {\n            diff ++;\n        } else {\n            diff --;\n        }\n        counts [pos] ++;\n        int neg = (int) negative.charAt (i) - 97;\n        if (counts [neg] <= 0) {\n            diff ++;\n        } else {\n            diff --;\n        }\n        counts [neg] --;\n    }\n    return diff == 0;","LineStart":44,"CharStart":4,"LineEnd":61,"CharEnd":21,"status":"core-sim"},{"fileName":"Clone545.java","labeltext":"core-sim2","codeSnippet":"    for (char l : letters) {\n        occurrencesMap.put (l, 0);\n    }\n    for (int i = 0;\n    i < leftString.length (); i ++) {\n        char charFromLeft = leftString.charAt (i);\n        Integer nrOfCharsInLeft = occurrencesMap.get (charFromLeft);\n        occurrencesMap.put (charFromLeft, ++ nrOfCharsInLeft);\n        char charFromRight = rightString.charAt (i);\n        Integer nrOfCharsInRight = occurrencesMap.get (charFromRight);\n        occurrencesMap.put (charFromRight, -- nrOfCharsInRight);\n    }\n    for (Integer occurrencesNr : occurrencesMap.values ()) {\n        if (occurrencesNr != 0) {\n            return false;\n        }\n    }\n    return true;","LineStart":16,"CharStart":4,"LineEnd":33,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone545.java","labeltext":"noncore-diff1","codeSnippet":"    if (leftString == null || rightString == null) {\n        return false;\n    }","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone545.java","labeltext":"noncore-diff2","codeSnippet":"    char letters [] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};\n    Map < Character, Integer > occurrencesMap = new HashMap < > ();","LineStart":14,"CharStart":4,"LineEnd":15,"CharEnd":67,"status":"noncore-diff"},{"fileName":"Clone545.java","labeltext":"noncore-diff3","codeSnippet":"    String positive = first.toLowerCase ();\n    String negative = second.toLowerCase ();","LineStart":37,"CharStart":4,"LineEnd":38,"CharEnd":44,"status":"noncore-diff"},{"fileName":"Clone545.java","labeltext":"noncore-diff2","codeSnippet":"    int [] counts = new int [26];\n    int diff = 0;","LineStart":42,"CharStart":4,"LineEnd":43,"CharEnd":17,"status":"noncore-diff"},{"fileName":"Clone547.java","labeltext":"core-sim1","codeSnippet":"if (s1.length () != s2.length ()) return false;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":51,"status":"core-sim"},{"fileName":"Clone547.java","labeltext":"core-sim1","codeSnippet":"    if (word.length () != anagram_word.length ()) {\n        return false;\n    }","LineStart":31,"CharStart":4,"LineEnd":33,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone547.java","labeltext":"core-sim2","codeSnippet":"    for (int i = 0;\n    i < s1.length (); i ++) {\n        seen [s1.charAt (i)] = seen [s1.charAt (i)] + 1;\n    }\n    for (int i = 0;\n    i < s2.length (); i ++) {\n        if (seen [s2.charAt (i)] == 0) return false;\n        seen [s2.charAt (i)] = seen [s2.charAt (i)] - 1;\n    }\n    for (int i = 0;\n    i < 256; i ++) {\n        if (seen [i] != 0) return false;\n    }\n    return true;","LineStart":14,"CharStart":4,"LineEnd":27,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone547.java","labeltext":"core-sim2","codeSnippet":"    for (int i = 0;\n    i < words_char.length; i ++) {\n        words_char_num *= wordPrimeMap.get (words_char [i]);\n    }\n    for (int i = 0;\n    i < anagram_word_char.length; i ++) {\n        anagram_word_num *= wordPrimeMap.get (anagram_word_char [i]);\n    }\n    return anagram_word_num == words_char_num;","LineStart":39,"CharStart":4,"LineEnd":47,"CharEnd":46,"status":"core-sim"},{"fileName":"Clone547.java","labeltext":"noncore-diff1","codeSnippet":"    int [] seen = new int [256];\n    Arrays.fill (seen, 0);\n    s1 = s1.toLowerCase ();\n    s2 = s2.toLowerCase ();","LineStart":10,"CharStart":4,"LineEnd":13,"CharEnd":27,"status":"noncore-diff"},{"fileName":"Clone547.java","labeltext":"noncore-diff1","codeSnippet":"    char [] words_char = word.toCharArray ();\n    char [] anagram_word_char = anagram_word.toCharArray ();\n    int words_char_num = 1;\n    int anagram_word_num = 1;\n    Map < Character, Integer > wordPrimeMap = wordPrimeMap ();","LineStart":34,"CharStart":4,"LineEnd":38,"CharEnd":62,"status":"noncore-diff"},{"fileName":"Clone550.java","labeltext":"core-sim1","codeSnippet":"    if (word.length () != anagram_word.length ()) {\n        return false;\n    }","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone550.java","labeltext":"core-sim1","codeSnippet":"    if (positive.length () != negative.length ()) {\n        return false;\n    }","LineStart":31,"CharStart":4,"LineEnd":33,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone550.java","labeltext":"core-sim2","codeSnippet":"    for (int i = 0;\n    i < words_char.length; i ++) {\n        words_char_num *= wordPrimeMap.get (words_char [i]);\n    }\n    for (int i = 0;\n    i < anagram_word_char.length; i ++) {\n        anagram_word_num *= wordPrimeMap.get (anagram_word_char [i]);\n    }\n    return anagram_word_num == words_char_num;","LineStart":17,"CharStart":4,"LineEnd":25,"CharEnd":46,"status":"core-sim"},{"fileName":"Clone550.java","labeltext":"core-sim2","codeSnippet":"    for (int i = 0;\n    i < positive.length (); i ++) {\n        int pos = (int) positive.charAt (i) - 97;\n        if (counts [pos] >= 0) {\n            diff ++;\n        } else {\n            diff --;\n        }\n        counts [pos] ++;\n        int neg = (int) negative.charAt (i) - 97;\n        if (counts [neg] <= 0) {\n            diff ++;\n        } else {\n            diff --;\n        }\n        counts [neg] --;\n    }\n    return diff == 0;","LineStart":36,"CharStart":4,"LineEnd":53,"CharEnd":21,"status":"core-sim"},{"fileName":"Clone550.java","labeltext":"noncore-diff2","codeSnippet":"    char [] words_char = word.toCharArray ();\n    char [] anagram_word_char = anagram_word.toCharArray ();\n    int words_char_num = 1;\n    int anagram_word_num = 1;\n    Map < Character, Integer > wordPrimeMap = wordPrimeMap ();","LineStart":12,"CharStart":4,"LineEnd":16,"CharEnd":62,"status":"noncore-diff"},{"fileName":"Clone550.java","labeltext":"noncore-diff2","codeSnippet":"    int [] counts = new int [26];\n    int diff = 0;","LineStart":34,"CharStart":4,"LineEnd":35,"CharEnd":17,"status":"noncore-diff"},{"fileName":"Clone550.java","labeltext":"noncore-diff1","codeSnippet":"    String positive = first.toLowerCase ();\n    String negative = second.toLowerCase ();","LineStart":29,"CharStart":4,"LineEnd":30,"CharEnd":44,"status":"noncore-diff"},{"fileName":"Clone553.java","labeltext":"core-sim1","codeSnippet":"    int len = a.length ();\n    if (len != b.length ()) return false;\n    Map < Integer, Integer > ocr = new HashMap < > (64);\n    a.codePoints ().forEach (c -> ocr.merge (c, 1, Integer :: sum));\n    for (int i = 0, c = 0;\n    i < len; i += Character.charCount (c)) {\n        int cc = ocr.getOrDefault ((c = Character.codePointAt (b, i)), 0);\n        if (cc == 0) return false;\n        ocr.put (c, cc - 1);\n    }\n    return true;","LineStart":9,"CharStart":4,"LineEnd":19,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone553.java","labeltext":"core-sim1","codeSnippet":"    if (one.length () == two.length ()) {\n        String s0 = one.toLowerCase ();\n        String s1 = two.toLowerCase ();\n        HashMap < Character, Integer > chars = new HashMap < Character, Integer > (one.length ());\n        Integer count;\n        for (char c : s0.toCharArray ()) {\n            count = chars.get (c);\n            count = Integer.valueOf (count != null ? count + 1 : 1);\n            chars.put (c, count);\n        }\n        for (char c : s1.toCharArray ()) {\n            count = chars.get (c);\n            if (count == null) {\n                return false;\n            } else {\n                count --;\n                chars.put (c, count);\n            }\n        }\n        for (Integer i : chars.values ()) {\n            if (i != 0) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }","LineStart":23,"CharStart":4,"LineEnd":50,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone554.java","labeltext":"core-sim1","codeSnippet":"    for (String w : words) {\n        String first = w.substring (0, 1);\n        String f_after = w.substring (1);\n        capitalizedWord += first.toUpperCase () + f_after + \" \";\n    }\n    System.out.println (capitalizedWord);","LineStart":23,"CharStart":4,"LineEnd":28,"CharEnd":41,"status":"core-sim"},{"fileName":"Clone554.java","labeltext":"noncore-diff1","codeSnippet":"    String str = \"my name is khan\";\n    String words [] = str.split (\"\\\\s\");\n    String capitalizedWord = \"\";","LineStart":20,"CharStart":4,"LineEnd":22,"CharEnd":32,"status":"noncore-diff"},{"fileName":"Clone554.java","labeltext":"core-sim1","codeSnippet":"    final String str1 = \"HELLO WORLD\";\n    System.out.println (capitalizeFirstLetter (str1));\n    final String str2 = \"Hello WORLD\";\n    System.out.println (capitalizeFirstLetter (str2));\n    final String str3 = \"hello world\";\n    System.out.println (capitalizeFirstLetter (str3));\n    final String str4 = \"heLLo wORld\";\n    System.out.println (capitalizeFirstLetter (str4));","LineStart":9,"CharStart":4,"LineEnd":16,"CharEnd":54,"status":"core-sim"},{"fileName":"Clone555.java","labeltext":"noncore-sim1","codeSnippet":"    String [] palavras = texto.split (\" \");\n    StringBuilder sb = new StringBuilder ();","LineStart":9,"CharStart":3,"LineEnd":10,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone555.java","labeltext":"noncore-sim1","codeSnippet":"    String [] words = word.split (\" \");\n    StringBuilder sb = new StringBuilder ();","LineStart":20,"CharStart":4,"LineEnd":21,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone555.java","labeltext":"core-sim1","codeSnippet":"    for (String palavra : palavras) {\n        if (excessoes.contains (palavra.toLowerCase ())) sb.append (palavra.toLowerCase ()).append (\" \");\n        else sb.append (Character.toUpperCase (palavra.charAt (0))).append (palavra.substring (1).toLowerCase ()).append (\" \");\n    }\n    return sb.toString ().trim ();","LineStart":12,"CharStart":4,"LineEnd":16,"CharEnd":34,"status":"core-sim"},{"fileName":"Clone555.java","labeltext":"core-sim1","codeSnippet":"    if (words [0].length () > 0) {\n        sb.append (Character.toUpperCase (words [0].charAt (0)) + words [0].subSequence (1, words [0].length ()).toString ().toLowerCase ());\n        for (int i = 1;\n        i < words.length; i ++) {\n            sb.append (\" \");\n            sb.append (Character.toUpperCase (words [i].charAt (0)) + words [i].subSequence (1, words [i].length ()).toString ().toLowerCase ());\n        }\n    }\n    return sb.toString ();","LineStart":22,"CharStart":4,"LineEnd":30,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone555.java","labeltext":"core-diff1","codeSnippet":"    List < String > excessoes = new ArrayList < String > (Arrays.asList (\"de\", \"da\", \"das\", \"do\", \"dos\", \"na\", \"nas\", \"no\", \"nos\", \"a\", \"e\", \"o\", \"em\", \"com\"));\n","LineStart":11,"CharStart":4,"LineEnd":12,"CharEnd":0,"status":"core-diff"},{"fileName":"Clone556.java","labeltext":"core-diff1","codeSnippet":"    if (ae.getSource () == select) {\n        activeTool = SELECTION_TOOL;\n    } else if (ae.getSource () == draw) {\n        activeTool = DRAW_TOOL;\n    } else if (ae.getSource () == text) {\n        activeTool = TEXT_TOOL;\n    }","LineStart":19,"CharStart":4,"LineEnd":25,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone556.java","labeltext":"core-diff2","codeSnippet":"    if (dirty) {\n        result = JOptionPane.showConfirmDialog (gui, \"Erase the current painting?\");\n    }\n    if (result == JOptionPane.OK_OPTION) {\n        clear (canvasImage);\n    }","LineStart":10,"CharStart":4,"LineEnd":15,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone556.java","labeltext":"noncore-diff1","codeSnippet":"int result = JOptionPane.OK_OPTION;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":39,"status":"noncore-diff"},{"fileName":"Clone557.java","labeltext":"core-diff1","codeSnippet":"    if (dirty) {\n        result = JOptionPane.showConfirmDialog (gui, \"Erase the current painting?\");\n    }\n    if (result == JOptionPane.OK_OPTION) {\n        clear (canvasImage);\n    }","LineStart":10,"CharStart":4,"LineEnd":15,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone557.java","labeltext":"core-diff2","codeSnippet":"    if (! dirty) {\n        JFileChooser ch = getFileChooser ();\n        int result = ch.showOpenDialog (gui);\n        if (result == JFileChooser.APPROVE_OPTION) {\n            try {\n                BufferedImage bi = ImageIO.read (ch.getSelectedFile ());\n                setImage (bi);\n            } catch (IOException e) {\n                showError (e);\n                e.printStackTrace ();\n            }\n        }\n    } else {\n        JOptionPane.showMessageDialog (gui, \"TODO - prompt save image..\");\n    }","LineStart":19,"CharStart":4,"LineEnd":33,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone557.java","labeltext":"noncore-diff1","codeSnippet":"int result = JOptionPane.OK_OPTION;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":39,"status":"noncore-diff"},{"fileName":"Clone558.java","labeltext":"core-diff1","codeSnippet":"    JFileChooser ch = getFileChooser ();\n    int result = ch.showSaveDialog (gui);\n    if (result == JFileChooser.APPROVE_OPTION) {\n        try {\n            File f = ch.getSelectedFile ();\n            ImageIO.write (BasicPaint.this.canvasImage, \"png\", f);\n            BasicPaint.this.originalImage = BasicPaint.this.canvasImage;\n            dirty = false;\n        } catch (IOException ioe) {\n            showError (ioe);\n            ioe.printStackTrace ();\n        }\n    }","LineStart":19,"CharStart":4,"LineEnd":31,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone558.java","labeltext":"core-diff1","codeSnippet":"    if (dirty) {\n        result = JOptionPane.showConfirmDialog (gui, \"Erase the current painting?\");\n    }\n    if (result == JOptionPane.OK_OPTION) {\n        clear (canvasImage);\n    }","LineStart":10,"CharStart":4,"LineEnd":15,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone558.java","labeltext":"noncore-diff1","codeSnippet":"int result = JOptionPane.OK_OPTION;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":39,"status":"noncore-diff"},{"fileName":"Clone561.java","labeltext":"core-diff1","codeSnippet":"    if (ae.getSource () == select) {\n        activeTool = SELECTION_TOOL;\n    } else if (ae.getSource () == draw) {\n        activeTool = DRAW_TOOL;\n    } else if (ae.getSource () == text) {\n        activeTool = TEXT_TOOL;\n    }","LineStart":9,"CharStart":4,"LineEnd":15,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone561.java","labeltext":"core-diff2","codeSnippet":"    JFileChooser ch = getFileChooser ();\n    int result = ch.showSaveDialog (gui);\n    if (result == JFileChooser.APPROVE_OPTION) {\n        try {\n            File f = ch.getSelectedFile ();\n            ImageIO.write (BasicPaint.this.canvasImage, \"png\", f);\n            BasicPaint.this.originalImage = BasicPaint.this.canvasImage;\n            dirty = false;\n        } catch (IOException ioe) {\n            showError (ioe);\n            ioe.printStackTrace ();\n        }\n    }","LineStart":19,"CharStart":4,"LineEnd":31,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone564.java","labeltext":"core-diff1","codeSnippet":"    JFileChooser ch = getFileChooser ();\n    int result = ch.showSaveDialog (gui);\n    if (result == JFileChooser.APPROVE_OPTION) {\n        try {\n            File f = ch.getSelectedFile ();\n            ImageIO.write (BasicPaint.this.canvasImage, \"png\", f);\n            BasicPaint.this.originalImage = BasicPaint.this.canvasImage;\n            dirty = false;\n        } catch (IOException ioe) {\n            showError (ioe);\n            ioe.printStackTrace ();\n        }\n    }","LineStart":9,"CharStart":4,"LineEnd":21,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone564.java","labeltext":"core-diff2","codeSnippet":"    if (x + width > getWidth ()) {\n        x = getWidth () - width;\n    }\n    if (y + height > getHeight ()) {\n        y = getHeight () - height;\n    }\n    Color color = new Color ((int) (Math.random () * 255), (int) (Math.random () * 255), (int) (Math.random () * 255));\n    lstShapes.add (new MyRectangle (x, y, width, height, color));\n    repaint ();","LineStart":29,"CharStart":4,"LineEnd":37,"CharEnd":15,"status":"core-diff"},{"fileName":"Clone564.java","labeltext":"noncore-diff1","codeSnippet":"    int x = (int) (Math.random () * getWidth ());\n    int y = (int) (Math.random () * getHeight ());\n    int width = (int) (Math.random () * (getWidth () / 4));\n    int height = (int) (Math.random () * (getHeight () / 4));","LineStart":25,"CharStart":4,"LineEnd":28,"CharEnd":61,"status":"noncore-diff"},{"fileName":"Clone570.java","labeltext":"core-sim1","codeSnippet":"    for (int j = 0;\n    j < 5; j ++) {\n        max = array [0];\n        index = 0;\n        for (i = 1; i < array.length; i ++) {\n            if (max < array [i]) {\n                max = array [i];\n                index = i;\n            }\n        }\n        large [j] = max;\n        array [index] = Integer.MIN_VALUE;\n        System.out.println (\"Largest \" + j + \" : \" + large [j]);\n    }","LineStart":13,"CharStart":4,"LineEnd":26,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone570.java","labeltext":"core-sim1","codeSnippet":"    for (int j = 1;\n    j < large.length; ++ j) {\n        if (smallest > large [j]) {\n            smallest = large [j];\n            smallestIndex = j;\n        }\n    }\n    for (i = large.length; i < array.length; i ++) {\n        if (smallest < array [i]) {\n            large [smallestIndex] = array [i];\n            smallest = large [0];\n            smallestIndex = 0;\n            for (int j = 1;\n            j < large.length; ++ j) {\n                if (smallest > large [j]) {\n                    smallest = large [j];\n                    smallestIndex = j;\n                }\n            }\n        }\n    }\n    for (int j = 0;\n    j < large.length; j ++) {\n        System.out.println (\"Largest 5 : \" + large [j]);\n    }\n    System.out.println ();\n    System.out.println (\"Largest is: \" + getHighest (large));","LineStart":36,"CharStart":4,"LineEnd":62,"CharEnd":61,"status":"core-sim"},{"fileName":"Clone570.java","labeltext":"noncore-diff1","codeSnippet":"    int i;\n    int large [] = new int [5];\n    int array [] = {33, 55, 13, 46, 87, 42, 10, 34, 43, 56};\n    int max = 0, index;","LineStart":9,"CharStart":4,"LineEnd":12,"CharEnd":23,"status":"noncore-diff"},{"fileName":"Clone570.java","labeltext":"noncore-diff1","codeSnippet":"    int i;\n    int largestSize = 4;\n    int array [] = {33, 55, 13, 46, 87, 42, 10, 34};\n    int large [] = Arrays.copyOf (array, largestSize);\n    int smallest = large [0];\n    int smallestIndex = 0;","LineStart":30,"CharStart":4,"LineEnd":35,"CharEnd":26,"status":"noncore-diff"},{"fileName":"Clone573.java","labeltext":"noncore-sim1","codeSnippet":"Scanner sc = new Scanner (System.in);","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":41,"status":"noncore-sim"},{"fileName":"Clone573.java","labeltext":"noncore-sim1","codeSnippet":"Scanner sc = new Scanner (System.in);","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":41,"status":"noncore-sim"},{"fileName":"Clone573.java","labeltext":"core-sim1","codeSnippet":"sc.next ();","LineStart":11,"CharStart":15,"LineEnd":11,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone573.java","labeltext":"core-sim1","codeSnippet":"sc.next ();","LineStart":14,"CharStart":15,"LineEnd":14,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone573.java","labeltext":"core-sim1","codeSnippet":"sc.next ();","LineStart":24,"CharStart":18,"LineEnd":24,"CharEnd":29,"status":"core-sim"},{"fileName":"Clone573.java","labeltext":"core-diff2","codeSnippet":"    int cases = sc.nextInt ();\n    String [] str = new String [cases];\n    for (int i = 0;\n    i < cases; i ++) {\n        str [i] = ","LineStart":20,"CharStart":4,"LineEnd":24,"CharEnd":18,"status":"core-diff"},{"fileName":"Clone573.java","labeltext":"core-diff2","codeSnippet":"}","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone573.java","labeltext":"core-diff1","codeSnippet":"    System.out.println (\"enter string for c\");\n    String c = ","LineStart":10,"CharStart":4,"LineEnd":11,"CharEnd":15,"status":"core-diff"},{"fileName":"Clone573.java","labeltext":"core-diff1","codeSnippet":"    System.out.println (\"c is \" + c);\n    System.out.println (\"enter string for d\");\n    String d =","LineStart":12,"CharStart":4,"LineEnd":14,"CharEnd":14,"status":"core-diff"},{"fileName":"Clone573.java","labeltext":"core-diff1","codeSnippet":"System.out.println (\"d is \" + d);","LineStart":15,"CharStart":4,"LineEnd":15,"CharEnd":37,"status":"core-diff"},{"fileName":"Clone574.java","labeltext":"noncore-sim1","codeSnippet":"URL originalURL = new URL (url);","LineStart":13,"CharStart":8,"LineEnd":13,"CharEnd":40,"status":"noncore-sim"},{"fileName":"Clone574.java","labeltext":"noncore-sim1","codeSnippet":"URI uri = new URI (originalURL);","LineStart":35,"CharStart":4,"LineEnd":35,"CharEnd":36,"status":"noncore-sim"},{"fileName":"Clone574.java","labeltext":"core-sim1","codeSnippet":"    uri = new URI (uri.getScheme ().toLowerCase (Locale.US), newAuthority, uri.getPath (), uri.getQuery (), uri.getFragment ());\n    int port = uri.getPort ();\n    if (port > 0 && port == uri.toURL ().getDefaultPort ()) {\n        uri = new URI (uri.getScheme (), uri.getUserInfo (), uri.getHost (), - 1, uri.getPath (), uri.getQuery (), uri.getFragment ());\n    }\n    return uri.toString ();","LineStart":36,"CharStart":4,"LineEnd":41,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone574.java","labeltext":"core-sim1","codeSnippet":"        boolean hostHasPort = newHost.indexOf (\":\") != - 1;\n        int newPort = originalURL.getPort ();\n        if (hostHasPort) {\n            URL hostURL = new URL (\"http://\" + newHost);\n            newHost = hostURL.getHost ();\n            newPort = hostURL.getPort ();\n        } else {\n            newPort = - 1;\n        }\n        boolean isHttps = originalURL.getProtocol ().equals (\"https\");\n        boolean useDefaultPort = (newPort == 443 && isHttps) || (newPort == 80 && ! isHttps);\n        newPort = useDefaultPort ? - 1 : newPort;\n        URL newURL = new URL (originalURL.getProtocol (), newHost, newPort, originalURL.getFile ());\n        String result = newURL.toString ();\n        return result;","LineStart":14,"CharStart":8,"LineEnd":28,"CharEnd":22,"status":"core-sim"},{"fileName":"Clone574.java","labeltext":"noncore-diff1","codeSnippet":"    } catch (MalformedURLException e) {\n        throw new RuntimeException (\"Couldnt replace host in url, originalUrl=\" + url + \", newHost=\" + newHost);\n    }","LineStart":29,"CharStart":4,"LineEnd":31,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone574.java","labeltext":"noncore-diff1","codeSnippet":"try {","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone574.java","labeltext":"core-diff1","codeSnippet":"    if (url == null || newHost == null) {\n        return url;\n    }","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone582.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < count; i ++) {\n        int nextNumber = (int) ((Math.abs (random.nextDouble ()) * (b - a))) + a;\n        if (nextNumber < a || nextNumber > b) {\n            System.err.println (\"number not in range :\" + nextNumber);\n        } else {\n            System.out.println (nextNumber);\n        }\n        if (nextNumber < lowest) {\n            lowest = nextNumber;\n        }\n        if (nextNumber > highest) {\n            highest = nextNumber;\n        }\n    }\n    System.out.println (\"Produced \" + count + \" numbers from \" + lowest + \" to \" + highest);","LineStart":15,"CharStart":4,"LineEnd":30,"CharEnd":92,"status":"core-sim"},{"fileName":"Clone582.java","labeltext":"core-sim1","codeSnippet":"    for (int idx = 1;\n    idx <= 10; ++ idx) {\n        showRandomInteger (START, END, randomGenerator);\n    }","LineStart":38,"CharStart":4,"LineEnd":41,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone582.java","labeltext":"noncore-sim1","codeSnippet":"Random randomGenerator = new Random ();","LineStart":37,"CharStart":4,"LineEnd":37,"CharEnd":43,"status":"noncore-sim"},{"fileName":"Clone582.java","labeltext":"noncore-sim1","codeSnippet":"Random random = new Random ();","LineStart":14,"CharStart":4,"LineEnd":14,"CharEnd":34,"status":"noncore-sim"},{"fileName":"Clone582.java","labeltext":"noncore-diff1","codeSnippet":"    log (\"Generating 10 random integers in range 1..10.\");\n    int START = 1;\n    int END = 10;","LineStart":34,"CharStart":4,"LineEnd":36,"CharEnd":17,"status":"noncore-diff"},{"fileName":"Clone582.java","labeltext":"noncore-diff1","codeSnippet":"    int a = 100;\n    int b = 1000;\n    int lowest = b;\n    int highest = a;\n    int count = 100000;","LineStart":9,"CharStart":4,"LineEnd":13,"CharEnd":23,"status":"noncore-diff"},{"fileName":"Clone582.java","labeltext":"noncore-diff2","codeSnippet":"log (\"Done\");","LineStart":42,"CharStart":4,"LineEnd":42,"CharEnd":17,"status":"noncore-diff"},{"fileName":"Clone589.java","labeltext":"core-diff1","codeSnippet":"    AuthMethod auth = new TokenAuthMethod (API_KEY, API_SECRET);\n    NexmoClient client = new NexmoClient (auth);\n    TextMessage message = new TextMessage (FROM_NUMBER, TO_NUMBER, \"Hello from Nexmo!\");\n    SmsSubmissionResult [] responses = client.getSmsClient ().submitMessage (message);\n    for (SmsSubmissionResult response : responses) {\n        System.out.println (response);\n    }","LineStart":20,"CharStart":4,"LineEnd":26,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone589.java","labeltext":"core-diff1","codeSnippet":"    TwilioRestClient client = new TwilioRestClient (ACCOUNT_SID, AUTH_TOKEN);\n    List < NameValuePair > params = new ArrayList < NameValuePair > ();\n    params.add (new BasicNameValuePair (\"Body\", \"Test Twilio message\"));\n    params.add (new BasicNameValuePair (\"To\", \"+14159352345\"));\n    params.add (new BasicNameValuePair (\"From\", \"+14158141829\"));\n    MessageFactory messageFactory = client.getAccount ().getMessageFactory ();\n    Message message = messageFactory.create (params);\n    System.out.println (message.getSid ());","LineStart":9,"CharStart":4,"LineEnd":16,"CharEnd":43,"status":"core-diff"},{"fileName":"Clone592.java","labeltext":"core-diff1","codeSnippet":"        XMLInputFactory factory = XMLInputFactory.newInstance ();\n        XMLEventReader eventReader = factory.createXMLEventReader (new FileReader (\"c:\\\\staxTestFile.xml\"));\n        while (eventReader.hasNext ()) {\n            XMLEvent event = eventReader.nextEvent ();\n            switch (event.getEventType ()) {\n                case XMLStreamConstants.START_ELEMENT :\n                    StartElement startElement = event.asStartElement ();\n                    String qName = startElement.getName ().getLocalPart ();\n                    if (qName.equalsIgnoreCase (\"Part\")) {\n                        System.out.println (\"Start Element : Part\");\n                        Iterator < Attribute > attributes = startElement.getAttributes ();\n                    } else if (qName.equalsIgnoreCase (\"ObjectID\")) {\n                        ObjectID = true;\n                    } else if (qName.equalsIgnoreCase (\"Class\")) {\n                        Class = true;\n                    } else if (qName.equalsIgnoreCase (\"LastChangedBy\")) {\n                        LastChangedBy = true;\n                    } else if (qName.equalsIgnoreCase (\"Number\")) {\n                        Number = true;\n                    } else if (qName.equalsIgnoreCase (\"StartEffectivity\")) {\n                        StartEffectivity = true;\n                    } else if (qName.equalsIgnoreCase (\"EndSerialNumberEffectivity\")) {\n                        EndSerialNumberEffectivity = true;\n                    } else if (qName.equalsIgnoreCase (\"StartSerialNumberEffectivity\")) {\n                        StartSerialNumberEffectivity = true;\n                    } else if (qName.equalsIgnoreCase (\"EndSerialNumberEffectivity\")) {\n                        EndSerialNumberEffectivity = true;\n                    } else if (qName.equalsIgnoreCase (\"StartLotNumberEffectivity\")) {\n                        StartLotNumberEffectivity = true;\n                    } else if (qName.equalsIgnoreCase (\"EndLotNumberEffectivity\")) {\n                        EndLotNumberEffectivity = true;\n                    } else if (qName.equalsIgnoreCase (\"SerialNumberEffectivityCxtPartNumber\")) {\n                        SerialNumberEffectivityCxtPartNumber = true;\n                    } else if (qName.equalsIgnoreCase (\"LotNumberEffectivityCxtPartNumber\")) {\n                        LotNumberEffectivityCxtPartNumber = true;\n                    } else if (qName.equalsIgnoreCase (\"DefaultUnit\")) {\n                        DefaultUnit = true;\n                    } else if (qName.equalsIgnoreCase (\"Name\")) {\n                        Name = true;\n                    } else if (qName.equalsIgnoreCase (\"PartType\")) {\n                        PartType = true;\n                    } else if (qName.equalsIgnoreCase (\"Source\")) {\n                        Source = true;\n                    } else if (qName.equalsIgnoreCase (\"State\")) {\n                        State = true;\n                    } else if (qName.equalsIgnoreCase (\"IsPhantom\")) {\n                        IsPhantom = true;\n                    } else if (qName.equalsIgnoreCase (\"Version\")) {\n                        Version = true;\n                    } else if (qName.equalsIgnoreCase (\"Iteration\")) {\n                        Iteration = true;\n                    } else if (qName.equalsIgnoreCase (\"PreviousVersion\")) {\n                        PreviousVersion = true;\n                    } else if (qName.equalsIgnoreCase (\"IsConfigurable\")) {\n                        IsConfigurable = true;\n                    } else if (qName.equalsIgnoreCase (\"IsCollapsible\")) {\n                        IsCollapsible = true;\n                    } else if (qName.equalsIgnoreCase (\"TargetID\")) {\n                        TargetID = true;\n                    }\n                    break;\n                case XMLStreamConstants.CHARACTERS :\n                    Characters characters = event.asCharacters ();\n                    if (ObjectID) {\n                        System.out.println (\"ObjectID: \" + characters.getData ());\n                        ObjectID = false;\n                    }\n                    if (Class) {\n                        System.out.println (\"Class: \" + characters.getData ());\n                        Class = false;\n                    }\n                    if (LastChangedBy) {\n                        System.out.println (\"LastChangedBy \" + characters.getData ());\n                        LastChangedBy = false;\n                    }\n                    if (Number) {\n                        System.out.println (\"Number: \" + characters.getData ());\n                        Number = false;\n                    }\n                    if (StartEffectivity) {\n                        System.out.println (\"StartEffectivity: \" + characters.getData ());\n                        StartEffectivity = false;\n                    }\n                    if (EndEffectivity) {\n                        System.out.println (\"EndEffectivity \" + characters.getData ());\n                        EndEffectivity = false;\n                    }\n                    if (StartSerialNumberEffectivity) {\n                        System.out.println (\"StartSerialNumberEffectivity \" + characters.getData ());\n                        StartSerialNumberEffectivity = false;\n                    }\n                    if (EndSerialNumberEffectivity) {\n                        System.out.println (\"EndSerialNumberEffectivity: \" + characters.getData ());\n                        EndSerialNumberEffectivity = false;\n                    }\n                    if (StartLotNumberEffectivity) {\n                        System.out.println (\"StartLotNumberEffectivity\" + characters.getData ());\n                        StartLotNumberEffectivity = false;\n                    }\n                    if (EndLotNumberEffectivity) {\n                        System.out.println (\"EndLotNumberEffectivity: \" + characters.getData ());\n                        EndLotNumberEffectivity = false;\n                    }\n                    if (SerialNumberEffectivityCxtPartNumber) {\n                        System.out.println (\"SerialNumberEffectivityCxtPartNumber \" + characters.getData ());\n                        SerialNumberEffectivityCxtPartNumber = false;\n                    }\n                    if (LotNumberEffectivityCxtPartNumber) {\n                        System.out.println (\"LotNumberEffectivityCxtPartNumber: \" + characters.getData ());\n                        LotNumberEffectivityCxtPartNumber = false;\n                    }\n                    if (DefaultUnit) {\n                        System.out.println (\"DefaultUnit: \" + characters.getData ());\n                        DefaultUnit = false;\n                    }\n                    if (Name) {\n                        System.out.println (\"Name: \" + characters.getData ());\n                        Name = false;\n                    }\n                    if (PartType) {\n                        System.out.println (\"PartType: \" + characters.getData ());\n                        PartType = false;\n                    }\n                    if (Source) {\n                        System.out.println (\"Source: \" + characters.getData ());\n                        Source = false;\n                    }\n                    if (State) {\n                        System.out.println (\"State: \" + characters.getData ());\n                        State = false;\n                    }\n                    if (IsPhantom) {\n                        System.out.println (\"IsPhantom: \" + characters.getData ());\n                        IsPhantom = false;\n                    }\n                    if (Version) {\n                        System.out.println (\"Version: \" + characters.getData ());\n                        Version = false;\n                    }\n                    if (Iteration) {\n                        System.out.println (\"Iteration: \" + characters.getData ());\n                        Iteration = false;\n                    }\n                    if (PreviousVersion) {\n                        System.out.println (\"PreviousVersion: \" + characters.getData ());\n                        PreviousVersion = false;\n                    }\n                    if (IsConfigurable) {\n                        System.out.println (\"IsConfigurable: \" + characters.getData ());\n                        IsConfigurable = false;\n                    }\n                    if (IsCollapsible) {\n                        System.out.println (\"IsCollapsible: \" + characters.getData ());\n                        IsCollapsible = false;\n                    }\n                    if (TargetID) {\n                        System.out.println (\"TargetID: \" + characters.getData ());\n                        TargetID = false;\n                    }\n                    break;\n                case XMLStreamConstants.END_ELEMENT :\n                    EndElement endElement = event.asEndElement ();\n                    if (endElement.getName ().getLocalPart ().equalsIgnoreCase (\"Part\")) {\n                        System.out.println (\"End Element : Part\");\n                        System.out.println ();\n                    }\n                    break;\n            }\n        }","LineStart":34,"CharStart":8,"LineEnd":202,"CharEnd":9,"status":"core-diff"},{"fileName":"Clone592.java","labeltext":"core-diff2","codeSnippet":"    ap.selectXPath (\"//part/*[text()]\");\n    if (! vg.parseFile (\"d:\\\\xml\\\\soap.xml\", false)) {\n        System.out.println (\"invalid xml\");\n        System.exit (0);\n    }\n    VTDNav vn = vg.getNav ();\n    ap.bind (vn);\n    int i = 0;\n    while ((i = ap.evalXPath ()) != - 1) {\n        System.out.println (\" \" + vn.toRawString (i) + \" = \" + vn.toNormalizedString (vn.getText ()));\n    }","LineStart":211,"CharStart":4,"LineEnd":221,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone592.java","labeltext":"noncore-diff1","codeSnippet":"    VTDGen vg = new VTDGen ();\n    AutoPilot ap = new AutoPilot ();","LineStart":209,"CharStart":4,"LineEnd":210,"CharEnd":36,"status":"noncore-diff"},{"fileName":"Clone592.java","labeltext":"noncore-diff2","codeSnippet":"    } catch (Exception e) {\n        e.printStackTrace ();\n    }","LineStart":203,"CharStart":4,"LineEnd":205,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone592.java","labeltext":"noncore-diff2","codeSnippet":"    boolean ObjectID = false;\n    boolean Class = false;\n    boolean LastChangedBy = false;\n    boolean Number = false;\n    boolean StartEffectivity = false;\n    boolean EndEffectivity = false;\n    boolean StartSerialNumberEffectivity = false;\n    boolean EndSerialNumberEffectivity = false;\n    boolean StartLotNumberEffectivity = false;\n    boolean EndLotNumberEffectivity = false;\n    boolean SerialNumberEffectivityCxtPartNumber = false;\n    boolean LotNumberEffectivityCxtPartNumber = false;\n    boolean DefaultUnit = false;\n    boolean Name = false;\n    boolean PartType = false;\n    boolean Source = false;\n    boolean State = false;\n    boolean IsPhantom = false;\n    boolean Version = false;\n    boolean Iteration = false;\n    boolean PreviousVersion = false;\n    boolean IsConfigurable = false;\n    boolean IsCollapsible = false;\n    boolean TargetID = false;\n    try {","LineStart":9,"CharStart":4,"LineEnd":33,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone593.java","labeltext":"core-diff1","codeSnippet":"    Object sharedObject = new Object ();\n    MyClass sampleA = new MyClass ();\n    sampleA.myObject = sharedObject;\n    MyClass sampleB = new MyClass ();\n    sampleB.myObject = sharedObject;\n    System.out.println (sampleA.sharedObject == sampleB.sharedObject);\n    System.out.println (sampleA == sampleB);","LineStart":25,"CharStart":4,"LineEnd":31,"CharEnd":44,"status":"core-diff"},{"fileName":"Clone593.java","labeltext":"core-diff1","codeSnippet":"    char [] charA = getBackingArray (strA);\n    char [] charB = getBackingArray (strB);\n    char [] subA1 = getBackingArray (strA.substring (1));\n    char [] subA2 = getBackingArray (strA.substring (0, 9));\n    System.out.println (\"charA address: \" + System.identityHashCode (charA));\n    System.out.println (\"charB address: \" + System.identityHashCode (charB));\n    System.out.println (\"subA1 address: \" + System.identityHashCode (subA1));\n    System.out.println (\"subA2 address: \" + System.identityHashCode (subA2));\n    System.out.println (\"charA == charB: \" + (charA == charB));\n    System.out.println (\"charA == subA1: \" + (charA == subA1));\n    System.out.println (\"charA == subA2: \" + (charA == subA2));","LineStart":11,"CharStart":4,"LineEnd":21,"CharEnd":63,"status":"core-diff"},{"fileName":"Clone593.java","labeltext":"noncore-diff1","codeSnippet":"    String strA = \"1234567890\";\n    String strB = \"1234567890\";","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":31,"status":"noncore-diff"},{"fileName":"Clone596.java","labeltext":"core-sim1","codeSnippet":"    for (Character c : characters) {\n        for (Character d : characters) {\n            for (Character e : characters) {\n                for (Character f : characters) {\n                    String s = \"\" + c + d + e + f;\n                    allStrings.add (s);\n                }\n            }\n        }\n    }","LineStart":41,"CharStart":4,"LineEnd":50,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone596.java","labeltext":"core-sim1","codeSnippet":"    OUTER : while (true) {\n        for (chars [last] = 'a'; chars [last] <= 'z'; chars [last] += 2) {\n            newComination (chars);\n            chars [last] ++;\n            newComination (chars);\n        }\n        UPDATED : {\n            for (int i = last - 1;\n            i >= 0; i --) {\n                if (chars [i] ++ >= 'z') chars [i] = 'a';\n                else break UPDATED;\n            }\n            break OUTER;\n        }}","LineStart":16,"CharStart":4,"LineEnd":29,"CharEnd":10,"status":"core-sim"},{"fileName":"Clone596.java","labeltext":"noncore-diff1","codeSnippet":"    long start = System.nanoTime ();\n    int letters = 26;\n    int count = 6;\n    final int combinations = (int) Math.pow (letters, count);\n    char [] chars = new char [count];\n    Arrays.fill (chars, 'a');\n    final int last = count - 1;","LineStart":9,"CharStart":4,"LineEnd":15,"CharEnd":31,"status":"noncore-diff"},{"fileName":"Clone596.java","labeltext":"noncore-diff2","codeSnippet":"    List < Character > characters = new ArrayList < Character > ();\n    for (char c = 'a';\n    c <= 'z'; c ++) {\n        characters.add (c);\n    }\n    List < String > allStrings = new ArrayList < String > ();","LineStart":35,"CharStart":4,"LineEnd":40,"CharEnd":61,"status":"noncore-diff"},{"fileName":"Clone596.java","labeltext":"noncore-diff1","codeSnippet":"    long time = System.nanoTime () - start;\n    System.out.printf (\"Took %.3f seconds to generate %,d combinations%n\", time / 1e9, combinations);","LineStart":30,"CharStart":4,"LineEnd":31,"CharEnd":101,"status":"noncore-diff"},{"fileName":"Clone596.java","labeltext":"noncore-diff3","codeSnippet":"System.out.println (allStrings.size ());","LineStart":51,"CharStart":4,"LineEnd":51,"CharEnd":44,"status":"noncore-diff"},{"fileName":"Clone607.java","labeltext":"core-sim1","codeSnippet":"    while (i < string.length ()) {\n        counter = 1;\n        for (int j = i + 1;\n        j < string.length (); j ++) {\n            System.out.println (\"string length =\" + string.length ());\n            if (string.charAt (i) == string.charAt (j)) {\n                counter ++;\n            }\n        }\n        result = result + string.charAt (i) + counter;\n        string = string.replaceAll (String.valueOf (string.charAt (i)), \"\");\n    }\n    System.out.println (\"result is = \" + result);","LineStart":28,"CharStart":4,"LineEnd":40,"CharEnd":49,"status":"core-sim"},{"fileName":"Clone607.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < str.length (); i ++) {\n        arrlist.add (str.charAt (i));\n    }\n    for (int i = 0;\n    i < str.length (); i ++) {\n        int freq = Collections.frequency (arrlist, str.charAt (i));\n        System.out.println (\"Frequency of \" + str.charAt (i) + \"  is:   \" + freq);\n    }","LineStart":12,"CharStart":4,"LineEnd":20,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone607.java","labeltext":"core-diff1","codeSnippet":"    inp = new Scanner (System.in);\n    String str = inp.nextLine ();","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":33,"status":"core-diff"},{"fileName":"Clone607.java","labeltext":"noncore-diff1","codeSnippet":"List < Character > arrlist = new ArrayList < Character > ();","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":64,"status":"noncore-diff"},{"fileName":"Clone607.java","labeltext":"noncore-diff2","codeSnippet":"    String string = \"aaabbbbbaccc\";\n    int counter;\n    String result = \"\";\n    int i = 0;","LineStart":24,"CharStart":4,"LineEnd":27,"CharEnd":14,"status":"noncore-diff"},{"fileName":"Clone608.java","labeltext":"core-diff1","codeSnippet":"    for (Entry < String > string : wordsMultiset.entrySet ()) {\n        if (! string.getElement ().isEmpty ()) output += string.getCount () + \"\" + string.getElement ();\n    }","LineStart":28,"CharStart":4,"LineEnd":30,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone608.java","labeltext":"core-diff2","codeSnippet":"    for (int i = 0;\n    i < str.length (); i ++) {\n        arrlist.add (str.charAt (i));\n    }\n    for (int i = 0;\n    i < str.length (); i ++) {\n        int freq = Collections.frequency (arrlist, str.charAt (i));\n        System.out.println (\"Frequency of \" + str.charAt (i) + \"  is:   \" + freq);\n    }","LineStart":12,"CharStart":4,"LineEnd":20,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone608.java","labeltext":"noncore-diff1","codeSnippet":"    String output = \"\";\n    Multiset < String > wordsMultiset = HashMultiset.create ();\n    String [] words = \"AAABBBBCC\".split (\"\");\n    wordsMultiset.addAll (Arrays.asList (words));","LineStart":24,"CharStart":4,"LineEnd":27,"CharEnd":49,"status":"noncore-diff"},{"fileName":"Clone608.java","labeltext":"noncore-diff2","codeSnippet":"    inp = new Scanner (System.in);\n    String str = inp.nextLine ();\n    List < Character > arrlist = new ArrayList < Character > ();","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":64,"status":"noncore-diff"},{"fileName":"Clone608.java","labeltext":"noncore-diff3","codeSnippet":"System.out.println (output);","LineStart":31,"CharStart":4,"LineEnd":31,"CharEnd":32,"status":"noncore-diff"},{"fileName":"Clone610.java","labeltext":"noncore-sim1","codeSnippet":"DateTimeFormatter formatter = DateTimeFormatter.ofPattern (dateFormat);","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":75,"status":"noncore-sim"},{"fileName":"Clone610.java","labeltext":"noncore-sim1","codeSnippet":"DateTimeFormatter formatter = DateTimeFormatter.ofPattern (dateFormat);","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":75,"status":"noncore-sim"},{"fileName":"Clone610.java","labeltext":"core-sim1","codeSnippet":"    TemporalAccessor parsed = formatter.parseBest (date, ZonedDateTime :: from, LocalDateTime :: from);\n    if (parsed instanceof ZonedDateTime) {\n        return (ZonedDateTime) parsed;\n    }\n    if (parsed instanceof LocalDateTime) {\n        LocalDateTime dt = (LocalDateTime) parsed;\n        return dt.atZone (ZoneId.systemDefault ());\n    }\n    return null;","LineStart":10,"CharStart":4,"LineEnd":18,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone610.java","labeltext":"core-sim1","codeSnippet":"    try {\n        zonedDateTime = ZonedDateTime.parse (date, formatter);\n    } catch (DateTimeException e) {\n        LocalDateTime localDateTime = LocalDateTime.parse (date, formatter);\n        zonedDateTime = localDateTime.atZone (ZoneId.systemDefault ());\n    }\n    return zonedDateTime;","LineStart":24,"CharStart":4,"LineEnd":30,"CharEnd":25,"status":"core-sim"},{"fileName":"Clone610.java","labeltext":"noncore-diff1","codeSnippet":"ZonedDateTime zonedDateTime = null;","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":39,"status":"noncore-diff"},{"fileName":"Clone612.java","labeltext":"noncore-diff1","codeSnippet":"    driver.close ();\n    p.destroy ();","LineStart":16,"CharStart":4,"LineEnd":17,"CharEnd":17,"status":"noncore-diff"},{"fileName":"Clone612.java","labeltext":"noncore-diff2","codeSnippet":"    try {\n        Robot robot = new Robot ();","LineStart":21,"CharStart":4,"LineEnd":22,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone612.java","labeltext":"noncore-diff2","codeSnippet":"    } catch (AWTException e) {\n        e.printStackTrace ();\n    } catch (IOException e) {\n        e.printStackTrace ();\n    }","LineStart":25,"CharStart":4,"LineEnd":29,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone614.java","labeltext":"core-sim1","codeSnippet":"    if (display.isDisposed () || bar.isDisposed ()) {\n        return;\n    }","LineStart":12,"CharStart":4,"LineEnd":14,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone614.java","labeltext":"core-sim1","codeSnippet":"    if (bar.isDisposed () || bar.getShell ().isDisposed ()) {\n        return;\n    }","LineStart":51,"CharStart":4,"LineEnd":53,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone614.java","labeltext":"core-sim1","codeSnippet":"        if (display.isDisposed () || bar.isDisposed ()) {\n            return;\n        }","LineStart":28,"CharStart":8,"LineEnd":30,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone614.java","labeltext":"core-sim1","codeSnippet":"            if (bar.isDisposed () || bar.getShell ().isDisposed ()) {\n                return;\n            }","LineStart":17,"CharStart":12,"LineEnd":19,"CharEnd":13,"status":"core-sim"},{"fileName":"Clone614.java","labeltext":"core-sim2","codeSnippet":"            synchronized (lock) {\n                bar.getShell ().pack (true);\n                orgSize [0] = bar.getShell ().getSize ().y;\n                currentSize [0] = orgSize [0];\n            }","LineStart":20,"CharStart":12,"LineEnd":24,"CharEnd":13,"status":"core-sim"},{"fileName":"Clone614.java","labeltext":"core-sim1","codeSnippet":"                    if (bar.isDisposed () || bar.getShell ().isDisposed ()) {\n                        return;\n                    }","LineStart":34,"CharStart":20,"LineEnd":36,"CharEnd":21,"status":"core-sim"},{"fileName":"Clone614.java","labeltext":"core-sim2","codeSnippet":"                    currentSize [0] = bar.getShell ().getSize ().y;\n                    if (currentSize [0] != orgSize [0]) {\n                        return;\n                    } else {\n                        bar.getShell ().layout (true);\n                        bar.getShell ().pack (true);\n                    }","LineStart":37,"CharStart":20,"LineEnd":43,"CharEnd":21,"status":"core-sim"},{"fileName":"Clone614.java","labeltext":"core-sim2","codeSnippet":"    synchronized (lock) {\n        bar.getShell ().pack (true);\n        orgSize [0] = bar.getShell ().getSize ().y;\n        currentSize [0] = orgSize [0];\n    }","LineStart":54,"CharStart":4,"LineEnd":58,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone614.java","labeltext":"noncore-diff1","codeSnippet":"    final int [] orgSize = new int [1];\n    final int [] currentSize = new int [1];\n    final Object lock = new Object ();","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":38,"status":"noncore-diff"},{"fileName":"Clone614.java","labeltext":"noncore-diff2","codeSnippet":"    display.syncExec (new Runnable () {\n        public void run () {","LineStart":15,"CharStart":4,"LineEnd":16,"CharEnd":28,"status":"noncore-diff"},{"fileName":"Clone614.java","labeltext":"noncore-diff2","codeSnippet":"        }}\n    );\n    while (currentSize [0] == orgSize [0]) {","LineStart":25,"CharStart":8,"LineEnd":27,"CharEnd":44,"status":"noncore-diff"},{"fileName":"Clone614.java","labeltext":"noncore-diff2","codeSnippet":"        display.syncExec (new Runnable () {\n            public void run () {\n                synchronized (lock) {","LineStart":31,"CharStart":8,"LineEnd":33,"CharEnd":37,"status":"noncore-diff"},{"fileName":"Clone614.java","labeltext":"noncore-diff2","codeSnippet":"                }\n            }}\n        );\n    }","LineStart":44,"CharStart":15,"LineEnd":47,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone618.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < a.length (); i ++) {\n        temp = temp.replaceFirst (Pattern.quote (a.substring (i, i + 1)), \"\");\n        if (b.length () - temp.length () != i + 1) return false;\n    }\n    return true;","LineStart":10,"CharStart":4,"LineEnd":15,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone618.java","labeltext":"core-sim1","codeSnippet":"    for (char i : a.toCharArray ()) {\n        Integer val = mapA.get (\"\" + i);\n        if (val != null) {\n            mapA.put (\"\" + i, val + 1);\n        } else {\n            mapA.put (\"\" + i, 1);\n        }\n    }\n    for (char i : b.toCharArray ()) {\n        Integer val = mapB.get (\"\" + i);\n        if (val != null) {\n            mapB.put (\"\" + i, val + 1);\n        } else {\n            mapB.put (\"\" + i, 1);\n        }\n    }\n    for (Map.Entry < String, Integer > entry : mapA.entrySet ()) {\n        if (mapB.get (entry.getKey ()) == null || entry.getValue () > mapB.get (entry.getKey ())) {\n            status = false;\n        }\n    }\n    return status;","LineStart":22,"CharStart":3,"LineEnd":43,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone618.java","labeltext":"noncore-diff1.","codeSnippet":"String temp = b;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":20,"status":"noncore-diff"},{"fileName":"Clone618.java","labeltext":"noncore-diff2","codeSnippet":"    boolean status = true;\n    Map < String, Integer > mapA = new HashMap < > ();\n    Map < String, Integer > mapB = new HashMap < > ();","LineStart":19,"CharStart":4,"LineEnd":21,"CharEnd":54,"status":"noncore-diff"},{"fileName":"Clone627.java","labeltext":"core-sim1","codeSnippet":"    if (arr1.length < arr2.length && arr1.length < arr3.length || arr2.length <= arr3.length) {\n        hashArray = arr1;\n        queryArray = ArrayUtils.addAll (arr2, arr3);\n    } else if (arr2.length < arr1.length && arr2.length < arr3.length || arr1.length <= arr3.length) {\n        hashArray = arr2;\n        queryArray = ArrayUtils.addAll (arr1, arr3);\n    } else if (arr3.length < arr1.length && arr3.length < arr2.length || arr1.length <= arr2.length) {\n        hashArray = arr3;\n        queryArray = ArrayUtils.addAll (arr1, arr2);\n    }\n    HashSet < Comparable > intersectionSet = new HashSet < > ();\n    HashSet < Comparable > arrayToHash = new HashSet < > ();\n    for (Comparable element : hashArray) {\n        arrayToHash.add (element);\n    }\n    for (Comparable element : queryArray) {\n        if (element != null) {\n            comparisons ++;\n        }\n        if (arrayToHash.contains (element)) {\n            intersectionSet.add (element);\n        }\n    }\n    return intersectionSet.toArray (new Comparable [0]);","LineStart":23,"CharStart":4,"LineEnd":46,"CharEnd":56,"status":"core-sim"},{"fileName":"Clone627.java","labeltext":"core-sim1","codeSnippet":"    for (Comparable x : collectionSet1) {\n        if (! collectionSet2.add (x)) {\n            commonStuff.add (x);\n        }\n    }\n    return commonStuff.toArray ();","LineStart":11,"CharStart":4,"LineEnd":16,"CharEnd":34,"status":"core-sim"},{"fileName":"Clone627.java","labeltext":"noncore-diff1","codeSnippet":"    Set < Comparable > collectionSet1 = new HashSet < > (Arrays.asList (collection1));\n    Set < Comparable > collectionSet2 = new HashSet < > (Arrays.asList (collection2));","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":86,"status":"noncore-diff"},{"fileName":"Clone627.java","labeltext":"noncore-diff1","codeSnippet":"    Comparable [] arr1 = collections [0];\n    Comparable [] arr2 = collections [1];\n    Comparable [] arr3 = collections [2];","LineStart":20,"CharStart":3,"LineEnd":22,"CharEnd":41,"status":"noncore-diff"},{"fileName":"Clone632.java","labeltext":"core-diff1","codeSnippet":"    while (makeMore) {\n        new Leakee (0).check ();\n    }\n    while (true) {\n        Thread.sleep (1000);\n        System.out.println (\"memory=\" + Runtime.getRuntime ().freeMemory () + \" / \" + Runtime.getRuntime ().totalMemory ());\n    }","LineStart":23,"CharStart":3,"LineEnd":29,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone632.java","labeltext":"core-diff2","codeSnippet":"    try {\n        for (;;) unsafe.allocateMemory (1024 * 1024);\n    } catch (Error e) {\n        System.out.println (\"Boom :)\");\n        e.printStackTrace ();\n    }","LineStart":14,"CharStart":4,"LineEnd":19,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone632.java","labeltext":"core-diff3","codeSnippet":"    Class unsafeClass = Class.forName (\"sun.misc.Unsafe\");\n    Field f = unsafeClass.getDeclaredField (\"theUnsafe\");\n    f.setAccessible (true);\n    Unsafe unsafe = (Unsafe) f.get (null);","LineStart":9,"CharStart":4,"LineEnd":12,"CharEnd":42,"status":"core-diff"},{"fileName":"Clone632.java","labeltext":"noncore-diff1","codeSnippet":"System.out.print (\"4..3..2..1...\");","LineStart":13,"CharStart":4,"LineEnd":13,"CharEnd":39,"status":"noncore-diff"},{"fileName":"Clone633.java","labeltext":"noncore-diff1","codeSnippet":" System.out.print (\"4..3..2..1...\");","LineStart":13,"CharStart":3,"LineEnd":13,"CharEnd":39,"status":"noncore-diff"},{"fileName":"Clone633.java","labeltext":"core-diff1","codeSnippet":"    Class unsafeClass = Class.forName (\"sun.misc.Unsafe\");\n    Field f = unsafeClass.getDeclaredField (\"theUnsafe\");\n    f.setAccessible (true);\n    Unsafe unsafe = (Unsafe) f.get (null);","LineStart":9,"CharStart":4,"LineEnd":12,"CharEnd":42,"status":"core-diff"},{"fileName":"Clone633.java","labeltext":"core-diff2","codeSnippet":"    try {\n        for (;;) unsafe.allocateMemory (1024 * 1024);\n    } catch (Error e) {\n        System.out.println (\"Boom :)\");\n        e.printStackTrace ();\n    }","LineStart":14,"CharStart":4,"LineEnd":19,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone633.java","labeltext":"core-diff2","codeSnippet":"    for (int i = 0;\n    i < 10000000; i ++) {\n        zos.write ((int) (Math.round (Math.random () * 100) + 20));\n    }","LineStart":28,"CharStart":3,"LineEnd":31,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone633.java","labeltext":"core-diff3","codeSnippet":"    ZipOutputStream zos = new ZipOutputStream (new FileOutputStream (new File (\"big.jar\")));\n    zos.putNextEntry (new ZipEntry (\"resource.txt\"));\n    zos.write (\"not too much in here\".getBytes ());\n    zos.closeEntry ();\n    zos.putNextEntry (new ZipEntry (\"largeFile.out\"));","LineStart":23,"CharStart":4,"LineEnd":27,"CharEnd":54,"status":"core-diff"},{"fileName":"Clone633.java","labeltext":"noncore-diff2","codeSnippet":"    zos.closeEntry ();\n    zos.close ();","LineStart":32,"CharStart":4,"LineEnd":33,"CharEnd":17,"status":"noncore-diff"},{"fileName":"Clone645.java","labeltext":"core-sim1","codeSnippet":"    while (scanner.hasNextLine ()) {\n        String line = scanner.nextLine ();\n        Matcher m = p.matcher (line);\n        if (m.find ()) {\n            System.out.println (line);\n        }\n    }","LineStart":23,"CharStart":3,"LineEnd":29,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone645.java","labeltext":"core-sim1","codeSnippet":"    try (final Reader r = new InputStreamReader (System.in, decoder); final BufferedReader reader = new BufferedReader (r)) {\n        String line;\n        while ((line = reader.readLine ()) != null) if (pattern.matcher (line).find ()) System.out.println (line);\n    }","LineStart":13,"CharStart":4,"LineEnd":16,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone645.java","labeltext":"noncore-sim1","codeSnippet":"final Pattern pattern = Pattern.compile (args [0]);","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":55,"status":"noncore-sim"},{"fileName":"Clone645.java","labeltext":"noncore-sim1","codeSnippet":"Pattern p = Pattern.compile (\"this\");","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":41,"status":"noncore-sim"},{"fileName":"Clone645.java","labeltext":"noncore-diff1","codeSnippet":"if (args.length == 0) throw new IllegalArgumentException (\"missing pattern as an argument\");","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":96,"status":"noncore-diff"},{"fileName":"Clone645.java","labeltext":"noncore-diff2","codeSnippet":"    final Charset cs = Charset.defaultCharset ();\n    final CharsetDecoder decoder = cs.newDecoder ().onMalformedInput (CodingErrorAction.REPORT);","LineStart":11,"CharStart":4,"LineEnd":12,"CharEnd":96,"status":"noncore-diff"},{"fileName":"Clone645.java","labeltext":"noncore-diff3","codeSnippet":"String s = \"this is line one\\n\" + \"this is line two\\n\" + \"This is line three\";","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":82,"status":"noncore-diff"},{"fileName":"Clone645.java","labeltext":"noncore-diff4","codeSnippet":"Scanner scanner = new Scanner (s);","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":38,"status":"noncore-diff"},{"fileName":"Clone646.java","labeltext":"core-diff1","codeSnippet":"    Vector v1 = new Vector ();\n    v1.add (new PrintOneToHundered ());\n    Vector v2 = new Vector ();\n    v2.addAll (v1);\n    v2.addAll (v1);\n    Vector v4 = new Vector ();\n    v4.addAll (v2);\n    v4.addAll (v2);\n    Vector v8 = new Vector ();\n    v8.addAll (v4);\n    v8.addAll (v4);\n    Vector v16 = new Vector ();\n    v16.addAll (v8);\n    v16.addAll (v8);\n    Vector v32 = new Vector ();\n    v32.addAll (v16);\n    v32.addAll (v16);\n    Vector v64 = new Vector ();\n    v64.addAll (v32);\n    v64.addAll (v32);\n    Vector v100 = new Vector ();\n    v100.addAll (v64);\n    v100.addAll (v32);\n    v100.addAll (v4);\n    System.out.println (v100);","LineStart":9,"CharStart":4,"LineEnd":33,"CharEnd":30,"status":"core-diff"},{"fileName":"Clone646.java","labeltext":"core-diff2","codeSnippet":"    String set = new java.util.BitSet () {\n        {\n            set (1, 100 + 1);\n        }\n    }\n    .toString ();\n    System.out.append (set, 1, set.length () - 1);","LineStart":37,"CharStart":4,"LineEnd":43,"CharEnd":50,"status":"core-diff"},{"fileName":"Clone647.java","labeltext":"core-diff1","codeSnippet":"    Vector v1 = new Vector ();\n    v1.add (new PrintOneToHundered ());\n    Vector v2 = new Vector ();\n    v2.addAll (v1);\n    v2.addAll (v1);\n    Vector v4 = new Vector ();\n    v4.addAll (v2);\n    v4.addAll (v2);\n    Vector v8 = new Vector ();\n    v8.addAll (v4);\n    v8.addAll (v4);\n    Vector v16 = new Vector ();\n    v16.addAll (v8);\n    v16.addAll (v8);\n    Vector v32 = new Vector ();\n    v32.addAll (v16);\n    v32.addAll (v16);\n    Vector v64 = new Vector ();\n    v64.addAll (v32);\n    v64.addAll (v32);\n    Vector v100 = new Vector ();\n    v100.addAll (v64);\n    v100.addAll (v32);\n    v100.addAll (v4);\n    System.out.println (v100);","LineStart":9,"CharStart":4,"LineEnd":33,"CharEnd":30,"status":"core-diff"},{"fileName":"Clone647.java","labeltext":"core-diff2","codeSnippet":"    Runnable r1 = new Runnable () {\n        int n;\n        public void run () {\n            System.out.println (++ n);\n        }}\n    ;\n    fourTimes (fiveTimes (fiveTimes (r1))).run ();","LineStart":37,"CharStart":4,"LineEnd":43,"CharEnd":50,"status":"core-diff"},{"fileName":"Clone660.java","labeltext":"core-sim1","codeSnippet":"    do {\n        temp1 = getTemp ();\n        scale1 = scaleOne ();\n        scale2 = toScale ();\n        System.out.print (\"Your final temp is: \" + convert () + ' ' + scale2);\n    } while (cont == 'N');","LineStart":20,"CharStart":4,"LineEnd":25,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone660.java","labeltext":"core-sim1","codeSnippet":"    System.out.println (\"What scale is your temp currently in?\\n\" + \"1: Fahrenheit\\n\" + \"2: Celsius\\n\" + \"3: Kelvin\\n\" + \"Please enter 1, 2, or 3: \\n\");\n    scaleOne = getScale ();\n    System.out.println (\"What scale would you like to convert to?\\n\" + \"1: Fahrenheit\\n\" + \"2: Celsius\\n\" + \"3: Kelvin\\n\" + \"Please enter 1, 2, or 3:\\n \");\n    scaleTwo = getScale ();\n    System.out.print (\"Your final temp is: \" + convert (scaleOne, scaleTwo));","LineStart":11,"CharStart":3,"LineEnd":15,"CharEnd":77,"status":"core-sim"},{"fileName":"Clone660.java","labeltext":"noncore-diff1","codeSnippet":"    String scaleOne;\n    String scaleTwo;","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":20,"status":"noncore-diff"},{"fileName":"Clone660.java","labeltext":"noncore-diff2","codeSnippet":"char cont = 'E';","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":20,"status":"noncore-diff"},{"fileName":"Clone664.java","labeltext":"core-diff1","codeSnippet":"    while (true) {\n        System.out.println (i);\n        try {\n            Thread.sleep (1000);\n            cb.await ();\n        } catch (InterruptedException e) {\n            e.printStackTrace ();\n        } catch (BrokenBarrierException e) {\n            e.printStackTrace ();\n        }\n        i = i + 3;\n    }","LineStart":10,"CharStart":4,"LineEnd":21,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone664.java","labeltext":"core-diff2","codeSnippet":"    while (i < 50) {\n        while (s.getState () != 2) {\n            synchronized (s) {\n                try {\n                    s.wait ();\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n            }\n        }\n        synchronized (s) {\n            if (s.getState () == 2) System.out.println (\"t3 \" + i);\n            i = i + 3;\n            s.setState (3);\n            s.notifyAll ();\n        }\n    }","LineStart":26,"CharStart":4,"LineEnd":42,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone664.java","labeltext":"noncore-diff1","codeSnippet":"int i = 1;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":14,"status":"noncore-diff"},{"fileName":"Clone664.java","labeltext":"noncore-diff2","codeSnippet":"int i = 3;","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":14,"status":"noncore-diff"},{"fileName":"Clone668.java","labeltext":"core-diff1","codeSnippet":"    try {\n        cb.await ();\n        i = i + 3;\n        Thread.sleep (1000);\n    } catch (InterruptedException e) {\n        e.printStackTrace ();\n    } catch (BrokenBarrierException e) {\n        e.printStackTrace ();\n    }","LineStart":10,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone668.java","labeltext":"core-diff2","codeSnippet":"    while (i < 50) {\n        while (s.getState () != 3) {\n            synchronized (s) {\n                try {\n                    s.wait ();\n                } catch (InterruptedException e) {\n                    e.printStackTrace ();\n                }\n            }\n        }\n        synchronized (s) {\n            if (s.getState () == 3) System.out.println (\"t1 \" + i);\n            s.setState (1);\n            i = i + 3;\n            s.notifyAll ();\n        }\n    }","LineStart":23,"CharStart":4,"LineEnd":39,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone668.java","labeltext":"noncore-diff1","codeSnippet":"int i = 1;","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":14,"status":"noncore-diff"},{"fileName":"Clone668.java","labeltext":"noncore-diff2","codeSnippet":"System.out.println (i);","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":27,"status":"noncore-diff"},{"fileName":"Clone671.java","labeltext":"core-diff1","codeSnippet":"    try {\n        cb.await ();\n        i = i + 3;\n        Thread.sleep (1000);\n    } catch (InterruptedException e) {\n        e.printStackTrace ();\n    } catch (BrokenBarrierException e) {\n        e.printStackTrace ();\n    }","LineStart":10,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone671.java","labeltext":"core-diff2","codeSnippet":"    try {\n        for (int i = 0;\n        i < 2; i ++) {\n            System.out.println (\"tic\");\n        }\n    } catch (Exception e) {\n        e.getStackTrace ();\n    }","LineStart":22,"CharStart":4,"LineEnd":29,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone671.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (i);","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":27,"status":"noncore-diff"},{"fileName":"Clone684.java","labeltext":"noncore-sim1","codeSnippet":"    int [] Number_arr = new int [11];\n    int count = 1;\n    int j = 0;\n    int k = 0;","LineStart":9,"CharStart":4,"LineEnd":12,"CharEnd":14,"status":"noncore-sim"},{"fileName":"Clone684.java","labeltext":"noncore-sim1","codeSnippet":"    int [] Number_arr = new int [11];\n    int count = 1;\n    int j = 0;\n    int k = 0;","LineStart":31,"CharStart":4,"LineEnd":34,"CharEnd":14,"status":"noncore-sim"},{"fileName":"Clone684.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < arr.length - 1; i ++) {\n        if (arr [i].equals (arr [i + 1])) count ++;\n        else {\n            Number_arr [j] = count;\n            j ++;\n            count = 1;\n        }\n    }","LineStart":13,"CharStart":4,"LineEnd":21,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone684.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < arr.length - 1; i ++) {\n        if (arr [i].equals (arr [i + 1])) count ++;\n        else {\n            Number_arr [j] = count;\n            j ++;\n            count = 1;\n        }\n    }","LineStart":35,"CharStart":4,"LineEnd":43,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone684.java","labeltext":"noncore-sim2","codeSnippet":"Number_arr [j] = count;","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":27,"status":"noncore-sim"},{"fileName":"Clone684.java","labeltext":"noncore-sim2","codeSnippet":"return Number_arr;","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":22,"status":"noncore-sim"},{"fileName":"Clone684.java","labeltext":"noncore-sim2","codeSnippet":"    Number_arr [j] = count;\n    return Number_arr;","LineStart":44,"CharStart":4,"LineEnd":45,"CharEnd":22,"status":"noncore-sim"},{"fileName":"Clone684.java","labeltext":"noncore-diff1","codeSnippet":"    for (int i = 0;\n    i < Number_arr.length; i ++) {\n        System.out.print (Number_arr [i] + \"  \");\n    }","LineStart":23,"CharStart":4,"LineEnd":26,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone687.java","labeltext":"noncore-sim1","codeSnippet":"        for (int i = 0;\n        i < 5; i ++) {\n            System.out.println (String.format (\"%d -- %s\", i + start, Thread.currentThread ().getName ()));\n        }","LineStart":24,"CharStart":8,"LineEnd":27,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone687.java","labeltext":"noncore-sim1","codeSnippet":"        for (int i = 0;\n        i < 5; i ++) {\n            count ++;\n            System.out.println (count + \" -- \" + Thread.currentThread ());\n        }","LineStart":10,"CharStart":8,"LineEnd":14,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone687.java","labeltext":"core-diff1","codeSnippet":"while (count < 15) {","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":24,"status":"core-diff"},{"fileName":"Clone687.java","labeltext":"core-diff1","codeSnippet":"        notifyAll ();\n        wait ();\n    }","LineStart":15,"CharStart":7,"LineEnd":17,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone687.java","labeltext":"core-diff2","codeSnippet":"    try {\n        waitForSemaphore.acquire ();\n        int start = nextStartIdx;","LineStart":21,"CharStart":4,"LineEnd":23,"CharEnd":33,"status":"core-diff"},{"fileName":"Clone687.java","labeltext":"core-diff2","codeSnippet":"        nextStartIdx += 5;\n        next.release ();\n    } catch (InterruptedException ie) {\n        Thread.currentThread ().interrupt ();\n    }","LineStart":28,"CharStart":8,"LineEnd":32,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone691.java","labeltext":"core-sim1","codeSnippet":"        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {\n            LOGGER.error (\"The rest request is empty.No info to register\");\n        }","LineStart":37,"CharStart":8,"LineEnd":39,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone691.java","labeltext":"core-sim1","codeSnippet":"        if (req.getParts ().isEmpty () || req.getParameterMap ().isEmpty ()) {\n            LOGGER.error (\"The rest request is empty.No info to register\");\n            return;\n        }","LineStart":11,"CharStart":8,"LineEnd":14,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone691.java","labeltext":"core-sim2","codeSnippet":"ModuleEntityDao moduleEntityDao;","LineStart":36,"CharStart":8,"LineEnd":36,"CharEnd":40,"status":"core-sim"},{"fileName":"Clone691.java","labeltext":"core-sim2","codeSnippet":"        ModuleEntityGenerator moduleEntityGenerator = new ModuleEntityGenerator ();\n        ModuleEntityDao moduleEntityDao = moduleEntityGenerator.get (req, moduleType);\n        if (moduleEntityDao == null) {\n            LOGGER.error (\"The BA object is null. There is nothing to register\");\n            return;\n        }","LineStart":15,"CharStart":8,"LineEnd":20,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone691.java","labeltext":"core-sim2","codeSnippet":"          else if ((moduleEntityDao = new ModuleEntityGenerator ().get (req, moduleType)) == null) {\n            LOGGER.error (\"The BA object is null. There is nothing to register\");\n        } ","LineStart":39,"CharStart":10,"LineEnd":41,"CharEnd":10,"status":"core-sim"},{"fileName":"Clone691.java","labeltext":"core-sim3","codeSnippet":"          else if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {\n            processRegistryDal.addNewModule (moduleEntityDao);\n        } else {\n            processRegistryDal.updateModule (moduleEntityDao);\n        }","LineStart":41,"CharStart":10,"LineEnd":45,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone691.java","labeltext":"core-sim3","codeSnippet":"        if (processRegistryDal.getModule (moduleType, moduleEntityDao.getId ()) == null) {\n            processRegistryDal.addNewModule (moduleEntityDao);\n        } else {\n            processRegistryDal.updateModule (moduleEntityDao);\n        }","LineStart":21,"CharStart":8,"LineEnd":25,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone691.java","labeltext":"noncore-sim1","codeSnippet":"    } catch (IOException e) {\n        LOGGER.error (\"IO Error\\n\" + e.getMessage ());\n    } catch (ServletException e) {\n        LOGGER.error (\"Servlet Error\\n\" + e.getMessage ());\n    }","LineStart":46,"CharStart":4,"LineEnd":50,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone691.java","labeltext":"noncore-sim1","codeSnippet":"    LOGGER.debug (\"Register New Module - \" + moduleType.name ());\n    try {","LineStart":34,"CharStart":4,"LineEnd":35,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone691.java","labeltext":"noncore-sim1","codeSnippet":"    LOGGER.debug (\"Register New Module - \" + moduleType.name ());\n    try {","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":9,"status":"noncore-sim"},{"fileName":"Clone691.java","labeltext":"noncore-sim1","codeSnippet":"    } catch (IOException e) {\n        LOGGER.error (\"IO Error\\n\" + e.getMessage ());\n    } catch (ServletException e) {\n        LOGGER.error (\"Servlet Error\\n\" + e.getMessage ());\n    }","LineStart":26,"CharStart":4,"LineEnd":30,"CharEnd":5,"status":"noncore-sim"},{"fileName":"Clone692.java","labeltext":"core-diff1","codeSnippet":"    Thread thread = new Thread (() -> {\n        try {\n            Thread.sleep (5000);\n            if (alert.isShowing ()) {\n                Platform.runLater (() -> alert.close ());\n            }\n        } catch (Exception exp) {\n            exp.printStackTrace ();\n        }\n    });\n    thread.setDaemon (true);\n    thread.start ();\n    Optional < ButtonType > result = alert.showAndWait ();","LineStart":16,"CharStart":4,"LineEnd":28,"CharEnd":58,"status":"core-diff"},{"fileName":"Clone692.java","labeltext":"core-diff2","codeSnippet":"    Button b = new Button (\"close alert\");\n    b.setOnAction ((ActionEvent event) -> {\n        for (ButtonType bt : alert.getDialogPane ().getButtonTypes ()) {\n            System.out.println (\"bt = \" + bt);\n            if (bt.getButtonData () == ButtonBar.ButtonData.CANCEL_CLOSE) {\n                Button cancelButton = (Button) alert.getDialogPane ().lookupButton (bt);\n                cancelButton.fire ();\n                break;\n            }\n        }\n    });\n    final Scene scene = new Scene (new Group (b), 400, 300);\n    primaryStage.setScene (scene);\n    primaryStage.show ();\n    Optional < ButtonType > result = alert.showAndWait ();\n    if (result.get () == buttonTypeOne) {\n        System.out.println (\"one \");\n    } else if (result.get () == buttonTypeCancel) {\n        System.out.println (\"cancel \");\n    }","LineStart":41,"CharStart":4,"LineEnd":60,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone692.java","labeltext":"noncore-sim1","codeSnippet":"    Alert alert = new Alert (Alert.AlertType.CONFIRMATION);\n    alert.setTitle (\"Title\");\n    alert.setHeaderText (\"Some Text\");\n    alert.setContentText (\"Choose your option.\");\n    ButtonType buttonTypeOne = new ButtonType (\"Yes\");\n    alert.initModality (Modality.NONE);\n    ButtonType buttonTypeCancel = new ButtonType (\"No\", ButtonBar.ButtonData.CANCEL_CLOSE);\n    alert.getButtonTypes ().setAll (buttonTypeOne, buttonTypeCancel);","LineStart":33,"CharStart":4,"LineEnd":40,"CharEnd":69,"status":"noncore-sim"},{"fileName":"Clone692.java","labeltext":"noncore-sim1","codeSnippet":"    Alert alert = new Alert (Alert.AlertType.CONFIRMATION);\n    alert.setTitle (\"Title\");\n    alert.setHeaderText (\"Some Text\");\n    alert.setContentText (\"Choose your option.\");\n    ButtonType buttonTypeOne = new ButtonType (\"Yes\");\n    ButtonType buttonTypeCancel = new ButtonType (\"No\", ButtonBar.ButtonData.CANCEL_CLOSE);\n    alert.getButtonTypes ().setAll (buttonTypeOne, buttonTypeCancel);","LineStart":9,"CharStart":4,"LineEnd":15,"CharEnd":69,"status":"noncore-sim"},{"fileName":"Clone699.java","labeltext":"noncore-sim1","codeSnippet":"JFrame myFrame = new JFrame (\"myJfTitle\");","LineStart":34,"CharStart":4,"LineEnd":34,"CharEnd":46,"status":"noncore-sim"},{"fileName":"Clone699.java","labeltext":"noncore-sim1","codeSnippet":"JFrame myFrame = new JFrame (\"myJfTitle\");","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":46,"status":"noncore-sim"},{"fileName":"Clone699.java","labeltext":"core-sim1","codeSnippet":"myFrame.setLayout (new BorderLayout ());","LineStart":35,"CharStart":4,"LineEnd":35,"CharEnd":44,"status":"core-sim"},{"fileName":"Clone699.java","labeltext":"core-sim1","codeSnippet":"myFrame.setLayout (new BorderLayout ());","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":44,"status":"core-sim"},{"fileName":"Clone699.java","labeltext":"core-sim2","codeSnippet":"JButton myButton = new JButton (\"Click me\");","LineStart":36,"CharStart":4,"LineEnd":36,"CharEnd":48,"status":"core-sim"},{"fileName":"Clone699.java","labeltext":"core-sim2","codeSnippet":"JButton myButton = new JButton (\"Click me\");","LineStart":13,"CharStart":4,"LineEnd":13,"CharEnd":48,"status":"core-sim"},{"fileName":"Clone699.java","labeltext":"core-sim3","codeSnippet":"JProgressBar myBar = new JProgressBar ();","LineStart":38,"CharStart":4,"LineEnd":38,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone699.java","labeltext":"core-sim3","codeSnippet":"JProgressBar myBar = new JProgressBar ();","LineStart":14,"CharStart":4,"LineEnd":14,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone699.java","labeltext":"core-sim4","codeSnippet":"myBar.setValue (50);","LineStart":41,"CharStart":4,"LineEnd":41,"CharEnd":24,"status":"core-sim"},{"fileName":"Clone699.java","labeltext":"core-sim4","codeSnippet":"myBar.setValue (50);","LineStart":24,"CharStart":4,"LineEnd":24,"CharEnd":24,"status":"core-sim"},{"fileName":"Clone699.java","labeltext":"core-sim5","codeSnippet":"    myBar.add (myButton);\n    myFrame.add (myBar, BorderLayout.CENTER);","LineStart":42,"CharStart":4,"LineEnd":43,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone699.java","labeltext":"core-sim5","codeSnippet":"    glass.add (myButton, BorderLayout.CENTER);\n    myPanel.add (myBar);\n    myFrame.add (myPanel);","LineStart":25,"CharStart":4,"LineEnd":27,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone699.java","labeltext":"core-sim6","codeSnippet":"myFrame.setVisible (true);","LineStart":46,"CharStart":4,"LineEnd":46,"CharEnd":30,"status":"core-sim"},{"fileName":"Clone699.java","labeltext":"core-sim6","codeSnippet":"myFrame.setVisible (true);","LineStart":30,"CharStart":4,"LineEnd":30,"CharEnd":30,"status":"core-sim"},{"fileName":"Clone699.java","labeltext":"noncore-diff1","codeSnippet":"myFrame.setSize (300, 100);","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":31,"status":"noncore-diff"},{"fileName":"Clone699.java","labeltext":"noncore-diff2","codeSnippet":"JPanel myPanel = new JPanel ();","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone699.java","labeltext":"core-diff1","codeSnippet":"    myFrame.pack ();\n    myFrame.setSize (new Dimension (300, 100));","LineStart":44,"CharStart":4,"LineEnd":45,"CharEnd":47,"status":"core-diff"},{"fileName":"Clone699.java","labeltext":"core-diff2","codeSnippet":"    LayoutManager overlay = new OverlayLayout (myBar);\n    myBar.setLayout (overlay);","LineStart":39,"CharStart":4,"LineEnd":40,"CharEnd":30,"status":"core-diff"},{"fileName":"Clone699.java","labeltext":"core-diff3","codeSnippet":"myButton.setAlignmentX (Component.CENTER_ALIGNMENT);","LineStart":37,"CharStart":4,"LineEnd":37,"CharEnd":56,"status":"core-diff"},{"fileName":"Clone699.java","labeltext":"core-diff4","codeSnippet":"    myFrame.revalidate ();\n    myFrame.repaint ();","LineStart":28,"CharStart":4,"LineEnd":29,"CharEnd":23,"status":"core-diff"},{"fileName":"Clone699.java","labeltext":"core-diff5","codeSnippet":"    myBar.setPreferredSize (new Dimension (myFrame.getWidth (), myFrame.getHeight ()));\n    myFrame.addComponentListener (new ComponentAdapter () {\n        public void componentResized (ComponentEvent evt) {\n            Component c = (Component) evt.getSource ();\n            myBar.setPreferredSize (new Dimension (myFrame.getWidth (), myFrame.getHeight ()));\n        }}\n    );\n    JPanel glass = (JPanel) myFrame.getGlassPane ();\n    glass.setVisible (true);","LineStart":15,"CharStart":4,"LineEnd":23,"CharEnd":28,"status":"core-diff"},{"fileName":"Clone700.java","labeltext":"noncore-sim1","codeSnippet":"XMLStreamReader2 xmlsr = (XMLStreamReader2) xmlif.createXMLStreamReader (fis);","LineStart":44,"CharStart":4,"LineEnd":44,"CharEnd":82,"status":"noncore-sim"},{"fileName":"Clone700.java","labeltext":"noncore-sim1","codeSnippet":"XMLStreamReader xsr = xif.createXMLStreamReader (xml);","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":58,"status":"noncore-sim"},{"fileName":"Clone700.java","labeltext":"core-sim1","codeSnippet":"    xsr = xif.createFilteredReader (xsr, new StreamFilter () {\n        private boolean accept = true;\n        @Override\n        public boolean accept (XMLStreamReader reader) {\n            if ((reader.isStartElement () || reader.isEndElement ()) && \"dad\".equals (reader.getLocalName ())) {\n                accept = ! accept;\n                return false;\n            } else {\n                return accept;\n            }\n        }}\n    );\n    while (xsr.hasNext ()) {\n        if (xsr.isStartElement ()) {\n            System.out.println (\"start: \" + xsr.getLocalName ());\n        } else if (xsr.isCharacters ()) {\n            if (xsr.getText ().trim ().length () > 0) {\n                System.out.println (\"chars: \" + xsr.getText ());\n            }\n        } else if (xsr.isEndElement ()) {\n            System.out.println (\"end: \" + xsr.getLocalName ());\n        }\n        xsr.next ();\n    }","LineStart":12,"CharStart":4,"LineEnd":35,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone700.java","labeltext":"core-sim1","codeSnippet":"    while (xmlsr.hasNext ()) {\n        int eventType = xmlsr.next ();\n        switch (eventType) {\n            case (XMLEvent2.START_ELEMENT) :\n                currentElementName = xmlsr.getName ().toString ();\n                if (\"dad\".equals (currentElementName) == true) {\n                    System.out.println (\"isStartElement: \" + xmlsr.isStartElement ());\n                    System.out.println (\"Element BEGIN: \" + currentElementName);\n                    xmlsr.skipElement ();\n                } else {\n                    System.out.println (currentElementName);\n                }\n        }\n    }","LineStart":46,"CharStart":4,"LineEnd":59,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone700.java","labeltext":"noncore-diff1","codeSnippet":"    System.setProperty (\"javax.xml.stream.XMLInputFactory\", \"com.ctc.wstx.stax.WstxInputFactory\");\n    System.setProperty (\"javax.xml.stream.XMLOutputFactory\", \"com.ctc.wstx.stax.WstxOutputFactory\");\n    System.setProperty (\"javax.xml.stream.XMLEventFactory\", \"com.ctc.wstx.stax.WstxEventFactory\");\n    FileInputStream fis = new FileInputStream (new File (\"family.xml\"));\n    XMLInputFactory xmlif = XMLInputFactory.newFactory ();","LineStart":39,"CharStart":4,"LineEnd":43,"CharEnd":58,"status":"noncore-diff"},{"fileName":"Clone700.java","labeltext":"noncore-diff1","codeSnippet":"String currentElementName = null;","LineStart":45,"CharStart":4,"LineEnd":45,"CharEnd":37,"status":"noncore-diff"},{"fileName":"Clone700.java","labeltext":"noncore-diff2","codeSnippet":"    XMLInputFactory xif = XMLInputFactory.newFactory ();\n    StreamSource xml = new StreamSource (\"src/forum14326598/input.xml\");","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":72,"status":"noncore-diff"},{"fileName":"Clone701.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < countries.length; i ++) System.out.format (\"%-\" + (countryLength + 1) + \"s|%\" + (populationLength + 1) + \"d\\n\", countries [i], populations [i]);","LineStart":17,"CharStart":4,"LineEnd":18,"CharEnd":152,"status":"core-sim"},{"fileName":"Clone701.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < countries.length; i ++) {\n        System.out.printf (\"%-\" + longestCountry + \"s | %\" + longestPop + \"d%n\", countries [i], populations [i]);\n    }","LineStart":27,"CharStart":4,"LineEnd":30,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone701.java","labeltext":"core-sim2","codeSnippet":"    for (String country : countries) {\n        if (country.length () > countryLength) countryLength = country.length ();\n    }\n    for (int i : populations) {\n        if (String.valueOf (i).length () > populationLength) populationLength = String.valueOf (i).length ();\n    }","LineStart":11,"CharStart":4,"LineEnd":16,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone701.java","labeltext":"core-sim2","codeSnippet":"    int longestCountry = Arrays.stream (countries).map (String :: toString).mapToInt (String :: length).max ().getAsInt ();\n    int longestPop = Arrays.stream (populations).mapToObj (Integer :: toString).mapToInt (String :: length).max ().getAsInt ();","LineStart":25,"CharStart":4,"LineEnd":26,"CharEnd":127,"status":"core-sim"},{"fileName":"Clone701.java","labeltext":"noncore-diff1","codeSnippet":"    int countryLength = 0;\n    long populationLength = 0;","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":30,"status":"noncore-diff"},{"fileName":"Clone701.java","labeltext":"noncore-diff2","codeSnippet":"    if (countries.length == 0 || populations.length == 0 || countries.length != populations.length) {\n        return;\n    }","LineStart":22,"CharStart":4,"LineEnd":24,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone707.java","labeltext":"core-sim1","codeSnippet":"if (! (that instanceof People)) return false;","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":49,"status":"core-sim"},{"fileName":"Clone707.java","labeltext":"core-sim1","codeSnippet":"                           (getClass () != other.getClass ())) {\n        result = false;","LineStart":18,"CharStart":27,"LineEnd":19,"CharEnd":23,"status":"core-sim"},{"fileName":"Clone707.java","labeltext":"core-sim1","codeSnippet":"if (","LineStart":18,"CharStart":4,"LineEnd":18,"CharEnd":8,"status":"core-sim"},{"fileName":"Clone707.java","labeltext":"core-sim2","codeSnippet":"        People otherPeople = (People) other;\n        result = name.equals (otherPeople.name) && age == otherPeople.age;","LineStart":21,"CharStart":8,"LineEnd":22,"CharEnd":74,"status":"core-sim"},{"fileName":"Clone707.java","labeltext":"core-sim2","codeSnippet":"return result;","LineStart":24,"CharStart":4,"LineEnd":24,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone707.java","labeltext":"noncore-diff1","codeSnippet":"boolean result;","LineStart":17,"CharStart":4,"LineEnd":17,"CharEnd":19,"status":"noncore-diff"},{"fileName":"Clone707.java","labeltext":"core-diff1","codeSnippet":"(other == null) ||","LineStart":18,"CharStart":8,"LineEnd":18,"CharEnd":26,"status":"core-diff"},{"fileName":"Clone707.java","labeltext":"noncore-diff2","codeSnippet":"} else {","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":12,"status":"noncore-diff"},{"fileName":"Clone707.java","labeltext":"noncore-diff2","codeSnippet":"}","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone707.java","labeltext":"core-sim2","codeSnippet":"    People thatPeople = (People) that;\n    return this.name.equals (thatPeople.name) && this.age == thatPeople.age;","LineStart":12,"CharStart":4,"LineEnd":13,"CharEnd":76,"status":"core-sim"},{"fileName":"Clone707.java","labeltext":"core-diff2","codeSnippet":"if (this == that) return true;","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":34,"status":"core-diff"},{"fileName":"Clone712.java","labeltext":"noncore-sim1","codeSnippet":"int n = 7;","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":14,"status":"noncore-sim"},{"fileName":"Clone712.java","labeltext":"noncore-sim1","codeSnippet":"int n = 7;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":14,"status":"noncore-sim"},{"fileName":"Clone712.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < 7; i ++) {\n        for (int j = 0;\n        j < 4; j ++) {\n            if (i + j <= n - 4 || j == 0 || i == n - 1) System.out.print (\"*\");\n            else if (i - j >= n - 4) System.out.print (\"*\");\n            else System.out.print (\" \");\n        }\n        System.out.println ();\n    }","LineStart":10,"CharStart":4,"LineEnd":19,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone712.java","labeltext":"core-sim1","codeSnippet":"    int mid = n / 2;\n    for (int i = 0;\n    i < n; i ++) {\n        for (int j = 0;\n        j < Math.abs (mid - i) + 1; j ++) {\n            System.out.print (\"*\");\n        }\n        System.out.println ();\n    }","LineStart":24,"CharStart":4,"LineEnd":32,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone715.java","labeltext":"core-sim1","codeSnippet":"    int maxDigit = 1;\n    while (maxDigit * 16 <= decimal && maxDigit > 0) {\n        maxDigit *= 16;\n    }\n    if (maxDigit <= 0) {\n        throw new IllegalArgumentException (\"Can not convert \" + decimal);\n    }\n    for (int digit = maxDigit;\n    digit > 0; digit /= 16) {\n        printHex ((decimal / digit) % 16);\n    }","LineStart":9,"CharStart":4,"LineEnd":19,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone715.java","labeltext":"core-sim1","codeSnippet":"    if (decimal >= 256) {\n        returnHex (decimal / 256);\n        decimal %= 256;\n    } else {\n        System.out.print (\"0\");\n    }\n    if (decimal >= 16) {\n        returnHex (decimal / 16);\n        decimal %= 16;\n    } else {\n        System.out.print (\"0\");\n    }\n    returnHex (decimal);","LineStart":23,"CharStart":4,"LineEnd":35,"CharEnd":24,"status":"core-sim"},{"fileName":"Clone715.java","labeltext":"noncore-diff1","codeSnippet":"decimal /= 16;","LineStart":36,"CharStart":4,"LineEnd":36,"CharEnd":18,"status":"noncore-diff"},{"fileName":"Clone720.java","labeltext":"core-diff1","codeSnippet":"    SwingUtilities.invokeLater (new Runnable () {\n        @Override\n        public void run () {\n            new CaretPositionTest ();\n        }}\n    );","LineStart":9,"CharStart":4,"LineEnd":14,"CharEnd":6,"status":"core-diff"},{"fileName":"Clone720.java","labeltext":"core-diff2","codeSnippet":"    panel.setLayout (new BoxLayout (panel, BoxLayout.Y_AXIS));\n    text1.setBorder (null);\n    text1.setOpaque (false);\n    text1.setEditable (false);\n    text2.setBorder (null);\n    text2.setOpaque (false);\n    text2.setEditable (false);\n    text1.getInputMap ().put (KeyStroke.getKeyStroke ('G', KeyEvent.CTRL_DOWN_MASK), \"copyAll\");\n    text1.getActionMap ().put (\"copyAll\", new AbstractAction () {\n        @Override\n        public void actionPerformed (ActionEvent e) {\n            StringBuilder s = new StringBuilder ();\n            s.append (text1.getText ()).append (\"\\n\").append (text2.getText ());\n            System.out.println (s.toString ());\n        }}\n    );\n    panel.add (text1);\n    panel.add (text2);\n    frame.setLayout (new BorderLayout ());\n    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    frame.getContentPane ().add (panel, BorderLayout.CENTER);\n    frame.setLocation (450, 400);\n    frame.pack ();\n    frame.setVisible (true);","LineStart":20,"CharStart":4,"LineEnd":43,"CharEnd":28,"status":"core-diff"},{"fileName":"Clone720.java","labeltext":"noncore-diff1","codeSnippet":"    final JFrame frame = new JFrame (\"Display Keyword Panel\");\n    final JPanel panel = new JPanel ();","LineStart":18,"CharStart":4,"LineEnd":19,"CharEnd":39,"status":"noncore-diff"},{"fileName":"Clone729.java","labeltext":"core-sim1","codeSnippet":"        FileInputStream fin = new FileInputStream (_zipFile);\n        ZipInputStream zin = new ZipInputStream (fin);\n        ZipEntry ze = null;\n        while ((ze = zin.getNextEntry ()) != null) {\n            Log.v (\"Decompress\", \"Unzipping \" + ze.getName ());\n            if (ze.isDirectory ()) {\n                _dirChecker (ze.getName ());\n            } else {\n                FileOutputStream fout = new FileOutputStream (_location + ze.getName ());\n                BufferedOutputStream bufout = new BufferedOutputStream (fout);\n                byte [] buffer = new byte [1024];\n                int read = 0;\n                while ((read = zin.read (buffer)) != - 1) {\n                    bufout.write (buffer, 0, read);\n                }\n                bufout.close ();\n                zin.closeEntry ();\n                fout.close ();\n            }\n        }\n        zin.close ();","LineStart":33,"CharStart":8,"LineEnd":53,"CharEnd":21,"status":"core-sim"},{"fileName":"Clone729.java","labeltext":"core-sim1","codeSnippet":"    ZipInputStream zis = new ZipInputStream (new BufferedInputStream (new FileInputStream (zipFile)));\n    try {\n        ZipEntry ze;\n        int count;\n        byte [] buffer = new byte [8192];\n        while ((ze = zis.getNextEntry ()) != null) {\n            File file = new File (targetDirectory, ze.getName ());\n            File dir = ze.isDirectory () ? file : file.getParentFile ();\n            if (! dir.isDirectory () && ! dir.mkdirs ()) throw new FileNotFoundException (\"Failed to ensure directory: \" + dir.getAbsolutePath ());\n            if (ze.isDirectory ()) continue;\n            FileOutputStream fout = new FileOutputStream (file);\n            try {\n                while ((count = zis.read (buffer)) != - 1) fout.write (buffer, 0, count);\n            } finally {\n                fout.close ();\n            }\n        }\n    } finally {\n        zis.close ();\n    }","LineStart":9,"CharStart":4,"LineEnd":28,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone729.java","labeltext":"noncore-diff1","codeSnippet":"try {","LineStart":32,"CharStart":4,"LineEnd":32,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone729.java","labeltext":"noncore-diff1","codeSnippet":"        Log.d (\"Unzip\", \"Unzipping complete. path :  \" + _location);\n    } catch (Exception e) {\n        Log.e (\"Decompress\", \"unzip\", e);\n        Log.d (\"Unzip\", \"Unzipping failed\");\n    }","LineStart":54,"CharStart":8,"LineEnd":58,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone732.java","labeltext":"noncore-sim1","codeSnippet":"HttpServletRequest request = (HttpServletRequest) arg0;","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":59,"status":"noncore-sim"},{"fileName":"Clone732.java","labeltext":"noncore-sim1","codeSnippet":"HttpServletRequest req = (HttpServletRequest) request;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":58,"status":"noncore-sim"},{"fileName":"Clone732.java","labeltext":"core-diff1","codeSnippet":"    if (req.getHeader (\"x-dawson-nonce\") == null || req.getHeader (\"x-dawson-signature\") == null) {\n        HttpServletResponse httpResponse = (HttpServletResponse) response;\n        httpResponse.setContentType (\"application/json\");\n        httpResponse.sendError (HttpServletResponse.SC_BAD_REQUEST, \"Required headers not specified in the request\");\n        return;\n    }\n    chain.doFilter (request, response);","LineStart":10,"CharStart":4,"LineEnd":16,"CharEnd":39,"status":"core-diff"},{"fileName":"Clone732.java","labeltext":"core-diff2","codeSnippet":"    String clientId = request.getHeader (\"clientId\");\n    if (StringUtils.isNotEmpty (clientId)) {\n        chain.doFilter (request, response);\n    } else {\n        logger.error (\"client id missing.\");\n    }","LineStart":22,"CharStart":4,"LineEnd":27,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone732.java","labeltext":"noncore-diff1","codeSnippet":"logger.info (\"checking client id in filter\");","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":49,"status":"noncore-diff"},{"fileName":"Clone738.java","labeltext":"core-sim1","codeSnippet":"    if (currentPos < currentLineEnd) {\n        in.seek (currentPos ++);\n        int readByte = in.readByte ();\n        return readByte;\n    } else if (currentPos < 0) {\n        return - 1;\n    } else {\n        findPrevLine ();\n        return read ();\n    }","LineStart":9,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone738.java","labeltext":"core-sim1","codeSnippet":"    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {\n        return - 1;\n    }\n    if (! lineBuffered) {\n        fillLineBuffer ();\n    }\n    if (lineBuffered) {\n        if (currentLineReadPos == 0) {\n            lineBuffered = false;\n        }\n        return currentLine [currentLineReadPos --];\n    }\n    return 0;","LineStart":22,"CharStart":4,"LineEnd":34,"CharEnd":13,"status":"core-sim"},{"fileName":"Clone739.java","labeltext":"core-sim1","codeSnippet":"    if (currentFilePos <= 0 && currentBufferPos < 0 && currentLineReadPos < 0) {\n        return - 1;\n    }\n    if (! lineBuffered) {\n        fillLineBuffer ();\n    }\n    if (lineBuffered) {\n        if (currentLineReadPos == 0) {\n            lineBuffered = false;\n        }\n        return currentLine [currentLineReadPos --];\n    }\n    return 0;","LineStart":29,"CharStart":4,"LineEnd":41,"CharEnd":13,"status":"core-sim"},{"fileName":"Clone739.java","labeltext":"core-sim1","codeSnippet":"    if (currentPos < currentLineEnd) {\n        in.seek (currentPos ++);\n        int readByte = in.readByte ();\n        return readByte;\n    } else if (currentPos > lastPosInFile && currentLineStart < currentLineEnd) {\n        findPrevLine ();\n        if (lastChar != '\\n' && lastChar != '\\r') {\n            return '\\n';\n        } else {\n            return read ();\n        }\n    } else if (currentPos < 0) {\n        return - 1;\n    } else {\n        findPrevLine ();\n        return read ();\n    }","LineStart":9,"CharStart":4,"LineEnd":25,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone744.java","labeltext":"core-diff1","codeSnippet":"    out.println (\"****************************************\");\n    out.println (\"DATE INFO\");\n    printCurrentTime ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"JVM COMMAND LINE ARGUMENTS\");\n    printCommandLineArguments ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"ENVIRONMENT\");\n    printSystemEnvironment ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"SYSTEM PROPERTIES\");\n    printSystemProperties ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"CLASS LOADER\");\n    printClassLoaderInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"OPERATING SYSTEM\");\n    printOSInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"MEMORY\");\n    printRuntimeMemory ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"CPU\");\n    printCPUUsage ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"DISK\");\n    printDiskInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"NETWORK\");\n    printNetworkInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"SECURITY\");\n    printSecurityInfo ();\n    out.println (\"\");\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"LOG\");\n    printLoggingInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"KEY MANAGER\");\n    printKeyManagerInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"DISPLAY DEVICES\");\n    printDisplayInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"FONTS\");\n    printFontsInfo ();\n    out.println (\"\");\n    out.println (\"****************************************\");\n    out.println (\"LOCALES\");\n    printLocaleInfo ();","LineStart":9,"CharStart":4,"LineEnd":72,"CharEnd":23,"status":"core-diff"},{"fileName":"Clone744.java","labeltext":"core-diff2","codeSnippet":"    Runnable r = () -> {\n        MediaTypes mediaTypes = new MediaTypes ();\n        JPanel p = new JPanel ();\n        mediaTypes.createGui (p);\n        JOptionPane.showMessageDialog (null, p);\n    };\n    SwingUtilities.invokeLater (r);","LineStart":76,"CharStart":4,"LineEnd":82,"CharEnd":35,"status":"core-diff"},{"fileName":"Clone746.java","labeltext":"core-diff1","codeSnippet":"    if (pressLocation != null && dragLocation != null) {\n        pressLocation = null;\n    } else if (dragLocation != null) {\n    } else {\n    }\n    pressLocation = null;\n    dragLocation = null;","LineStart":20,"CharStart":4,"LineEnd":26,"CharEnd":24,"status":"core-diff"},{"fileName":"Clone746.java","labeltext":"core-diff2","codeSnippet":"    target.mouseReleased (e);\n    if (pressed != null) {\n        if (getDragDistance (e) < MAX_CLICK_DISTANCE) {\n            MouseEvent clickEvent = new MouseEvent ((Component) pressed.getSource (), MouseEvent.MOUSE_CLICKED, e.getWhen (), pressed.getModifiers (), pressed.getX (), pressed.getY (), pressed.getXOnScreen (), pressed.getYOnScreen (), pressed.getClickCount (), pressed.isPopupTrigger (), pressed.getButton ());\n            target.mouseClicked (clickEvent);\n        }\n        pressed = null;\n    }","LineStart":9,"CharStart":4,"LineEnd":16,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone747.java","labeltext":"noncore-sim1","codeSnippet":"int result = 0;","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":19,"status":"noncore-sim"},{"fileName":"Clone747.java","labeltext":"noncore-sim1","codeSnippet":"int result = 0;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":19,"status":"noncore-sim"},{"fileName":"Clone747.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < arr.length; i ++) {\n        if (i == 0) {\n            prev = arr [i];\n        } else {\n            if (arr [i] == prev) {\n                if (! same) {\n                    result ++;\n                    same = true;\n                }\n            } else {\n                prev = arr [i];\n                same = false;\n            }\n        }\n    }\n    return result;","LineStart":23,"CharStart":4,"LineEnd":39,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone747.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 1;\n    i < arr.length; ++ i) {\n        if (arr [i] == arr [i - 1] && (i == arr.length - 1 || arr [i] != arr [i + 1])) {\n            ++ result;\n        }\n    }\n    return result;","LineStart":10,"CharStart":4,"LineEnd":16,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone747.java","labeltext":"noncore-diff1","codeSnippet":"    int prev = 0;\n    boolean same = false;","LineStart":21,"CharStart":4,"LineEnd":22,"CharEnd":25,"status":"noncore-diff"},{"fileName":"Clone748.java","labeltext":"noncore-sim1","codeSnippet":"    list.setSelectedIndex (index);\n    list.ensureIndexIsVisible (index);","LineStart":40,"CharStart":4,"LineEnd":41,"CharEnd":38,"status":"noncore-sim"},{"fileName":"Clone748.java","labeltext":"noncore-sim1","codeSnippet":"        list.setSelectedIndex (index);\n        list.ensureIndexIsVisible (index);","LineStart":18,"CharStart":8,"LineEnd":19,"CharEnd":42,"status":"noncore-sim"},{"fileName":"Clone748.java","labeltext":"noncore-sim2","codeSnippet":"int index = list.getSelectedIndex ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":41,"status":"noncore-sim"},{"fileName":"Clone748.java","labeltext":"noncore-sim2","codeSnippet":"int index = list.getSelectedIndex ();","LineStart":31,"CharStart":4,"LineEnd":31,"CharEnd":41,"status":"noncore-sim"},{"fileName":"Clone748.java","labeltext":"core-diff1","codeSnippet":"    listModel.remove (index);\n    int size = listModel.getSize ();\n    if (size == 0) {\n        fireButton.setEnabled (false);\n    } else {\n        if (index == listModel.getSize ()) {\n            index --;\n        }","LineStart":10,"CharStart":4,"LineEnd":17,"CharEnd":9,"status":"core-diff"},{"fileName":"Clone748.java","labeltext":"core-diff1","codeSnippet":"}","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone748.java","labeltext":"core-diff2","codeSnippet":"    String name = employeeName.getText ();\n    if (name.equals (\"\") || alreadyInList (name)) {\n        Toolkit.getDefaultToolkit ().beep ();\n        employeeName.requestFocusInWindow ();\n        employeeName.selectAll ();\n        return;\n    }","LineStart":24,"CharStart":4,"LineEnd":30,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone748.java","labeltext":"core-diff2","codeSnippet":"    if (index == - 1) {\n        index = 0;\n    } else {\n        index ++;\n    }\n    listModel.insertElementAt (employeeName.getText (), index);\n    employeeName.requestFocusInWindow ();\n    employeeName.setText (\"\");","LineStart":32,"CharStart":4,"LineEnd":39,"CharEnd":30,"status":"core-diff"},{"fileName":"Clone752.java","labeltext":"core-diff1","codeSnippet":"    initialNumbers.add (1);\n    initialNumbers.add (2);\n    Observable < Integer > observableInitial = Observable.from (initialNumbers);\n    ReplaySubject < Integer > subject = ReplaySubject.create ();\n    Observable < Integer > source = Observable.merge (observableInitial, subject);\n    source.subscribe (System.out :: println);\n    for (int i = 0;\n    i < 100; ++ i) {\n        subject.onNext (i);\n    }","LineStart":20,"CharStart":4,"LineEnd":29,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone752.java","labeltext":"core-diff2","codeSnippet":"    olist.getObservable ().subscribe (System.out :: println);\n    olist.add (1);\n    Thread.sleep (1000);\n    olist.add (2);\n    Thread.sleep (1000);\n    olist.add (3);","LineStart":10,"CharStart":4,"LineEnd":15,"CharEnd":18,"status":"core-diff"},{"fileName":"Clone752.java","labeltext":"noncore-sim1","codeSnippet":" ObservableList < Integer > olist = new ObservableList < > ();","LineStart":9,"CharStart":3,"LineEnd":9,"CharEnd":65,"status":"noncore-sim"},{"fileName":"Clone752.java","labeltext":"noncore-sim1","codeSnippet":"List < Integer > initialNumbers = new ArrayList < Integer > ();","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":67,"status":"noncore-sim"},{"fileName":"Clone753.java","labeltext":"core-sim1","codeSnippet":"    Uri contactUri = Uri.withAppendedPath (ContactsContract.PhoneLookup.CONTENT_FILTER_URI, Uri.encode (number));\n    Cursor cursor = context.getContentResolver ().query (contactUri, projection, null, null, null);","LineStart":33,"CharStart":4,"LineEnd":34,"CharEnd":99,"status":"core-sim"},{"fileName":"Clone753.java","labeltext":"core-sim1","codeSnippet":"    uri = Uri.withAppendedPath (mBaseUri, Uri.encode (phoneNumber));\n    Cursor cursor = this.getContentResolver ().query (uri, projection, null, null, null);","LineStart":19,"CharStart":4,"LineEnd":20,"CharEnd":89,"status":"core-sim"},{"fileName":"Clone753.java","labeltext":"core-sim2","codeSnippet":"    if (cursor.moveToFirst ()) {\n        contactName = cursor.getString (0);\n    }\n    cursor.close ();","LineStart":22,"CharStart":4,"LineEnd":25,"CharEnd":20,"status":"core-sim"},{"fileName":"Clone753.java","labeltext":"core-sim2","codeSnippet":"        if (cursor.moveToFirst ()) {\n            name = cursor.getString (cursor.getColumnIndex (ContactsContract.PhoneLookup.DISPLAY_NAME));","LineStart":36,"CharStart":8,"LineEnd":37,"CharEnd":104,"status":"core-sim"},{"fileName":"Clone753.java","labeltext":"core-sim2","codeSnippet":"        }\n        cursor.close ();","LineStart":42,"CharStart":8,"LineEnd":43,"CharEnd":24,"status":"core-sim"},{"fileName":"Clone753.java","labeltext":"core-sim3","codeSnippet":"return contactName;","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":23,"status":"core-sim"},{"fileName":"Clone753.java","labeltext":"core-sim3","codeSnippet":"return name;","LineStart":45,"CharStart":4,"LineEnd":45,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone753.java","labeltext":"core-diff1","codeSnippet":"    mBaseUri = Contacts.Phones.CONTENT_FILTER_URL;\n    projection = new String [] {android.provider.Contacts.People.NAME};\n    try {\n        Class < ? > c = Class.forName (\"android.provider.ContactsContract$PhoneLookup\");\n        mBaseUri = (Uri) c.getField (\"CONTENT_FILTER_URI\").get (mBaseUri);\n        projection = new String [] {\"display_name\"};\n    } catch (Exception e) {\n    }","LineStart":11,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone753.java","labeltext":"noncore-diff1","codeSnippet":"    Uri uri;\n    String [] projection;","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":25,"status":"noncore-diff"},{"fileName":"Clone753.java","labeltext":"noncore-diff1","codeSnippet":"String contactName = \"\";","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":28,"status":"noncore-diff"},{"fileName":"Clone753.java","labeltext":"noncore-diff1","codeSnippet":"cursor = null;","LineStart":26,"CharStart":4,"LineEnd":26,"CharEnd":18,"status":"noncore-diff"},{"fileName":"Clone753.java","labeltext":"noncore-diff2","codeSnippet":"    String name = null;\n    String [] projection = new String [] {ContactsContract.PhoneLookup.DISPLAY_NAME, ContactsContract.PhoneLookup._ID};","LineStart":31,"CharStart":4,"LineEnd":32,"CharEnd":119,"status":"noncore-diff"},{"fileName":"Clone753.java","labeltext":"noncore-diff2","codeSnippet":"if (cursor != null) {","LineStart":35,"CharStart":4,"LineEnd":35,"CharEnd":25,"status":"noncore-diff"},{"fileName":"Clone753.java","labeltext":"noncore-diff2","codeSnippet":"            Log.v (TAG, \"Started uploadcontactphoto: Contact Found @ \" + number);\n            Log.v (TAG, \"Started uploadcontactphoto: Contact name  = \" + name);\n        } else {\n            Log.v (TAG, \"Contact Not Found @ \" + number);","LineStart":38,"CharStart":12,"LineEnd":41,"CharEnd":57,"status":"noncore-diff"},{"fileName":"Clone753.java","labeltext":"noncore-diff2","codeSnippet":"}","LineStart":44,"CharStart":4,"LineEnd":44,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone758.java","labeltext":"core-diff1","codeSnippet":"    ls.insert (1);\n    ls.insert (2);\n    ls.insert (3);\n    ls.insert (4);\n    ls.insert (5);\n    ls.insert (6);\n    ls.insert (7);\n    ls.inOrderPrint ();","LineStart":22,"CharStart":4,"LineEnd":29,"CharEnd":23,"status":"core-diff"},{"fileName":"Clone758.java","labeltext":"core-diff2","codeSnippet":"    test.put (\"a\").put (\"b\").put (\"c\", 12);\n    Map.Entry < String, Integer > foo = test.put (\"a\").put (\"b\").put (\"d\", 12);\n    test.put (\"b\", 14);\n    ObjectMapper mapper = new ObjectMapper ();\n    System.out.println (mapper.writeValueAsString (test));\n    foo.setValue (99);\n    System.out.println (mapper.writeValueAsString (test));\n    System.out.println (test.get (\"a\").get (\"b\").getValue (\"d\"));","LineStart":10,"CharStart":4,"LineEnd":17,"CharEnd":65,"status":"core-diff"},{"fileName":"Clone758.java","labeltext":"noncore-diff1","codeSnippet":"NestedMap < String, Integer > test = new NestedMap < > ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":62,"status":"noncore-diff"},{"fileName":"Clone758.java","labeltext":"noncore-diff2","codeSnippet":"BinaryTreeWithoutRecursion < Integer > ls = new BinaryTreeWithoutRecursion < > ();","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":86,"status":"noncore-diff"},{"fileName":"Clone759.java","labeltext":"core-diff1","codeSnippet":"    ls.insert (1);\n    ls.insert (2);\n    ls.insert (3);\n    ls.insert (4);\n    ls.insert (5);\n    ls.insert (6);\n    ls.insert (7);\n    ls.inOrderPrint ();","LineStart":23,"CharStart":4,"LineEnd":30,"CharEnd":23,"status":"core-diff"},{"fileName":"Clone759.java","labeltext":"core-diff1","codeSnippet":"    Node tree = new Node ();\n    tree.value = \"root\";\n    Node [] n = {new Node (), new Node ()};\n    tree.nodes = n;\n    tree.nodes [0].value = \"leftish\";\n    tree.nodes [1].value = \"rightish-leafy\";\n    Node [] nn = {new Node ()};\n    tree.nodes [0].nodes = nn;\n    tree.nodes [0].nodes [0].value = \"off-leftish-leaf\";\n    System.out.println (Arrays.toString (list (tree, args [0]).toArray ()));","LineStart":9,"CharStart":4,"LineEnd":18,"CharEnd":76,"status":"core-diff"},{"fileName":"Clone759.java","labeltext":"noncore-diff1","codeSnippet":"BinaryTreeWithoutRecursion < Integer > ls = new BinaryTreeWithoutRecursion < > ();","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":86,"status":"noncore-diff"},{"fileName":"Clone770.java","labeltext":"core-sim1","codeSnippet":"    while (true) {\n        if ((word.size () == 1) || (word.size () == 0)) {\n            return true;\n        }\n        if (word.get (0) == word.get (word.size () - 1)) {\n            word.remove (0);\n            word.remove (word.size () - 1);\n        } else {\n            return false;\n        }\n    }","LineStart":26,"CharStart":4,"LineEnd":36,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone770.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < (n / 2); ++ i) {\n        if (s.charAt (i) != s.charAt (n - i - 1)) {\n            return false;\n        }\n    }\n    return true;","LineStart":10,"CharStart":4,"LineEnd":16,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone770.java","labeltext":"noncore-diff1","codeSnippet":"    for (char c : strChars) {\n        word.add (c);\n    }","LineStart":23,"CharStart":4,"LineEnd":25,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone770.java","labeltext":"noncore-diff2","codeSnippet":"int n = s.length ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":24,"status":"noncore-diff"},{"fileName":"Clone770.java","labeltext":"noncore-diff2","codeSnippet":"    str = str.toUpperCase ();\n    char [] strChars = str.toCharArray ();\n    List < Character > word = new ArrayList < > ();","LineStart":20,"CharStart":4,"LineEnd":22,"CharEnd":51,"status":"noncore-diff"},{"fileName":"Clone776.java","labeltext":"core-diff1","codeSnippet":"    for (int counter = 0;\n    counter < number.length (); counter ++) {\n        a = Integer.parseInt (number.substring (counter, counter + 1));\n        if (a % 2 != 0 || a == 1) {\n            even = false;\n            total += a;\n        }\n    }","LineStart":35,"CharStart":4,"LineEnd":42,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone776.java","labeltext":"core-diff1","codeSnippet":"    for (int i = 0;\n    i < len; i ++) {\n        mod = num % 10;\n        num = num / 10;\n        if (mod % 2 == 0) {\n            even = even + mod;\n        } else {\n            od = od + mod;\n        }\n    }","LineStart":14,"CharStart":4,"LineEnd":23,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone776.java","labeltext":"noncore-diff1","codeSnippet":"    Scanner input = new Scanner (System.in);\n    String number = \"\";\n    int a = 0, total = 0;\n    boolean even = false;\n    System.out.println (\"Enter a number\");","LineStart":29,"CharStart":4,"LineEnd":33,"CharEnd":42,"status":"noncore-diff"},{"fileName":"Clone776.java","labeltext":"noncore-diff1","codeSnippet":"    String s = \"1234\";\n    int len = s.length ();\n    int num = Integer.parseInt (s);\n    int mod;\n    int od = 0, even = 0;","LineStart":9,"CharStart":4,"LineEnd":13,"CharEnd":25,"status":"noncore-diff"},{"fileName":"Clone776.java","labeltext":"noncore-diff2","codeSnippet":"number = input.nextLine ();","LineStart":34,"CharStart":4,"LineEnd":34,"CharEnd":31,"status":"noncore-diff"},{"fileName":"Clone776.java","labeltext":"noncore-diff3","codeSnippet":"    System.out.println (\"Sum of even numbers is \" + even);\n    System.out.println (\"Sum of odd numbers is \" + od);","LineStart":24,"CharStart":4,"LineEnd":25,"CharEnd":55,"status":"noncore-diff"},{"fileName":"Clone776.java","labeltext":"noncore-diff3","codeSnippet":"System.out.println (\"The sum is \" + total);","LineStart":43,"CharStart":4,"LineEnd":43,"CharEnd":47,"status":"noncore-diff"},{"fileName":"Clone796.java","labeltext":"noncore-sim1","codeSnippet":"StringBuilder sb = new StringBuilder ();","LineStart":26,"CharStart":4,"LineEnd":26,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone796.java","labeltext":"noncore-sim1","codeSnippet":"StringBuilder b = new StringBuilder ();","LineStart":13,"CharStart":4,"LineEnd":13,"CharEnd":43,"status":"noncore-sim"},{"fileName":"Clone796.java","labeltext":"core-sim1","codeSnippet":"    edited = true;\n    while (edited) {\n        edited = false;\n        for (String s : strings) {\n            if (adv < s.length ()) {\n                sb.append (s.charAt (adv));\n                edited = true;\n            }\n        }\n        adv ++;\n    }\n    return sb.toString ();","LineStart":30,"CharStart":4,"LineEnd":41,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone796.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < maxLen; ++ i) {\n        for (String str : s) {\n            if (str.length () > i) {\n                b.append (str.charAt (i));\n            }\n        }\n    }\n    return b.toString ();","LineStart":14,"CharStart":4,"LineEnd":22,"CharEnd":25,"status":"core-sim"},{"fileName":"Clone796.java","labeltext":"noncore-diff1","codeSnippet":"    int maxLen = 0;\n    for (String str : s) {\n        maxLen = Math.max (maxLen, str.length ());\n    }","LineStart":9,"CharStart":4,"LineEnd":12,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone796.java","labeltext":"noncore-diff2","codeSnippet":"    int adv;\n    boolean edited;\n    adv = 0;","LineStart":27,"CharStart":4,"LineEnd":29,"CharEnd":12,"status":"noncore-diff"},{"fileName":"Clone793.java","labeltext":"noncore-sim1","codeSnippet":"String [] arr = {\"foo:1,2,3\", \"bar:a,b\", \"baz:5,6,7\"};","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":58,"status":"noncore-sim"},{"fileName":"Clone793.java","labeltext":"noncore-sim1","codeSnippet":"    LinkedHashMap < String, Vector < String > > data = new LinkedHashMap < String, Vector < String > > ();\n    data.put (\"foo\", new Vector < String > (Arrays.asList (\"1\", \"2\", \"3\")));\n    data.put (\"bar\", new Vector < String > (Arrays.asList (\"3\", \"2\")));\n    data.put (\"baz\", new Vector < String > (Arrays.asList (\"5\", \"6\", \"7\")));","LineStart":19,"CharStart":4,"LineEnd":22,"CharEnd":76,"status":"noncore-sim"},{"fileName":"Clone793.java","labeltext":"core-sim1","codeSnippet":"    List < List < String > > lls = cp.allUniqueCombinations ();\n    for (List < String > ls : lls) {\n        for (String s : ls) System.out.print (s + \"\\t\");\n        System.out.println ();\n    }","LineStart":11,"CharStart":4,"LineEnd":15,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone793.java","labeltext":"core-sim1","codeSnippet":"    Foo foo = new Foo (data);\n    for (String [] combination : foo.allUniqueCombinations ()) {\n        System.out.println (Arrays.toString (combination));\n    }","LineStart":23,"CharStart":4,"LineEnd":26,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone793.java","labeltext":"core-diff1","codeSnippet":"CartesianProductLHM cp = new CartesianProductLHM (arr);","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":59,"status":"core-diff"},{"fileName":"Clone790.java","labeltext":"core-diff1","codeSnippet":"if (amount == 0) return 1;","LineStart":28,"CharStart":4,"LineEnd":28,"CharEnd":30,"status":"core-diff"},{"fileName":"Clone790.java","labeltext":"core-diff1","codeSnippet":"    if (sum < 0) {\n        return 0;\n    }","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone790.java","labeltext":"core-sim1","codeSnippet":"    if (vals == null || vals.length == 0) {\n        return 0;\n    }","LineStart":12,"CharStart":4,"LineEnd":14,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone789.java","labeltext":"core-diff1","codeSnippet":"    if (coins.length == 1) {\n        return amount % coins [0] == 0 ? 1 : 0;\n    }","LineStart":28,"CharStart":4,"LineEnd":30,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone789.java","labeltext":"core-diff1","codeSnippet":"    if (sum < 0) {\n        return 0;\n    }\n    if (vals == null || vals.length == 0) {\n        return 0;\n    }","LineStart":9,"CharStart":4,"LineEnd":14,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone789.java","labeltext":"core-sim1","codeSnippet":"      else {\n        int total = 0;\n        int [] subCoins = arrayOfCoinsExceptTheFirstOne (coins);\n        for (int i = 0;\n        i * coins [0] <= amount; ++ i) {\n            total += findCombinationsCount (amount - i * coins [0], subCoins);\n        }\n        return total;\n    }","LineStart":30,"CharStart":6,"LineEnd":38,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone789.java","labeltext":"core-sim1","codeSnippet":"    int dp [] = new int [sum + 1];\n    dp [0] = 1;\n    for (int i = 0;\n    i < vals.length; ++ i) {\n        for (int j = vals [i];\n        j <= sum; ++ j) {\n            dp [j] += dp [j - vals [i]];\n        }\n    }\n    return dp [sum];","LineStart":15,"CharStart":4,"LineEnd":24,"CharEnd":20,"status":"core-sim"},{"fileName":"Clone790.java","labeltext":"core-sim2","codeSnippet":"    else {\n        int withFirstCoin = findCombinationsCount (amount - coins [checkFromIndex], coins, checkFromIndex);\n        int withoutFirstCoin = findCombinationsCount (amount, coins, checkFromIndex + 1);\n        return withFirstCoin + withoutFirstCoin;\n    }","LineStart":30,"CharStart":4,"LineEnd":34,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone790.java","labeltext":"core-sim1","codeSnippet":"else if (amount < 0 || coins.length == checkFromIndex) return 0;","LineStart":29,"CharStart":4,"LineEnd":29,"CharEnd":68,"status":"core-sim"},{"fileName":"Clone790.java","labeltext":"core-sim2","codeSnippet":"    int dp [] = new int [sum + 1];\n    dp [0] = 1;\n    for (int i = 0;\n    i < vals.length; ++ i) {\n        for (int j = vals [i];\n        j <= sum; ++ j) {\n            dp [j] += dp [j - vals [i]];\n        }\n    }\n    return dp [sum];","LineStart":15,"CharStart":4,"LineEnd":24,"CharEnd":20,"status":"core-sim"},{"fileName":"Clone786.java","labeltext":"core-sim1","codeSnippet":"    this.lines = size;\n    grid = new Cell [size] [size];\n    for (int i = 0;\n    i < size; i ++) for (int j = 0;\n    j < size; j ++) {\n        grid [i] [j] = new Cell ();\n    }","LineStart":9,"CharStart":4,"LineEnd":15,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone786.java","labeltext":"core-sim1","codeSnippet":"    this.lines = size;\n    grid = new Cell [size] [size];\n    for (int i = 0;\n    i < size; i ++) {\n        for (int j = 0;\n        j < size; j ++) {\n            grid [i] [j] = new Cell ();\n        }\n    }","LineStart":19,"CharStart":4,"LineEnd":27,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone780.java","labeltext":"core-sim1","codeSnippet":"    while (done == 0) {\n        if (first > last) {\n            index = - 1;\n            done = 1;\n        } else {\n            int mid = (first + last) / 2;\n            if (value == anArray [mid]) {\n                index = mid;\n                done = 1;\n            } else if (value < anArray [mid]) {\n                last = mid - 1;\n            } else {\n                first = mid + 1;\n            }\n        }\n    }\n    return index;","LineStart":11,"CharStart":4,"LineEnd":27,"CharEnd":17,"status":"core-sim"},{"fileName":"Clone780.java","labeltext":"core-sim1","codeSnippet":"    do {\n        if (first > last) {\n            return - 1;\n        } else {\n            int mid = (first + last) / 2;\n            if (value == anArray [mid]) {\n                return mid;\n            } else if (value < anArray [mid]) {\n                last = mid - 1;\n            } else {\n                first = mid + 1;\n            }\n        }\n    } while (true);","LineStart":31,"CharStart":4,"LineEnd":44,"CharEnd":19,"status":"core-sim"},{"fileName":"Clone780.java","labeltext":"noncore-diff1","codeSnippet":"    int index;\n    int done = 0;","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":17,"status":"noncore-diff"},{"fileName":"Clone779.java","labeltext":"core-sim1","codeSnippet":"    for (String string : \"House, House, House, Dog, Dog, Dog, Dog\".split (\", \")) {\n        if (unique.get (string) == null) unique.put (string, 1);\n        else unique.put (string, unique.get (string) + 1);\n    }","LineStart":28,"CharStart":4,"LineEnd":31,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone779.java","labeltext":"core-sim1","codeSnippet":"    for (String t : item) {\n        if (map.containsKey (t)) {\n            map.put (t, map.get (t) + 1);\n        } else {\n            map.put (t, 1);\n        }\n    }","LineStart":12,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone779.java","labeltext":"core-sim2","codeSnippet":"    Set < String > keys = map.keySet ();\n    for (String key : keys) {\n        System.out.println (key);\n        System.out.println (map.get (key));\n    }","LineStart":19,"CharStart":4,"LineEnd":23,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone779.java","labeltext":"core-sim2","codeSnippet":"    String uniqueString = join (unique.keySet (), \", \");\n    List < Integer > value = new ArrayList < Integer > (unique.values ());\n    System.out.println (\"Output = \" + uniqueString);\n    System.out.println (\"Values = \" + value);","LineStart":32,"CharStart":4,"LineEnd":35,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone779.java","labeltext":"noncore-diff1","codeSnippet":"HashMap < String, Integer > map = new HashMap < > ();","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":57,"status":"noncore-diff"},{"fileName":"Clone779.java","labeltext":"noncore-diff1","codeSnippet":"Map < String, Integer > unique = new LinkedHashMap < String, Integer > ();","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":78,"status":"noncore-diff"},{"fileName":"Clone779.java","labeltext":"noncore-diff2","codeSnippet":"    String value = \"This is testing Program testing Program\";\n    String item [] = value.split (\" \");","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":39,"status":"noncore-diff"},{"fileName":"Clone777.java","labeltext":"core-sim1","codeSnippet":"    StringBuilder b = new StringBuilder (\"[\");\n    for (Field f : getClass ().getFields ()) {\n        if (! isStaticField (f)) {\n            try {\n                b.append (f.getName () + \"=\" + f.get (this) + \" \");\n            } catch (IllegalAccessException e) {\n            }\n        }\n    }\n    b.append (']');\n    return b.toString ();","LineStart":10,"CharStart":4,"LineEnd":20,"CharEnd":25,"status":"core-sim"},{"fileName":"Clone777.java","labeltext":"noncore-diff1","codeSnippet":"    if (obj == null) return \"null\";\n    if (visited.contains (obj)) return \"...\";\n    visited.add (obj);\n    Class cl = obj.getClass ();\n    if (cl == String.class) return (String) obj;","LineStart":24,"CharStart":4,"LineEnd":28,"CharEnd":48,"status":"noncore-diff"},{"fileName":"Clone777.java","labeltext":"core-sim1","codeSnippet":"    if (cl.isArray ()) {\n        String r = cl.getComponentType () + \"[]{\";\n        for (int i = 0;\n        i < Array.getLength (obj); i ++) {\n            if (i > 0) r += \",\";\n            Object val = Array.get (obj, i);\n            if (cl.getComponentType ().isPrimitive ()) r += val;\n            else r += toString (val);\n        }\n        return r + \"}\";\n    }\n    String r = cl.getName ();\n    do {\n        r += \"[\";\n        Field [] fields = cl.getDeclaredFields ();\n        AccessibleObject.setAccessible (fields, true);\n        for (Field f : fields) {\n            if (! Modifier.isStatic (f.getModifiers ())) {\n                if (! r.endsWith (\"[\")) r += \",\";\n                r += f.getName () + \"=\";\n                try {\n                    Class t = f.getType ();\n                    Object val = f.get (obj);\n                    if (t.isPrimitive ()) r += val;\n                    else r += toString (val);\n                } catch (Exception e) {\n                    e.printStackTrace ();\n                }\n            }\n        }\n        r += \"]\";\n        cl = cl.getSuperclass ();\n    } while (cl != null);\n    return r;","LineStart":29,"CharStart":4,"LineEnd":62,"CharEnd":13,"status":"core-sim"},{"fileName":"Clone803.java","labeltext":"core-sim1","codeSnippet":"    String temp1 = shuffle (text.substring (0, split));\n    String temp2 = shuffle (text.substring (split));\n    if (Math.random () > 0.5) return temp1 + temp2;\n    else return temp2 + temp1;","LineStart":24,"CharStart":4,"LineEnd":27,"CharEnd":30,"status":"core-sim"},{"fileName":"Clone803.java","labeltext":"core-sim1","codeSnippet":"    while (characters.size () != 0) {\n        int randPicker = (int) (Math.random () * characters.size ());\n        output.append (characters.remove (randPicker));\n    }\n    System.out.println (output.toString ());","LineStart":14,"CharStart":4,"LineEnd":18,"CharEnd":44,"status":"core-sim"},{"fileName":"Clone803.java","labeltext":"noncore-diff1","codeSnippet":"    List < Character > characters = new ArrayList < Character > ();\n    for (char c : input.toCharArray ()) {\n        characters.add (c);\n    }\n    StringBuilder output = new StringBuilder (input.length ());","LineStart":9,"CharStart":4,"LineEnd":13,"CharEnd":63,"status":"noncore-diff"},{"fileName":"Clone803.java","labeltext":"noncore-diff1","codeSnippet":"    if (text.length () <= 1) return text;\n    int split = text.length () / 2;","LineStart":22,"CharStart":4,"LineEnd":23,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone806.java","labeltext":"core-diff1","codeSnippet":"    SwingUtilities.invokeLater (new Runnable () {\n        @Override\n        public void run () {\n            new Mail ().initUI ();\n        }}\n    );","LineStart":9,"CharStart":4,"LineEnd":14,"CharEnd":6,"status":"core-diff"},{"fileName":"Clone806.java","labeltext":"core-diff","codeSnippet":"    frame.setSize (100, 100);\n    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    JTextArea textArea = new JTextArea ();\n    frame.add (textArea, BorderLayout.CENTER);\n    JPanel list = new JPanel ();\n    list.setLayout (new BoxLayout (list, BoxLayout.Y_AXIS));\n    frame.add (list, BorderLayout.NORTH);\n    String [] labels = {\"To: \", \"Cc: \", \"Bcc: \", \"Subject: \"};\n    for (int i = 0;\n    i < labels.length; i ++) {\n        JLabel l = new JLabel (labels [i]);\n        JTextField f = new JTextField ();\n        JPanel p = new JPanel (new BorderLayout ());\n        p.add (l, BorderLayout.WEST);\n        p.add (f, BorderLayout.CENTER);\n        list.add (p);\n    }\n    frame.pack ();\n    frame.setVisible (true);","LineStart":19,"CharStart":4,"LineEnd":37,"CharEnd":28,"status":"core-diff"},{"fileName":"Clone806.java","labeltext":"noncore-diff1","codeSnippet":"JFrame frame = new JFrame (\"New Message\");","LineStart":18,"CharStart":4,"LineEnd":18,"CharEnd":46,"status":"noncore-diff"},{"fileName":"Clone807.java","labeltext":"noncore-sim1","codeSnippet":"dir.exists ()","LineStart":9,"CharStart":10,"LineEnd":9,"CharEnd":23,"status":"noncore-sim"},{"fileName":"Clone807.java","labeltext":"noncore-sim1","codeSnippet":"directory.exists ()","LineStart":26,"CharStart":8,"LineEnd":26,"CharEnd":27,"status":"noncore-sim"},{"fileName":"Clone807.java","labeltext":"core-sim1","codeSnippet":"        File [] files = directory.listFiles ();\n        if (null != files) {\n            for (int i = 0;\n            i < files.length; i ++) {\n                if (files [i].isDirectory ()) {\n                    deleteDirectory (files [i]);\n                } else {\n                    files [i].delete ();\n                }\n            }\n        }","LineStart":27,"CharStart":8,"LineEnd":37,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone807.java","labeltext":"core-sim1","codeSnippet":"    String [] files = dir.list ();\n    for (int i = 0, len = files.length;\n    i < len; i ++) {\n        File f = new File (dir, files [i]);\n        if (f.isDirectory ()) {\n            deleteDirectory (f);\n        } else {\n            f.delete ();\n        }\n    }","LineStart":12,"CharStart":4,"LineEnd":21,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone807.java","labeltext":"core-sim2","codeSnippet":"return dir.delete ();","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":25,"status":"core-sim"},{"fileName":"Clone807.java","labeltext":"core-sim2","codeSnippet":"return (directory.delete ());","LineStart":39,"CharStart":4,"LineEnd":39,"CharEnd":33,"status":"core-sim"},{"fileName":"Clone807.java","labeltext":"noncore-diff1","codeSnippet":"if (!","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone807.java","labeltext":"noncore-diff1","codeSnippet":"                        || ! dir.isDirectory ()) {\n        return false;\n    }","LineStart":9,"CharStart":24,"LineEnd":11,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone807.java","labeltext":"noncore-diff2","codeSnippet":"if (","LineStart":26,"CharStart":4,"LineEnd":26,"CharEnd":8,"status":"noncore-diff"},{"fileName":"Clone807.java","labeltext":"noncore-diff2","codeSnippet":") {","LineStart":26,"CharStart":27,"LineEnd":26,"CharEnd":30,"status":"noncore-diff"},{"fileName":"Clone807.java","labeltext":"noncore-diff2","codeSnippet":"}","LineStart":38,"CharStart":4,"LineEnd":38,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone810.java","labeltext":"noncore-sim1","codeSnippet":"final JPanel gui = new JPanel (cards);","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":42,"status":"noncore-sim"},{"fileName":"Clone810.java","labeltext":"noncore-sim1","codeSnippet":"final JPanel panel = new JPanel ();","LineStart":53,"CharStart":4,"LineEnd":53,"CharEnd":39,"status":"noncore-sim"},{"fileName":"Clone810.java","labeltext":"core-diff1","codeSnippet":"UIManager.setLookAndFeel (UIManager.getSystemLookAndFeelClassName ());","LineStart":50,"CharStart":8,"LineEnd":50,"CharEnd":78,"status":"core-diff"},{"fileName":"Clone810.java","labeltext":"noncore-sim1","codeSnippet":"JPanel newPanel = new JPanel ();","LineStart":65,"CharStart":12,"LineEnd":65,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone810.java","labeltext":"noncore-diff","codeSnippet":"try {","LineStart":49,"CharStart":4,"LineEnd":49,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone810.java","labeltext":"noncore-diff1","codeSnippet":"    } catch (Exception ex) {\n    }","LineStart":51,"CharStart":4,"LineEnd":52,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone810.java","labeltext":"core-diff2","codeSnippet":"    gui.setBorder (new EmptyBorder (100, 300, 100, 300));\n    gui.setBackground (Color.WHITE);\n    gui.add (new JLabel (icon1), \"label \" + 1);\n    gui.add (new JLabel (icon2), \"label \" + 2);\n    gui.add (new JLabel (icon3), \"label \" + 3);\n    gui.add (new JLabel (icon4), \"label \" + 4);\n    gui.add (new JLabel (icon3), \"label \" + 5);\n    gui.add (new JLabel (icon2), \"label \" + 6);\n    ActionListener animate = new ActionListener () {\n        long lastTime = - 1;\n        int frameCount = 0;\n        String timeString;\n        DecimalFormat format = new DecimalFormat (\"0.00\");\n        @Override\n        public void actionPerformed (ActionEvent e) {\n            long time = System.nanoTime ();\n            if (lastTime < 0) {\n                lastTime = time;\n                timeString = \"00.00\";\n            } else if (time - lastTime > 1000) {\n                long duration = time - lastTime;\n                double fps = 1000000000d * (double) frameCount / (double) duration;\n                timeString = format.format (fps);\n                frameCount = 0;\n                lastTime = time;\n                System.out.println (timeString);\n            }\n            frameCount ++;\n            cards.next (gui);\n        }}\n    ;\n    Timer timer = new Timer (5, animate);\n    timer.start ();\n    JOptionPane.showMessageDialog (null, gui);\n    timer.stop ();","LineStart":11,"CharStart":4,"LineEnd":45,"CharEnd":18,"status":"core-diff"},{"fileName":"Clone810.java","labeltext":"noncore-diff1","codeSnippet":"final CardLayout cards = new CardLayout ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":47,"status":"noncore-diff"},{"fileName":"Clone810.java","labeltext":"core-diff2","codeSnippet":"    panel.setBackground (Color.RED);\n    final JFrame frame = new JFrame (\"Test\");\n    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);\n    frame.add (panel);\n    JButton change = new JButton (\"Switch\");\n    change.addActionListener (new ActionListener () {\n        @Override\n        public void actionPerformed (ActionEvent e) {\n            long start = System.currentTimeMillis ();\n            frame.remove (panel);\n            long end = System.currentTimeMillis ();\n            JPanel newPanel = new JPanel ();\n            newPanel.setBackground (Color.BLUE);\n            frame.add (newPanel);\n            frame.validate ();\n        }}\n    );\n    frame.add (change, BorderLayout.SOUTH);\n    frame.setSize (100, 100);\n    frame.setLocationRelativeTo (null);\n    frame.setVisible (true);","LineStart":54,"CharStart":4,"LineEnd":74,"CharEnd":28,"status":"core-diff"},{"fileName":"Clone815.java","labeltext":"core-sim1","codeSnippet":"    char [] chars = str.toCharArray ();\n    for (char ch : chars) {\n        if (character != null && character != ch) {\n            continue;\n        }\n        counts [ch] ++;\n    }\n    for (int i = 0;\n    i < counts.length; i ++) {\n        if (counts [i] > 0) {\n            System.out.println (\"Character \" + (char) i + \" appeared \" + counts [i] + \" times\");\n        }\n    }","LineStart":10,"CharStart":4,"LineEnd":22,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone815.java","labeltext":"core-sim1","codeSnippet":"    for (String s : arr) {\n        tempString.append (s);\n        for (char ch : s.toCharArray ()) {\n            System.out.println (\"Number of Occurrence of \" + ch + \" is:\" + tempString.chars ().filter (i -> i == ch).count ());\n        }\n    }\n    if (! (Character.toString (value).isEmpty ())) {\n        StringBuffer tempString2 = new StringBuffer ();\n        for (String s : arr) {\n            tempString2.append (s);\n            for (char ch : s.toCharArray ()) {\n                if (ch == value) {\n                    System.out.println (\"Number of Occurrence of \" + ch + \" is:\" + tempString2.chars ().filter (i -> i == ch).count ());\n                }\n            }\n        }\n    }","LineStart":28,"CharStart":4,"LineEnd":44,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone815.java","labeltext":"noncore-diff1","codeSnippet":"    String [] arr = str.split (\"\");\n    StringBuffer tempString = new StringBuffer ();","LineStart":26,"CharStart":4,"LineEnd":27,"CharEnd":50,"status":"noncore-diff"},{"fileName":"Clone815.java","labeltext":"noncore-diff1","codeSnippet":"int [] counts = new int [MAX_CHAR];","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":39,"status":"noncore-diff"},{"fileName":"Clone819.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < str.length (); i ++) {\n        if (str.charAt (i) == searchKey) count += str.charAt (i) + \"\\n\";\n    }\n    System.out.println (count + \"\\nNumber of Occurrence of \" + searchKey + \" is \" + count.length () + \" in string \" + str);","LineStart":32,"CharStart":4,"LineEnd":36,"CharEnd":123,"status":"core-sim"},{"fileName":"Clone819.java","labeltext":"core-sim1","codeSnippet":"    for (String s : arr) {\n        tempString.append (s);\n        for (char ch : s.toCharArray ()) {\n            System.out.println (\"Number of Occurrence of \" + ch + \" is:\" + tempString.chars ().filter (i -> i == ch).count ());\n        }\n    }\n    if (! (Character.toString (value).isEmpty ())) {\n        StringBuffer tempString2 = new StringBuffer ();\n        for (String s : arr) {\n            tempString2.append (s);\n            for (char ch : s.toCharArray ()) {\n                if (ch == value) {\n                    System.out.println (\"Number of Occurrence of \" + ch + \" is:\" + tempString2.chars ().filter (i -> i == ch).count ());\n                }\n            }\n        }\n    }","LineStart":11,"CharStart":4,"LineEnd":27,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone819.java","labeltext":"noncore-diff1","codeSnippet":"    String [] arr = str.split (\"\");\n    StringBuffer tempString = new StringBuffer ();","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":50,"status":"noncore-diff"},{"fileName":"Clone819.java","labeltext":"noncore-diff1","codeSnippet":"String count = \"\";","LineStart":31,"CharStart":4,"LineEnd":31,"CharEnd":22,"status":"noncore-diff"},{"fileName":"Clone368.java","labeltext":"core-diff1","codeSnippet":"        Runnable worldTask = new Runnable () {\n            @Override\n            public void run () {\n                new ThreadSeq ().printWorld ();\n            }}\n        ;","LineStart":17,"CharStart":8,"LineEnd":22,"CharEnd":9,"status":"core-diff"},{"fileName":"Clone368.java","labeltext":"core-diff2","codeSnippet":"Thread t2 = new Thread (worldTask);","LineStart":24,"CharStart":8,"LineEnd":24,"CharEnd":43,"status":"core-diff"},{"fileName":"Clone820.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < s.length (); i ++) {\n        c = s.charAt (i);\n        for (int j = 0;\n        j < s.length (); j ++) {\n            d = s.charAt (j);\n            if (c == d) {\n                s.deleteCharAt (j);\n                if (i >= j) i --;\n                j --;\n                counter ++;\n            }\n        }\n        end = end + counter + c;\n        counter = 0;\n    }\n    return end;","LineStart":13,"CharStart":4,"LineEnd":29,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone820.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < s.length (); i ++) {\n        char c = s.charAt (i);\n        count [(int) (c - 'a')] ++;\n    }\n    String ans = \"\";\n    for (int i = 0;\n    i < 26; i ++) {\n        if (count [i] != 0) {\n            ans += String.valueOf (count [i]) + (char) (i + 'a');\n        }\n    }\n    return ans;","LineStart":34,"CharStart":4,"LineEnd":46,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone820.java","labeltext":"noncore-diff1","codeSnippet":"    StringBuilder s = new StringBuilder (s);\n    String end = new String ();\n    int counter = 0;\n    char c, d;","LineStart":9,"CharStart":4,"LineEnd":12,"CharEnd":14,"status":"noncore-diff"},{"fileName":"Clone820.java","labeltext":"noncore-diff1","codeSnippet":"int [] count = new int [26];","LineStart":33,"CharStart":4,"LineEnd":33,"CharEnd":32,"status":"noncore-diff"},{"fileName":"Clone825.java","labeltext":"core-diff1","codeSnippet":"    for (int i = 0;\n    i < sc.length; i ++) {\n        if (sc [i] == 'A') prevA = i;\n        else if (sc [i] == 'G') prevG = i;\n        else if (sc [i] == 'C') prevC = i;\n        A [i] = prevA;\n        G [i] = prevG;\n        C [i] = prevC;\n    }\n    int [] result = new int [P.length];\n    for (int i = 0;\n    i < P.length; i ++) {\n        if (A [K [i]] >= P [i] && A [K [i]] <= K [i]) {\n            result [i] = 1;\n        } else if (C [K [i]] >= P [i] && C [K [i]] <= K [i]) {\n            result [i] = 2;\n        } else if (G [K [i]] >= P [i] && G [K [i]] <= K [i]) {\n            result [i] = 3;\n        } else {\n            result [i] = 4;\n        }\n    }\n    return result;","LineStart":14,"CharStart":3,"LineEnd":36,"CharEnd":18,"status":"core-diff"},{"fileName":"Clone825.java","labeltext":"core-diff2","codeSnippet":"    for (int counter = 0;\n    counter < characterInput.length; counter ++) {\n        integerInput [counter] = characterMapping.get (characterInput [counter]);\n    }\n    int [] result = new int [P.length];\n    for (int index = 0;\n    index < P.length; index ++) {\n        if (P [index] == Q [index]) {\n            result [index] = integerInput [P [index]];\n            break;\n        }\n        final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);\n        final int minimumValue = minimum (subArray);\n        result [index] = minimumValue;\n    }\n    return result;","LineStart":42,"CharStart":4,"LineEnd":57,"CharEnd":18,"status":"core-diff"},{"fileName":"Clone825.java","labeltext":"noncore-diff1","codeSnippet":"    final char [] characterInput = S.toCharArray ();\n    final int [] integerInput = new int [characterInput.length];","LineStart":40,"CharStart":4,"LineEnd":41,"CharEnd":64,"status":"noncore-diff"},{"fileName":"Clone825.java","labeltext":"noncore-diff1","codeSnippet":"    char [] sc = S.toCharArray ();\n    int [] A = new int [sc.length];\n    int [] G = new int [sc.length];\n    int [] C = new int [sc.length];\n    int prevA = - 1, prevG = - 1, prevC = - 1;","LineStart":9,"CharStart":4,"LineEnd":13,"CharEnd":46,"status":"noncore-diff"},{"fileName":"Clone831.java","labeltext":"noncore-sim1","codeSnippet":"final char [] characterInput = S.toCharArray ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":52,"status":"noncore-sim"},{"fileName":"Clone831.java","labeltext":"noncore-sim1","codeSnippet":"char [] chars = S.toCharArray ();","LineStart":31,"CharStart":4,"LineEnd":31,"CharEnd":37,"status":"noncore-sim"},{"fileName":"Clone831.java","labeltext":"noncore-sim2","codeSnippet":"final int [] integerInput = new int [characterInput.length];","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":64,"status":"noncore-sim"},{"fileName":"Clone831.java","labeltext":"noncore-sim2","codeSnippet":"int [] answer = new int [P.length];","LineStart":30,"CharStart":4,"LineEnd":30,"CharEnd":39,"status":"noncore-sim"},{"fileName":"Clone831.java","labeltext":"core-sim1","codeSnippet":"    for (int counter = 0;\n    counter < characterInput.length; counter ++) {\n        integerInput [counter] = characterMapping.get (characterInput [counter]);\n    }\n    int [] result = new int [P.length];\n    for (int index = 0;\n    index < P.length; index ++) {\n        if (P [index] == Q [index]) {\n            result [index] = integerInput [P [index]];\n            break;\n        }\n        final int [] subArray = Arrays.copyOfRange (integerInput, P [index], Q [index] + 1);\n        final int minimumValue = minimum (subArray);\n        result [index] = minimumValue;\n    }\n    return result;","LineStart":11,"CharStart":4,"LineEnd":26,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone831.java","labeltext":"core-sim1","codeSnippet":"    for (int iii = 0;\n    iii < chars.length; iii ++) {\n        if (iii > 0) {\n            for (int zzz = 0;\n            zzz < 4; zzz ++) {\n                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];\n            }\n        }\n        switch (chars [iii]) {\n            case 'A' :\n                cumulativeAnswers [0] [iii + 1] ++;\n                break;\n            case 'C' :\n                cumulativeAnswers [1] [iii + 1] ++;\n                break;\n            case 'G' :\n                cumulativeAnswers [2] [iii + 1] ++;\n                break;\n            case 'T' :\n                cumulativeAnswers [3] [iii + 1] ++;\n                break;\n        }\n    }\n    for (int iii = 0;\n    iii < P.length; iii ++) {\n        for (int zzz = 0;\n        zzz < 4; zzz ++) {\n            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {\n                answer [iii] = zzz + 1;\n                break;\n            }\n        }\n    }\n    return answer;","LineStart":33,"CharStart":4,"LineEnd":66,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone831.java","labeltext":"noncore-diff1","codeSnippet":"int [] [] cumulativeAnswers = new int [4] [chars.length + 1];","LineStart":32,"CharStart":4,"LineEnd":32,"CharEnd":65,"status":"noncore-diff"},{"fileName":"Clone835.java","labeltext":"core-sim1","codeSnippet":"    for (int iii = 0;\n    iii < chars.length; iii ++) {\n        if (iii > 0) {\n            for (int zzz = 0;\n            zzz < 4; zzz ++) {\n                cumulativeAnswers [zzz] [iii + 1] = cumulativeAnswers [zzz] [iii];\n            }\n        }\n        switch (chars [iii]) {\n            case 'A' :\n                cumulativeAnswers [0] [iii + 1] ++;\n                break;\n            case 'C' :\n                cumulativeAnswers [1] [iii + 1] ++;\n                break;\n            case 'G' :\n                cumulativeAnswers [2] [iii + 1] ++;\n                break;\n            case 'T' :\n                cumulativeAnswers [3] [iii + 1] ++;\n                break;\n        }\n    }\n    for (int iii = 0;\n    iii < P.length; iii ++) {\n        for (int zzz = 0;\n        zzz < 4; zzz ++) {\n            if ((cumulativeAnswers [zzz] [Q [iii] + 1] - cumulativeAnswers [zzz] [P [iii]]) > 0) {\n                answer [iii] = zzz + 1;\n                break;\n            }\n        }\n    }\n    return answer;","LineStart":12,"CharStart":4,"LineEnd":45,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone835.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < N; i ++) {\n        char c = S.charAt (i);\n        if (c == 'A') {\n            lastA = i;\n        } else if (c == 'C') {\n            lastC = i;\n        } else if (c == 'G') {\n            lastG = i;\n        }\n        lastOccurrencesMap [0] [i] = lastA;\n        lastOccurrencesMap [1] [i] = lastC;\n        lastOccurrencesMap [2] [i] = lastG;\n    }\n    for (int i = 0;\n    i < M; i ++) {\n        int startIndex = P [i];\n        int endIndex = Q [i];\n        int minimum = 4;\n        for (int n = 0;\n        n < 3; n ++) {\n            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);\n            if (lastOccurence != 0) {\n                minimum = n + 1;\n                break;\n            }\n        }\n        result [i] = minimum;\n    }\n    return result;","LineStart":56,"CharStart":4,"LineEnd":85,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone835.java","labeltext":"noncore-sim1","codeSnippet":"    int M = P.length;\n    int [] result = new int [M];","LineStart":50,"CharStart":4,"LineEnd":51,"CharEnd":32,"status":"noncore-sim"},{"fileName":"Clone835.java","labeltext":"noncore-sim1","codeSnippet":"int [] answer = new int [P.length];","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":39,"status":"noncore-sim"},{"fileName":"Clone835.java","labeltext":"noncore-diff1","codeSnippet":"    char [] chars = S.toCharArray ();\n    int [] [] cumulativeAnswers = new int [4] [chars.length + 1];","LineStart":10,"CharStart":4,"LineEnd":11,"CharEnd":65,"status":"noncore-diff"},{"fileName":"Clone835.java","labeltext":"noncore-diff2","codeSnippet":"    lastOccurrencesMap = new int [3] [N];\n    int lastA = - 1;\n    int lastC = - 1;\n    int lastG = - 1;","LineStart":52,"CharStart":4,"LineEnd":55,"CharEnd":20,"status":"noncore-diff"},{"fileName":"Clone835.java","labeltext":"noncore-diff3","codeSnippet":"int N = S.length ()","LineStart":49,"CharStart":4,"LineEnd":49,"CharEnd":23,"status":"noncore-diff"},{"fileName":"Clone836.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < S.length (); i ++) {\n        switch (S.charAt (i)) {\n            case 'A' :\n                factor1Sum ++;\n                break;\n            case 'C' :\n                factor2Sum ++;\n                break;\n            case 'G' :\n                factor3Sum ++;\n                break;\n            case 'T' :\n                factor4Sum ++;\n                break;\n            default :\n                break;\n        }\n        factor1 [i] = factor1Sum;\n        factor2 [i] = factor2Sum;\n        factor3 [i] = factor3Sum;\n        factor4 [i] = factor4Sum;\n    }\n    for (int i = 0;\n    i < P.length; i ++) {\n        int start = P [i];\n        int end = Q [i];\n        if (start == 0) {\n            if (factor1 [end] > 0) {\n                result [i] = 1;\n            } else if (factor2 [end] > 0) {\n                result [i] = 2;\n            } else if (factor3 [end] > 0) {\n                result [i] = 3;\n            } else {\n                result [i] = 4;\n            }\n        } else {\n            if (factor1 [end] > factor1 [start - 1]) {\n                result [i] = 1;\n            } else if (factor2 [end] > factor2 [start - 1]) {\n                result [i] = 2;\n            } else if (factor3 [end] > factor3 [start - 1]) {\n                result [i] = 3;\n            } else {\n                result [i] = 4;\n            }\n        }\n    }\n    return result;","LineStart":18,"CharStart":4,"LineEnd":67,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone836.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < N; i ++) {\n        char c = S.charAt (i);\n        if (c == 'A') {\n            lastA = i;\n        } else if (c == 'C') {\n            lastC = i;\n        } else if (c == 'G') {\n            lastG = i;\n        }\n        lastOccurrencesMap [0] [i] = lastA;\n        lastOccurrencesMap [1] [i] = lastC;\n        lastOccurrencesMap [2] [i] = lastG;\n    }\n    for (int i = 0;\n    i < M; i ++) {\n        int startIndex = P [i];\n        int endIndex = Q [i];\n        int minimum = 4;\n        for (int n = 0;\n        n < 3; n ++) {\n            int lastOccurence = getLastNucleotideOccurrence (startIndex, endIndex, n);\n            if (lastOccurence != 0) {\n                minimum = n + 1;\n                break;\n            }\n        }\n        result [i] = minimum;\n    }\n    return result;","LineStart":78,"CharStart":4,"LineEnd":107,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone836.java","labeltext":"noncore-sim1","codeSnippet":"    int M = P.length;\n    int [] result = new int [M];","LineStart":72,"CharStart":4,"LineEnd":73,"CharEnd":32,"status":"noncore-sim"},{"fileName":"Clone836.java","labeltext":"noncore-sim1","codeSnippet":"int [] result = new int [P.length];","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":39,"status":"noncore-sim"},{"fileName":"Clone836.java","labeltext":"noncore-diff1","codeSnippet":"    int [] factor1 = new int [S.length ()];\n    int [] factor2 = new int [S.length ()];\n    int [] factor3 = new int [S.length ()];\n    int [] factor4 = new int [S.length ()];\n    int factor1Sum = 0;\n    int factor2Sum = 0;\n    int factor3Sum = 0;\n    int factor4Sum = 0;","LineStart":10,"CharStart":4,"LineEnd":17,"CharEnd":23,"status":"noncore-diff"},{"fileName":"Clone836.java","labeltext":"noncore-diff1","codeSnippet":"int N = S.length ();","LineStart":71,"CharStart":4,"LineEnd":71,"CharEnd":24,"status":"noncore-diff"},{"fileName":"Clone836.java","labeltext":"noncore-diff1","codeSnippet":"    lastOccurrencesMap = new int [3] [N];\n    int lastA = - 1;\n    int lastC = - 1;\n    int lastG = - 1;","LineStart":74,"CharStart":4,"LineEnd":77,"CharEnd":20,"status":"noncore-diff"},{"fileName":"Clone840.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0, end = values.length - 1;\n    i < end; i ++) {\n        System.arraycopy (values [i].toCharArray (), 0, joined, pos, values [i].length ());\n        pos += values [i].length ();\n        System.arraycopy (sep, 0, joined, pos, sep.length);\n        pos += sep.length;\n    }\n    System.arraycopy (values [values.length - 1].toCharArray (), 0, joined, pos, values [values.length - 1].length ());\n    return new String (joined);","LineStart":29,"CharStart":4,"LineEnd":37,"CharEnd":31,"status":"core-sim"},{"fileName":"Clone840.java","labeltext":"core-sim1","codeSnippet":"    for (int i = startIndex;\n    i < strings.length; i ++) {\n        if (i != startIndex) sb.append (separator);\n        sb.append (strings [i]);\n    }\n    return sb.toString ();","LineStart":10,"CharStart":4,"LineEnd":15,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone840.java","labeltext":"core-diff1","codeSnippet":"    for (int i = 0;\n    i < values.length; i ++) {\n        if (values [i] == null) values [i] = \"\";\n        else totalSize += values [i].length ();\n    }","LineStart":22,"CharStart":4,"LineEnd":26,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone840.java","labeltext":"core-diff1","codeSnippet":"if (values.length == 0) return \"\";","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":38,"status":"core-diff"},{"fileName":"Clone840.java","labeltext":"noncore-diff1","codeSnippet":"    char [] sep = separator.toCharArray ();\n    int totalSize = (values.length - 1) * sep.length;","LineStart":20,"CharStart":4,"LineEnd":21,"CharEnd":53,"status":"noncore-diff"},{"fileName":"Clone840.java","labeltext":"noncore-diff1","codeSnippet":"    char [] joined = new char [totalSize];\n    int pos = 0;","LineStart":27,"CharStart":4,"LineEnd":28,"CharEnd":16,"status":"noncore-diff"},{"fileName":"Clone840.java","labeltext":"noncore-diff2","codeSnippet":"StringBuffer sb = new StringBuffer ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":42,"status":"noncore-diff"},{"fileName":"Clone843.java","labeltext":"noncore-sim1","codeSnippet":"StringBuilder sb = new StringBuilder ();","LineStart":30,"CharStart":4,"LineEnd":30,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone843.java","labeltext":"noncore-sim1","codeSnippet":"StringBuilder sb = new StringBuilder ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone843.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 1;\n    i < size; i ++) {\n        current = nums [i];\n        expected = previous + 1;\n        if (current != expected) {\n            addRange (sb, rangeStart, previous);\n            rangeStart = current;\n        }\n        previous = current;\n    }\n    addRange (sb, rangeStart, nums [size - 1]);\n    return sb.toString ();","LineStart":15,"CharStart":4,"LineEnd":26,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone843.java","labeltext":"core-sim1","codeSnippet":"    for (int cur : nums) if (cur - end <= 1) end = cur;\n    else {\n        appendRange (sb, begin, end);\n        begin = end = cur;\n    }\n    appendRange (sb, begin, end);\n    return sb.substring (1);","LineStart":33,"CharStart":4,"LineEnd":39,"CharEnd":28,"status":"core-sim"},{"fileName":"Clone843.java","labeltext":"core-diff1","codeSnippet":" if (nums.length == 0) return sb.toString ();","LineStart":31,"CharStart":3,"LineEnd":31,"CharEnd":48,"status":"core-diff"},{"fileName":"Clone843.java","labeltext":"noncore-sim2","codeSnippet":"    int rangeStart = nums [0];\n    int previous = nums [0];","LineStart":10,"CharStart":4,"LineEnd":11,"CharEnd":28,"status":"noncore-sim"},{"fileName":"Clone843.java","labeltext":"noncore-sim2","codeSnippet":"int begin = nums [0], end = nums [0];","LineStart":32,"CharStart":4,"LineEnd":32,"CharEnd":41,"status":"noncore-sim"},{"fileName":"Clone843.java","labeltext":"noncore-diff1","codeSnippet":"    int current;\n    int expected = previous + 1;\n    int size = nums.length;","LineStart":12,"CharStart":4,"LineEnd":14,"CharEnd":27,"status":"noncore-diff"},{"fileName":"Clone844.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 1;\n    i < nums.length; i ++) {\n        current = nums [i];\n        expected = previous + 1;\n        if (current != expected || i == (nums.length - 1)) {\n            if (current == rangeStart) {\n                sb.append (previous + \",\");\n            } else {\n                if (rangeStart != previous) {\n                    if (i == nums.length - 1) sb.append (rangeStart + \"-\" + current);\n                    else sb.append (rangeStart + \"-\" + previous + \",\");\n                } else {\n                    if (i == nums.length - 1) sb.append (rangeStart + \",\" + current);\n                    else sb.append (rangeStart + \",\");\n                }\n            }\n            rangeStart = current;\n        }\n        previous = current;\n    }\n    if (sb.charAt (sb.length () - 1) == ',') {\n        sb.deleteCharAt (sb.length () - 1);\n    }\n    return sb.toString ();","LineStart":14,"CharStart":4,"LineEnd":37,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone844.java","labeltext":"core-sim1","codeSnippet":"    for (int cur : nums) if (cur - end <= 1) end = cur;\n    else {\n        appendRange (sb, begin, end);\n        begin = end = cur;\n    }\n    appendRange (sb, begin, end);\n    return sb.substring (1);","LineStart":44,"CharStart":4,"LineEnd":50,"CharEnd":28,"status":"core-sim"},{"fileName":"Clone844.java","labeltext":"core-diff1","codeSnippet":"if (nums.length == 0) return sb.toString ();","LineStart":42,"CharStart":4,"LineEnd":42,"CharEnd":48,"status":"core-diff"},{"fileName":"Clone844.java","labeltext":"noncore-sim1","codeSnippet":"int begin = nums [0], end = nums [0];","LineStart":43,"CharStart":4,"LineEnd":43,"CharEnd":41,"status":"noncore-sim"},{"fileName":"Clone844.java","labeltext":"noncore-sim2","codeSnippet":"StringBuilder sb = new StringBuilder ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone844.java","labeltext":"noncore-sim1","codeSnippet":"    int rangeStart = nums [0];\n    int previous = nums [0];","LineStart":10,"CharStart":4,"LineEnd":11,"CharEnd":28,"status":"noncore-sim"},{"fileName":"Clone844.java","labeltext":"noncore-sim1","codeSnippet":"StringBuilder sb = new StringBuilder ();","LineStart":41,"CharStart":4,"LineEnd":41,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone844.java","labeltext":"noncore-diff1","codeSnippet":"    int current;\n    int expected = previous + 1;","LineStart":12,"CharStart":4,"LineEnd":13,"CharEnd":32,"status":"noncore-diff"},{"fileName":"Clone845.java","labeltext":"core-sim1","codeSnippet":"    int i = tGen ();\n    if (i >= 1 && i <= 5) {\n        int fastplod = 3;\n        return fastplod;\n    } else if (i >= 6 && i <= 8) {\n        int slowplod = 1;\n        return slowplod;\n    } else if (i >= 9 && i <= 10) {\n        int slip = - 6;\n        return slip;\n    } else {\n        return 0;\n    }","LineStart":9,"CharStart":4,"LineEnd":21,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone845.java","labeltext":"core-sim1","codeSnippet":"    switch (tGen ()) {\n        case 1 :\n        case 2 :\n        case 3 :\n        case 4 :\n        case 5 :\n            return 3;\n        case 6 :\n        case 7 :\n        case 8 :\n            return 1;\n        case 9 :\n        case 10 :\n            return - 6;\n        default :\n            return 0;\n    }","LineStart":25,"CharStart":4,"LineEnd":41,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone847.java","labeltext":"core-sim1","codeSnippet":"Scanner in = new Scanner (System.in);","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":41,"status":"core-sim"},{"fileName":"Clone847.java","labeltext":"core-sim1","codeSnippet":"Scanner input = new Scanner (System.in);","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":44,"status":"core-sim"},{"fileName":"Clone847.java","labeltext":"core-sim1","codeSnippet":"Scanner one = new Scanner (System.in);","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":42,"status":"core-sim"},{"fileName":"Clone847.java","labeltext":"core-sim1","codeSnippet":"Scanner two = new Scanner (System.in);","LineStart":37,"CharStart":4,"LineEnd":37,"CharEnd":42,"status":"core-sim"},{"fileName":"Clone847.java","labeltext":"core-sim1","codeSnippet":"Scanner three = new Scanner (System.in);","LineStart":41,"CharStart":4,"LineEnd":41,"CharEnd":44,"status":"core-sim"},{"fileName":"Clone847.java","labeltext":"core-sim2","codeSnippet":"s = in.nextLine ();","LineStart":14,"CharStart":4,"LineEnd":14,"CharEnd":23,"status":"core-sim"},{"fileName":"Clone847.java","labeltext":"core-sim2","codeSnippet":"a = in.nextInt ();","LineStart":17,"CharStart":4,"LineEnd":17,"CharEnd":22,"status":"core-sim"},{"fileName":"Clone847.java","labeltext":"core-sim2","codeSnippet":"b = in.nextFloat ();","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":24,"status":"core-sim"},{"fileName":"Clone847.java","labeltext":"core-sim2","codeSnippet":"String s = one.nextLine ();","LineStart":29,"CharStart":4,"LineEnd":29,"CharEnd":31,"status":"core-sim"},{"fileName":"Clone847.java","labeltext":"core-sim2","codeSnippet":"s = one.nextLine ();","LineStart":34,"CharStart":8,"LineEnd":34,"CharEnd":28,"status":"core-sim"},{"fileName":"Clone847.java","labeltext":"core-sim2","codeSnippet":"int a = two.nextInt ();","LineStart":39,"CharStart":4,"LineEnd":39,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone847.java","labeltext":"core-sim2","codeSnippet":"String sex = three.nextLine ();","LineStart":43,"CharStart":4,"LineEnd":43,"CharEnd":35,"status":"core-sim"},{"fileName":"Clone847.java","labeltext":"noncore-diff1","codeSnippet":"    int a;\n    float b;\n    String s;","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":13,"status":"noncore-diff"},{"fileName":"Clone847.java","labeltext":"core-diff1","codeSnippet":"    if (s.length () < valid) {\n        System.out.println (\"Enter a valid username\");\n        System.out.println (\"User name must contain \" + valid + \" characters\");\n        System.out.println (\"Enter again: \");","LineStart":30,"CharStart":4,"LineEnd":33,"CharEnd":45,"status":"core-diff"},{"fileName":"Clone847.java","labeltext":"core-diff1","codeSnippet":"System.out.println (\"Enter your username: \");","LineStart":28,"CharStart":4,"LineEnd":28,"CharEnd":49,"status":"core-diff"},{"fileName":"Clone847.java","labeltext":"core-diff1","codeSnippet":"    }\n    System.out.println (\"Username accepted: \" + s);","LineStart":35,"CharStart":4,"LineEnd":36,"CharEnd":51,"status":"core-diff"},{"fileName":"Clone847.java","labeltext":"core-diff1","codeSnippet":"System.out.println (\"Enter your age: \");","LineStart":38,"CharStart":4,"LineEnd":38,"CharEnd":44,"status":"core-diff"},{"fileName":"Clone847.java","labeltext":"core-diff1","codeSnippet":"System.out.println (\"Age accepted: \" + a);","LineStart":40,"CharStart":4,"LineEnd":40,"CharEnd":46,"status":"core-diff"},{"fileName":"Clone847.java","labeltext":"core-diff1","codeSnippet":"System.out.println (\"Enter your sex: \");","LineStart":42,"CharStart":4,"LineEnd":42,"CharEnd":44,"status":"core-diff"},{"fileName":"Clone847.java","labeltext":"core-diff1","codeSnippet":"System.out.println (\"Sex accepted: \" + sex);","LineStart":44,"CharStart":4,"LineEnd":44,"CharEnd":48,"status":"core-diff"},{"fileName":"Clone847.java","labeltext":"core-diff1","codeSnippet":"System.out.println (\"Enter a string\");","LineStart":13,"CharStart":4,"LineEnd":13,"CharEnd":42,"status":"core-diff"},{"fileName":"Clone847.java","labeltext":"core-diff1","codeSnippet":"    System.out.println (\"You entered string \" + s);\n    System.out.println (\"Enter an integer\");","LineStart":15,"CharStart":4,"LineEnd":16,"CharEnd":44,"status":"core-diff"},{"fileName":"Clone847.java","labeltext":"core-diff1","codeSnippet":"    System.out.println (\"You entered integer \" + a);\n    System.out.println (\"Enter a float\");","LineStart":18,"CharStart":4,"LineEnd":19,"CharEnd":41,"status":"core-diff"},{"fileName":"Clone847.java","labeltext":"core-diff1","codeSnippet":"System.out.println (\"You entered float \" + b);","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":50,"status":"core-diff"},{"fileName":"Clone847.java","labeltext":"noncore-diff1","codeSnippet":"final int valid = 6;","LineStart":26,"CharStart":4,"LineEnd":26,"CharEnd":24,"status":"noncore-diff"},{"fileName":"Clone848.java","labeltext":"core-sim1","codeSnippet":"Scanner input = new Scanner (System.in);","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":44,"status":"core-sim"},{"fileName":"Clone848.java","labeltext":"core-sim1","codeSnippet":"Scanner input = new Scanner (System.in);","LineStart":38,"CharStart":4,"LineEnd":38,"CharEnd":44,"status":"core-sim"},{"fileName":"Clone848.java","labeltext":"core-sim2","codeSnippet":"    Scanner one = new Scanner (System.in);\n    System.out.println (\"Enter Name:\");\n    username = one.next ();\n    System.out.println (\"Name accepted \" + username);","LineStart":15,"CharStart":4,"LineEnd":18,"CharEnd":53,"status":"core-sim"},{"fileName":"Clone848.java","labeltext":"core-sim2","codeSnippet":"System.out.println (\"Username accepted: \" + s);","LineStart":49,"CharStart":4,"LineEnd":49,"CharEnd":51,"status":"core-sim"},{"fileName":"Clone848.java","labeltext":"core-sim3","codeSnippet":"    Scanner two = new Scanner (System.in);\n    System.out.println (\"Enter Age:\");\n    age = two.nextDouble ();\n    System.out.println (\"Age accepted \" + age);","LineStart":19,"CharStart":4,"LineEnd":22,"CharEnd":47,"status":"core-sim"},{"fileName":"Clone848.java","labeltext":"core-sim3","codeSnippet":"    Scanner two = new Scanner (System.in);\n    System.out.println (\"Enter your age: \");\n    int a = two.nextInt ();\n    System.out.println (\"Age accepted: \" + a);","LineStart":50,"CharStart":4,"LineEnd":53,"CharEnd":46,"status":"core-sim"},{"fileName":"Clone848.java","labeltext":"core-sim4","codeSnippet":"    Scanner three = new Scanner (System.in);\n    System.out.println (\"Enter Gender:\");\n    gender = three.next ();\n    System.out.println (\"Gender accepted \" + gender);","LineStart":23,"CharStart":4,"LineEnd":26,"CharEnd":53,"status":"core-sim"},{"fileName":"Clone848.java","labeltext":"core-sim4","codeSnippet":"    Scanner three = new Scanner (System.in);\n    System.out.println (\"Enter your sex: \");\n    String sex = three.nextLine ();\n    System.out.println (\"Sex accepted: \" + sex);","LineStart":54,"CharStart":4,"LineEnd":57,"CharEnd":48,"status":"core-sim"},{"fileName":"Clone848.java","labeltext":"core-diff1","codeSnippet":"    if (s.length () < valid) {\n        System.out.println (\"Enter a valid username\");\n        System.out.println (\"User name must contain \" + valid + \" characters\");\n        System.out.println (\"Enter again: \");\n        s = one.nextLine ();\n    }","LineStart":43,"CharStart":4,"LineEnd":48,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone848.java","labeltext":"core-diff2","codeSnippet":"    Scanner four = new Scanner (System.in);\n    System.out.println (\"Enter Marital status:\");\n    marital_status = four.next ();\n    System.out.println (\"Marital status accepted \" + marital_status);\n    Scanner five = new Scanner (System.in);\n    System.out.println (\"Enter Telephone number:\");\n    telephone_number = five.nextInt ();\n    System.out.println (\"Telephone number accepted \" + telephone_number);","LineStart":27,"CharStart":4,"LineEnd":34,"CharEnd":73,"status":"core-diff"},{"fileName":"Clone848.java","labeltext":"noncore-diff1","codeSnippet":"    String username;\n    double age;\n    String gender;\n    String marital_status;\n    int telephone_number;","LineStart":10,"CharStart":4,"LineEnd":14,"CharEnd":25,"status":"noncore-diff"},{"fileName":"Clone848.java","labeltext":"core-sim2","codeSnippet":"    Scanner one = new Scanner (System.in);\n    System.out.println (\"Enter your username: \");\n    String s = one.nextLine ();","LineStart":40,"CharStart":4,"LineEnd":42,"CharEnd":31,"status":"core-sim"},{"fileName":"Clone848.java","labeltext":"noncore-diff1","codeSnippet":"final int valid = 6;","LineStart":39,"CharStart":4,"LineEnd":39,"CharEnd":24,"status":"noncore-diff"},{"fileName":"Clone854.java","labeltext":"core-diff1","codeSnippet":"    WSObject wsObject = new WSObject (new Foo (new Bar (new Baz (241))));\n    WSObject wsObjectNull = new WSObject (new Foo (null));\n    GetterResult < Integer > intResult = getterChain (wsObject, WSObject :: getFoo, Foo :: getBar, Bar :: getBar, Baz :: getInt);\n    GetterResult < Integer > intResult2 = getterChain (wsObjectNull, WSObject :: getFoo, Foo :: getBar, Bar :: getBar, Baz :: getInt);\n    System.out.println (intResult.result);\n    System.out.println (intResult.lastIndex);","LineStart":9,"CharStart":4,"LineEnd":14,"CharEnd":45,"status":"core-diff"},{"fileName":"Clone854.java","labeltext":"core-diff1","codeSnippet":"    System.out.println (intResult2.result);\n    System.out.println (intResult2.lastIndex);","LineStart":16,"CharStart":4,"LineEnd":17,"CharEnd":46,"status":"core-diff"},{"fileName":"Clone854.java","labeltext":"core-diff2","codeSnippet":"    Address address = new Address ();\n    address.setSomeCrap (null);\n    Person person = new Person ();\n    person.setAddress (address);\n    long startTime = System.currentTimeMillis ();\n    for (int i = 0;\n    i < 1000000; i ++) {\n        try {\n            System.out.println (person.getAddress ().getSomeCrap ().getCrap ());\n        } catch (NullPointerException npe) {\n        }\n    }\n    long endTime = System.currentTimeMillis ();\n    System.out.println ((endTime - startTime) / 1000F);\n    long startTime1 = System.currentTimeMillis ();\n    for (int i = 0;\n    i < 1000000; i ++) {\n        if (person != null) {\n            Address address1 = person.getAddress ();\n            if (address1 != null) {\n                SomeCrap someCrap2 = address1.getSomeCrap ();\n                if (someCrap2 != null) {\n                    System.out.println (someCrap2.getCrap ());\n                }\n            }\n        }\n    }\n    long endTime1 = System.currentTimeMillis ();\n    System.out.println ((endTime1 - startTime1) / 1000F);","LineStart":21,"CharStart":4,"LineEnd":49,"CharEnd":57,"status":"core-diff"},{"fileName":"Clone854.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println ();","LineStart":15,"CharStart":4,"LineEnd":15,"CharEnd":26,"status":"noncore-diff"},{"fileName":"Clone858.java","labeltext":"core-sim1","codeSnippet":"    if (low > high) return - 1;\n    int mid = (low + high) / 2;\n    if (a [mid] == x) return mid;\n    else if (a [mid] < x) return binarySearch (a, x, mid + 1, high);\n    else return binarySearch (a, x, low, mid - 1);","LineStart":9,"CharStart":4,"LineEnd":13,"CharEnd":50,"status":"core-sim"},{"fileName":"Clone858.java","labeltext":"core-sim1","codeSnippet":"    int upper = sortedArray.length - 1;\n    while (lower <= upper) {\n        int mid = lower + (upper - lower) / 2;\n        if (intToSearch < sortedArray [mid]) upper = mid - 1;\n        else if (intToSearch > sortedArray [mid]) lower = mid + 1;\n        else return mid;\n    }\n    return - 1;","LineStart":18,"CharStart":4,"LineEnd":25,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone858.java","labeltext":"noncore-diff1","codeSnippet":"int lower = 0;","LineStart":17,"CharStart":4,"LineEnd":17,"CharEnd":18,"status":"noncore-diff"},{"fileName":"Clone861.java","labeltext":"noncore-sim1","codeSnippet":"System.out.println (\"Type in any integer\");","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":47,"status":"noncore-sim"},{"fileName":"Clone861.java","labeltext":"noncore-sim1","codeSnippet":"System.out.println (\"Type in any integer:\");","LineStart":30,"CharStart":8,"LineEnd":30,"CharEnd":52,"status":"noncore-sim"},{"fileName":"Clone861.java","labeltext":"core-sim1","codeSnippet":"Scanner inputChar = new Scanner (System.in);","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":48,"status":"core-sim"},{"fileName":"Clone861.java","labeltext":"core-sim1","codeSnippet":"Scanner inputChar = new Scanner (System.in);","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":48,"status":"core-sim"},{"fileName":"Clone861.java","labeltext":"noncore-sim2","codeSnippet":"int i;","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":10,"status":"noncore-sim"},{"fileName":"Clone861.java","labeltext":"noncore-sim2","codeSnippet":"int i;","LineStart":28,"CharStart":4,"LineEnd":28,"CharEnd":10,"status":"noncore-sim"},{"fileName":"Clone861.java","labeltext":"core-sim2","codeSnippet":"        if (! inputChar.hasNextInt ()) {\n            System.out.println (\"Not a number\");","LineStart":31,"CharStart":8,"LineEnd":32,"CharEnd":48,"status":"core-sim"},{"fileName":"Clone861.java","labeltext":"core-sim2","codeSnippet":"}","LineStart":34,"CharStart":8,"LineEnd":34,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone861.java","labeltext":"core-sim2","codeSnippet":"if (! inputChar.hasNextInt ()) System.out.println (\"Not a number\");","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":71,"status":"core-sim"},{"fileName":"Clone861.java","labeltext":"core-sim3","codeSnippet":"          else {\n            i = inputChar.nextInt ();\n            if (i != 0) {\n                if (i % 2 == 0) System.out.println (i + \" is even\");\n                else {\n                    System.out.println (i + \" is odd\");\n                }\n            } else {\n                System.out.println (\"Zeros are not allowed, bye!\");\n                break;\n            }\n        }","LineStart":34,"CharStart":10,"LineEnd":45,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone861.java","labeltext":"core-sim3","codeSnippet":"    else {\n        i = inputChar.nextInt ();\n        if (i != 0) {\n            if (i % 2 == 0) System.out.println (i + \" is even\");\n            else {\n                System.out.println (i + \" is odd\");\n            }\n        } else {\n            System.out.println (\"Zeros are not allowed, bye!\");\n        }\n    }","LineStart":13,"CharStart":4,"LineEnd":23,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone861.java","labeltext":"core-diff1","codeSnippet":"while (true) {","LineStart":29,"CharStart":4,"LineEnd":29,"CharEnd":18,"status":"core-diff"},{"fileName":"Clone861.java","labeltext":"core-diff1","codeSnippet":"inputChar.next ();","LineStart":33,"CharStart":12,"LineEnd":33,"CharEnd":30,"status":"core-diff"},{"fileName":"Clone861.java","labeltext":"core-diff1","codeSnippet":"}","LineStart":46,"CharStart":4,"LineEnd":46,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone864.java","labeltext":"core-diff1","codeSnippet":"    LayoutInflater vi = (LayoutInflater) getSystemService (Context.LAYOUT_INFLATER_SERVICE);\n    v = vi.inflate (R.layout.row_layout, null);\n    final x obj = items.get (position);\n    TextView txt_name = (TextView) v.findViewById (R.id.txt_name);\n    CheckBox checkBox1 = (CheckBox) findViewById (R.id.checkBox1);\n    if (checkBox1.isChecked ()) {\n        new_al.add (x_list.get (position));\n    }\n    btn_clear.setOnItemClickListener (new Listener () {\n        public void onClick (View v) {\n            x_list.clear ();\n            x_list.add (new_al);\n        }}\n    );\n    notifyDataSetChanged ();\n    return v;","LineStart":37,"CharStart":4,"LineEnd":52,"CharEnd":13,"status":"core-diff"},{"fileName":"Clone864.java","labeltext":"core-diff1","codeSnippet":"    if (convertView == null) {\n        holder = new ViewHolder ();\n        convertView = inflater.inflate (R.layout.row1, null);\n        holder.checkbox = (CheckBox) convertView.findViewById (R.id.add_food_item);\n        convertView.setTag (holder);\n    } else {\n        holder = (ViewHolder) convertView.getTag ();\n    }\n    final ItemInList element = list.get (position);\n    holder.checkbox.setChecked (element.isSelected ());\n    holder.checkbox.setOnCheckedChangeListener (new CompoundButton.OnCheckedChangeListener () {\n        @Override\n        public void onCheckedChanged (CompoundButton buttonView, boolean isChecked) {\n            element.setSelected (buttonView.isChecked ());\n            if (element.isSelected ()) {\n                array.add (element.getName ());\n            } else {\n                if (position < array.size ()) array.remove (position);\n            }\n        }}\n    );\n    return convertView;","LineStart":11,"CharStart":4,"LineEnd":32,"CharEnd":23,"status":"core-diff"},{"fileName":"Clone864.java","labeltext":"noncore-diff1","codeSnippet":" final ViewHolder holder;","LineStart":10,"CharStart":3,"LineEnd":10,"CharEnd":28,"status":"noncore-diff"},{"fileName":"Clone864.java","labeltext":"noncore-diff1","codeSnippet":"View v = convertview;","LineStart":36,"CharStart":4,"LineEnd":36,"CharEnd":25,"status":"noncore-diff"},{"fileName":"Clone867.java","labeltext":"core-sim1","codeSnippet":"synchronized (this) {","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":25,"status":"core-sim"},{"fileName":"Clone867.java","labeltext":"core-sim1","codeSnippet":"map.put (key, val);","LineStart":29,"CharStart":8,"LineEnd":29,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone867.java","labeltext":"core-sim1","codeSnippet":"}","LineStart":31,"CharStart":4,"LineEnd":31,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone867.java","labeltext":"core-sim1","codeSnippet":"readWriteLock.writeLock ().lock ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":39,"status":"core-sim"},{"fileName":"Clone867.java","labeltext":"core-sim1","codeSnippet":"old = super.put (key, value);","LineStart":12,"CharStart":8,"LineEnd":12,"CharEnd":37,"status":"core-sim"},{"fileName":"Clone867.java","labeltext":"core-sim1","codeSnippet":"readWriteLock.writeLock ().unlock ();","LineStart":14,"CharStart":8,"LineEnd":14,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone867.java","labeltext":"noncore-diff1","codeSnippet":"    V old;\n    try {","LineStart":10,"CharStart":4,"LineEnd":11,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone867.java","labeltext":"noncore-diff1","codeSnippet":"} finally {","LineStart":13,"CharStart":4,"LineEnd":13,"CharEnd":15,"status":"noncore-diff"},{"fileName":"Clone867.java","labeltext":"noncore-diff1","codeSnippet":"    }\n    return old;","LineStart":15,"CharStart":4,"LineEnd":16,"CharEnd":15,"status":"noncore-diff"},{"fileName":"Clone867.java","labeltext":"core-diff1","codeSnippet":"    if (map.containsKey (key)) {\n        put (key, val);\n        return;\n    }\n    while (currentSize >= maxSize) {\n        freeSpace ();\n    }","LineStart":20,"CharStart":4,"LineEnd":26,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone867.java","labeltext":"core-diff1","codeSnippet":"queue.add (key);","LineStart":28,"CharStart":8,"LineEnd":28,"CharEnd":24,"status":"core-diff"},{"fileName":"Clone867.java","labeltext":"core-diff1","codeSnippet":"currentSize ++;","LineStart":30,"CharStart":8,"LineEnd":30,"CharEnd":23,"status":"core-diff"},{"fileName":"Clone868.java","labeltext":"core-sim1","codeSnippet":"readWriteLock.writeLock ().lock ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":39,"status":"core-sim"},{"fileName":"Clone868.java","labeltext":"core-sim1","codeSnippet":"value = super.remove (key);","LineStart":12,"CharStart":8,"LineEnd":12,"CharEnd":35,"status":"core-sim"},{"fileName":"Clone868.java","labeltext":"core-sim1","codeSnippet":"readWriteLock.writeLock ().unlock ();","LineStart":14,"CharStart":8,"LineEnd":14,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone868.java","labeltext":"core-sim1","codeSnippet":"    synchronized (lock) {\n        Item < VV > item = cache.remove (key);","LineStart":20,"CharStart":4,"LineEnd":21,"CharEnd":46,"status":"core-sim"},{"fileName":"Clone868.java","labeltext":"core-sim1","codeSnippet":"}","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone868.java","labeltext":"noncore-diff1","codeSnippet":"    V value;\n    try {","LineStart":10,"CharStart":4,"LineEnd":11,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone868.java","labeltext":"noncore-diff1","codeSnippet":"} finally {","LineStart":13,"CharStart":4,"LineEnd":13,"CharEnd":15,"status":"noncore-diff"},{"fileName":"Clone868.java","labeltext":"noncore-diff1","codeSnippet":"}","LineStart":15,"CharStart":4,"LineEnd":15,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone868.java","labeltext":"core-sim2","codeSnippet":"return value;","LineStart":16,"CharStart":4,"LineEnd":16,"CharEnd":17,"status":"core-sim"},{"fileName":"Clone868.java","labeltext":"core-sim2","codeSnippet":"        if (item != null) {\n            return item.payload;\n        } else {\n            return null;\n        }","LineStart":22,"CharStart":8,"LineEnd":26,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone869.java","labeltext":"core-diff1","codeSnippet":"    if (head == null) return null;\n    K val = head.value;\n    if (head.next == null) {\n        head = null;\n        tail = null;\n    } else {\n        head = head.next;\n        head.prev = null;\n    }\n    return val;","LineStart":20,"CharStart":4,"LineEnd":29,"CharEnd":15,"status":"core-diff"},{"fileName":"Clone869.java","labeltext":"core-diff2","codeSnippet":"readWriteLock.writeLock ().lock ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":39,"status":"core-diff"},{"fileName":"Clone869.java","labeltext":"core-diff2","codeSnippet":"    try {\n        value = super.remove (key);\n    } finally {\n        readWriteLock.writeLock ().unlock ();\n    }\n    return value;","LineStart":11,"CharStart":4,"LineEnd":16,"CharEnd":17,"status":"core-diff"},{"fileName":"Clone869.java","labeltext":"noncore-diff1","codeSnippet":"V value;","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":12,"status":"noncore-diff"},{"fileName":"Clone873.java","labeltext":"noncore-sim1","codeSnippet":"    String pass = \"admin\";\n    Scanner input = new Scanner (System.in);","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone873.java","labeltext":"noncore-sim1","codeSnippet":"    String pass = \"admin\";\n    Scanner input = new Scanner (System.in);","LineStart":25,"CharStart":4,"LineEnd":26,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone873.java","labeltext":"core-sim1","codeSnippet":"    for (int i = 0;\n    i < 3; i ++) {\n        System.out.print (\"Insert the admin pass: \");\n        String test = input.nextLine ();\n        if (pass.equals (test)) {\n            System.out.print (\"Access granted\");\n            i = 3;\n        } else {\n            System.out.println (\"Incorrect password, you have \" + (2 - i) + \" attempts remaining\");\n        }\n    }","LineStart":11,"CharStart":4,"LineEnd":21,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone873.java","labeltext":"core-sim1","codeSnippet":"    System.out.print (\"Insert the admin pass: \");\n    String test = input.nextLine ();\n    if (pass.equals (test)) {\n        System.out.print (\"Access granted\");\n    } else {\n        for (int i = 1;\n        i < 3; i ++) {\n            System.out.print (\"You have \" + i + \" try(es): \");\n            test = input.nextLine ();\n            if (pass.equals (test)) {\n                System.out.print (\"Access granted\");\n                break;\n            } else if (i == 2) {\n                System.out.print (\"Access denied\");\n            }\n        }\n    }","LineStart":27,"CharStart":4,"LineEnd":43,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone875.java","labeltext":"noncore-sim1","codeSnippet":"    int max = 100;\n    int min = 1;\n    Random rand = new Random ();","LineStart":33,"CharStart":4,"LineEnd":35,"CharEnd":32,"status":"noncore-sim"},{"fileName":"Clone875.java","labeltext":"noncore-sim1","codeSnippet":"    int max = 100;\n    int min = 1;","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":16,"status":"noncore-sim"},{"fileName":"Clone875.java","labeltext":"noncore-sim1","codeSnippet":"Random rand = new Random ();","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":32,"status":"noncore-sim"},{"fileName":"Clone875.java","labeltext":"core-sim1","codeSnippet":"    for (int x = 0;\n    x < 20; x ++) {\n        duplicate = false;\n        int randomNum = rand.nextInt ((max - min) + 1) + min;\n        for (int i : all) {\n            if (i == randomNum) {\n                duplicate = true;\n                break;\n            }\n        }\n        if (duplicate) {\n            x --;\n        } else {\n            all [x] = randomNum;\n        }\n    }","LineStart":14,"CharStart":4,"LineEnd":29,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone875.java","labeltext":"core-sim1","codeSnippet":"    while (index < 20) {\n        boolean duplicate = false;\n        int randomNum = rand.nextInt ((max - min) + 1) + min;\n        for (int i = 0;\n        i < all.length; i ++) {\n            if (all [i] == randomNum) {\n                duplicate = true;\n                break;\n            }\n        }\n        if (! duplicate) {\n            all [index ++] = randomNum;\n        }\n    }","LineStart":38,"CharStart":4,"LineEnd":51,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone875.java","labeltext":"noncore-sim2","codeSnippet":"int [] all = new int [20];","LineStart":37,"CharStart":4,"LineEnd":37,"CharEnd":30,"status":"noncore-sim"},{"fileName":"Clone875.java","labeltext":"noncore-sim2","codeSnippet":"int [] all = new int [20];","LineStart":13,"CharStart":4,"LineEnd":13,"CharEnd":30,"status":"noncore-sim"},{"fileName":"Clone875.java","labeltext":"noncore-diff1","codeSnippet":"boolean duplicate = false;","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":30,"status":"noncore-diff"},{"fileName":"Clone875.java","labeltext":"noncore-diff2","codeSnippet":"int index = 0;","LineStart":36,"CharStart":4,"LineEnd":36,"CharEnd":18,"status":"noncore-diff"},{"fileName":"Clone877.java","labeltext":"core-diff1","codeSnippet":"    switch (requestCode) {\n        case REQUEST_ID_MULTIPLE_PERMISSIONS :\n            {\n                Map < String, Integer > perms = new HashMap < > ();\n                perms.put (Manifest.permission.SEND_SMS, PackageManager.PERMISSION_GRANTED);\n                perms.put (Manifest.permission.ACCESS_FINE_LOCATION, PackageManager.PERMISSION_GRANTED);\n                if (grantResults.length > 0) {\n                    for (int i = 0;\n                    i < permissions.length; i ++) perms.put (permissions [i], grantResults [i]);\n                    if (perms.get (Manifest.permission.SEND_SMS) == PackageManager.PERMISSION_GRANTED && perms.get (Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\n                        Log.d (TAG, \"sms & location services permission granted\");\n                    } else {\n                        Log.d (TAG, \"Some permissions are not granted ask again \");\n                        if (ActivityCompat.shouldShowRequestPermissionRationale (this, Manifest.permission.SEND_SMS) || ActivityCompat.shouldShowRequestPermissionRationale (this, Manifest.permission.ACCESS_FINE_LOCATION)) {\n                            showDialogOK (\"SMS and Location Services Permission required for this app\", new DialogInterface.OnClickListener () {\n                                @Override\n                                public void onClick (DialogInterface dialog, int which) {\n                                    switch (which) {\n                                        case DialogInterface.BUTTON_POSITIVE :\n                                            checkAndRequestPermissions ();\n                                            break;\n                                        case DialogInterface.BUTTON_NEGATIVE :\n                                            break;\n                                    }\n                                }}\n                            );\n                        } else {\n                            Toast.makeText (this, \"Go to settings and enable permissions\", Toast.LENGTH_LONG).show ();\n                        }\n                    }\n                }\n            }}","LineStart":11,"CharStart":4,"LineEnd":42,"CharEnd":14,"status":"core-diff"},{"fileName":"Clone877.java","labeltext":"core-diff2","codeSnippet":"    if (requestCode == mRequestCode) {\n        if (grantResults.length > 0) {\n            for (int grantResult : grantResults) {\n                if (grantResult != PackageManager.PERMISSION_GRANTED) {\n                    mRequestPermissionListener.onFailed ();\n                    return;\n                }\n            }\n            mRequestPermissionListener.onSuccess ();\n        } else {\n            mRequestPermissionListener.onFailed ();\n        }\n    }","LineStart":48,"CharStart":4,"LineEnd":60,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone877.java","labeltext":"noncore-diff1","codeSnippet":"Log.d (TAG, \"Permission callback called-------\");","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":53,"status":"noncore-diff"},{"fileName":"Clone880.java","labeltext":"core-diff1","codeSnippet":"    super.onRequestPermissionsResult (requestCode, permissions, grantResults);\n    if (grantResults.length == 0 || grantResults == null) {\n    } else if (grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n    } else if (grantResults [0] == PackageManager.PERMISSION_DENIED) {\n    }","LineStart":10,"CharStart":4,"LineEnd":14,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone880.java","labeltext":"core-diff2","codeSnippet":"    if (requestCode == mRequestCode) {\n        if (grantResults.length > 0) {\n            for (int grantResult : grantResults) {\n                if (grantResult != PackageManager.PERMISSION_GRANTED) {\n                    mRequestPermissionListener.onFailed ();\n                    return;\n                }\n            }\n            mRequestPermissionListener.onSuccess ();\n        } else {\n            mRequestPermissionListener.onFailed ();\n        }\n    }","LineStart":20,"CharStart":4,"LineEnd":32,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone882.java","labeltext":"core-sim1","codeSnippet":"    super.onRequestPermissionsResult (requestCode, permissions, grantResults);\n    switch (requestCode) {\n        case REQUEST_READ_PHONE_STATE :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to get your phone state. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            } case REQUEST_ACCESS_FINE_LOCATION :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to get your location. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            } case REQUEST_WRITE_STORAGE :\n            {\n                if (grantResults.length > 0 && grantResults [0] == PackageManager.PERMISSION_GRANTED) {\n                    Toast.makeText (LoginActivity.this, \"Permission granted.\", Toast.LENGTH_SHORT).show ();\n                    finish ();\n                    startActivity (getIntent ());\n                } else {\n                    Toast.makeText (LoginActivity.this, \"The app was not allowed to write to your storage. Hence, it cannot function properly. Please consider granting it this permission\", Toast.LENGTH_LONG).show ();\n                }\n            }}","LineStart":28,"CharStart":4,"LineEnd":57,"CharEnd":14,"status":"core-sim"},{"fileName":"Clone882.java","labeltext":"core-sim1","codeSnippet":"    if (requestCode == mRequestCode) {\n        if (grantResults.length > 0) {\n            for (int grantResult : grantResults) {\n                if (grantResult != PackageManager.PERMISSION_GRANTED) {\n                    mRequestPermissionListener.onFailed ();\n                    return;\n                }\n            }\n            mRequestPermissionListener.onSuccess ();\n        } else {\n            mRequestPermissionListener.onFailed ();\n        }\n    }","LineStart":11,"CharStart":4,"LineEnd":23,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone887.java","labeltext":"noncore-sim1","codeSnippet":"String s1 = \"a b c\";","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":24,"status":"noncore-sim"},{"fileName":"Clone887.java","labeltext":"noncore-sim1","codeSnippet":"String word = \"a b c\";","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":26,"status":"noncore-sim"},{"fileName":"Clone887.java","labeltext":"core-sim1","codeSnippet":"    String s2 = s1.replace (\" \", \"\");\n    int s2_length = s2.length ();","LineStart":12,"CharStart":4,"LineEnd":13,"CharEnd":33,"status":"core-sim"},{"fileName":"Clone887.java","labeltext":"core-sim1","codeSnippet":"    while (i < word.length ()) {\n        if (word.charAt (i) == ' ') {\n            spaceCount ++;\n        }\n        i ++;\n    }","LineStart":21,"CharStart":4,"LineEnd":26,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone887.java","labeltext":"core-sim2","codeSnippet":"System.out.println (\"No of spaces = \" + (s1_length - s2_length));","LineStart":15,"CharStart":4,"LineEnd":15,"CharEnd":69,"status":"core-sim"},{"fileName":"Clone887.java","labeltext":"core-sim2","codeSnippet":"System.out.println (\"Spaces in string: \" + spaceCount);","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":59,"status":"core-sim"},{"fileName":"Clone887.java","labeltext":"noncore-diff1","codeSnippet":"    int s1_length = s1.length ();\n    System.out.println (s1_length);","LineStart":10,"CharStart":4,"LineEnd":11,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone887.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (s2_length);","LineStart":14,"CharStart":4,"LineEnd":14,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone887.java","labeltext":"noncore-diff2","codeSnippet":"int i = 0, spaceCount = 0;","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":30,"status":"noncore-diff"},{"fileName":"Clone888.java","labeltext":"core-diff1","codeSnippet":"    final SSHClient ssh = new SSHClient ();\n    ssh.loadKnownHosts ();\n    ssh.connect (\"localhost\");\n    try {\n        ssh.authPublickey (System.getProperty (\"user.name\"));\n        final String src = System.getProperty (\"user.home\") + File.separator + \"test_file\";\n        final SFTPClient sftp = ssh.newSFTPClient ();\n        try {\n            sftp.put (new FileSystemFile (src), \"/tmp\");\n        } finally {\n            sftp.close ();\n        }\n    } finally {\n        ssh.disconnect ();\n    }","LineStart":20,"CharStart":4,"LineEnd":34,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone888.java","labeltext":"core-diff2","codeSnippet":"    SendMyFiles sendMyFiles = new SendMyFiles ();\n    if (args.length < 1) {\n        System.err.println (\"Usage: java \" + sendMyFiles.getClass ().getName () + \" Properties_file File_To_FTP \");\n        System.exit (1);\n    }\n    String propertiesFile = args [0].trim ();\n    String fileToFTP = args [1].trim ();\n    sendMyFiles.startFTP (propertiesFile, fileToFTP);","LineStart":9,"CharStart":4,"LineEnd":16,"CharEnd":53,"status":"core-diff"},{"fileName":"Clone892.java","labeltext":"noncore-sim1","codeSnippet":"primaryStage.show ();","LineStart":38,"CharStart":4,"LineEnd":38,"CharEnd":25,"status":"noncore-sim"},{"fileName":"Clone892.java","labeltext":"noncore-sim1","codeSnippet":"stage.show ();","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":18,"status":"noncore-sim"},{"fileName":"Clone892.java","labeltext":"noncore-sim2","codeSnippet":"    Scene scene = new Scene (shadowPane);\n    stage.setScene (scene);","LineStart":14,"CharStart":4,"LineEnd":15,"CharEnd":27,"status":"noncore-sim"},{"fileName":"Clone892.java","labeltext":"noncore-sim2","codeSnippet":"    primaryStage.setTitle (\"Modal Confirm Example\");\n    primaryStage.setScene (new Scene (webView));","LineStart":36,"CharStart":4,"LineEnd":37,"CharEnd":48,"status":"noncore-sim"},{"fileName":"Clone892.java","labeltext":"core-diff1","codeSnippet":"    final WebView webView = new WebView ();\n    final ModalDialog dialog = createWebViewPreferenceDialog (primaryStage, webView);\n    webView.getEngine ().getLoadWorker ().stateProperty ().addListener (new ChangeListener < Worker.State > () {\n        @Override\n        public void changed (ObservableValue < ? extends Worker.State > observableValue, Worker.State state, Worker.State newState) {\n            if (newState.equals (Worker.State.SUCCEEDED)) {\n                dialog.show ();\n                dialog.toFront ();\n            }\n        }}\n    );\n    webView.getEngine ().load (\"http://docs.oracle.com/javafx/\");","LineStart":24,"CharStart":4,"LineEnd":35,"CharEnd":65,"status":"core-diff"},{"fileName":"Clone892.java","labeltext":"core-diff2","codeSnippet":"    shadowPane.setBorder (new Border (new BorderStroke (Color.RED, BorderStrokeStyle.SOLID, null, null)));\n    shadowPane.setStyle (\"-fx-background-color: transparent;\");\n    scene.setFill (Color.TRANSPARENT);\n    stage.initStyle (StageStyle.TRANSPARENT);","LineStart":16,"CharStart":4,"LineEnd":19,"CharEnd":45,"status":"core-diff"},{"fileName":"Clone892.java","labeltext":"core-diff2","codeSnippet":"    FXMLLoader loader = new FXMLLoader (getClass ().getResource (\"/sample/screen.fxml\"));\n    AnchorPane shadowPane = loader.load ();\n    AnchorPane rootPane = (AnchorPane) shadowPane.lookup (\"#rootPane\");\n    rootPane.setStyle (\"-fx-effect: dropshadow(gaussian, rgba(0, 0, 0, 0.4), 10, 0.5, 0.0, 0.0);\" + \"-fx-background-color: white;\");","LineStart":10,"CharStart":4,"LineEnd":13,"CharEnd":132,"status":"core-diff"},{"fileName":"Clone895.java","labeltext":"core-diff1","codeSnippet":"    ServerModule serverModule = new ServerModule (latch);\n    serverModule.start ();\n    try {\n        latch.await ();\n    } catch (InterruptedException e) {\n        e.printStackTrace ();\n    }","LineStart":11,"CharStart":4,"LineEnd":17,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone895.java","labeltext":"core-diff2","codeSnippet":"    Thread t = new Thread (() -> {\n        try {\n            Thread.sleep (5000L);\n        } catch (InterruptedException e) {\n            e.printStackTrace ();\n        }\n    });","LineStart":22,"CharStart":4,"LineEnd":28,"CharEnd":7,"status":"core-diff"},{"fileName":"Clone895.java","labeltext":"core-diff2","codeSnippet":"    t.start ();\n    t.join ();","LineStart":30,"CharStart":4,"LineEnd":31,"CharEnd":14,"status":"core-diff"},{"fileName":"Clone895.java","labeltext":"noncore-sim1","codeSnippet":"System.out.println (\"Starting Server!\");","LineStart":29,"CharStart":4,"LineEnd":29,"CharEnd":44,"status":"noncore-sim"},{"fileName":"Clone895.java","labeltext":"noncore-diff3","codeSnippet":"CountDownLatch latch = new CountDownLatch (1);","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":50,"status":"noncore-diff"},{"fileName":"Clone895.java","labeltext":"noncore-sim2","codeSnippet":"System.out.println (\"Server is done!\");","LineStart":32,"CharStart":4,"LineEnd":32,"CharEnd":43,"status":"noncore-sim"},{"fileName":"Clone895.java","labeltext":"noncore-sim1","codeSnippet":"System.out.println (\"Start server\");","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":40,"status":"noncore-sim"},{"fileName":"Clone895.java","labeltext":"noncore-sim2","codeSnippet":"System.out.println (\"Server is done\");","LineStart":18,"CharStart":4,"LineEnd":18,"CharEnd":42,"status":"noncore-sim"},{"fileName":"Clone898.java","labeltext":"core-sim1","codeSnippet":"    while (start <= end) {\n        int mid = start + (end - start) / 2;\n        if (mid == x / mid) {\n            return mid;\n        }\n        if (mid < x / mid) {\n            start = mid + 1;\n        } else {\n            end = mid - 1;\n        }\n    }\n    return start - 1;","LineStart":13,"CharStart":4,"LineEnd":24,"CharEnd":21,"status":"core-sim"},{"fileName":"Clone898.java","labeltext":"core-sim1","codeSnippet":"    while (Math.abs ((mid * mid) - n) > 0.000000000001) {\n        if ((mid * mid) > n) {\n            high = mid;\n            mid = (high - low) / 2;\n        } else {\n            low = mid;\n            mid = mid + ((high - low) / 2);\n        }\n    }\n    return mid;","LineStart":31,"CharStart":4,"LineEnd":40,"CharEnd":15,"status":"core-sim"},{"fileName":"Clone898.java","labeltext":"noncore-diff1","codeSnippet":"    double low = 0;\n    double high = n;\n    double mid = (high - low) / 2;","LineStart":28,"CharStart":4,"LineEnd":30,"CharEnd":34,"status":"noncore-diff"},{"fileName":"Clone898.java","labeltext":"noncore-diff1","codeSnippet":"int start = 1, end = x / 2;","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":31,"status":"noncore-diff"},{"fileName":"Clone898.java","labeltext":"core-diff1","codeSnippet":"    if (x == 0 || x == 1) {\n        return x;\n    }","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone20.java","labeltext":"noncore-diff1","codeSnippet":"jgen.writeObjectField (\"extra_field\", \"whatever_value\");","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":60,"status":"noncore-diff"},{"fileName":"Clone911.java","labeltext":"core-diff1","codeSnippet":"    for (@SuppressWarnings (\"rawtypes\")\n    Enumeration names = ECNamedCurveTable.getNames ();\n    names.hasMoreElements ();) {\n        final String name = (String) names.nextElement ();\n        final X9ECParameters params = ECNamedCurveTable.getByName (name);\n        if (params.getN ().equals (ecParameterSpec.getN ()) && params.getH ().equals (ecParameterSpec.getH ()) && params.getCurve ().equals (ecParameterSpec.getCurve ()) && params.getG ().equals (ecParameterSpec.getG ())) {\n            return name;\n        }\n    }\n    throw new GeneralSecurityException (\"Could not find name for curve\");","LineStart":9,"CharStart":4,"LineEnd":18,"CharEnd":73,"status":"core-diff"},{"fileName":"Clone911.java","labeltext":"core-diff2","codeSnippet":"    if (publicKey instanceof java.security.interfaces.ECPublicKey) {\n        final java.security.interfaces.ECPublicKey pk = (java.security.interfaces.ECPublicKey) publicKey;\n        final ECParameterSpec params = pk.getParams ();\n        return deriveCurveName (EC5Util.convertSpec (params, false));\n    } else if (publicKey instanceof org.bouncycastle.jce.interfaces.ECPublicKey) {\n        final org.bouncycastle.jce.interfaces.ECPublicKey pk = (org.bouncycastle.jce.interfaces.ECPublicKey) publicKey;\n        return deriveCurveName (pk.getParameters ());\n    } else throw new IllegalArgumentException (\"Can only be used with instances of ECPublicKey (either jce or bc implementation)\");\n","LineStart":22,"CharStart":4,"LineEnd":30,"CharEnd":0,"status":"core-diff"},{"fileName":"Clone913.java","labeltext":"core-sim1","codeSnippet":"    for (j = 0; j < bytes.length; j ++) {\n        v = bytes [j] & 0xFF;\n        hexChars [c] = hexArray [v / 16];\n        c ++;\n        hexChars [c] = hexArray [v % 16];\n        c ++;\n    }\n    return new String (hexChars, 0, c);","LineStart":13,"CharStart":4,"LineEnd":20,"CharEnd":39,"status":"core-sim"},{"fileName":"Clone913.java","labeltext":"core-sim1","codeSnippet":"    for (int iter = 0;\n    iter < bytes.length; iter ++) {\n        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);\n        byte low = (byte) (bytes [iter] & 0x0f);\n        sb.append (nibble2char (high));\n        sb.append (nibble2char (low));\n    }\n    return sb.toString ();","LineStart":28,"CharStart":4,"LineEnd":35,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone913.java","labeltext":"noncore-diff1","codeSnippet":"    char [] hexArray = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};\n    char [] hexChars = new char [10000000];\n    int c = 0;\n    int v;","LineStart":9,"CharStart":4,"LineEnd":12,"CharEnd":10,"status":"noncore-diff"},{"fileName":"Clone913.java","labeltext":"core-diff1","codeSnippet":"    if (bytes == null) {\n        return null;\n    }","LineStart":24,"CharStart":4,"LineEnd":26,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone913.java","labeltext":"noncore-diff2","codeSnippet":"StringBuffer sb = new StringBuffer ();","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":42,"status":"noncore-diff"},{"fileName":"Clone915.java","labeltext":"core-sim1","codeSnippet":"    for (int iter = 0;\n    iter < bytes.length; iter ++) {\n        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);\n        byte low = (byte) (bytes [iter] & 0x0f);\n        sb.append (nibble2char (high));\n        sb.append (nibble2char (low));\n    }\n    return sb.toString ();","LineStart":26,"CharStart":4,"LineEnd":33,"CharEnd":26,"status":"core-sim"},{"fileName":"Clone915.java","labeltext":"core-sim1","codeSnippet":"    for (int j = 0;\n    j < bytes.length; j ++) {\n        v = bytes [j] & 0xFF;\n        hexChars [j * 2] = hexArray [v / 16];\n        hexChars [j * 2 + 1] = hexArray [v % 16];\n    }\n    return new String (hexChars);","LineStart":12,"CharStart":4,"LineEnd":18,"CharEnd":33,"status":"core-sim"},{"fileName":"Clone915.java","labeltext":"core-diff1","codeSnippet":"    if (bytes == null) {\n        return null;\n    }","LineStart":22,"CharStart":4,"LineEnd":24,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone915.java","labeltext":"noncore-diff1","codeSnippet":"    char [] hexArray = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};\n    char [] hexChars = new char [bytes.length * 2];\n    int v;","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":10,"status":"noncore-diff"},{"fileName":"Clone915.java","labeltext":"noncore-diff2","codeSnippet":"StringBuffer sb = new StringBuffer ();","LineStart":25,"CharStart":4,"LineEnd":25,"CharEnd":42,"status":"noncore-diff"},{"fileName":"Clone917.java","labeltext":"core-diff1","codeSnippet":"        String hex = Integer.toHexString (0xFF & bytes [i]);\n        if (hex.length () == 1) {\n            hexString.append ('0');\n        }\n        hexString.append (hex);","LineStart":27,"CharStart":8,"LineEnd":31,"CharEnd":31,"status":"core-diff"},{"fileName":"Clone917.java","labeltext":"core-diff2","codeSnippet":"        byte high = (byte) ((bytes [iter] & 0xf0)>> 4);\n        byte low = (byte) (bytes [iter] & 0x0f);\n        sb.append (nibble2char (high));\n        sb.append (nibble2char (low));","LineStart":15,"CharStart":8,"LineEnd":18,"CharEnd":38,"status":"core-diff"},{"fileName":"Clone917.java","labeltext":"noncore-sim1","codeSnippet":"    StringBuffer sb = new StringBuffer ();\n    for (int iter = 0;\n    iter < bytes.length; iter ++) {","LineStart":12,"CharStart":4,"LineEnd":14,"CharEnd":35,"status":"noncore-sim"},{"fileName":"Clone917.java","labeltext":"noncore-sim1","codeSnippet":"    }\n    return sb.toString ();","LineStart":19,"CharStart":4,"LineEnd":20,"CharEnd":26,"status":"noncore-sim"},{"fileName":"Clone917.java","labeltext":"noncore-sim1","codeSnippet":"    StringBuilder hexString = new StringBuilder ();\n    for (int i = 0;\n    i < bytes.length; i ++) {","LineStart":24,"CharStart":4,"LineEnd":26,"CharEnd":29,"status":"noncore-sim"},{"fileName":"Clone917.java","labeltext":"noncore-sim1","codeSnippet":"    }\n    return hexString.toString ();","LineStart":32,"CharStart":4,"LineEnd":33,"CharEnd":33,"status":"noncore-sim"},{"fileName":"Clone917.java","labeltext":"core-diff3","codeSnippet":"    if (bytes == null) {\n        return null;\n    }","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone612.java","labeltext":"core-diff1","codeSnippet":"    Process p = Runtime.getRuntime ().exec (XVFB_COMMAND);\n    FirefoxBinary firefox = new FirefoxBinary ();\n    firefox.setEnvironmentProperty (\"DISPLAY\", \":\" + DISPLAY_NUMBER);\n    WebDriver driver = new FirefoxDriver (firefox, null);\n    driver.get (URL);","LineStart":9,"CharStart":4,"LineEnd":13,"CharEnd":21,"status":"core-diff"},{"fileName":"Clone612.java","labeltext":"core-sim1","codeSnippet":"        BufferedImage bi = robot.createScreenCapture (new Rectangle (Toolkit.getDefaultToolkit ().getScreenSize ()));\n        ImageIO.write (bi, \"jpg\", new File (\"C:/imageTest.jpg\"));","LineStart":23,"CharStart":8,"LineEnd":24,"CharEnd":65,"status":"core-sim"},{"fileName":"Clone612.java","labeltext":"core-sim1","codeSnippet":"    File scrFile = ((TakesScreenshot) driver).getScreenshotAs (OutputType.FILE);\n    FileUtils.copyFile (scrFile, new File (RESULT_FILENAME));","LineStart":14,"CharStart":4,"LineEnd":15,"CharEnd":61,"status":"core-sim"},{"fileName":"Clone537.java","labeltext":"core-sim2","codeSnippet":"    if (histogram.findInLine (name) != null) {\n        System.out.println (\"This name exist\");\n    } else {\n        System.out.println (\"Name not found\");\n        user = validName (input, histogram);\n    }\n    return user;","LineStart":21,"CharStart":4,"LineEnd":27,"CharEnd":16,"status":"core-sim"},{"fileName":"Clone537.java","labeltext":"core-sim2","codeSnippet":"        if (validInputs.contains (userInput)) return userInput;\n        System.out.println (\"invalid input\");\n    }","LineStart":13,"CharStart":8,"LineEnd":15,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone537.java","labeltext":"core-diff1","codeSnippet":" while (histogram.hasNext ()) validInputs.add (histogram.next ());","LineStart":10,"CharStart":3,"LineEnd":10,"CharEnd":69,"status":"core-diff"},{"fileName":"Clone537.java","labeltext":"core-sim2","codeSnippet":"while (true) {","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone689.java","labeltext":"core-sim1","codeSnippet":"int [] results = randNums (total - minVal * numRands, numRands);","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":68,"status":"core-sim"},{"fileName":"Clone689.java","labeltext":"core-sim1","codeSnippet":"    final int [] results = new int [n];\n    if (total == 0) {\n        Arrays.fill (results, 0);\n        return results;\n    }\n    final BigInteger [] rs = new BigInteger [n];\n    final BigInteger totalPlus1 = BigInteger.valueOf (total + 1L);\n    while (true) {\n        for (int i = 0;\n        i < n; ++ i) {\n            rs [i] = new BigInteger (256, rand);\n        }\n        BigInteger sum = BigInteger.ZERO;\n        for (BigInteger r : rs) {\n            sum = sum.add (r);\n        }\n        if (sum.compareTo (BigInteger.ZERO) == 0) {\n            continue;\n        }\n        for (int i = 0;\n        i < n; ++ i) {\n            results [i] = sum.mod (rs [i]).mod (totalPlus1).intValue ();\n        }\n        return results;\n    }","LineStart":21,"CharStart":4,"LineEnd":45,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone689.java","labeltext":"core-diff1","codeSnippet":"    for (int i = 0;\n    i < numRands; ++ i) {\n        results [i] += minVal;\n    }\n    return results;","LineStart":13,"CharStart":4,"LineEnd":17,"CharEnd":19,"status":"core-diff"},{"fileName":"Clone689.java","labeltext":"core-diff2","codeSnippet":"    if (minVal * numRands > total) {\n        throw new IllegalArgumentException ();\n    }","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone760.java","labeltext":"core-sim1","codeSnippet":"    final Class < ? > c = (Class < ? >) p.getRawType ();\n    final StringBuilder b = new StringBuilder (c.getName ());\n    b.append ('<');\n    Type [] localArgs = p.getActualTypeArguments ();\n    if (typeArgs != null && typeArgs.length > 0) {\n        int i = 0, nextTypeArg = 0;\n        for (Type local : localArgs) {\n            if (local instanceof ParameterizedType) {\n                ParameterizedType localP = (ParameterizedType) local;\n                b.append (localP.getRawType ()).append ('<');\n                b.append (typeArgs [nextTypeArg ++]);\n                b.append ('>');\n            } else if (local instanceof TypeVariable) {\n                localArgs [nextTypeArg] = typeArgs [nextTypeArg];\n                b.append (localArgs [nextTypeArg]);\n                nextTypeArg ++;\n            } else {\n                b.append (local.toString ());\n            }\n            b.append (\", \");\n            i ++;\n        }\n        if (typeArgs.length > 0) {\n            b.delete (b.length () - 2, b.length ());\n        }\n        b.append ('>');\n    } else {\n        String args = Arrays.toString (localArgs);\n        b.append (args.substring (1, args.length () - 1)).append ('>');\n    }\n    System.out.println (b);\n    investigate (c, localArgs);","LineStart":18,"CharStart":4,"LineEnd":49,"CharEnd":31,"status":"core-sim"},{"fileName":"Clone760.java","labeltext":"core-sim1","codeSnippet":"investigate ((Class < ? >) t, typeArgs);","LineStart":11,"CharStart":8,"LineEnd":11,"CharEnd":48,"status":"core-sim"},{"fileName":"Clone760.java","labeltext":"core-sim1","codeSnippet":"investigate ((ParameterizedType) t, typeArgs);","LineStart":13,"CharStart":8,"LineEnd":13,"CharEnd":54,"status":"core-sim"},{"fileName":"Clone760.java","labeltext":"core-diff1","codeSnippet":"    if (t == null) return;\n    if (t instanceof Class < ? >) {","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":35,"status":"core-diff"},{"fileName":"Clone760.java","labeltext":"core-diff1","codeSnippet":"} else if (t instanceof ParameterizedType) {","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":48,"status":"core-diff"},{"fileName":"Clone760.java","labeltext":"core-diff1","codeSnippet":"}","LineStart":14,"CharStart":4,"LineEnd":14,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone922.java","labeltext":"core-sim1","codeSnippet":"    if (A.length == 2) return Math.abs (A [0] - A [1]);\n    int [] s1 = new int [A.length - 1];\n    s1 [0] = A [0];\n    for (int i = 1;\n    i < A.length - 1; i ++) {\n        s1 [i] = s1 [i - 1] + A [i];\n    }\n    int [] s2 = new int [A.length - 1];\n    s2 [A.length - 2] = A [A.length - 1];\n    for (int i = A.length - 3;\n    i >= 0; i --) {\n        s2 [i] = s2 [i + 1] + A [i + 1];\n    }\n    int finalSum = Integer.MAX_VALUE;\n    for (int j = 0;\n    j < s1.length; j ++) {\n        int sum = Math.abs (s1 [j] - s2 [j]);\n        if (sum < finalSum) finalSum = sum;\n    }\n    return finalSum;","LineStart":32,"CharStart":4,"LineEnd":51,"CharEnd":20,"status":"core-sim"},{"fileName":"Clone922.java","labeltext":"core-sim1","codeSnippet":"    while (i < N) {\n        rightSum += A [i];\n        i ++;\n    }\n    last_minimum = abs (leftSum - rightSum);\n    if (last_minimum == 0) return last_minimum;\n    i = 2;\n    while (i < N) {\n        leftSum += A [i - 1];\n        rightSum -= A [i - 1];\n        current_min = abs (leftSum - rightSum);\n        if (current_min == 0) return current_min;\n        if (last_minimum > current_min) last_minimum = current_min;\n        i ++;\n    }\n    return last_minimum;","LineStart":13,"CharStart":4,"LineEnd":28,"CharEnd":24,"status":"core-sim"},{"fileName":"Clone922.java","labeltext":"noncore-diff1","codeSnippet":"    int i, leftSum, rightSum, last_minimum, current_min;\n    leftSum = A [0];\n    rightSum = 0;\n    i = 1;","LineStart":9,"CharStart":4,"LineEnd":12,"CharEnd":10,"status":"noncore-diff"},{"fileName":"Clone924.java","labeltext":"core-diff2","codeSnippet":"    scottishPerson.salute ();\n    scottishPerson.warcry ();\n    System.out.println (scottishPerson.name);\n    System.out.println (scottishPerson.clanName);\n    britishPerson.salute ();\n    System.out.println (britishPerson.name);\n    britishPersonUpcasted.salute ();\n    System.out.println (britishPersonUpcasted.name);","LineStart":12,"CharStart":4,"LineEnd":19,"CharEnd":52,"status":"core-diff"},{"fileName":"Clone924.java","labeltext":"noncore-diff1","codeSnippet":"    ScottishPerson scottishPerson = new ScottishPerson ();\n    BritishPerson britishPerson = new BritishPerson ();\n    BritishPerson britishPersonUpcasted = new ScottishPerson (\"Another scottish name\");","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":87,"status":"noncore-diff"},{"fileName":"Clone924.java","labeltext":"core-diff1","codeSnippet":"    Dog upcastedAnimal = upcastToDog (animal);\n    dog.saySomething ();\n    dog.getTheBall ();\n    upcastedAnimal.saySomething ();\n    upcastedAnimal.getTheBall ();\n    horse.saySomething ();\n    horse.getTheBall ();\n    try {\n        Dog upcastedDog = upcastToDog (horseAnimal);\n    } catch (Exception ex) {\n        System.out.println (ex.getClass ().getSimpleName () + \": Obviously a horse is not a dog!\");\n    }","LineStart":27,"CharStart":4,"LineEnd":38,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone924.java","labeltext":"noncore-diff1","codeSnippet":"    Dog dog = new Dog ();\n    Horse horse = new Horse ();\n    Animal animal = dog;\n    Animal horseAnimal = new Horse ();","LineStart":23,"CharStart":4,"LineEnd":26,"CharEnd":38,"status":"noncore-diff"},{"fileName":"Clone925.java","labeltext":"core-diff1","codeSnippet":"    if ((n & 1) == 0) {\n        return n == 2;\n    }\n    if (n < 9) {\n        return n > 1;\n    }\n    return isStrongProbablePrime (n, 2) && isStrongProbablePrime (n, 7) && isStrongProbablePrime (n, 61);","LineStart":19,"CharStart":4,"LineEnd":25,"CharEnd":105,"status":"core-diff"},{"fileName":"Clone925.java","labeltext":"core-diff2","codeSnippet":"    for (int i = 2;\n    i <= num / i; i ++) {\n        if (num % i == 0) {\n            return false;\n        }\n    }\n    return num > 1;","LineStart":9,"CharStart":4,"LineEnd":15,"CharEnd":19,"status":"core-diff"},{"fileName":"Clone926.java","labeltext":"noncore-sim1","codeSnippet":"    Scanner sc = new Scanner (System.in);\n    ArrayList < Integer > al2 = new ArrayList < Integer > ();","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":61,"status":"noncore-sim"},{"fileName":"Clone926.java","labeltext":"noncore-sim1","codeSnippet":"    Scanner scan = new Scanner (System.in);\n    ArrayList < Integer > list = new ArrayList < Integer > ();","LineStart":22,"CharStart":4,"LineEnd":23,"CharEnd":62,"status":"noncore-sim"},{"fileName":"Clone926.java","labeltext":"core-sim1","codeSnippet":"    while (sc.hasNextInt ()) {\n        al2.add (sc.nextInt ());\n    }","LineStart":12,"CharStart":4,"LineEnd":14,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone926.java","labeltext":"core-sim1","codeSnippet":"    while (scan.hasNextInt ()) {\n        list.add (scan.nextInt ());\n    }","LineStart":26,"CharStart":4,"LineEnd":28,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone926.java","labeltext":"core-sim2","codeSnippet":"    Integer [] nums = list.toArray (new Integer [0]);\n    for (int i = 0;\n    i < nums.length; i ++) {\n        System.out.println (nums [i]);\n    }","LineStart":29,"CharStart":4,"LineEnd":33,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone926.java","labeltext":"core-sim2","codeSnippet":"    Iterator it1 = al2.iterator ();\n    while (it1.hasNext ()) {\n        System.out.println (it1.next ());\n    }","LineStart":15,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone926.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"enter the item in list\");","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":50,"status":"noncore-diff"},{"fileName":"Clone926.java","labeltext":"noncore-diff1","codeSnippet":"    System.out.print (\"Enter integers please \");\n    System.out.println (\"(EOF or non-integer to terminate): \");","LineStart":24,"CharStart":4,"LineEnd":25,"CharEnd":63,"status":"noncore-diff"},{"fileName":"Clone937.java","labeltext":"noncore-sim1","codeSnippet":"    List < Object > myArray = new ArrayList < Object > ();\n    myArray.add (MyJsonObject.parse (\"{\\\"lon\\\": 0.001, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test\\\"}\"));\n    myArray.add (MyJsonObject.parse (\"{\\\"lon\\\": 0.001, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test2\\\"}\"));","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":95,"status":"noncore-sim"},{"fileName":"Clone937.java","labeltext":"noncore-sim1","codeSnippet":"    String s = \"[\" + \" {\\\"lon\\\": 0.001, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test\\\"},\" + \" {\\\"lon\\\": 0.002, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test3\\\"},\" + \" {\\\"lon\\\": 0.002, \\\"lat\\\": 0.005, \\\"desc\\\": \\\"test4\\\"},\" + \" {\\\"lon\\\": 0.002, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test5\\\"},\" + \" {\\\"lon\\\": 0.001, \\\"lat\\\": 0.001, \\\"desc\\\": \\\"test2\\\"}]\";\n    Gson gson = new Gson ();\n    Location [] al = gson.fromJson (s, Location [].class);\n    List < Location > tl = Arrays.asList (al);","LineStart":28,"CharStart":4,"LineEnd":31,"CharEnd":46,"status":"noncore-sim"},{"fileName":"Clone937.java","labeltext":"noncore-sim2","codeSnippet":"List < Location > fl = new ArrayList < Location > ();","LineStart":33,"CharStart":4,"LineEnd":33,"CharEnd":57,"status":"noncore-sim"},{"fileName":"Clone937.java","labeltext":"noncore-sim2","codeSnippet":"List seenObjects = new ArrayList < Object > ();","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":51,"status":"noncore-sim"},{"fileName":"Clone937.java","labeltext":"core-sim1","codeSnippet":"    for (Object obj : myArray) {\n        if (! seenObjects.contains (obj)) {\n            seenObjects.add (obj);\n        } else {\n            MyJsonObject original = (MyJsonObject) seenObjects.get (seenObjects.indexOf (obj));\n            MyJsonObject update = (MyJsonObject) obj;\n            original.put (\"desc\", original.get (\"desc\") + \", \" + update.get (\"desc\"));\n        }\n    }\n    for (MyJsonObject obj : (List < MyJsonObject >) seenObjects) {\n        System.out.println (obj.toJSONString ());\n    }","LineStart":13,"CharStart":4,"LineEnd":24,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone937.java","labeltext":"noncore-diff1","codeSnippet":"Collections.sort (tl);","LineStart":32,"CharStart":4,"LineEnd":32,"CharEnd":26,"status":"noncore-diff"},{"fileName":"Clone937.java","labeltext":"core-sim1","codeSnippet":"    Location current = null;\n    for (Iterator < Location > it = tl.iterator ();\n    it.hasNext ();) {\n        current = current == null ? it.next () : current;\n        Location ltmp = null;\n        while (it.hasNext () && (ltmp = it.next ()).equals (current)) current.desc = current.desc + \",\" + ltmp.desc;\n        fl.add (current);\n        current = ltmp;\n    }\n    System.out.println (gson.toJson (fl));","LineStart":34,"CharStart":4,"LineEnd":43,"CharEnd":42,"status":"core-sim"},{"fileName":"Clone938.java","labeltext":"core-sim1","codeSnippet":"    if (! isEmpty (a) && ! isEmpty (b)) {\n        return a + separator + b;\n    }\n    if (! isEmpty (a)) {\n        return a;\n    }\n    if (! isEmpty (b)) {\n        return b;\n    }\n    return \"\";","LineStart":9,"CharStart":4,"LineEnd":18,"CharEnd":14,"status":"core-sim"},{"fileName":"Clone938.java","labeltext":"core-sim1","codeSnippet":"    for (String part : parts) {\n        if (! isEmpty (part)) {\n            if (builder.length () > 0) {\n                builder.append (delimiter);\n            }\n            builder.append (part);\n        }\n    }\n    return builder.toString ();","LineStart":23,"CharStart":4,"LineEnd":31,"CharEnd":31,"status":"core-sim"},{"fileName":"Clone938.java","labeltext":"noncore-diff1","codeSnippet":"StringBuilder builder = new StringBuilder ();","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":49,"status":"noncore-diff"},{"fileName":"Clone939.java","labeltext":"core-sim1","codeSnippet":"    LocalDateTime from = LocalDateTime.parse (\"2015-07-24T09:39:14.000Z\", ISODateTimeFormat.dateTime ());\n    LocalDateTime to = LocalDateTime.parse (\"2015-07-24T09:45:44.000Z\", ISODateTimeFormat.dateTime ());\n    LocalTime fromTime = from.toLocalTime ();\n    LocalTime toTime = to.toLocalTime ();","LineStart":9,"CharStart":4,"LineEnd":12,"CharEnd":41,"status":"core-sim"},{"fileName":"Clone939.java","labeltext":"core-sim1","codeSnippet":"    String st1 = \"2015-07-24T09:39:14.000Z\";\n    String st2 = \"2015-07-24T09:45:44.000Z\";\n    String time1 = st1.substring (st1.indexOf (\"T\") + 1, st1.indexOf (\".0\"));\n    String time2 = st2.substring (st2.indexOf (\"T\") + 1, st2.indexOf (\".0\"));\n    Date dateTime1 = new java.text.SimpleDateFormat (\"HH:mm\").parse (time1);\n    Date dateTime2 = new java.text.SimpleDateFormat (\"HH:mm\").parse (time2);","LineStart":21,"CharStart":4,"LineEnd":26,"CharEnd":76,"status":"core-sim"},{"fileName":"Clone939.java","labeltext":"core-sim2","codeSnippet":"System.out.println (fromTime + \" after \" + toTime + \" = \" + fromTime.isAfter (toTime));","LineStart":15,"CharStart":4,"LineEnd":15,"CharEnd":91,"status":"core-sim"},{"fileName":"Clone939.java","labeltext":"core-sim2","codeSnippet":"System.out.println (dateTime1.after (dateTime2));","LineStart":27,"CharStart":4,"LineEnd":27,"CharEnd":53,"status":"core-sim"},{"fileName":"Clone939.java","labeltext":"core-diff1","codeSnippet":"    System.out.println (fromTime + \" - \" + toTime);\n    System.out.println (fromTime + \" before \" + toTime + \" = \" + fromTime.isBefore (toTime));","LineStart":13,"CharStart":4,"LineEnd":14,"CharEnd":93,"status":"core-diff"},{"fileName":"Clone939.java","labeltext":"core-diff1","codeSnippet":"    System.out.println (fromTime + \" equals \" + toTime + \" = \" + fromTime.equals (toTime));\n    System.out.println (fromTime + \" compareTo \" + toTime + \" = \" + fromTime.compareTo (toTime));","LineStart":16,"CharStart":4,"LineEnd":17,"CharEnd":97,"status":"core-diff"},{"fileName":"Clone940.java","labeltext":"core-sim1","codeSnippet":"    while (true) {\n        String message = inputGenerator.getMessage ();\n        result += message;\n        if (! message.startsWith (\"hi\")) {\n            break;\n        }\n    }\n    return result;","LineStart":10,"CharStart":4,"LineEnd":17,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone940.java","labeltext":"core-sim1","codeSnippet":"    do {\n        read = inputGenerator.getMessage ();\n        msg.append (read);\n    } while (read.toLowerCase ().startsWith (\"hi\"));\n    return msg.toString ();","LineStart":23,"CharStart":4,"LineEnd":27,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone940.java","labeltext":"noncore-diff1","codeSnippet":"    StringBuilder msg = new StringBuilder ();\n    String read;","LineStart":21,"CharStart":4,"LineEnd":22,"CharEnd":16,"status":"noncore-diff"},{"fileName":"Clone940.java","labeltext":"noncore-diff1","codeSnippet":"String result = \"\";","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":23,"status":"noncore-diff"},{"fileName":"Clone941.java","labeltext":"core-sim1","codeSnippet":"    if (str.length () > keyword.length ()) {\n        int keywordIndex = 0;\n        for (int i = 0;\n        i < str.length (); i ++) {\n            if (str.charAt (i) != ' ') {\n                equalStringBuilder.append (keyword.charAt (keywordIndex ++));\n                keywordIndex %= keyword.length ();\n            } else {\n                equalStringBuilder.append (' ');\n            }\n        }\n    }\n    return equalStringBuilder.toString ();","LineStart":10,"CharStart":4,"LineEnd":22,"CharEnd":42,"status":"core-sim"},{"fileName":"Clone941.java","labeltext":"core-sim1","codeSnippet":"    if (str.length () > keyword.length ()) {\n        string result = \"\";\n        for (int i = 0;\n        i < str.length (); i ++) {\n            if (str.charAt (i) != ' ') {\n                result += keyword.charAt (i % keyword.length ());\n            } else result += \" \";\n        }\n    }\n    return result;","LineStart":26,"CharStart":4,"LineEnd":35,"CharEnd":18,"status":"core-sim"},{"fileName":"Clone941.java","labeltext":"noncore-diff1","codeSnippet":"StringBuilder equalStringBuilder = new StringBuilder ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":60,"status":"noncore-diff"},{"fileName":"Clone944.java","labeltext":"core-sim1","codeSnippet":" String line = console.readLine ();","LineStart":14,"CharStart":3,"LineEnd":14,"CharEnd":38,"status":"core-sim"},{"fileName":"Clone944.java","labeltext":"core-sim1","codeSnippet":"String s = br.readLine ();","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":30,"status":"core-sim"},{"fileName":"Clone944.java","labeltext":"core-diff1","codeSnippet":"int i = Integer.parseInt (br.readLine ());","LineStart":24,"CharStart":8,"LineEnd":24,"CharEnd":50,"status":"core-diff"},{"fileName":"Clone944.java","labeltext":"noncore-diff1","codeSnippet":"    Console console = System.console ();\n    if (console == null) {\n        System.out.println (\"Unable to fetch console\");\n        return;\n    }","LineStart":9,"CharStart":4,"LineEnd":13,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone944.java","labeltext":"noncore-diff1","codeSnippet":"console.printf (\"I saw this line: %s\", line);","LineStart":15,"CharStart":4,"LineEnd":15,"CharEnd":49,"status":"noncore-diff"},{"fileName":"Clone944.java","labeltext":"noncore-diff2","codeSnippet":"    BufferedReader br = new BufferedReader (new InputStreamReader (System.in));\n    System.out.print (\"Enter String\");","LineStart":19,"CharStart":4,"LineEnd":20,"CharEnd":38,"status":"noncore-diff"},{"fileName":"Clone944.java","labeltext":"noncore-diff2","codeSnippet":"    System.out.print (\"Enter Integer:\");\n    try {","LineStart":22,"CharStart":4,"LineEnd":23,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone944.java","labeltext":"noncore-diff2","codeSnippet":"    } catch (NumberFormatException nfe) {\n        System.err.println (\"Invalid Format!\");\n    }","LineStart":25,"CharStart":4,"LineEnd":27,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone948.java","labeltext":"noncore-sim1","codeSnippet":"BufferedReader br = new BufferedReader (new InputStreamReader (System.in));","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":79,"status":"noncore-sim"},{"fileName":"Clone948.java","labeltext":"noncore-sim1","codeSnippet":"BufferedReader br = new BufferedReader (new InputStreamReader (System.in));","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":79,"status":"noncore-sim"},{"fileName":"Clone948.java","labeltext":"core-sim1","codeSnippet":"String s = br.readLine ();","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":30,"status":"core-sim"},{"fileName":"Clone948.java","labeltext":"core-sim1","codeSnippet":"String input = br.readLine ();","LineStart":25,"CharStart":8,"LineEnd":25,"CharEnd":38,"status":"core-sim"},{"fileName":"Clone948.java","labeltext":"core-diff1","codeSnippet":"        if (input.length () == EXIT_COMMAND.length () && input.toLowerCase ().equals (EXIT_COMMAND)) {\n            System.out.println (\"Exiting.\");\n            return;\n        }","LineStart":27,"CharStart":7,"LineEnd":30,"CharEnd":9,"status":"core-diff"},{"fileName":"Clone948.java","labeltext":"core-diff2","codeSnippet":"int i = Integer.parseInt (br.readLine ());","LineStart":14,"CharStart":8,"LineEnd":14,"CharEnd":50,"status":"core-diff"},{"fileName":"Clone948.java","labeltext":"noncore-diff1","codeSnippet":"System.out.print (\"Enter String\");","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":38,"status":"noncore-diff"},{"fileName":"Clone948.java","labeltext":"noncore-diff1","codeSnippet":"    System.out.print (\"Enter Integer:\");\n    try {","LineStart":12,"CharStart":4,"LineEnd":13,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone948.java","labeltext":"noncore-diff1","codeSnippet":"    } catch (NumberFormatException nfe) {\n        System.err.println (\"Invalid Format!\");\n    }","LineStart":15,"CharStart":4,"LineEnd":17,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone948.java","labeltext":"noncore-diff2","codeSnippet":"    System.out.println (\"Enter some text, or '\" + EXIT_COMMAND + \"' to quit\");\n    while (true) {\n        System.out.print (\"><![CDATA[ \");","LineStart":22,"CharStart":4,"LineEnd":24,"CharEnd":41,"status":"noncore-diff"},{"fileName":"Clone948.java","labeltext":"noncore-diff2","codeSnippet":"System.out.println (input);","LineStart":26,"CharStart":8,"LineEnd":26,"CharEnd":35,"status":"noncore-diff"},{"fileName":"Clone948.java","labeltext":"noncore-diff2","codeSnippet":"        System.out.println (\"...response goes here...\");\n    }","LineStart":31,"CharStart":8,"LineEnd":32,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone949.java","labeltext":"core-sim1","codeSnippet":"CompletableFuture < String > contentsCF = readPage ();","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":58,"status":"core-sim"},{"fileName":"Clone949.java","labeltext":"core-sim1","codeSnippet":" CompletableFuture < String > future = readPage ();","LineStart":36,"CharStart":3,"LineEnd":36,"CharEnd":54,"status":"core-sim"},{"fileName":"Clone949.java","labeltext":"core-sim2","codeSnippet":"    CompletableFuture < Void > completionStage = linksCF.thenAccept (list -> {\n        String a = null;\n        System.out.println (a.toString ());\n    });","LineStart":11,"CharStart":4,"LineEnd":14,"CharEnd":7,"status":"core-sim"},{"fileName":"Clone949.java","labeltext":"core-sim2","codeSnippet":"    CompletableFuture < Void > future2 = future.thenAccept (page -> {\n        System.out.println (page);\n        throw new IllegalArgumentException (\"unexpected exception\");\n    });","LineStart":37,"CharStart":4,"LineEnd":40,"CharEnd":7,"status":"core-sim"},{"fileName":"Clone949.java","labeltext":"core-sim3","codeSnippet":"    future2.exceptionally (e -> {\n        e.printStackTrace (System.err);\n        return null;\n    });","LineStart":41,"CharStart":4,"LineEnd":44,"CharEnd":7,"status":"core-sim"},{"fileName":"Clone949.java","labeltext":"core-sim3","codeSnippet":"    completionStage.exceptionally (e -> {\n        System.out.println (\"Future exceptionally finished: \" + e);\n        return null;\n    });","LineStart":24,"CharStart":4,"LineEnd":27,"CharEnd":7,"status":"core-sim"},{"fileName":"Clone949.java","labeltext":"core-diff1","codeSnippet":"completionStage.get ();","LineStart":18,"CharStart":8,"LineEnd":18,"CharEnd":31,"status":"core-diff"},{"fileName":"Clone949.java","labeltext":"core-diff1","codeSnippet":"completionStage.get ();","LineStart":29,"CharStart":8,"LineEnd":29,"CharEnd":31,"status":"core-diff"},{"fileName":"Clone949.java","labeltext":"noncore-diff1","codeSnippet":"CompletableFuture < List < String > > linksCF = contentsCF.thenApply (CompletableFutureTest :: getLinks);","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":109,"status":"noncore-diff"},{"fileName":"Clone949.java","labeltext":"noncore-diff1","codeSnippet":"    List < String > result = linksCF.get ();\n    System.out.println (\"Got \" + result);","LineStart":15,"CharStart":4,"LineEnd":16,"CharEnd":41,"status":"noncore-diff"},{"fileName":"Clone949.java","labeltext":"noncore-diff2","codeSnippet":"try {","LineStart":17,"CharStart":4,"LineEnd":17,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone949.java","labeltext":"noncore-diff2","codeSnippet":"    } catch (ExecutionException e) {\n        System.out.println (\"Caught \" + e);\n        Throwable cause = e.getCause ();\n        System.out.println (\"cause: \" + cause);\n    }","LineStart":19,"CharStart":4,"LineEnd":23,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone949.java","labeltext":"noncore-diff2","codeSnippet":"try {","LineStart":28,"CharStart":4,"LineEnd":28,"CharEnd":9,"status":"noncore-diff"},{"fileName":"Clone949.java","labeltext":"noncore-diff2","codeSnippet":"    } catch (Throwable t) {\n        System.out.println (\"Already handled by the future \" + t);\n    }","LineStart":30,"CharStart":4,"LineEnd":32,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone951.java","labeltext":"noncore-sim1","codeSnippet":"    button.setOnClickListener (new View.OnClickListener () {\n        @Override\n        public void onClick (View v) {","LineStart":52,"CharStart":4,"LineEnd":54,"CharEnd":38,"status":"noncore-sim"},{"fileName":"Clone951.java","labeltext":"noncore-sim1","codeSnippet":"        }}\n    );","LineStart":56,"CharStart":8,"LineEnd":57,"CharEnd":6,"status":"noncore-sim"},{"fileName":"Clone951.java","labeltext":"noncore-sim1","codeSnippet":"            tvLabel.setOnClickListener (new View.OnClickListener () {\n                @Override\n                public void onClick (View v) {\n                }}\n            );","LineStart":15,"CharStart":12,"LineEnd":19,"CharEnd":14,"status":"noncore-sim"},{"fileName":"Clone951.java","labeltext":"noncore-sim1","codeSnippet":"            tvLabel.setOnClickListener (new View.OnClickListener () {\n                @Override\n                public void onClick (View v) {\n                }}\n            );","LineStart":23,"CharStart":12,"LineEnd":27,"CharEnd":14,"status":"noncore-sim"},{"fileName":"Clone951.java","labeltext":"noncore-sim1","codeSnippet":"            tvLabel.setOnClickListener (new View.OnClickListener () {\n                @Override\n                public void onClick (View v) {\n                }}\n            );","LineStart":31,"CharStart":12,"LineEnd":35,"CharEnd":14,"status":"noncore-sim"},{"fileName":"Clone951.java","labeltext":"noncore-sim2","codeSnippet":"    collection.addView (layout);\n    return layout;","LineStart":38,"CharStart":4,"LineEnd":39,"CharEnd":18,"status":"noncore-sim"},{"fileName":"Clone951.java","labeltext":"noncore-sim2","codeSnippet":"    container.addView (layout);\n    return layout;","LineStart":58,"CharStart":4,"LineEnd":59,"CharEnd":18,"status":"noncore-sim"},{"fileName":"Clone951.java","labeltext":"core-diff1","codeSnippet":"    LayoutInflater inflater = LayoutInflater.from (mContext);\n    ViewGroup layout = (ViewGroup) inflater.inflate (R.layout.account_dialog_signin_viewpagers, collection, false);\n    TextView tvLabel = (TextView) layout.findViewById (R.id.textView);","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":70,"status":"core-diff"},{"fileName":"Clone951.java","labeltext":"noncore-diff1","codeSnippet":"    switch (position) {\n        case 0 :\n            tvLabel.setText (\"Log In\");","LineStart":12,"CharStart":4,"LineEnd":14,"CharEnd":39,"status":"noncore-diff"},{"fileName":"Clone951.java","labeltext":"noncore-diff1","codeSnippet":"            break;\n        case 1 :\n            tvLabel.setText (\"Sign Up\");","LineStart":20,"CharStart":12,"LineEnd":22,"CharEnd":40,"status":"noncore-diff"},{"fileName":"Clone951.java","labeltext":"noncore-diff1","codeSnippet":"            break;\n        case 2 :\n            tvLabel.setText (\"Send Reset Link\");","LineStart":28,"CharStart":12,"LineEnd":30,"CharEnd":48,"status":"noncore-diff"},{"fileName":"Clone951.java","labeltext":"noncore-diff1","codeSnippet":"            break;\n    }","LineStart":36,"CharStart":12,"LineEnd":37,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone951.java","labeltext":"core-diff2","codeSnippet":"    Button button = new Button (container.getContext ());\n    ViewGroup.LayoutParams params = new ViewGroup.LayoutParams (ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);\n    button.setLayoutParams (params);\n    button.setText (String.valueOf (position));\n    LinearLayout layout = new LinearLayout (container.getContext ());\n    layout.setOrientation (LinearLayout.VERTICAL);\n    ViewGroup.LayoutParams layoutParams = new ViewGroup.LayoutParams (ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\n    layout.addView (button);","LineStart":43,"CharStart":4,"LineEnd":50,"CharEnd":28,"status":"core-diff"},{"fileName":"Clone951.java","labeltext":"noncore-diff2","codeSnippet":"final int page = position;","LineStart":51,"CharStart":4,"LineEnd":51,"CharEnd":30,"status":"noncore-diff"},{"fileName":"Clone960.java","labeltext":"core-sim1","codeSnippet":"        boolean oTest = arr.length >= 1 && arr [0] == 'o';\n        boolean zTest = arr.length >= 2 && arr [1] == 'z';\n        if (oTest && zTest) {\n            return \"oz\";\n        } else if (oTest) {\n            return \"o\";\n        } else if (zTest) {\n            return \"z\";\n        }","LineStart":11,"CharStart":8,"LineEnd":19,"CharEnd":9,"status":"core-sim"},{"fileName":"Clone960.java","labeltext":"core-sim1","codeSnippet":"    if (str.length () >= 2 && str.substring (0, 2).equals (\"oz\")) {\n        return \"oz\";\n    } else if (str.length () >= 2 && str.substring (1, 2).equals (\"z\")) {\n        return \"z\";\n    } else if (str.length () >= 2 && str.substring (0, 1).equals (\"o\")) {\n        return \"o\";\n    }","LineStart":25,"CharStart":4,"LineEnd":31,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone960.java","labeltext":"core-sim2","codeSnippet":"return \"\";","LineStart":32,"CharStart":4,"LineEnd":32,"CharEnd":14,"status":"core-sim"},{"fileName":"Clone960.java","labeltext":"core-sim2","codeSnippet":"return \"\";","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":14,"status":"core-sim"},{"fileName":"Clone960.java","labeltext":"noncore-diff1","codeSnippet":"    if (str != null) {\n        char [] arr = str.toLowerCase ().toCharArray ();","LineStart":9,"CharStart":4,"LineEnd":10,"CharEnd":56,"status":"noncore-diff"},{"fileName":"Clone960.java","labeltext":"noncore-diff1","codeSnippet":"}","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone963.java","labeltext":"noncore-sim1","codeSnippet":"Scanner in = new Scanner (System.in);","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":41,"status":"noncore-sim"},{"fileName":"Clone963.java","labeltext":"noncore-sim1","codeSnippet":"Scanner sc = new Scanner (System.in);","LineStart":22,"CharStart":4,"LineEnd":22,"CharEnd":41,"status":"noncore-sim"},{"fileName":"Clone963.java","labeltext":"core-sim1","codeSnippet":"number = in.nextInt ();","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":27,"status":"core-sim"},{"fileName":"Clone963.java","labeltext":"core-sim1","codeSnippet":"int decimal = sc.nextInt ();","LineStart":23,"CharStart":4,"LineEnd":23,"CharEnd":32,"status":"core-sim"},{"fileName":"Clone963.java","labeltext":"core-sim2","codeSnippet":"    if (decimal <= 0) {\n        System.out.println (\"Please Enter more than 0\");\n    } else {\n        while (decimal > 0) {\n            binary = (decimal % 2) + binary;\n            decimal = decimal / 2;\n        }\n        System.out.println (\"binary is:\" + binary);\n    }","LineStart":25,"CharStart":4,"LineEnd":33,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone963.java","labeltext":"core-sim2","codeSnippet":"    if (number < 0) {\n        System.out.println (\"Error: Not a positive integer\");\n    } else {\n        System.out.print (\"Convert to binary is:\");\n        printBinaryform (number);\n    }","LineStart":13,"CharStart":4,"LineEnd":18,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone963.java","labeltext":"noncore-diff1","codeSnippet":"int number;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":15,"status":"noncore-diff"},{"fileName":"Clone963.java","labeltext":"noncore-diff2","codeSnippet":"System.out.println (\"Enter a positive integer\");","LineStart":11,"CharStart":4,"LineEnd":11,"CharEnd":52,"status":"noncore-diff"},{"fileName":"Clone963.java","labeltext":"noncore-diff1","codeSnippet":"String binary = \"\";","LineStart":24,"CharStart":4,"LineEnd":24,"CharEnd":23,"status":"noncore-diff"},{"fileName":"Clone964.java","labeltext":"core-sim1","codeSnippet":"String [] s1 = str.split (\" \");","LineStart":56,"CharStart":4,"LineEnd":56,"CharEnd":35,"status":"core-sim"},{"fileName":"Clone964.java","labeltext":"core-sim1","codeSnippet":"stringArray = stringLine.split (\" \");","LineStart":25,"CharStart":8,"LineEnd":25,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone964.java","labeltext":"core-diff1","codeSnippet":"    for (int i = 0;\n    i <= s1.length - 1; i ++) {\n        if (s1 [i].equals (\"is\")) {\n            count ++;\n        }\n    }","LineStart":57,"CharStart":4,"LineEnd":62,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone964.java","labeltext":"noncore-sim1","codeSnippet":"int count = 0;","LineStart":54,"CharStart":4,"LineEnd":54,"CharEnd":18,"status":"noncore-sim"},{"fileName":"Clone964.java","labeltext":"noncore-sim1","codeSnippet":"int counLine = 0;","LineStart":12,"CharStart":4,"LineEnd":12,"CharEnd":21,"status":"noncore-sim"},{"fileName":"Clone964.java","labeltext":"core-diff2","codeSnippet":"        for (int i = 0;\n        i < arrayLength; i ++) {\n            int c = 1;\n            for (int j = i + 1;\n            j < arrayLength; j ++) {\n                if (stringArray [i].equalsIgnoreCase (stringArray [j])) {\n                    c ++;\n                    for (int j2 = j;\n                    j2 < arrayLength; j2 ++) {\n                        stringArray [j2] = stringArray [j2 + 1];\n                        arrayLength = arrayLength - 1;\n                    }\n                }\n            }\n            System.out.println (\"The \" + stringArray [i] + \" present \" + c + \" times .\");\n        }","LineStart":28,"CharStart":8,"LineEnd":43,"CharEnd":9,"status":"core-diff"},{"fileName":"Clone964.java","labeltext":"noncore-diff1","codeSnippet":"    FileReader fr = null;\n    BufferedReader br = null;\n    String [] stringArray;","LineStart":9,"CharStart":4,"LineEnd":11,"CharEnd":26,"status":"noncore-diff"},{"fileName":"Clone964.java","labeltext":"noncore-diff1","codeSnippet":"    int arrayLength;\n    String s = \"\";\n    String stringLine = \"\";\n    try {\n        fr = new FileReader (\"F:/Line.txt\");\n        br = new BufferedReader (fr);\n        while ((s = br.readLine ()) != null) {\n            stringLine = stringLine + s;\n            stringLine = stringLine + \" \";\n            counLine ++;\n        }\n        System.out.println (stringLine);","LineStart":13,"CharStart":4,"LineEnd":24,"CharEnd":40,"status":"noncore-diff"},{"fileName":"Clone964.java","labeltext":"noncore-diff1","codeSnippet":"        arrayLength = stringArray.length;\n        System.out.println (\"The number of Words is \" + arrayLength);","LineStart":26,"CharStart":8,"LineEnd":27,"CharEnd":69,"status":"noncore-diff"},{"fileName":"Clone964.java","labeltext":"noncore-diff1","codeSnippet":"        System.out.println (\"The number of Line is \" + counLine);\n        System.out.println ();\n        fr.close ();\n        br.close ();\n    } catch (Exception e) {\n        e.printStackTrace ();\n    }","LineStart":44,"CharStart":8,"LineEnd":50,"CharEnd":5,"status":"noncore-diff"},{"fileName":"Clone964.java","labeltext":"noncore-diff2","codeSnippet":"String str = \"hi this is is is line\";","LineStart":55,"CharStart":4,"LineEnd":55,"CharEnd":41,"status":"noncore-diff"},{"fileName":"Clone964.java","labeltext":"noncore-diff2","codeSnippet":"System.out.println (count);","LineStart":63,"CharStart":4,"LineEnd":63,"CharEnd":31,"status":"noncore-diff"},{"fileName":"Clone966.java","labeltext":"core-diff1","codeSnippet":"    cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }","LineStart":46,"CharStart":4,"LineEnd":72,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone966.java","labeltext":"core-diff2","codeSnippet":"    sheetNew.setDisplayFormulas (sheetOld.isDisplayFormulas ());\n    sheetNew.setDisplayGridlines (sheetOld.isDisplayGridlines ());\n    sheetNew.setDisplayGuts (sheetOld.getDisplayGuts ());\n    sheetNew.setDisplayRowColHeadings (sheetOld.isDisplayRowColHeadings ());\n    sheetNew.setDisplayZeros (sheetOld.isDisplayZeros ());\n    sheetNew.setFitToPage (sheetOld.getFitToPage ());\n    sheetNew.setHorizontallyCenter (sheetOld.getHorizontallyCenter ());\n    sheetNew.setMargin (Sheet.BottomMargin, sheetOld.getMargin (Sheet.BottomMargin));\n    sheetNew.setMargin (Sheet.FooterMargin, sheetOld.getMargin (Sheet.FooterMargin));\n    sheetNew.setMargin (Sheet.HeaderMargin, sheetOld.getMargin (Sheet.HeaderMargin));\n    sheetNew.setMargin (Sheet.LeftMargin, sheetOld.getMargin (Sheet.LeftMargin));\n    sheetNew.setMargin (Sheet.RightMargin, sheetOld.getMargin (Sheet.RightMargin));\n    sheetNew.setMargin (Sheet.TopMargin, sheetOld.getMargin (Sheet.TopMargin));\n    sheetNew.setPrintGridlines (sheetNew.isPrintGridlines ());\n    sheetNew.setRightToLeft (sheetNew.isRightToLeft ());\n    sheetNew.setRowSumsBelow (sheetNew.getRowSumsBelow ());\n    sheetNew.setRowSumsRight (sheetNew.getRowSumsRight ());\n    sheetNew.setVerticallyCenter (sheetOld.getVerticallyCenter ());\n    HSSFRow rowNew;\n    for (Row row : sheetOld) {\n        rowNew = sheetNew.createRow (row.getRowNum ());\n        if (rowNew != null) this.transform (workbookOld, workbookNew, (XSSFRow) row, rowNew);\n    }\n    for (int i = 0;\n    i < this.lastColumn; i ++) {\n        sheetNew.setColumnWidth (i, sheetOld.getColumnWidth (i));\n        sheetNew.setColumnHidden (i, sheetOld.isColumnHidden (i));\n    }\n    for (int i = 0;\n    i < sheetOld.getNumMergedRegions (); i ++) {\n        CellRangeAddress merged = sheetOld.getMergedRegion (i);\n        sheetNew.addMergedRegion (merged);\n    }","LineStart":10,"CharStart":4,"LineEnd":42,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone966.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"transform Sheet\");","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":43,"status":"noncore-diff"},{"fileName":"Clone973.java","labeltext":"core-diff1","codeSnippet":"    XSSFFont fontNew = this.workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;","LineStart":46,"CharStart":4,"LineEnd":56,"CharEnd":19,"status":"core-diff"},{"fileName":"Clone973.java","labeltext":"core-diff2","codeSnippet":"    sheetNew.setDisplayFormulas (sheetOld.isDisplayFormulas ());\n    sheetNew.setDisplayGridlines (sheetOld.isDisplayGridlines ());\n    sheetNew.setDisplayGuts (sheetOld.getDisplayGuts ());\n    sheetNew.setDisplayRowColHeadings (sheetOld.isDisplayRowColHeadings ());\n    sheetNew.setDisplayZeros (sheetOld.isDisplayZeros ());\n    sheetNew.setFitToPage (sheetOld.getFitToPage ());\n    sheetNew.setHorizontallyCenter (sheetOld.getHorizontallyCenter ());\n    sheetNew.setMargin (Sheet.BottomMargin, sheetOld.getMargin (Sheet.BottomMargin));\n    sheetNew.setMargin (Sheet.FooterMargin, sheetOld.getMargin (Sheet.FooterMargin));\n    sheetNew.setMargin (Sheet.HeaderMargin, sheetOld.getMargin (Sheet.HeaderMargin));\n    sheetNew.setMargin (Sheet.LeftMargin, sheetOld.getMargin (Sheet.LeftMargin));\n    sheetNew.setMargin (Sheet.RightMargin, sheetOld.getMargin (Sheet.RightMargin));\n    sheetNew.setMargin (Sheet.TopMargin, sheetOld.getMargin (Sheet.TopMargin));\n    sheetNew.setPrintGridlines (sheetNew.isPrintGridlines ());\n    sheetNew.setRightToLeft (sheetNew.isRightToLeft ());\n    sheetNew.setRowSumsBelow (sheetNew.getRowSumsBelow ());\n    sheetNew.setRowSumsRight (sheetNew.getRowSumsRight ());\n    sheetNew.setVerticallyCenter (sheetOld.getVerticallyCenter ());\n    HSSFRow rowNew;\n    for (Row row : sheetOld) {\n        rowNew = sheetNew.createRow (row.getRowNum ());\n        if (rowNew != null) this.transform (workbookOld, workbookNew, (XSSFRow) row, rowNew);\n    }\n    for (int i = 0;\n    i < this.lastColumn; i ++) {\n        sheetNew.setColumnWidth (i, sheetOld.getColumnWidth (i));\n        sheetNew.setColumnHidden (i, sheetOld.isColumnHidden (i));\n    }\n    for (int i = 0;\n    i < sheetOld.getNumMergedRegions (); i ++) {\n        CellRangeAddress merged = sheetOld.getMergedRegion (i);\n        sheetNew.addMergedRegion (merged);\n    }","LineStart":10,"CharStart":4,"LineEnd":42,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone973.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"transform Sheet\");","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":43,"status":"noncore-diff"},{"fileName":"Clone974.java","labeltext":"core-sim1","codeSnippet":"if (cellNew != null) this.transform (workbookOld, workbookNew, (HSSFCell) cell, cellNew);","LineStart":50,"CharStart":8,"LineEnd":50,"CharEnd":97,"status":"core-sim"},{"fileName":"Clone974.java","labeltext":"core-sim1","codeSnippet":"if (rowNew != null) this.transform (workbookOld, workbookNew, (XSSFRow) row, rowNew);","LineStart":31,"CharStart":8,"LineEnd":31,"CharEnd":93,"status":"core-sim"},{"fileName":"Clone974.java","labeltext":"noncore-diff1","codeSnippet":"XSSFCell cellNew;","LineStart":46,"CharStart":4,"LineEnd":46,"CharEnd":21,"status":"noncore-diff"},{"fileName":"Clone974.java","labeltext":"core-diff1","codeSnippet":"    rowNew.setHeight (rowOld.getHeight ());\n    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());","LineStart":47,"CharStart":4,"LineEnd":49,"CharEnd":82,"status":"core-diff"},{"fileName":"Clone974.java","labeltext":"core-diff1","codeSnippet":"    }\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());","LineStart":51,"CharStart":4,"LineEnd":52,"CharEnd":75,"status":"core-diff"},{"fileName":"Clone974.java","labeltext":"core-diff2","codeSnippet":"    sheetNew.setDisplayFormulas (sheetOld.isDisplayFormulas ());\n    sheetNew.setDisplayGridlines (sheetOld.isDisplayGridlines ());\n    sheetNew.setDisplayGuts (sheetOld.getDisplayGuts ());\n    sheetNew.setDisplayRowColHeadings (sheetOld.isDisplayRowColHeadings ());\n    sheetNew.setDisplayZeros (sheetOld.isDisplayZeros ());\n    sheetNew.setFitToPage (sheetOld.getFitToPage ());\n    sheetNew.setHorizontallyCenter (sheetOld.getHorizontallyCenter ());\n    sheetNew.setMargin (Sheet.BottomMargin, sheetOld.getMargin (Sheet.BottomMargin));\n    sheetNew.setMargin (Sheet.FooterMargin, sheetOld.getMargin (Sheet.FooterMargin));\n    sheetNew.setMargin (Sheet.HeaderMargin, sheetOld.getMargin (Sheet.HeaderMargin));\n    sheetNew.setMargin (Sheet.LeftMargin, sheetOld.getMargin (Sheet.LeftMargin));\n    sheetNew.setMargin (Sheet.RightMargin, sheetOld.getMargin (Sheet.RightMargin));\n    sheetNew.setMargin (Sheet.TopMargin, sheetOld.getMargin (Sheet.TopMargin));\n    sheetNew.setPrintGridlines (sheetNew.isPrintGridlines ());\n    sheetNew.setRightToLeft (sheetNew.isRightToLeft ());\n    sheetNew.setRowSumsBelow (sheetNew.getRowSumsBelow ());\n    sheetNew.setRowSumsRight (sheetNew.getRowSumsRight ());\n    sheetNew.setVerticallyCenter (sheetOld.getVerticallyCenter ());\n    HSSFRow rowNew;\n    for (Row row : sheetOld) {\n        rowNew = sheetNew.createRow (row.getRowNum ());","LineStart":10,"CharStart":4,"LineEnd":30,"CharEnd":55,"status":"core-diff"},{"fileName":"Clone974.java","labeltext":"core-diff2","codeSnippet":"    }\n    for (int i = 0;\n    i < this.lastColumn; i ++) {\n        sheetNew.setColumnWidth (i, sheetOld.getColumnWidth (i));\n        sheetNew.setColumnHidden (i, sheetOld.isColumnHidden (i));\n    }\n    for (int i = 0;\n    i < sheetOld.getNumMergedRegions (); i ++) {\n        CellRangeAddress merged = sheetOld.getMergedRegion (i);\n        sheetNew.addMergedRegion (merged);\n    }","LineStart":32,"CharStart":4,"LineEnd":42,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone974.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"transform Sheet\");","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":43,"status":"noncore-diff"},{"fileName":"Clone975.java","labeltext":"core-diff1","codeSnippet":"    cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (XSSFCellStyle) workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }","LineStart":46,"CharStart":4,"LineEnd":72,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone975.java","labeltext":"core-diff2","codeSnippet":"    sheetNew.setDisplayFormulas (sheetOld.isDisplayFormulas ());\n    sheetNew.setDisplayGridlines (sheetOld.isDisplayGridlines ());\n    sheetNew.setDisplayGuts (sheetOld.getDisplayGuts ());\n    sheetNew.setDisplayRowColHeadings (sheetOld.isDisplayRowColHeadings ());\n    sheetNew.setDisplayZeros (sheetOld.isDisplayZeros ());\n    sheetNew.setFitToPage (sheetOld.getFitToPage ());\n    sheetNew.setHorizontallyCenter (sheetOld.getHorizontallyCenter ());\n    sheetNew.setMargin (Sheet.BottomMargin, sheetOld.getMargin (Sheet.BottomMargin));\n    sheetNew.setMargin (Sheet.FooterMargin, sheetOld.getMargin (Sheet.FooterMargin));\n    sheetNew.setMargin (Sheet.HeaderMargin, sheetOld.getMargin (Sheet.HeaderMargin));\n    sheetNew.setMargin (Sheet.LeftMargin, sheetOld.getMargin (Sheet.LeftMargin));\n    sheetNew.setMargin (Sheet.RightMargin, sheetOld.getMargin (Sheet.RightMargin));\n    sheetNew.setMargin (Sheet.TopMargin, sheetOld.getMargin (Sheet.TopMargin));\n    sheetNew.setPrintGridlines (sheetNew.isPrintGridlines ());\n    sheetNew.setRightToLeft (sheetNew.isRightToLeft ());\n    sheetNew.setRowSumsBelow (sheetNew.getRowSumsBelow ());\n    sheetNew.setRowSumsRight (sheetNew.getRowSumsRight ());\n    sheetNew.setVerticallyCenter (sheetOld.getVerticallyCenter ());\n    HSSFRow rowNew;\n    for (Row row : sheetOld) {\n        rowNew = sheetNew.createRow (row.getRowNum ());\n        if (rowNew != null) this.transform (workbookOld, workbookNew, (XSSFRow) row, rowNew);\n    }\n    for (int i = 0;\n    i < this.lastColumn; i ++) {\n        sheetNew.setColumnWidth (i, sheetOld.getColumnWidth (i));\n        sheetNew.setColumnHidden (i, sheetOld.isColumnHidden (i));\n    }\n    for (int i = 0;\n    i < sheetOld.getNumMergedRegions (); i ++) {\n        CellRangeAddress merged = sheetOld.getMergedRegion (i);\n        sheetNew.addMergedRegion (merged);\n    }","LineStart":10,"CharStart":4,"LineEnd":42,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone975.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"transform Sheet\");","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":43,"status":"noncore-diff"},{"fileName":"Clone976.java","labeltext":"core-diff1","codeSnippet":"    sheetNew.setDisplayFormulas (sheetOld.isDisplayFormulas ());\n    sheetNew.setDisplayGridlines (sheetOld.isDisplayGridlines ());\n    sheetNew.setDisplayGuts (sheetOld.getDisplayGuts ());\n    sheetNew.setDisplayRowColHeadings (sheetOld.isDisplayRowColHeadings ());\n    sheetNew.setDisplayZeros (sheetOld.isDisplayZeros ());\n    sheetNew.setFitToPage (sheetOld.getFitToPage ());\n    sheetNew.setHorizontallyCenter (sheetOld.getHorizontallyCenter ());\n    sheetNew.setMargin (Sheet.BottomMargin, sheetOld.getMargin (Sheet.BottomMargin));\n    sheetNew.setMargin (Sheet.FooterMargin, sheetOld.getMargin (Sheet.FooterMargin));\n    sheetNew.setMargin (Sheet.HeaderMargin, sheetOld.getMargin (Sheet.HeaderMargin));\n    sheetNew.setMargin (Sheet.LeftMargin, sheetOld.getMargin (Sheet.LeftMargin));\n    sheetNew.setMargin (Sheet.RightMargin, sheetOld.getMargin (Sheet.RightMargin));\n    sheetNew.setMargin (Sheet.TopMargin, sheetOld.getMargin (Sheet.TopMargin));\n    sheetNew.setPrintGridlines (sheetNew.isPrintGridlines ());\n    sheetNew.setRightToLeft (sheetNew.isRightToLeft ());\n    sheetNew.setRowSumsBelow (sheetNew.getRowSumsBelow ());\n    sheetNew.setRowSumsRight (sheetNew.getRowSumsRight ());\n    sheetNew.setVerticallyCenter (sheetOld.getVerticallyCenter ());\n    HSSFRow rowNew;\n    for (Row row : sheetOld) {\n        rowNew = sheetNew.createRow (row.getRowNum ());\n        if (rowNew != null) this.transform (workbookOld, workbookNew, (XSSFRow) row, rowNew);\n    }\n    for (int i = 0;\n    i < this.lastColumn; i ++) {\n        sheetNew.setColumnWidth (i, sheetOld.getColumnWidth (i));\n        sheetNew.setColumnHidden (i, sheetOld.isColumnHidden (i));\n    }\n    for (int i = 0;\n    i < sheetOld.getNumMergedRegions (); i ++) {\n        CellRangeAddress merged = sheetOld.getMergedRegion (i);\n        sheetNew.addMergedRegion (merged);\n    }","LineStart":10,"CharStart":4,"LineEnd":42,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone976.java","labeltext":"core-diff2","codeSnippet":"    styleNew.setAlignment (styleOld.getAlignment ());\n    styleNew.setBorderBottom (styleOld.getBorderBottom ());\n    styleNew.setBorderLeft (styleOld.getBorderLeft ());\n    styleNew.setBorderRight (styleOld.getBorderRight ());\n    styleNew.setBorderTop (styleOld.getBorderTop ());\n    styleNew.setDataFormat (this.transform (workbookOld, workbookNew, styleOld.getDataFormat ()));\n    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());\n    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());\n    styleNew.setFillPattern (styleOld.getFillPattern ());\n    styleNew.setFont (this.transform (workbookNew, styleOld.getFont (workbookOld)));\n    styleNew.setHidden (styleOld.getHidden ());\n    styleNew.setIndention (styleOld.getIndention ());\n    styleNew.setLocked (styleOld.getLocked ());\n    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());\n    styleNew.setWrapText (styleOld.getWrapText ());\n    this.styleMap.put (hash, styleNew);","LineStart":46,"CharStart":4,"LineEnd":61,"CharEnd":39,"status":"core-diff"},{"fileName":"Clone976.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"transform Sheet\");","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":43,"status":"noncore-diff"},{"fileName":"Clone977.java","labeltext":"core-diff1","codeSnippet":"    XSSFFont fontNew = workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;","LineStart":46,"CharStart":4,"LineEnd":56,"CharEnd":19,"status":"core-diff"},{"fileName":"Clone977.java","labeltext":"core-diff2","codeSnippet":"    sheetNew.setDisplayFormulas (sheetOld.isDisplayFormulas ());\n    sheetNew.setDisplayGridlines (sheetOld.isDisplayGridlines ());\n    sheetNew.setDisplayGuts (sheetOld.getDisplayGuts ());\n    sheetNew.setDisplayRowColHeadings (sheetOld.isDisplayRowColHeadings ());\n    sheetNew.setDisplayZeros (sheetOld.isDisplayZeros ());\n    sheetNew.setFitToPage (sheetOld.getFitToPage ());\n    sheetNew.setHorizontallyCenter (sheetOld.getHorizontallyCenter ());\n    sheetNew.setMargin (Sheet.BottomMargin, sheetOld.getMargin (Sheet.BottomMargin));\n    sheetNew.setMargin (Sheet.FooterMargin, sheetOld.getMargin (Sheet.FooterMargin));\n    sheetNew.setMargin (Sheet.HeaderMargin, sheetOld.getMargin (Sheet.HeaderMargin));\n    sheetNew.setMargin (Sheet.LeftMargin, sheetOld.getMargin (Sheet.LeftMargin));\n    sheetNew.setMargin (Sheet.RightMargin, sheetOld.getMargin (Sheet.RightMargin));\n    sheetNew.setMargin (Sheet.TopMargin, sheetOld.getMargin (Sheet.TopMargin));\n    sheetNew.setPrintGridlines (sheetNew.isPrintGridlines ());\n    sheetNew.setRightToLeft (sheetNew.isRightToLeft ());\n    sheetNew.setRowSumsBelow (sheetNew.getRowSumsBelow ());\n    sheetNew.setRowSumsRight (sheetNew.getRowSumsRight ());\n    sheetNew.setVerticallyCenter (sheetOld.getVerticallyCenter ());\n    HSSFRow rowNew;\n    for (Row row : sheetOld) {\n        rowNew = sheetNew.createRow (row.getRowNum ());\n        if (rowNew != null) this.transform (workbookOld, workbookNew, (XSSFRow) row, rowNew);\n    }\n    for (int i = 0;\n    i < this.lastColumn; i ++) {\n        sheetNew.setColumnWidth (i, sheetOld.getColumnWidth (i));\n        sheetNew.setColumnHidden (i, sheetOld.isColumnHidden (i));\n    }\n    for (int i = 0;\n    i < sheetOld.getNumMergedRegions (); i ++) {\n        CellRangeAddress merged = sheetOld.getMergedRegion (i);\n        sheetNew.addMergedRegion (merged);\n    }","LineStart":10,"CharStart":4,"LineEnd":42,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone977.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"transform Sheet\");","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":43,"status":"noncore-diff"},{"fileName":"Clone978.java","labeltext":"noncore-diff1","codeSnippet":"HSSFCell cellNew;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":21,"status":"noncore-diff"},{"fileName":"Clone978.java","labeltext":"core-sim1","codeSnippet":"if (cellNew != null) this.transform (workbookOld, workbookNew, (XSSFCell) cell, cellNew);","LineStart":13,"CharStart":8,"LineEnd":13,"CharEnd":97,"status":"core-sim"},{"fileName":"Clone978.java","labeltext":"core-sim1","codeSnippet":"if (this.styleMap != null","LineStart":21,"CharStart":4,"LineEnd":21,"CharEnd":29,"status":"core-sim"},{"fileName":"Clone978.java","labeltext":"core-sim1","codeSnippet":"                                                                   ) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());\n    }","LineStart":21,"CharStart":67,"LineEnd":23,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone978.java","labeltext":"core-sim2","codeSnippet":"cell.getCellType ()","LineStart":12,"CharStart":61,"LineEnd":12,"CharEnd":80,"status":"core-sim"},{"fileName":"Clone978.java","labeltext":"core-sim2","codeSnippet":"cellOld.getCellType ()","LineStart":25,"CharStart":12,"LineEnd":25,"CharEnd":34,"status":"core-sim"},{"fileName":"Clone978.java","labeltext":"core-sim2","codeSnippet":"cellOld.getCellType ()","LineStart":44,"CharStart":70,"LineEnd":44,"CharEnd":92,"status":"core-sim"},{"fileName":"Clone978.java","labeltext":"core-diff1","codeSnippet":"    rowNew.setHeight (rowOld.getHeight ());\n    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (),","LineStart":10,"CharStart":4,"LineEnd":12,"CharEnd":60,"status":"core-diff"},{"fileName":"Clone978.java","labeltext":"core-diff1","codeSnippet":");","LineStart":12,"CharStart":80,"LineEnd":12,"CharEnd":82,"status":"core-diff"},{"fileName":"Clone978.java","labeltext":"core-diff1","codeSnippet":"    }\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());","LineStart":14,"CharStart":4,"LineEnd":15,"CharEnd":75,"status":"core-diff"},{"fileName":"Clone978.java","labeltext":"core-diff2","codeSnippet":"    cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();","LineStart":19,"CharStart":4,"LineEnd":20,"CharEnd":55,"status":"core-diff"},{"fileName":"Clone978.java","labeltext":"core-diff3","codeSnippet":"&& ! this.styleMap.containsKey (hash)","LineStart":21,"CharStart":30,"LineEnd":21,"CharEnd":67,"status":"core-diff"},{"fileName":"Clone978.java","labeltext":"core-diff2","codeSnippet":"    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + ","LineStart":24,"CharStart":4,"LineEnd":44,"CharEnd":70,"status":"core-diff"},{"fileName":"Clone978.java","labeltext":"core-diff2","codeSnippet":"                                                                                            );\n    }","LineStart":44,"CharStart":92,"LineEnd":45,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone983.java","labeltext":"noncore-sim1","codeSnippet":"HSSFCell cellNew;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":21,"status":"noncore-sim"},{"fileName":"Clone983.java","labeltext":"noncore-sim1","codeSnippet":"XSSFCell cellNew;","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":21,"status":"noncore-sim"},{"fileName":"Clone983.java","labeltext":"core-sim1","codeSnippet":"rowNew.setHeight (rowOld.getHeight ());","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":43,"status":"core-sim"},{"fileName":"Clone983.java","labeltext":"core-sim1","codeSnippet":"rowNew.setHeight (rowOld.getHeight ());","LineStart":20,"CharStart":4,"LineEnd":20,"CharEnd":43,"status":"core-sim"},{"fileName":"Clone983.java","labeltext":"core-sim2","codeSnippet":"    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());\n        if (cellNew != null) this.transform ((HSSFCell) cell, cellNew);\n    }\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());","LineStart":26,"CharStart":3,"LineEnd":30,"CharEnd":75,"status":"core-sim"},{"fileName":"Clone983.java","labeltext":"core-sim2","codeSnippet":"    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());\n        if (cellNew != null) this.transform (workbookOld, workbookNew, (XSSFCell) cell, cellNew);\n    }\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());\n}","LineStart":11,"CharStart":4,"LineEnd":16,"CharEnd":1,"status":"core-sim"},{"fileName":"Clone983.java","labeltext":"core-diff1","codeSnippet":"    if (rowOld.getRowStyle () != null) {\n        Integer hash = rowOld.getRowStyle ().hashCode ();\n        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());\n        rowNew.setRowStyle (this.styleMap.get (hash));\n    }","LineStart":21,"CharStart":4,"LineEnd":25,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone987.java","labeltext":"core-sim1","codeSnippet":"    for (Row row : sheetOld) {\n        rowNew = sheetNew.createRow (row.getRowNum ());\n        if (rowNew != null) this.transform (workbookOld, workbookNew, (HSSFRow) row, rowNew);\n    }","LineStart":38,"CharStart":4,"LineEnd":41,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone987.java","labeltext":"core-sim1","codeSnippet":"    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());\n        if (cellNew != null) this.transform (workbookOld, workbookNew, (XSSFCell) cell, cellNew);\n    }","LineStart":11,"CharStart":4,"LineEnd":14,"CharEnd":5,"status":"core-sim"},{"fileName":"Clone987.java","labeltext":"noncore-diff1","codeSnippet":"HSSFCell cellNew;","LineStart":9,"CharStart":4,"LineEnd":9,"CharEnd":21,"status":"noncore-diff"},{"fileName":"Clone987.java","labeltext":"core-diff1","codeSnippet":"rowNew.setHeight (rowOld.getHeight ());","LineStart":10,"CharStart":4,"LineEnd":10,"CharEnd":43,"status":"core-diff"},{"fileName":"Clone987.java","labeltext":"core-diff1","codeSnippet":"this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());","LineStart":15,"CharStart":4,"LineEnd":15,"CharEnd":75,"status":"core-diff"},{"fileName":"Clone987.java","labeltext":"core-diff3","codeSnippet":"    sheetNew.setDisplayFormulas (sheetOld.isDisplayFormulas ());\n    sheetNew.setDisplayGridlines (sheetOld.isDisplayGridlines ());\n    sheetNew.setDisplayGuts (sheetOld.getDisplayGuts ());\n    sheetNew.setDisplayRowColHeadings (sheetOld.isDisplayRowColHeadings ());\n    sheetNew.setDisplayZeros (sheetOld.isDisplayZeros ());\n    sheetNew.setFitToPage (sheetOld.getFitToPage ());\n    sheetNew.setHorizontallyCenter (sheetOld.getHorizontallyCenter ());\n    sheetNew.setMargin (Sheet.BottomMargin, sheetOld.getMargin (Sheet.BottomMargin));\n    sheetNew.setMargin (Sheet.FooterMargin, sheetOld.getMargin (Sheet.FooterMargin));\n    sheetNew.setMargin (Sheet.HeaderMargin, sheetOld.getMargin (Sheet.HeaderMargin));\n    sheetNew.setMargin (Sheet.LeftMargin, sheetOld.getMargin (Sheet.LeftMargin));\n    sheetNew.setMargin (Sheet.RightMargin, sheetOld.getMargin (Sheet.RightMargin));\n    sheetNew.setMargin (Sheet.TopMargin, sheetOld.getMargin (Sheet.TopMargin));\n    sheetNew.setPrintGridlines (sheetNew.isPrintGridlines ());\n    sheetNew.setRowSumsBelow (sheetNew.getRowSumsBelow ());\n    sheetNew.setRowSumsRight (sheetNew.getRowSumsRight ());\n    sheetNew.setVerticallyCenter (sheetOld.getVerticallyCenter ());","LineStart":20,"CharStart":4,"LineEnd":36,"CharEnd":67,"status":"core-diff"},{"fileName":"Clone987.java","labeltext":"core-diff2","codeSnippet":"    for (int i = 0;\n    i < this.lastColumn; i ++) {\n        sheetNew.setColumnWidth (i, sheetOld.getColumnWidth (i));\n        sheetNew.setColumnHidden (i, sheetOld.isColumnHidden (i));\n    }\n    for (int i = 0;\n    i < sheetOld.getNumMergedRegions (); i ++) {\n        CellRangeAddress merged = sheetOld.getMergedRegion (i);\n        sheetNew.addMergedRegion (merged);\n    }","LineStart":42,"CharStart":4,"LineEnd":51,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone987.java","labeltext":"noncore-diff1","codeSnippet":"System.out.println (\"transform Sheet\");","LineStart":19,"CharStart":4,"LineEnd":19,"CharEnd":43,"status":"noncore-diff"},{"fileName":"Clone987.java","labeltext":"noncore-diff2","codeSnippet":"XSSFRow rowNew;","LineStart":37,"CharStart":4,"LineEnd":37,"CharEnd":19,"status":"noncore-diff"},{"fileName":"Clone988.java","labeltext":"core-sim1","codeSnippet":"cell.getCellType ()","LineStart":12,"CharStart":61,"LineEnd":12,"CharEnd":80,"status":"core-sim"},{"fileName":"Clone988.java","labeltext":"core-sim1","codeSnippet":"cellOld.getCellType ()","LineStart":25,"CharStart":12,"LineEnd":25,"CharEnd":34,"status":"core-sim"},{"fileName":"Clone988.java","labeltext":"core-sim1","codeSnippet":"cellOld.getCellType ()","LineStart":44,"CharStart":70,"LineEnd":44,"CharEnd":92,"status":"core-sim"},{"fileName":"Clone988.java","labeltext":"core-sim2","codeSnippet":"this.transform (workbookOld, workbookNew","LineStart":22,"CharStart":8,"LineEnd":22,"CharEnd":48,"status":"core-sim"},{"fileName":"Clone988.java","labeltext":"core-sim2","codeSnippet":");","LineStart":22,"CharStart":127,"LineEnd":22,"CharEnd":129,"status":"core-sim"},{"fileName":"Clone988.java","labeltext":"core-sim2","codeSnippet":"this.transform (workbookOld, workbookNew","LineStart":13,"CharStart":29,"LineEnd":13,"CharEnd":69,"status":"core-sim"},{"fileName":"Clone988.java","labeltext":"core-sim2","codeSnippet":");","LineStart":13,"CharStart":95,"LineEnd":13,"CharEnd":97,"status":"core-sim"},{"fileName":"Clone988.java","labeltext":"core-diff1","codeSnippet":"    rowNew.setHeight (rowOld.getHeight ());\n    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (),","LineStart":10,"CharStart":4,"LineEnd":12,"CharEnd":60,"status":"core-diff"},{"fileName":"Clone988.java","labeltext":"core-diff1","codeSnippet":"                                                                                );\n        if (cellNew != null)","LineStart":12,"CharStart":80,"LineEnd":13,"CharEnd":28,"status":"core-diff"},{"fileName":"Clone988.java","labeltext":"core-diff3","codeSnippet":", (XSSFCell) cell, cellNew","LineStart":13,"CharStart":69,"LineEnd":13,"CharEnd":95,"status":"core-diff"},{"fileName":"Clone988.java","labeltext":"core-diff1","codeSnippet":"    }\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());","LineStart":14,"CharStart":4,"LineEnd":15,"CharEnd":75,"status":"core-diff"},{"fileName":"Clone988.java","labeltext":"core-diff2","codeSnippet":"    cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {","LineStart":19,"CharStart":4,"LineEnd":21,"CharEnd":70,"status":"core-diff"},{"fileName":"Clone988.java","labeltext":"core-diff3","codeSnippet":", hash, cellOld.getCellStyle (), (XSSFCellStyle) workbookNew.createCellStyle ()","LineStart":22,"CharStart":48,"LineEnd":22,"CharEnd":127,"status":"core-diff"},{"fileName":"Clone988.java","labeltext":"core-diff2","codeSnippet":"    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (","LineStart":23,"CharStart":4,"LineEnd":25,"CharEnd":12,"status":"core-diff"},{"fileName":"Clone988.java","labeltext":"core-diff2","codeSnippet":"                                  ) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + ","LineStart":25,"CharStart":34,"LineEnd":44,"CharEnd":70,"status":"core-diff"},{"fileName":"Clone988.java","labeltext":"core-diff2","codeSnippet":"                                                                                            );\n    }","LineStart":44,"CharStart":92,"LineEnd":45,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone992.java","labeltext":"core-diff1","codeSnippet":"    cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }","LineStart":9,"CharStart":4,"LineEnd":35,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone992.java","labeltext":"core-diff2","codeSnippet":"    HSSFFont fontNew = workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;","LineStart":39,"CharStart":4,"LineEnd":49,"CharEnd":19,"status":"core-diff"},{"fileName":"Clone995.java","labeltext":"core-sim1","codeSnippet":"this.transform (","LineStart":48,"CharStart":29,"LineEnd":48,"CharEnd":45,"status":"core-sim"},{"fileName":"Clone995.java","labeltext":"core-sim1","codeSnippet":");","LineStart":48,"CharStart":69,"LineEnd":48,"CharEnd":71,"status":"core-sim"},{"fileName":"Clone995.java","labeltext":"core-sim1","codeSnippet":"this.transform (","LineStart":12,"CharStart":8,"LineEnd":12,"CharEnd":24,"status":"core-sim"},{"fileName":"Clone995.java","labeltext":"core-sim1","codeSnippet":");","LineStart":12,"CharStart":127,"LineEnd":12,"CharEnd":129,"status":"core-sim"},{"fileName":"Clone995.java","labeltext":"core-diff1","codeSnippet":"workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ()","LineStart":12,"CharStart":24,"LineEnd":12,"CharEnd":127,"status":"core-diff"},{"fileName":"Clone995.java","labeltext":"core-diff2","codeSnippet":"    cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {","LineStart":9,"CharStart":3,"LineEnd":11,"CharEnd":70,"status":"core-diff"},{"fileName":"Clone995.java","labeltext":"core-diff2","codeSnippet":"    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }","LineStart":13,"CharStart":4,"LineEnd":35,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone995.java","labeltext":"core-diff3","codeSnippet":"    XSSFCell cellNew;\n    rowNew.setHeight (rowOld.getHeight ());\n    if (rowOld.getRowStyle () != null) {\n        Integer hash = rowOld.getRowStyle ().hashCode ();\n        if (! this.styleMap.containsKey (hash)) this.transform (hash, rowOld.getRowStyle (), this.workbookNew.createCellStyle ());\n        rowNew.setRowStyle (this.styleMap.get (hash));\n    }\n    for (Cell cell : rowOld) {\n        cellNew = rowNew.createCell (cell.getColumnIndex (), cell.getCellType ());\n        if (cellNew != null) ","LineStart":39,"CharStart":4,"LineEnd":48,"CharEnd":29,"status":"core-diff"},{"fileName":"Clone995.java","labeltext":"core-diff3","codeSnippet":"    }\n    this.lastColumn = Math.max (this.lastColumn, rowOld.getLastCellNum ());","LineStart":49,"CharStart":4,"LineEnd":50,"CharEnd":75,"status":"core-diff"},{"fileName":"Clone995.java","labeltext":"core-diff1","codeSnippet":"(HSSFCell) cell, cellNew","LineStart":48,"CharStart":45,"LineEnd":48,"CharEnd":69,"status":"core-diff"},{"fileName":"Clone996.java","labeltext":"core-diff1","codeSnippet":"    cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }","LineStart":9,"CharStart":4,"LineEnd":35,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone996.java","labeltext":"core-diff2","codeSnippet":"    styleNew.setAlignment (styleOld.getAlignment ());\n    styleNew.setBorderBottom (styleOld.getBorderBottom ());\n    styleNew.setBorderLeft (styleOld.getBorderLeft ());\n    styleNew.setBorderRight (styleOld.getBorderRight ());\n    styleNew.setBorderTop (styleOld.getBorderTop ());\n    styleNew.setDataFormat (this.transform (styleOld.getDataFormat ()));\n    styleNew.setFillBackgroundColor (styleOld.getFillBackgroundColor ());\n    styleNew.setFillForegroundColor (styleOld.getFillForegroundColor ());\n    styleNew.setFillPattern (styleOld.getFillPattern ());\n    styleNew.setFont (this.transform (styleOld.getFont (this.workbookOld)));\n    styleNew.setHidden (styleOld.getHidden ());\n    styleNew.setIndention (styleOld.getIndention ());\n    styleNew.setLocked (styleOld.getLocked ());\n    styleNew.setVerticalAlignment (styleOld.getVerticalAlignment ());\n    styleNew.setWrapText (styleOld.getWrapText ());\n    this.styleMap.put (hash, styleNew);\n}","LineStart":39,"CharStart":3,"LineEnd":55,"CharEnd":1,"status":"core-diff"},{"fileName":"Clone997.java","labeltext":"core-diff1","codeSnippet":"    cellNew.setCellComment (cellOld.getCellComment ());\n    Integer hash = cellOld.getCellStyle ().hashCode ();\n    if (this.styleMap != null && ! this.styleMap.containsKey (hash)) {\n        this.transform (workbookOld, workbookNew, hash, cellOld.getCellStyle (), (HSSFCellStyle) workbookNew.createCellStyle ());\n    }\n    cellNew.setCellStyle (this.styleMap.get (hash));\n    switch (cellOld.getCellType ()) {\n        case Cell.CELL_TYPE_BLANK :\n            break;\n        case Cell.CELL_TYPE_BOOLEAN :\n            cellNew.setCellValue (cellOld.getBooleanCellValue ());\n            break;\n        case Cell.CELL_TYPE_ERROR :\n            cellNew.setCellValue (cellOld.getErrorCellValue ());\n            break;\n        case Cell.CELL_TYPE_FORMULA :\n            cellNew.setCellValue (cellOld.getCellFormula ());\n            break;\n        case Cell.CELL_TYPE_NUMERIC :\n            cellNew.setCellValue (cellOld.getNumericCellValue ());\n            break;\n        case Cell.CELL_TYPE_STRING :\n            cellNew.setCellValue (cellOld.getStringCellValue ());\n            break;\n        default :\n            System.out.println (\"transform: Unbekannter Zellentyp \" + cellOld.getCellType ());\n    }","LineStart":9,"CharStart":4,"LineEnd":35,"CharEnd":5,"status":"core-diff"},{"fileName":"Clone997.java","labeltext":"core-diff2","codeSnippet":"    XSSFFont fontNew = this.workbookNew.createFont ();\n    fontNew.setBoldweight (fontOld.getBoldweight ());\n    fontNew.setCharSet (fontOld.getCharSet ());\n    fontNew.setColor (fontOld.getColor ());\n    fontNew.setFontName (fontOld.getFontName ());\n    fontNew.setFontHeight (fontOld.getFontHeight ());\n    fontNew.setItalic (fontOld.getItalic ());\n    fontNew.setStrikeout (fontOld.getStrikeout ());\n    fontNew.setTypeOffset (fontOld.getTypeOffset ());\n    fontNew.setUnderline (fontOld.getUnderline ());\n    return fontNew;","LineStart":39,"CharStart":4,"LineEnd":49,"CharEnd":19,"status":"core-diff"}]